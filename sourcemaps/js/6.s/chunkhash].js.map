{"version":3,"sources":["webpack:///./src/vendor/react-store/components/View/Modal/Confirm/styles.scss","webpack:///./src/vendor/react-store/components/View/Haze.js","webpack:///./src/vendor/react-store/components/View/Modal/Body/styles.scss","webpack:///./src/vendor/react-store/components/View/Modal/styles.scss","webpack:///./src/vendor/react-store/components/View/Modal/Footer/index.js","webpack:///./src/vendor/react-store/components/View/Modal/Header/styles.scss","webpack:///./src/vendor/react-store/components/View/Modal/Alert/styles.scss","webpack:///./src/views/Viewer/styles.scss","webpack:///./src/vendor/react-store/components/Action/Button/PrimaryButton.js","webpack:///./src/vendor/react-store/components/View/Modal/Footer/styles.scss","webpack:///./src/vendor/react-store/components/General/Modalize.js","webpack:///./src/vendor/react-store/components/View/Modal/Alert/index.js","webpack:///./src/vendor/react-store/components/View/Modal/Confirm/index.js","webpack:///./src/vendor/react-store/components/Action/Button/SuccessButton.js","webpack:///./src/views/Viewer/index.js","webpack:///./src/vendor/react-store/components/View/Modal/Header/index.js","webpack:///./src/vendor/react-store/components/View/Modal/index.js","webpack:///./src/vendor/react-store/components/View/Portal.js","webpack:///./src/vendor/react-store/components/View/Modal/Body/index.js"],"names":["module","exports","Haze","classNames","document","body","className","split","push","join","modals","querySelectorAll","forEach","modal","i","length","dataset","lastModal","index","findIndex","d","splice","children","this","props","Array","from","filter","n","ref","current","React","cloneElement","_cs","PureComponent","PropTypes","node","isRequired","propTypes","string","oneOfType","arrayOf","element","Footer","styles","footer","PrimaryButton","buttonType","disabled","bool","initialShowModal","defaultProps","modalize","WrappedButtonComponent","wrappedButton","getElementsByClassName","wrappedButtonClassName","wrappedButtonBCR","getBoundingClientRect","setWrappedButtonBCR","setState","showModal","state","wrappedButtonRef","createRef","randomString","undefined","classNameFromProps","otherProps","onClick","handleWrappedButtonClick","closeModal","handleModalClose","parentBCR","onClose","func","title","show","Alert","nextProps","Modal","alert","okButton","handleOkButtonClick","autoFocus","closeOnEscape","closeOnOutsideClick","hideCancel","Confirm","confirm","handleClose","Button","cancelButton","handleCancelButtonClick","DangerButton","SuccessButton","PrimaryModalButton","GreatestModal","rightComponent","transparent","iconName","object","GreatestAlertModal","GreatestConfirmModal","Viewer","viewer","Component","Header","header","headerClassNames","heading","ESCAPE_KEY","event","wrapper","wrapperRef","contains","target","outsideClick","keyCode","escape","addEventListener","handleKeyPressed","handleClickOutside","removeEventListener","Portal","ReactDOM","createPortal","Body"],"mappings":"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","file":"js/6.s/chunkhash].js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"confirm\":\"styles_confirm_2EcvjRi9OXyk_xejU3yeeY\",\"ok-button\":\"styles_ok-button_2j5BiyRbnk4AE1RCf7kG6u\",\"okButton\":\"styles_ok-button_2j5BiyRbnk4AE1RCf7kG6u\",\"cancel-button\":\"styles_cancel-button_QEXHGtCD_uF2i9AS0qRDO\",\"cancelButton\":\"styles_cancel-button_QEXHGtCD_uF2i9AS0qRDO\"};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { _cs } from '@togglecorp/fujs';\n\nconst portalChildrenClassName = '.portal-child';\nconst shownClassName = 'portal-child-shown';\n\nexport default class Haze extends React.PureComponent {\n    static propTypes = {\n        // modalRef: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n        children: PropTypes.node.isRequired,\n    }\n\n    componentDidMount() {\n        const classNames = document.body.className.split(' ');\n        classNames.push(shownClassName);\n        document.body.className = classNames.join(' ');\n\n        const modals = document.querySelectorAll(portalChildrenClassName);\n        modals.forEach((modal, i) => {\n            if (i === modals.length - 1) {\n                // eslint-disable-next-line no-param-reassign\n                modal.dataset.lastModal = 'true';\n            } else {\n                // eslint-disable-next-line no-param-reassign\n                modal.dataset.lastModal = 'false';\n            }\n        });\n    }\n\n    componentWillUnmount() {\n        const classNames = document.body.className.split(' ');\n        const index = classNames.findIndex(d => d === shownClassName);\n        if (index !== -1) {\n            classNames.splice(index, 1);\n        }\n        document.body.className = classNames.join(' ');\n\n        const { children } = this.props;\n        const modals = Array.from(document.querySelectorAll(portalChildrenClassName))\n            .filter(n => n !== children.ref.current);\n\n        modals.forEach((modal, i) => {\n            if (i === modals.length - 1) {\n                // eslint-disable-next-line no-param-reassign\n                modal.dataset.lastModal = 'true';\n            } else {\n                // eslint-disable-next-line no-param-reassign\n                modal.dataset.lastModal = 'false';\n            }\n        });\n    }\n\n    render() {\n        const {\n            children,\n        } = this.props;\n\n        return React.cloneElement(\n            children,\n            { className: _cs(children.props.className, 'portal-child') },\n        );\n    }\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"styles_body_HijTe5NrtNgu5ORSwcu1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"styles_modal_2Lr_843zhTbroZhirZo-o3\",\"fade-in-from-top\":\"styles_fade-in-from-top_1KXaZ0pHnJPYk0p0OaOEOA\",\"fadeInFromTop\":\"styles_fade-in-from-top_1KXaZ0pHnJPYk0p0OaOEOA\"};","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport styles from './styles.scss';\n\nconst propTypes = {\n    className: PropTypes.string,\n\n    /**\n     * child elements\n     */\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.element),\n        PropTypes.element,\n        PropTypes.node,\n    ]).isRequired,\n};\n\nconst defaultProps = {\n    className: '',\n};\n\n\nexport default class Footer extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    render() {\n        const {\n            children,\n            className,\n        } = this.props;\n\n        const classNames = [\n            'modal-footer',\n            className,\n            styles.footer,\n        ];\n        return (\n            <footer className={classNames.join(' ')}>\n                { children }\n            </footer>\n        );\n    }\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"styles_header_B0ZHzcAk6V8NyKSuaL0r3\",\"heading\":\"styles_heading_3PzHg6Pro0E9vD-j7Q-8nJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alert\":\"styles_alert_14DE3PkIYztpRT8q3M4QPH\",\"ok-button\":\"styles_ok-button_2St8gtgYUuWt479hVFONwU\",\"okButton\":\"styles_ok-button_2St8gtgYUuWt479hVFONwU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"viewer\":\"styles_viewer_3iDb-y2x38jPgEkQ4njCMo\"};","import React from 'react';\nimport Button from './index.js';\n\nconst PrimaryButton = props => (\n    <Button buttonType=\"button-primary\" {...props} />\n);\nexport default PrimaryButton;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"styles_footer_257aA5n6e3ECWnvdqkSd4I\"};","import PropTypes from 'prop-types';\nimport React, { Fragment } from 'react';\nimport { _cs, randomString } from '@togglecorp/fujs';\n\nconst propTypes = {\n    disabled: PropTypes.bool,\n    modal: PropTypes.element.isRequired,\n    className: PropTypes.string,\n    initialShowModal: PropTypes.bool,\n};\n\nconst defaultProps = {\n    disabled: false,\n    className: '',\n    initialShowModal: false,\n};\n\nconst modalize = (WrappedButtonComponent) => {\n    const ModalComponent = class extends React.PureComponent {\n        static propTypes = propTypes;\n\n        static defaultProps = defaultProps;\n\n        constructor(props) {\n            super(props);\n\n            this.state = { showModal: props.initialShowModal };\n\n            this.wrappedButtonRef = React.createRef();\n            this.wrappedButtonClassName = randomString();\n            this.wrappedButtonBCR = undefined;\n        }\n\n        componentDidMount() {\n            this.setWrappedButtonBCR();\n        }\n\n        componentDidUpdate() {\n            this.setWrappedButtonBCR();\n        }\n\n        setWrappedButtonBCR = () => {\n            const wrappedButton = document.getElementsByClassName(this.wrappedButtonClassName)[0];\n\n            if (wrappedButton) {\n                this.wrappedButtonBCR = wrappedButton.getBoundingClientRect();\n            }\n        }\n\n        handleWrappedButtonClick = () => {\n            this.setWrappedButtonBCR();\n            this.setState({ showModal: true });\n        }\n\n        handleModalClose = () => {\n            this.setState({ showModal: false });\n        }\n\n        render() {\n            const {\n                disabled,\n                modal,\n                className: classNameFromProps,\n                // eslint-disable-next-line no-unused-vars, @typescript-eslint/no-unused-vars\n                initialShowModal,\n                ...otherProps\n            } = this.props;\n\n            const { showModal } = this.state;\n            const className = _cs(\n                classNameFromProps,\n                this.wrappedButtonClassName,\n            );\n\n\n            return (\n                <Fragment>\n                    <WrappedButtonComponent\n                        disabled={disabled || showModal}\n                        onClick={this.handleWrappedButtonClick}\n                        className={className}\n                        {...otherProps}\n                    />\n                    { showModal && React.cloneElement(\n                        modal,\n                        {\n                            closeModal: this.handleModalClose,\n                            parentBCR: this.wrappedButtonBCR,\n                        },\n                    )}\n                </Fragment>\n            );\n        }\n    };\n\n    return ModalComponent;\n};\nexport default modalize;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport PrimaryButton from '../../../Action/Button/PrimaryButton';\n\nimport ModalHeader from '../Header';\nimport ModalBody from '../Body';\nimport ModalFooter from '../Footer';\n\nimport Modal from '..';\nimport styles from './styles.scss';\n\nconst propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.element),\n        PropTypes.element,\n    ]).isRequired,\n    className: PropTypes.string,\n    onClose: PropTypes.func.isRequired,\n    title: PropTypes.string,\n    show: PropTypes.bool.isRequired,\n};\n\nconst defaultProps = {\n    className: '',\n    title: 'Alert',\n};\n\nexport default class Alert extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            show: props.show,\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            show: nextProps.show,\n        });\n    }\n\n    handleOkButtonClick = () => {\n        this.setState({\n            show: false,\n        });\n    }\n\n    handleClose = () => {\n        this.setState({\n            show: false,\n        });\n        this.props.onClose();\n    }\n\n    render() {\n        const {\n            className,\n            children,\n            title,\n        } = this.props;\n\n        const { show } = this.state;\n\n        if (!show) {\n            return null;\n        }\n\n        return (\n            <Modal className={`${className} alert ${styles.alert}`}>\n                <ModalHeader title={title} />\n                <ModalBody>\n                    { children }\n                </ModalBody>\n                <ModalFooter>\n                    <PrimaryButton\n                        className={`ok-button ${styles.okButton}`}\n                        onClick={this.handleOkButtonClick}\n                        autoFocus\n                    >\n                        Ok\n                    </PrimaryButton>\n                </ModalFooter>\n            </Modal>\n        );\n    }\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport Button from '../../../Action/Button';\nimport DangerButton from '../../../Action/Button/DangerButton';\n\nimport ModalHeader from '../Header';\nimport ModalBody from '../Body';\nimport ModalFooter from '../Footer';\n\nimport Modal from '..';\nimport styles from './styles.scss';\n\nconst propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.element),\n        PropTypes.string,\n        PropTypes.element,\n    ]).isRequired,\n    className: PropTypes.string,\n    onClose: PropTypes.func.isRequired,\n    closeOnEscape: PropTypes.bool,\n    closeOnOutsideClick: PropTypes.bool,\n    hideCancel: PropTypes.bool,\n    title: PropTypes.string,\n    show: PropTypes.bool.isRequired,\n    disabled: PropTypes.bool,\n    autoFocus: PropTypes.bool,\n};\n\nconst defaultProps = {\n    className: '',\n    title: 'Confirm',\n    closeOnEscape: true,\n    closeOnOutsideClick: true,\n    hideCancel: false,\n    disabled: false,\n    autoFocus: true,\n};\n\nexport default class Confirm extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    handleOkButtonClick = () => {\n        this.props.onClose(true);\n    }\n\n    handleCancelButtonClick = () => {\n        this.props.onClose(false);\n    }\n\n    handleClose = () => {\n        this.props.onClose(false);\n    }\n\n    render() {\n        const {\n            className,\n            children,\n            title,\n            show,\n            hideCancel,\n            closeOnEscape,\n            closeOnOutsideClick,\n            disabled,\n            autoFocus,\n        } = this.props;\n\n        if (!show) {\n            return null;\n        }\n\n        return (\n            <Modal\n                className={`${className} confirm ${styles.confirm}`}\n                closeOnEscape={closeOnEscape}\n                closeOnOutsideClick={closeOnOutsideClick}\n                onClose={this.handleClose}\n            >\n                <ModalHeader title={title} />\n                <ModalBody>\n                    { children }\n                </ModalBody>\n                <ModalFooter>\n                    {!hideCancel && (\n                        <Button\n                            className={`cancel-button ${styles.cancelButton}`}\n                            onClick={this.handleCancelButtonClick}\n                            autoFocus={autoFocus}\n                        >\n                          Cancel\n                        </Button>\n                    )}\n                    <DangerButton\n                        className={`ok-button ${styles.okButton}`}\n                        onClick={this.handleOkButtonClick}\n                        disabled={disabled}\n                    >\n                        Ok\n                    </DangerButton>\n                </ModalFooter>\n            </Modal>\n        );\n    }\n}\n","import React from 'react';\nimport Button from './index.js';\n\nconst SuccessButton = props => (\n    <Button buttonType=\"button-success\" {...props} />\n);\nexport default SuccessButton;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport PrimaryButton from '#rsca/Button/PrimaryButton';\nimport modalize from '#rscg/Modalize';\n\nimport Modal from '#rscv/Modal';\nimport ModalHeader from '#rscv/Modal/Header';\nimport ModalBody from '#rscv/Modal/Body';\nimport ModalFooter from '#rscv/Modal/Footer';\nimport AlertModal from '#rscv/Modal/Alert';\nimport ConfirmModal from '#rscv/Modal/Confirm';\n\nimport DangerButton from '#rsca/Button/DangerButton';\nimport SuccessButton from '#rsca/Button/SuccessButton';\n\nimport styles from './styles.scss';\n\n// const { onApply, closeModal } = props;\n\nconst PrimaryModalButton = modalize(PrimaryButton);\n\nconst GreatestModal = ({ closeModal }) => (\n    <Modal\n        onClose={closeModal}\n        closeOnEscape\n        closeOnOutsideClick\n    >\n        <ModalHeader\n            title=\"Modal Header\"\n            rightComponent={(\n                <DangerButton\n                    onClick={closeModal}\n                    transparent\n                    iconName=\"close\"\n                />\n            )}\n        />\n        <ModalBody>\n            <div> The greatest thing The greatest thing The greatest thing The greatest thing </div>\n        </ModalBody>\n        <ModalFooter>\n            <SuccessButton onClick={closeModal}>\n                Okay\n            </SuccessButton>\n            <DangerButton onClick={closeModal}>\n                Cancel\n            </DangerButton>\n        </ModalFooter>\n    </Modal>\n);\n\nGreatestModal.propTypes = {\n    closeModal: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n};\n\nconst GreatestAlertModal = ({ closeModal }) => (\n    <AlertModal\n        onClose={closeModal}\n        closeOnEscape\n        closeOnOutsideClick\n        show\n    >\n        <ModalBody>\n            <div>\n                <p>Display an alert message here!</p>\n                <p>And here, if the message is multi-paragraphed.</p>\n            </div>\n        </ModalBody>\n    </AlertModal>\n);\n\nconst GreatestConfirmModal = ({ closeModal }) => (\n    <ConfirmModal\n        onClose={closeModal}\n        closeOnEscape\n        closeOnOutsideClick\n        show\n    >\n        <ModalBody>\n            <div>\n                <p>Display an confirm message here!</p>\n                <p>And here, if the message is multi-paragraphed.</p>\n            </div>\n        </ModalBody>\n    </ConfirmModal>\n);\n\n\nGreatestConfirmModal.propTypes = {\n    closeModal: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n};\nGreatestAlertModal.propTypes = {\n    closeModal: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n};\n\nclass Viewer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n\n    render() {\n        return (\n            <div className={styles.viewer}>\n                <PrimaryModalButton\n                    modal={\n                        <GreatestModal />\n                    }\n                >\n                    Modal\n                </PrimaryModalButton>\n\n                <PrimaryModalButton\n                    modal={\n                        <GreatestAlertModal />\n                    }\n                >\n                    Alert Modal\n                </PrimaryModalButton>\n\n                <PrimaryModalButton\n                    modal={\n                        <GreatestConfirmModal />\n                    }\n                >\n                    Confirm Modal\n                </PrimaryModalButton>\n            </div>\n        );\n    }\n}\n\nexport default Viewer;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport styles from './styles.scss';\n\nconst propTypes = {\n    className: PropTypes.string,\n\n    /**\n     * component to render on right side of header\n     */\n    rightComponent: PropTypes.element,\n\n    /**\n     * title text for modal\n     */\n    title: PropTypes.string.isRequired,\n};\n\nconst defaultProps = {\n    className: '',\n    rightComponent: undefined,\n};\n\n\nexport default class Header extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    render() {\n        const {\n            className,\n            rightComponent,\n            title,\n        } = this.props;\n\n        const classNames = [\n            'modal-header',\n            className,\n            styles.header,\n        ];\n        const headerClassNames = [\n            'heading',\n            styles.heading,\n        ];\n        return (\n            <header className={classNames.join(' ')}>\n                <h2 className={headerClassNames.join(' ')}>\n                    { title }\n                </h2>\n                { rightComponent }\n            </header>\n        );\n    }\n}\n","import FocusTrap from 'react-focus-trap';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { _cs } from '@togglecorp/fujs';\n\nimport Haze from '../Haze';\nimport Portal from '../Portal';\nimport styles from './styles.scss';\n\nconst ESCAPE_KEY = 27;\n\nconst noop = () => {};\n\nconst propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.element),\n        PropTypes.element,\n    ]).isRequired,\n    className: PropTypes.string,\n    closeOnEscape: PropTypes.bool,\n    closeOnOutsideClick: PropTypes.bool,\n    onClose: PropTypes.func,\n};\n\nconst defaultProps = {\n    className: '',\n    closeOnEscape: false,\n    closeOnOutsideClick: false,\n    onClose: noop,\n};\n\n// eslint-disable-next-line react/no-multi-comp\nexport default class Modal extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n        this.wrapperRef = React.createRef();\n    }\n\n    componentDidMount() {\n        document.addEventListener('keydown', this.handleKeyPressed);\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.handleKeyPressed);\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    handleClickOutside = (event) => {\n        const {\n            closeOnOutsideClick,\n            onClose,\n        } = this.props;\n\n        const { current: wrapper } = this.wrapperRef;\n\n        if (closeOnOutsideClick && !wrapper.contains(event.target)) {\n            onClose({ outsideClick: true });\n        }\n    }\n\n    handleKeyPressed = (event) => {\n        const {\n            closeOnEscape,\n            onClose,\n        } = this.props;\n\n        if (closeOnEscape && event.keyCode === ESCAPE_KEY) {\n            onClose({ escape: true });\n        }\n    }\n\n    render() {\n        const {\n            children,\n            className: classNameFromProps,\n        } = this.props;\n\n        const className = _cs(\n            classNameFromProps,\n            styles.modal,\n            'modal',\n        );\n\n        return (\n            <Portal>\n                <FocusTrap>\n                    <Haze>\n                        <div\n                            ref={this.wrapperRef}\n                            className={className}\n                        >\n                            { children }\n                        </div>\n                    </Haze>\n                </FocusTrap>\n            </Portal>\n        );\n    }\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.node,\n        PropTypes.arrayOf(PropTypes.node),\n    ]).isRequired,\n};\n\nconst defaultProps = {};\n\n/* Attach React node to body */\nexport default class Portal extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    render() {\n        const { children } = this.props;\n        return (\n            ReactDOM.createPortal(\n                children,\n                document.body,\n            )\n        );\n    }\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport styles from './styles.scss';\n\nconst propTypes = {\n    /**\n     * child elements\n     */\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node,\n    ]),\n\n    className: PropTypes.string,\n};\n\nconst defaultProps = {\n    className: '',\n    children: null,\n};\n\n\nexport default class Body extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    render() {\n        const {\n            children,\n            className,\n        } = this.props;\n\n        const classNames = [\n            'modal-body',\n            styles.body,\n            className,\n        ];\n        return (\n            <div className={classNames.join(' ')}>\n                { children }\n            </div>\n        );\n    }\n}\n"],"sourceRoot":""}