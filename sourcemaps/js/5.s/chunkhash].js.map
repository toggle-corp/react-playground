{"version":3,"sources":["webpack:///./src/vendor/react-store/components/Visualization/Dendrogram/styles.scss","webpack:///./src/vendor/react-store/components/View/Numeral/styles.scss","webpack:///./src/vendor/react-store/components/Visualization/SimpleVerticalBarChart/styles.scss","webpack:///./src/vendor/react-store/components/Visualization/ForceDirectedGraph/styles.scss","webpack:///./src/vendor/react-store/components/Visualization/DonutChart/styles.scss","webpack:///./src/vendor/react-store/components/Visualization/ChordDiagram/styles.scss","webpack:///./src/vendor/react-store/components/Visualization/SimpleHorizontalBarChart/styles.scss","webpack:///./src/vendor/react-store/components/Visualization/CollapsibleTree/styles.scss","webpack:///./src/vendor/react-store/components/Visualization/GaugeChart/styles.scss","webpack:///./src/vendor/react-store/components/Visualization/StreamGraph/styles.scss","webpack:///./src/vendor/react-store/components/Visualization/VerticalBarChart/styles.scss","webpack:///./src/vendor/react-store/components/Visualization/OrgChart/styles.scss","webpack:///./src/vendor/react-store/components/Visualization/SparkLines/styles.scss","webpack:///./src/vendor/react-store/components/Visualization/GroupedBarChart/styles.scss","webpack:///./src/vendor/react-store/components/Visualization/Histogram/styles.scss","webpack:///./src/vendor/react-store/components/Visualization/ClusterForceLayout/styles.scss","webpack:///./src/vendor/react-store/components/Visualization/WordCloud/styles.scss","webpack:///./src/vendor/react-store/components/View/Tooltip/styles.scss","webpack:///./src/views/Visualization/styles.scss","webpack:///./src/vendor/react-store/components/Visualization/ZoomableTreeMap/styles.scss","webpack:///./src/vendor/react-store/components/General/Responsive/index.js","webpack:///./src/vendor/react-store/components/Visualization/ChordDiagram/index.js","webpack:///./src/vendor/react-store/components/Visualization/ClusterForceLayout/index.js","webpack:///./src/vendor/react-store/components/Visualization/CollapsibleTree/index.js","webpack:///./src/vendor/react-store/components/Visualization/CorrelationMatrix/index.js","webpack:///./src/vendor/react-store/components/Visualization/Dendrogram/index.js","webpack:///./src/vendor/react-store/components/Visualization/DonutChart/index.js","webpack:///./src/vendor/react-store/components/Visualization/ForceDirectedGraph/index.js","webpack:///./src/vendor/react-store/components/Visualization/GoogleOrgChart/index.js","webpack:///./src/vendor/react-store/components/Visualization/HorizontalBar/index.js","webpack:///./src/vendor/react-store/utils/immutable-update.js","webpack:///./src/vendor/react-store/components/Visualization/OrgChart/index.js","webpack:///./src/vendor/react-store/components/Visualization/Organigram/index.js","webpack:///./src/vendor/react-store/components/Visualization/ParallelCoordinates/index.js","webpack:///./src/vendor/react-store/components/Visualization/PieChart/index.js","webpack:///./src/vendor/react-store/components/Visualization/RadialDendrogram/index.js","webpack:///./src/vendor/react-store/components/Visualization/Sankey/index.js","webpack:///./src/vendor/react-store/components/View/Numeral/index.js","webpack:///./src/vendor/react-store/components/View/Tooltip/index.js","webpack:///./src/vendor/react-store/components/Visualization/SimpleHorizontalBarChart/index.js","webpack:///./src/vendor/react-store/components/Visualization/SimpleVerticalBarChart/index.js","webpack:///./src/vendor/react-store/components/Visualization/SparkLines/index.js","webpack:///./src/vendor/react-store/components/Visualization/StackedBarChart/index.js","webpack:///./src/vendor/react-store/components/Visualization/StreamGraph/index.js","webpack:///./src/vendor/react-store/components/Visualization/SunBurst/index.js","webpack:///./src/vendor/react-store/components/Visualization/TreeMap/index.js","webpack:///./src/vendor/react-store/components/Visualization/VerticalBarChart/index.js","webpack:///./src/vendor/react-store/components/Visualization/WordCloud/index.js","webpack:///./src/vendor/react-store/components/Visualization/ZoomableTreeMap/index.js","webpack:///./src/vendor/react-store/components/Visualization/Histogram/index.js","webpack:///./src/vendor/react-store/components/Visualization/GaugeChart/index.js","webpack:///./src/vendor/react-store/components/Visualization/GroupedBarChart/index.js","webpack:///./src/resources/data/barData.js","webpack:///./src/resources/data/orgChartData.js","webpack:///./src/resources/data/chordData.js","webpack:///./src/resources/data/correlationData.js","webpack:///./src/resources/data/clusterData.js","webpack:///./src/resources/data/forceDirectedData.js","webpack:///./src/resources/data/hierarchical.js","webpack:///./src/resources/data/lineData.js","webpack:///./src/resources/data/parallelData.js","webpack:///./src/resources/data/sankeyData.js","webpack:///./src/resources/data/stackedData.js","webpack:///./src/resources/data/streamData.js","webpack:///./src/resources/data/wordCloudData.js","webpack:///./src/resources/data/groupedData.js","webpack:///./src/views/Visualization/index.js","webpack:///./src/vendor/react-store/components/Visualization/TreeMap/styles.scss","webpack:///./src/vendor/react-store/components/General/Responsive/styles.scss","webpack:///./src/vendor/react-store/components/Visualization/HorizontalBar/styles.scss","webpack:///./src/vendor/react-store/components/Visualization/GoogleOrgChart/styles.scss","webpack:///./src/vendor/react-store/components/Visualization/Organigram/styles.scss","webpack:///./src/vendor/react-store/components/Visualization/ParallelCoordinates/styles.scss","webpack:///./src/vendor/react-store/components/Visualization/SunBurst/styles.scss","webpack:///./src/vendor/react-store/components/Visualization/StackedBarChart/styles.scss"],"names":["module","exports","propTypes","className","PropTypes","string","defaultProps","resizeHandlers","observer","ResizeObserver","entries","forEach","entry","key","target","dataset","resizeHandlerKey","rect","contentRect","_cs","args","join","WrappedComponent","ResponsiveElement","props","clearTimeout","timeout","setTimeout","setState","containerRef","React","createRef","state","element","callback","this","current","handleResize","randomString","observe","unobserve","removeResizeHandler","otherProps","styles","responsive","ref","responsiveChild","boundingClientRect","Component","hoistNonReactStatics","shape","width","number","height","isRequired","data","arrayOf","setSaveFunction","func","labelModifier","labelsData","colorScheme","showLabels","bool","showTooltip","margins","top","right","bottom","left","d","schemePaired","ribbonWidth","ChordDiagram","select","svg","append","attr","datum","saveSvg","node","getStandardFilename","filter","feMerge","opacity","g","i","selectAll","source","index","style","tooltip","html","label","transition","event","pageY","pageX","arcs","colors","group","groups","enter","on","fade","paths","path","each","nodes","newArc","exec","replace","endAngle","Math","PI","startAngle","newStart","match","pop","newEnd","middleSec","handleMouseOver","handleMouseMove","handleMouseOut","addLabels","selection","labels","text","getColorOnBgColor","_groups","getTotalLength","getComputedTextLength","remove","ribbons","drawChart","length","outerRadius","min","innerRadius","chords","chord","padAngle","sortSubgroups","descending","arc","ribbon","radius","scaleOrdinal","range","context","setContext","chordsGroup","ribbonsGroup","addPaths","addRibbons","addGlowGradients","save","redrawChart","chordStyle","chordDiagram","elem","Float","PureComponent","Responsive","id","value","idSelector","groupSelector","valueSelector","scaleFactor","onHover","cluster","score","interpolateRainbow","ClusterForceLayout","JSON","parse","stringify","active","simulation","alphaTarget","restart","fx","x","fy","y","svgsaver","SvgSaver","asSvg","clusterGroup","listToGroupList","noOfClusters","Object","keys","color","scaleSequential","domain","clusters","map","cos","random","sin","maxElementofGroup","find","findIndex","push","forceSimulation","force","forceCenter","forceAttract","strength","forceCluster","centers","centerInertia","forceCollide","call","drag","dragstarted","dragged","dragended","onMouseOver","onMouseMove","onMouseOut","t","timer","elapsed","dt","stop","updateData","nextProps","svgClassName","clusterForceLayout","el","clusterTooltip","name","childrenSelector","labelSelector","nodeSize","children","CollapsibleTree","zoom","ctrlKey","transform","k","assign","trees","tree","root","hierarchy","x0","y0","duration","depth","topicColors","parent","s","childrens","update","nodeEnter","click","rootTextLength","translateX","nodeUpdate","merge","ease","easeSinInOut","nodeExit","exit","links","link","insert","out","diagonal","treeData","descendants","slice","addNodes","addLinks","doesObjectHaveNoData","setupChart","treeStyle","Icon","info","title","values","tiltLabels","interpolateGnBu","CorrelationMatrix","valuesData","matrixWidth","legendWidth","maxValue","max","layer","minValue","noofrows","noofcols","scaleBand","floor","ceil","legend","addCells","addLegend","row","cell","bandwidth","addText","format","colorBg","isValidHexColor","getHexFromRgb","columnLabels","rectWidth","scaleLinear","yticks","yAxis","axisRight","correlationMatrixStyle","Dendrogram","scaledValues","lines","size","sum","minmax","extent","scalePow","exponent","addLines","points","addCircles","dendrogramStyle","dendrogram","object","colorSelector","sideLengthRatio","hideLabel","period","schemeAccent","undefined","DonutChart","padRadius","newRadius","delay","attrTween","interpolateNumber","options","pies","arcTween","textLabel","getBoundingClientRect","document","body","clientWidth","textArcs","pos","centroid","midAngle","slices","pie","sort","textArch","arch","addDropShadow","addTransition","donutTooltip","circleRadius","distance","useVoronoi","ForceDirectedGraph","renderChart","separation","voronois","voronoi","forceLink","forceManyBody","hideTooltip","cirlce","clip","shapes","polygons","n","c","forceDirectedGraph","keySelector","titleSelector","childSelector","array","disabled","singleSelect","multiSelect","onChange","GoogleOrgChart","parentName","organ","flattenData","flattenedChildren","concat","v","f","selectedRow","getValue","orgChart","getSelection","newSelection","selectedData","mouseOverRow","mapSelectionToData","item","setSelection","flatData","GoogleCharts","api","visualization","arrayToDataTable","OrgChart","events","addListener","selectHandler","mouseOverHandler","draw","allowHtml","nodeClass","selectedNodeClass","load","packages","bandPadding","valueLabelFormat","showGridLines","tooltipContent","scaleType","schemeSet3","HorizontalBar","svgRef","log","LN10","containerWidth","containerHeight","xAxis","axisBottom","tickSizeInner","tickSizeOuter","tickPadding","tickFormat","axisLeft","grid","defaultTooltipContent","content","innerHTML","display","posX","posY","scaleLog","clamp","rangeRound","padding","addShadow","addGrid","bars","getColor","barWidth","baseVal","textWidth","longText","fillColor","newX","powerOfTen","round","classNameFromProps","horizontalBar","tooltipClassName","extend","reduce","acc","val","filtered","memory","newArr","o","indices","lst","newLst","a","b","splice","finder","modifier","keysToRemove","original","copy","obj","indexOf","newObject","onSelection","minNodeWidth","minNodeHeight","classNames","isSelected","removeSelection","addSelection","settings","$bulk","$push","$unique","prevState","selected","$splice","findIndexInSelectedList","itemId","e","widthPerTreeLeaves","leaves","heightPerTreeDepth","nodeWidth","nodeHeight","treemap","linkVertical","linkClassName","getNodeClassName","boxPadding","getBBox","parentNode","addOrRemoveSelection","newValue","containerClassName","chartClassName","chart","infoIconClassName","infoIcon","selectColor","Organigram","colorExtractor","toggleSelection","organigram","ignoreProperties","ParallelCoordinates","dimensions","includes","scalePoint","brush","brushY","p","line","lineGenerator","actives","brushSelection","dimension","every","dim","init","axes","axis","parallel","PieChart","piechart","RadialDendrogram","project","angle","radialDendrogramStyle","radialDendrogram","fontSizeExtent","Sankey","dynamicFontSize","sankeyLinkHorizontal","y1","x1","getFontSize","sankey","nodePadding","sankeyGenerator","updateRangeFontData","invalidText","normal","precision","prefix","separator","showSeparator","showSign","suffix","lang","Numeral","isFalsy","getNormalizedNumber","normalizeSuffix","numeral","isTruthy","abs","formattedNormalize","toFixed","addSeparator","FaramOutputElement","oneOfType","center","noOp","TOOLTIP_WINDOW_PADDING","Tooltip","container","parentBCR","windowRect","window","innerWidth","topCalc","innerHeight","leftCalc","leftBoundMax","hoverBox","clientX","clientY","hoverIn","child","handleHover","handleHoverOut","onFocus","onBlur","isTooltipNode","Fragment","cloneElement","isTruthyString","FloatingContainer","textTooltip","onInvalidate","handleInvalidate","focusTrap","noOfTicks","showTicks","showGrids","hideXAxis","hideYAxis","MIN_BAR_HEIGHT","SimpleHorizontalBarChart","memoize","scaleX","scaleY","step","yOffset","percent","parseFloat","scale","barsHeight","stepOffset","newHeight","paddingOuter","ticks","isContainerInvalid","isDataInvalid","getMaxValue","getScaleX","getScaleY","renderData","getRenderData","axisBottomData","getAxisBottomData","horizontalBarChart","overflowContainer","marginTop","yGrid","x2","y2","renderText","bar","dy","dx","axesContainer","tick","dash","SimpleVerticalBarChart","barHeight","axisLeftData","getAxisLeftData","verticalBarChart","xGrid","xValueSelector","yValueSelector","xLabelModifier","yLabelModifier","fill","SparkLines","focus","xValue","yValue","bisectXValue","invert","mouse","d0","d1","xLabel","yLabel","yvalue","xvalue","marginForCircle","sparkLine","bisector","areas","area","sparkLinesStyle","sparkLines","labelName","StackedBarChart","series","stack","offset","stackOffsetDiverging","nice","mouseOverRect","mouseMove","mouseOutRect","tickSize","barchart","schemeSet2","StreamGraph","j","mouseXpos","labelData","classed","order","stackOrderInsideOut","stackOffsetWiggle","curve","curveBasis","tip","areaLabel","streamGraph","streamGraphTooltip","twoPi","tooltipOffset","SunBurst","svgGroupTransformation","calculateBounds","halfPi","angles","r","middleAngle","invertDirection","reverse","toString","deltaAngle","perimeter","transitions","tween","xd","interpolateArray","yd","yr","middleArcLine","filterText","moveStackToFront","appendChild","uniqueId","handleClick","slicesData","partition","newSlice","stopPropagation","handleArcMouseOver","handleArcMouseMove","handleArcMouseOut","_","sunburst","sunburstTooltip","TreeMap","treemaps","rectangle","treemapStyle","onBarMouseOver","showAxis","VerticalBarChart","svgElement","defaultTooltip","fullWidth","fullHeight","xaxis","yaxis","frequencySelector","font","rotate","emptyObject","emptyList","WordCloud","calculateWordCloud","words","calculatedWords","frequencies","renderAreaFactor","maxFont","sqrt","maxSize","sizeOffset","layoutData","layout","cloud","fontSize","handleWordCloudCalculationEnd","start","startWordCloudComputation","wordCloud","colorScale","getColorScale","w","fontFamily","textAnchor","ZoomableTreeMap","parentLabel","hslColor","hsl","saturations","l","lightness","visibility","grandparent","transitioning","second","childLabel","getColorShades","rgb","g2","firstTransition","secondTransition","result","ancestors","split","colorRange","thresholds","brighter","darker","thresholdSturges","Histogram","defaultContent","xpos","ypos","dataExtent","bins","histogram","yMax","yMin","yaxisGrids","sectionPercents","minAngle","maxAngle","currentValue","degToRad","deg","radToDeg","rad","GaugeChart","ringWidth","ringInset","arcColors","scaleValue","tickData","pointerWidth","lineData","pointerLine","curveLinear","pointer","pointerCircle","newAngle","end","gaugeChartStyle","gaugeChart","columns","lineDataSelector","xTickArguments","yTickArguments","tooltipRenderer","showValue","GroupedBarChart","ReactDOMServer","renderToString","defaultColor","paddingInner","lineX","lineY","spline","dot","mouseOverCircle","groupedBarChart","organs","A","B","C","month","apples","bananas","cherries","dates","time","oranges","mango","papaya","histogramData","randomUniform","Visualization","tabs","collapsibleTree","correlationMatrix","donutChart","forcedDirectedGraph","forcedDirectedGraphVoronoi","googleOrgChart","parallelCoordinates","pieChart","simpleHorizontalBarChart","simpleVerticalBarChart","stackedBarChart","sunBurst","zoomableTreemap","views","wrapContainer","component","viz","chordData","hierarchicalData","correlationData","colorSchemeType","barData","forceDirectedData","orgChartData","clusterData","parallelData","sankeyData","stackedData","streamData","noOfSections","groupedData","dashboard","VerticalTabs","useHash","MultiViewContainer"],"mappings":"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G,EAAG,GAC1D,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1D,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1D,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1D,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1D,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1D,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1D,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1D,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1D,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1D,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1D,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1D,CAAC,EAAG,EAAG,EAAG,E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","file":"js/5.s/chunkhash].js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dendrogram\":\"styles_dendrogram_31nevUJqDEfSU_17IHhkeX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"numeral\":\"styles_numeral_3ndLhn1sVSBoWr7B2PKhKN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"vertical-bar-chart\":\"styles_vertical-bar-chart_3icCL1pi4t9qVHD_bZvCKv\",\"verticalBarChart\":\"styles_vertical-bar-chart_3icCL1pi4t9qVHD_bZvCKv\",\"svg\":\"styles_svg_2W6FMlMX0hqOrg4XLRu9iV\",\"bars\":\"styles_bars_1MRVizHBsr_CmFzpEsVrLp\",\"bar\":\"styles_bar_2QL0xX9DXjGjL4kaNBz4Hi\",\"y-axis\":\"styles_y-axis_2c0Zzelxo-RA8frp6l4xQe\",\"yAxis\":\"styles_y-axis_2c0Zzelxo-RA8frp6l4xQe\",\"line\":\"styles_line_3irom04_p_0LlG0mEvucLT\",\"ticks\":\"styles_ticks_2288u-3ybcUMoZQYlLIgxW\",\"label\":\"styles_label_2E_L7dXf_1bqYDusBY5VrR\",\"x-axis\":\"styles_x-axis_16N98nOB8FXHuhI50xcQbu\",\"xAxis\":\"styles_x-axis_16N98nOB8FXHuhI50xcQbu\",\"grid\":\"styles_grid_1297gpYbG6E-GwzcLG7cs7\",\"x-grid\":\"styles_x-grid_1DWR2jicLwbkENkxDnBOjJ\",\"xGrid\":\"styles_x-grid_1DWR2jicLwbkENkxDnBOjJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"force-directed-graph\":\"styles_force-directed-graph_3LTRUY3gaGuboYJYjQKOKq\",\"forceDirectedGraph\":\"styles_force-directed-graph_3LTRUY3gaGuboYJYjQKOKq\",\"links\":\"styles_links_OslHOGo3eV94svX8q_J0X\",\"nodes\":\"styles_nodes_37tnRE_CLsBhQDx0sCtREh\",\"tooltip\":\"styles_tooltip_16t0-lP3s8bvNXTXsdHVBE\",\"value\":\"styles_value_s11UXRW7bKG2_wypVGXad\",\"spin\":\"styles_spin_2HPLu_3909mpeI_ed7KpOu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"donut-tooltip\":\"styles_donut-tooltip_1N799xkZghG1vFiALDaIxJ\",\"donutTooltip\":\"styles_donut-tooltip_1N799xkZghG1vFiALDaIxJ\",\"spin\":\"styles_spin_OMmbFCRHTGL6jzvymKanP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chord-diagram\":\"styles_chord-diagram_2ePE0t-yRZ7FVOyHFcbR7r\",\"chordDiagram\":\"styles_chord-diagram_2ePE0t-yRZ7FVOyHFcbR7r\",\"chords\":\"styles_chords_7_tw-_NWIgOLHn4NwD2Lh\",\"path\":\"styles_path_rP-eAt_yv16xZvDBNI00Q\",\"ribbons\":\"styles_ribbons_myYLtQrjVC88UpnxJ0nxU\",\"tooltip\":\"styles_tooltip_32GYEdjboW8T9hhBxia_AI\",\"label\":\"styles_label_2sEtFZUMJeFoASWnmU357X\",\"spin\":\"styles_spin_11fS4hVZqIu0Kks4OkaBc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"horizontal-bar-chart\":\"styles_horizontal-bar-chart_456Y1FvEsaFOjxUK36TI7\",\"horizontalBarChart\":\"styles_horizontal-bar-chart_456Y1FvEsaFOjxUK36TI7\",\"overflow-container\":\"styles_overflow-container_3cYhN_bMADah14G3T5jgG9\",\"overflowContainer\":\"styles_overflow-container_3cYhN_bMADah14G3T5jgG9\",\"svg\":\"styles_svg_Bp9dY1oh36WeVrquTChOn\",\"bars\":\"styles_bars_3HAmMXDUnugt4iZ2AB6U8H\",\"bar\":\"styles_bar_92G5F_JXJ_T1L0dA9j7Dt\",\"label\":\"styles_label_2-bvifK2Ct6FBpuv3G-WDj\",\"y-axis\":\"styles_y-axis_2lTpFG9stGxTXBeMZ9pRSX\",\"yAxis\":\"styles_y-axis_2lTpFG9stGxTXBeMZ9pRSX\",\"grid\":\"styles_grid_1oTCTR6cXN86WoPlQAlCcB\",\"y-grid\":\"styles_y-grid_UCDJNe39Xscy7-BCPpIob\",\"yGrid\":\"styles_y-grid_UCDJNe39Xscy7-BCPpIob\",\"axes-container\":\"styles_axes-container_e7VZSPFvg5rJEaCdx7k7H\",\"axesContainer\":\"styles_axes-container_e7VZSPFvg5rJEaCdx7k7H\",\"axes\":\"styles_axes_2u387e88YJoN9NUetui4k2\",\"x-axis\":\"styles_x-axis_3CuDhnZWqGiDL5eJ1SMFKo\",\"xAxis\":\"styles_x-axis_3CuDhnZWqGiDL5eJ1SMFKo\",\"line\":\"styles_line_37DzsVKKBc2FrDRYjzhFBY\",\"tick\":\"styles_tick_TBzCzo6cjwbrhd9K7q6VS\",\"dash\":\"styles_dash_5DS4M0Vkmzdv9NTkFCRZL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"info\":\"styles_info_1pP9o-MgWaaiXjlWhM6ECG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gauge-chart\":\"styles_gauge-chart_2omoo82P67YjY2ya2_mBUK\",\"gaugeChart\":\"styles_gauge-chart_2omoo82P67YjY2ya2_mBUK\",\"arc\":\"styles_arc_1dgdo5gSNepDbIt7cTEVm8\",\"pointer\":\"styles_pointer_3zqDS2s3II_KVU_Co2gyHu\",\"pointer-circle\":\"styles_pointer-circle_3vrrp5MgE-l_xSj2JA6fnf\",\"pointerCircle\":\"styles_pointer-circle_3vrrp5MgE-l_xSj2JA6fnf\",\"label\":\"styles_label_3Ew3KNQ2Euzr4KgV-fVI1v\",\"spin\":\"styles_spin_eB0B0rhSA7DRqd9yDcLnv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stream-graph\":\"styles_stream-graph_3uwG4ag_R82bhOqQrxe0Ni\",\"streamGraph\":\"styles_stream-graph_3uwG4ag_R82bhOqQrxe0Ni\",\"x-axis\":\"styles_x-axis_1MuLquqZmHA4ta1P74My06\",\"xAxis\":\"styles_x-axis_1MuLquqZmHA4ta1P74My06\",\"stream-graph-tooltip\":\"styles_stream-graph-tooltip_3y21J-NF1zY5_6EiiiwwEK\",\"streamGraphTooltip\":\"styles_stream-graph-tooltip_3y21J-NF1zY5_6EiiiwwEK\",\"fade-in\":\"styles_fade-in_3vrTZyrd8Plpnzzz2QPtrP\",\"fadeIn\":\"styles_fade-in_3vrTZyrd8Plpnzzz2QPtrP\",\"label\":\"styles_label_3jCtIOM9yQscr8QZ058tcm\",\"spin\":\"styles_spin_1EueMsguAI4H0nOiea-HAE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"vertical-bar-chart\":\"styles_vertical-bar-chart_1NmfAxkuaKhDWmW2PxOHL7\",\"verticalBarChart\":\"styles_vertical-bar-chart_1NmfAxkuaKhDWmW2PxOHL7\",\"bar\":\"styles_bar_1LTxvSGaDizbO5CZyTA5Rl\",\"xaxis\":\"styles_xaxis_pcFTEshNIKI6XwE6nHzj5\",\"yaxis\":\"styles_yaxis_2TArg_3GsmV5VqWMv1_iO3\",\"tooltip\":\"styles_tooltip_3dX97l9-B76zxuhpLt5gv6\",\"fade-in\":\"styles_fade-in_-tjvhEWaHvS-V2I6Zl9TA\",\"fadeIn\":\"styles_fade-in_-tjvhEWaHvS-V2I6Zl9TA\",\"label\":\"styles_label_atGP3o3KDhK098PmSE_68\",\"value\":\"styles_value_woT2fXdU8iV_sMs2zlSIc\",\"spin\":\"styles_spin_1FuCL4IRwVtZPmZOLo99jU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"org-chart\":\"styles_org-chart_2eFyjR3QxpPgaLQrfd6Be8\",\"orgChart\":\"styles_org-chart_2eFyjR3QxpPgaLQrfd6Be8\",\"info-icon\":\"styles_info-icon_2ZBQXaIKGiWvgdAiSsxCg4\",\"infoIcon\":\"styles_info-icon_2ZBQXaIKGiWvgdAiSsxCg4\",\"chart\":\"styles_chart_3LPZofOX2pLRlTp7-T3V05\",\"link\":\"styles_link_1VGITfKs6Q6d9Shj6Ajm9g\",\"node\":\"styles_node_3DtAsclemBLPW0zpTbqkL\",\"active\":\"styles_active_2mgS6aCrStUHPDhcJ8A5FC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spark-lines\":\"styles_spark-lines_6fS9z04Ig9dn1v8LnNpcQ\",\"sparkLines\":\"styles_spark-lines_6fS9z04Ig9dn1v8LnNpcQ\",\"spark-line\":\"styles_spark-line_3pGxTLPSXjixWBScgAPR5S\",\"sparkLine\":\"styles_spark-line_3pGxTLPSXjixWBScgAPR5S\",\"area\":\"styles_area_1ihqYVl5xSvFNqkcuYWuia\",\"path\":\"styles_path_3TPPN7VfNAVK8-F0ns1w4m\",\"focus\":\"styles_focus_2wslU7oLYzI-9tdZxswXgz\",\"line\":\"styles_line_3jhyYcDs0W56eDMIbcBL3R\",\"tooltip\":\"styles_tooltip_1r-2uOdE3wz7wX3r3Dft1b\",\"yvalue\":\"styles_yvalue_3fe3TUeMEZnUXl2nXm2MNr\",\"xvalue\":\"styles_xvalue__cgtwaQOrKpsZV7qDGzjW\",\"spin\":\"styles_spin_2rvPxubG0qTXgHmn_WIEy5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grouped-bar-chart\":\"styles_grouped-bar-chart_16Qry8msZOEk7QNBCvwnBH\",\"groupedBarChart\":\"styles_grouped-bar-chart_16Qry8msZOEk7QNBCvwnBH\",\"bar\":\"styles_bar_3tMNpc3g7eyoXfzVfIm4bv\",\"y-axis\":\"styles_y-axis_21xPkgTBff9noGkTzk1qQK\",\"yAxis\":\"styles_y-axis_21xPkgTBff9noGkTzk1qQK\",\"x-axis\":\"styles_x-axis_2wHFEPkumK7Zuvp6DdbTdG\",\"xAxis\":\"styles_x-axis_2wHFEPkumK7Zuvp6DdbTdG\",\"text\":\"styles_text_1bFLcKgcfypEYLNgYXfSRw\",\"line\":\"styles_line_3JbaUAqHC84Slq4dcJvrPV\",\"dot\":\"styles_dot_1XF4FXL3v2qLDj_j7NyKoR\",\"tooltip\":\"styles_tooltip_1JgNBoEBZCAoU-TT6U0ECB\",\"fade-in\":\"styles_fade-in_1N9GodFKrMEOV331TtPi4r\",\"fadeIn\":\"styles_fade-in_1N9GodFKrMEOV331TtPi4r\",\"spin\":\"styles_spin_14HVhXUPbWS0QSoazU2znB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"histogram\":\"styles_histogram_mOvvGUWNc7KPqXKE-lIzu\",\"bar\":\"styles_bar_3trB0tuPk83BodeuXUQYLG\",\"xaxis\":\"styles_xaxis_2gomqxq3w1RF2GBk6sv9HX\",\"yaxis\":\"styles_yaxis_1qRLGULMwGAwdPiBHJmx2c\",\"yaxis-grids\":\"styles_yaxis-grids_2cFFK9IGn0DY-ycJMgdaQQ\",\"yaxisGrids\":\"styles_yaxis-grids_2cFFK9IGn0DY-ycJMgdaQQ\",\"tooltip\":\"styles_tooltip_3glkdR9aiiwj6Rtg2bPI1s\",\"fade-in\":\"styles_fade-in_1tTPit9X7WSRi23abnVeE8\",\"fadeIn\":\"styles_fade-in_1tTPit9X7WSRi23abnVeE8\",\"spin\":\"styles_spin_WAzpPgwhCtdUmADJSs_aQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cluster-force-layout\":\"styles_cluster-force-layout_3RJMsp60-2phH_Gig-ZBxG\",\"clusterForceLayout\":\"styles_cluster-force-layout_3RJMsp60-2phH_Gig-ZBxG\",\"cluster-tooltip\":\"styles_cluster-tooltip_1Lrtx6w3k3p34zUf7ohoIL\",\"clusterTooltip\":\"styles_cluster-tooltip_1Lrtx6w3k3p34zUf7ohoIL\",\"id\":\"styles_id_oTzLF53_CGzaezdW3A56P\",\"score\":\"styles_score_3n5thTR78BwZvxY50GmUH6\",\"spin\":\"styles_spin_3_pdwmFSM58B0wKTQqAZDz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"word-cloud\":\"styles_word-cloud_24H27SBXXaVbHnG4-B_nlD\",\"wordCloud\":\"styles_word-cloud_24H27SBXXaVbHnG4-B_nlD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container_3NZdWLaWY2gzpGU96S3Q0b\",\"slide-in\":\"styles_slide-in_3LC6zpnOBnkpMswsedVtrW\",\"slideIn\":\"styles_slide-in_3LC6zpnOBnkpMswsedVtrW\",\"center\":\"styles_center_2c7TrTGZz7fwF0Ppby_eYD\",\"text-tooltip\":\"styles_text-tooltip_2MVqD8E9tgqiS_X4YNDYzo\",\"textTooltip\":\"styles_text-tooltip_2MVqD8E9tgqiS_X4YNDYzo\",\"spin\":\"styles_spin_jnOyv_9Tt01_2MP-D9hV_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboard\":\"styles_dashboard_1ozhq_bctZR8JRBMad2ruU\",\"content\":\"styles_content_3E_CvPLT8Wcq_6ztjCaJ2\",\"tabs\":\"styles_tabs_3eB-oEvc7R_SjjnbtB1d-O\",\"container\":\"styles_container_162XBX5IRTHboHIZdMDhbn\",\"viz\":\"styles_viz_ejrd3ec2InfbZtTNPoTlG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"treemap\":\"styles_treemap_o3OuRx_x0sUlJBqlVHtaT\",\"grandparent\":\"styles_grandparent_1jDjIIXW-jECivcF_l3Kb5\",\"child-label\":\"styles_child-label_3PlsQ4Kvi0FtDtmbOQixPc\",\"childLabel\":\"styles_child-label_3PlsQ4Kvi0FtDtmbOQixPc\",\"parent-label\":\"styles_parent-label_1sKnREieMRSELoeRGYzMYk\",\"parentLabel\":\"styles_parent-label_1sKnREieMRSELoeRGYzMYk\",\"parent\":\"styles_parent_17P1Sh3EmjTUc25MqyCZj2\",\"children\":\"styles_children_1GHYt4T1QVnx8GXfHz15Rh\",\"child\":\"styles_child_X6TtMZa35od0Z3BLfHs3Y\"};","import PropTypes from 'prop-types';\nimport React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport ResizeObserver from 'resize-observer-polyfill';\nimport { randomString } from '@togglecorp/fujs';\n\nimport styles from './styles.scss';\n\nconst propTypes = {\n    className: PropTypes.string,\n};\n\nconst defaultProps = {\n    className: '',\n};\n\n\nconst resizeHandlers = {};\n\nconst handleResize = (entries) => {\n    entries.forEach((entry) => {\n        const element = entry.target;\n        const key = element.dataset.resizeHandlerKey;\n        if (key && resizeHandlers[key]) {\n            const rect = entry.contentRect;\n            resizeHandlers[key](rect);\n        }\n    });\n};\n\nconst observer = new ResizeObserver(handleResize);\nconst addResizeHandler = (element, callback) => {\n    const key = randomString(16);\n    // eslint-disable-next-line no-param-reassign\n    element.dataset.resizeHandlerKey = key;\n    resizeHandlers[key] = callback;\n    observer.observe(element);\n};\n\nconst removeResizeHandler = (element) => {\n    if (!element) {\n        return;\n    }\n\n    observer.unobserve(element);\n    const key = element.dataset.resizeHandlerKey;\n    if (!key || !resizeHandlers[key]) {\n        return;\n    }\n    delete resizeHandlers[key];\n};\n\n// Following can be memoized but is it worth it?\nconst _cs = (...args) => args.join(' '); // eslint-disable-line no-underscore-dangle\n\nexport default (WrappedComponent) => {\n    class ResponsiveElement extends React.Component {\n        static propTypes = propTypes;\n\n        static defaultProps = defaultProps;\n\n        constructor(props) {\n            super(props);\n            this.containerRef = React.createRef();\n            this.state = {\n                rect: {},\n            };\n        }\n\n        componentDidMount() {\n            addResizeHandler(this.containerRef.current, this.handleResize);\n        }\n\n        componentWillUnmount() {\n            removeResizeHandler(this.containerRef.current);\n            clearTimeout(this.timeout);\n        }\n\n        handleResize = (rect) => {\n            clearTimeout(this.timeout);\n\n            this.timeout = setTimeout(() => {\n                this.setState({ rect });\n            }, 200);\n        }\n\n        render() {\n            const {\n                className,\n                ...otherProps\n            } = this.props;\n            const { rect } = this.state;\n\n            return (\n                <div\n                    className={_cs(className, styles.responsive, 'responsive')}\n                    ref={this.containerRef}\n                >\n                    <WrappedComponent\n                        className={styles.responsiveChild}\n                        boundingClientRect={rect}\n                        {...otherProps}\n                    />\n                </div>\n            );\n        }\n    }\n\n    return hoistNonReactStatics(\n        ResponsiveElement,\n        WrappedComponent,\n    );\n};\n","import React, {\n    PureComponent,\n    Fragment,\n} from 'react';\nimport {\n    select,\n    event,\n} from 'd3-selection';\nimport { scaleOrdinal } from 'd3-scale';\nimport {\n    chord,\n    ribbon,\n} from 'd3-chord';\nimport { arc } from 'd3-shape';\nimport { descending } from 'd3-array';\nimport { PropTypes } from 'prop-types';\nimport { schemePaired } from 'd3-scale-chromatic';\nimport { getColorOnBgColor } from '@togglecorp/fujs';\n\nimport Responsive from '../../General/Responsive';\nimport Float from '../../View/Float';\n\nimport { saveSvg, getStandardFilename } from '../../../utils/common';\n\nimport styles from './styles.scss';\n\nconst propTypes = {\n    /**\n     * Size of the parent element/component (passed by the Responsive hoc)\n     */\n    boundingClientRect: PropTypes.shape({\n        width: PropTypes.number,\n        height: PropTypes.number,\n    }).isRequired,\n    /**\n     * The nxn square matrix representing the directed flow amongst a network of n nodes\n     * see <a href=\"https://github.com/d3/d3-chord\">d3-chord</a>\n     */\n    data: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.number)),\n    /**\n     * Handler function to save the generated svg\n     */\n    setSaveFunction: PropTypes.func,\n    /**\n     * Modifier to handle label info onMouseOver\n     */\n    labelModifier: PropTypes.func,\n    /**\n     * Array of labels\n     */\n    labelsData: PropTypes.arrayOf(PropTypes.string).isRequired,\n    /**\n     * Array of colors as hex color codes\n     */\n    colorScheme: PropTypes.arrayOf(PropTypes.string),\n    /**\n     * Handle visibility of labels on chord\n     */\n    showLabels: PropTypes.bool,\n    /**\n     * Handle visibility of tooltip\n     */\n    showTooltip: PropTypes.bool,\n    /**\n     * Additional sscss classes passed from parent\n     */\n    className: PropTypes.string,\n    /**\n     * Margins for the chart\n     */\n    margins: PropTypes.shape({\n        top: PropTypes.number,\n        right: PropTypes.number,\n        bottom: PropTypes.number,\n        left: PropTypes.number,\n    }),\n};\n\nconst defaultProps = {\n    data: [],\n    setSaveFunction: () => {},\n    labelModifier: d => d,\n    colorScheme: schemePaired,\n    showLabels: true,\n    showTooltip: true,\n    className: '',\n    margins: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0,\n    },\n};\n\nconst ribbonWidth = 24;\n\n/**\n * Chord diagram displays the inter-relationships between data in a matrix.The data are arranged\n * radially around a circle with the relationships between the data points typically drawn as arcs\n * connecting the data.\n * see <a href=\"https://github.com/d3/d3-chord\">d3-chord</a>\n */\nclass ChordDiagram extends PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n        if (props.setSaveFunction) {\n            props.setSaveFunction(this.save);\n        }\n    }\n\n    componentDidMount() {\n        this.drawChart();\n    }\n\n    componentDidUpdate() {\n        this.redrawChart();\n    }\n\n    setContext = (width, height, margins, data) => {\n        const {\n            top,\n            right,\n            bottom,\n            left,\n        } = margins;\n\n        return select(this.svg)\n            .append('g')\n            .attr('transform', `translate(${(width + left + right) / 2}, ${(height + top + bottom) / 2})`)\n            .datum(data);\n    }\n\n    save = () => {\n        const svg = select(this.svg);\n        saveSvg(svg.node(), `${getStandardFilename('chord-diagram', 'graph')}.svg`);\n    }\n\n    addGlowGradients = (svg) => {\n        const defs = svg.append('defs');\n\n        const filter = defs\n            .append('filter')\n            .attr('id', 'glow');\n\n        filter\n            .append('feGaussianBlur')\n            .attr('class', 'blur')\n            .attr('stdDeviation', '4.5')\n            .attr('result', 'coloredBlur');\n\n        const feMerge = filter.append('feMerge');\n        feMerge\n            .append('feMergeNode')\n            .attr('in', 'coloredBlur');\n        feMerge\n            .append('feMergeNode')\n            .attr('in', 'SourceGraphic');\n    }\n\n    fade = (opacity) => {\n        const { svg } = this;\n        return (g, i) => {\n            select(svg)\n                .selectAll('.ribbons path')\n                .filter(d => (d.source.index !== i && d.target.index !== i))\n                .style('opacity', opacity);\n        };\n    }\n\n    handleMouseOver = (element, d) => {\n        const {\n            labelModifier,\n            labelsData,\n        } = this.props;\n\n        select(element)\n            .style('filter', 'url(#glow)');\n\n        return select(this.tooltip)\n            .html(`<span class=${styles.label}>${labelModifier(labelsData[d.index]) || ''}</span>`)\n            .transition()\n            .style('display', 'inline-block');\n    }\n\n    handleMouseMove = () => (\n        select(this.tooltip)\n            .style('top', `${event.pageY - 30}px`)\n            .style('left', `${event.pageX + 20}px`)\n    )\n\n    handleMouseOut = (element) => {\n        select(element)\n            .style('filter', null);\n\n        return select(this.tooltip)\n            .transition()\n            .style('display', 'none');\n    }\n\n    addPaths = (element, arcs, colors) => {\n        const {\n            showTooltip,\n            showLabels,\n            labelsData,\n        } = this.props;\n\n        const group = element\n            .selectAll('g')\n            .data(d => d.groups)\n            .enter()\n            .append('g')\n            .on('mouseover', this.fade(0.1))\n            .on('mouseout', this.fade(1));\n\n        const paths = group\n            .append('path')\n            .attr('class', styles.path)\n            .style('fill', d => colors(d.index))\n            .attr('d', arcs)\n            .each((d, i, nodes) => {\n                const firstArcSection = /(^.+?)L/;\n                let newArc = firstArcSection.exec(select(nodes[i]).attr('d'))[1];\n                newArc.replace(/,/g, ' ');\n\n                if (d.endAngle > (90 * (Math.PI / 180))\n                    && d.startAngle < (180 * (Math.PI / 180))) {\n                    const startLoc = /M(.*?)A/;\n                    const middleLoc = /A(.*?),0/;\n                    const endLoc = /,1,(.*?)$/;\n\n                    const newStart = newArc.match(endLoc).pop();\n                    const newEnd = newArc.match(startLoc).pop();\n                    const middleSec = newArc.match(middleLoc).pop();\n\n                    newArc = `M${newStart}A${middleSec},0,0,0,${newEnd}`;\n                }\n\n                element\n                    .append('path')\n                    .attr('class', 'hiddenArcs')\n                    .attr('id', `arc${i}`)\n                    .attr('d', newArc)\n                    .style('fill', 'none');\n            });\n\n        if (showTooltip) {\n            paths\n                .on('mouseover', (d, i, nodes) => {\n                    this.handleMouseOver(nodes[i], d);\n                })\n                .on('mousemove', this.handleMouseMove)\n                .on('mouseout', (d, i, nodes) => {\n                    this.handleMouseOut(nodes[i]);\n                });\n        }\n\n        if (showLabels) {\n            this.addLabels(group, labelsData, paths, colors);\n        }\n    }\n\n    addLabels = (selection, labels, paths, colors) => {\n        const group = selection\n            .append('text')\n            .attr('pointer-events', 'none')\n            .attr('dy', d => (\n                d.endAngle > (90 * (Math.PI / 180))\n                && d.startAngle < (180 * (Math.PI / 180)) ? -10 : 15\n            ));\n\n        group\n            .append('textPath')\n            .attr('startOffset', '50%')\n            .style('text-anchor', 'middle')\n            .attr('xlink:href', (d, i) => `#arc${i}`)\n            .text(d => labels[d.index])\n            .style('fill', d => getColorOnBgColor(colors(d.index)));\n\n        group\n            .filter((d, i, nodes) => {\n                // eslint-disable-next-line no-underscore-dangle\n                const pathLength = (paths._groups[0][i].getTotalLength() - (ribbonWidth * 2)) / 2;\n                return ((pathLength - 5) < nodes[i].getComputedTextLength());\n            })\n            .remove();\n    }\n\n    addRibbons = (element, ribbons, colors) => {\n        element\n            .selectAll('path')\n            .data(d => d)\n            .enter()\n            .append('path')\n            .attr('d', ribbons)\n            .attr('class', styles.path)\n            .style('fill', d => colors(d.source.index));\n    }\n\n    redrawChart = () => {\n        const context = select(this.svg);\n        context.selectAll('*').remove();\n        this.drawChart();\n    }\n\n    drawChart = () => {\n        const {\n            data,\n            boundingClientRect,\n            colorScheme,\n            margins,\n        } = this.props;\n\n        if (!boundingClientRect.width || !data || data.length === 0) {\n            return;\n        }\n\n        let { width, height } = boundingClientRect;\n\n        const {\n            top,\n            right,\n            bottom,\n            left,\n        } = margins;\n\n        width = width - left - right;\n        height = height - top - bottom;\n\n        const outerRadius = (Math.min(width, height) * 0.5);\n        let innerRadius = outerRadius - ribbonWidth;\n\n        if (innerRadius < 0) {\n            innerRadius = 0;\n        }\n\n        const chords = chord()\n            .padAngle(0.05)\n            .sortSubgroups(descending);\n\n        const arcs = arc()\n            .innerRadius(innerRadius)\n            .outerRadius(outerRadius);\n\n        const ribbons = ribbon()\n            .radius(innerRadius);\n\n        const colors = scaleOrdinal().range(colorScheme);\n\n        const context = this.setContext(width, height, margins, chords(data));\n        const chordsGroup = context.append('g').attr('class', `chords ${styles.chords}`);\n        const ribbonsGroup = context.append('g').attr('class', `ribbons ${styles.ribbons}`);\n\n        this.addPaths(chordsGroup, arcs, colors);\n        this.addRibbons(ribbonsGroup, ribbons, colors);\n        this.addGlowGradients(select(this.svg));\n    }\n\n    render() {\n        const {\n            className,\n            boundingClientRect: {\n                width,\n                height,\n            },\n        } = this.props;\n\n        const chordStyle = [\n            'chord-diagram',\n            styles.chordDiagram,\n            className,\n        ].join(' ');\n\n        return (\n            <Fragment>\n                <svg\n                    ref={(elem) => { this.svg = elem; }}\n                    className={chordStyle}\n                    style={{\n                        width,\n                        height,\n                    }}\n                />\n                <Float>\n                    <div\n                        ref={(elem) => { this.tooltip = elem; }}\n                        className={styles.tooltip}\n                    />\n                </Float>\n            </Fragment>\n        );\n    }\n}\n\nexport default Responsive(ChordDiagram);\n","import React, {\n    PureComponent,\n    Fragment,\n} from 'react';\nimport SvgSaver from 'svgsaver';\nimport { PropTypes } from 'prop-types';\nimport { listToGroupList } from '@togglecorp/fujs';\n\nimport { drag } from 'd3-drag';\nimport {\n    select,\n    event,\n} from 'd3-selection';\nimport { timer } from 'd3-timer';\nimport { range } from 'd3-array';\n\nimport {\n    scaleSequential,\n} from 'd3-scale';\n\nimport {\n    forceSimulation,\n    forceCenter,\n    forceCollide,\n} from 'd3-force';\nimport { interpolateRainbow } from 'd3-scale-chromatic';\n\nimport { forceAttract } from 'd3-force-attract/index';\nimport { forceCluster } from 'd3-force-cluster/index';\n\nimport Responsive from '../../General/Responsive';\nimport Float from '../../View/Float';\n\nimport { getStandardFilename } from '../../../utils/common';\n\nimport styles from './styles.scss';\n\nconst propTypes = {\n    /**\n     * Size of the parent element/component (passed by the Responsive hoc)\n     */\n    boundingClientRect: PropTypes.shape({\n        width: PropTypes.number,\n        height: PropTypes.number,\n    }).isRequired,\n    /**\n     * The data points for each element\n     */\n    data: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.string,\n        value: PropTypes.number,\n    })),\n    /**\n     * Select unique id of each element\n     */\n    idSelector: PropTypes.func.isRequired,\n    /**\n     * Select group id of each element\n     */\n    groupSelector: PropTypes.func,\n    /**\n     * Select value of each element\n     */\n    valueSelector: PropTypes.func,\n    /**\n     * Handle svg save functionality\n     */\n    setSaveFunction: PropTypes.func,\n    /**\n     * Scale the size of each element.\n     * Radius of each element is calculated as valueSelector(element) * scaleFactor;\n     */\n    scaleFactor: PropTypes.number,\n    /**\n     * Handle hover action\n     */\n    onHover: PropTypes.func,\n    /**\n     * Additional css classes passed from parent.\n     */\n    className: PropTypes.string,\n    /**\n     * Array of colors as hex color codes used to color each element\n     */\n    colorScheme: PropTypes.func,\n    /**\n     * Margins for the chart\n     */\n    margins: PropTypes.shape({\n        top: PropTypes.number,\n        right: PropTypes.number,\n        bottom: PropTypes.number,\n        left: PropTypes.number,\n    }),\n};\nconst defaultProps = {\n    data: {\n    },\n    margins: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0,\n    },\n    setSaveFunction: () => {},\n    groupSelector: d => d.cluster,\n    valueSelector: d => d.score,\n    scaleFactor: 2,\n    onHover: () => {},\n    className: '',\n    colorScheme: interpolateRainbow,\n};\n/**\n * ClusterForceLayout allows to represent the hierarchies and interconnection\n * between entities in the form of nodes and links. The nodes are further grouped together.\n */\nclass ClusterForceLayout extends PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n        if (props.setSaveFunction) {\n            props.setSaveFunction(this.save);\n        }\n    }\n\n    componentDidMount() {\n        const { data } = this.props;\n        this.drawChart();\n        this.updateData(data);\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        const { data } = this.props;\n        if (nextProps.data !== data) {\n            this.updateData(nextProps.data);\n        }\n    }\n\n    componentDidUpdate() {\n        this.redrawChart();\n    }\n\n    onMouseOver = (d) => {\n        const { onHover } = this.props;\n        onHover(d);\n        select(this.style)\n            .style('display', 'block');\n    }\n\n    onMouseMove = (d) => {\n        select(this.tooltip)\n            .html(`<span class=${styles.id}>${d.id}</span>\n            <span class=${styles.score}>${d.radius}</span>`)\n            .style('display', 'block')\n            .style('top', `${event.pageY - 50}px`)\n            .style('left', `${event.pageX - 30}px`);\n    }\n\n    onMouseOut = () => {\n        select(this.tooltip)\n            .style('display', 'none');\n    }\n\n    updateData = (data) => {\n        this.data = JSON.parse(JSON.stringify(data));\n    }\n\n    dragstarted = (d) => {\n        if (!event.active) this.simulation.alphaTarget(0.3).restart();\n        d.fx = d.x; // eslint-disable-line no-param-reassign\n        d.fy = d.y; // eslint-disable-line no-param-reassign\n    }\n\n    dragged = (d) => {\n        d.fx = event.x; // eslint-disable-line no-param-reassign\n        d.fy = event.y; // eslint-disable-line no-param-reassign\n    }\n\n    dragended = (d) => {\n        if (!event.active) this.simulation.alphaTarget(0);\n        d.fx = null; // eslint-disable-line no-param-reassign\n        d.fy = null; // eslint-disable-line no-param-reassign\n    }\n\n    save = () => {\n        const svgsaver = new SvgSaver();\n        const svg = select(this.svg);\n        svgsaver.asSvg(svg.node(), `${getStandardFilename('clustergraph', 'graph')}.svg`);\n    }\n\n    drawChart = () => {\n        const {\n            idSelector,\n            groupSelector,\n            boundingClientRect,\n            valueSelector,\n            scaleFactor,\n            colorScheme,\n            margins,\n        } = this.props;\n\n        let {\n            width,\n            height,\n        } = boundingClientRect;\n\n        const {\n            top,\n            right,\n            bottom,\n            left,\n        } = margins;\n        if (!boundingClientRect.width) return;\n\n        width = width - left - right;\n        height = height - top - bottom;\n\n        const padding = 2;\n\n        const clusterGroup = listToGroupList(this.data, valueSelector);\n\n        const noOfClusters = Object.keys(clusterGroup).length;\n\n        const color = scaleSequential(colorScheme)\n            .domain(range(noOfClusters));\n\n        const clusters = [];\n        const nodes = this.data.map((node) => {\n            const group = groupSelector(node);\n            const radius = valueSelector(node) * scaleFactor;\n            const element = {\n                id: idSelector(node),\n                radius,\n                group,\n                x: (Math.cos((group / noOfClusters) * 2 * Math.PI) * 200)\n                    + (width / 2) + Math.random(),\n                y: (Math.sin((group / noOfClusters) * 2 * Math.PI) * 200)\n                    + (height / 2) + Math.random(),\n            };\n            const maxElementofGroup = clusters.find(cluster => cluster.group === group);\n            if (!maxElementofGroup || (radius > maxElementofGroup.radius)) {\n                const index = clusters.findIndex(cluster => cluster.group === group);\n                if (index === -1) {\n                    clusters.push(element);\n                } else {\n                    clusters[index] = element;\n                }\n            }\n            return element;\n        });\n\n        this.simulation = forceSimulation()\n            .force('center', forceCenter(width / 2, height / 2))\n            .force('attract', forceAttract()\n                .target([width / 2, height / 2])\n                .strength(0.01))\n            .force('cluster', forceCluster()\n                .centers(d => clusters.find(node => node.group === d.group))\n                .strength(0.5)\n                .centerInertia(0.1))\n            .force('collide', forceCollide(d => (d.radius + padding))\n                .strength(0));\n\n        const group = select(this.svg)\n            .attr('width', width + left + right)\n            .attr('height', height + top + bottom);\n\n        const node = group\n            .append('g')\n            .selectAll('circle')\n            .data(nodes)\n            .enter()\n            .append('circle')\n            .style('fill', d => (color(d.group / noOfClusters)))\n            .call(drag()\n                .on('start', this.dragstarted)\n                .on('drag', this.dragged)\n                .on('end', this.dragended))\n            .on('mouseover', this.onMouseOver)\n            .on('mousemove', this.onMouseMove)\n            .on('mouseout', this.onMouseOut);\n\n        // ramp up collision strength to provide smooth transition\n        const transitionTime = 3000;\n        const t = timer((elapsed) => {\n            const dt = elapsed / transitionTime;\n            this.simulation.force('collide').strength((dt ** dt) * 0.7);\n            if (dt >= 1.0) t.stop();\n        });\n\n        this.simulation\n            .nodes(nodes)\n            .on('tick', () => {\n                node\n                    .attr('cx', d => d.x)\n                    .attr('cy', d => d.y)\n                    .attr('r', d => d.radius);\n            });\n    }\n\n    redrawChart = () => {\n        const svg = select(this.svg);\n        svg.selectAll('*').remove();\n        this.drawChart();\n    }\n\n    render() {\n        const { className } = this.props;\n        const svgClassName = [\n            styles.clusterForceLayout,\n            'clusterforcelayout',\n            className,\n        ].join(' ');\n\n        return (\n            <Fragment>\n                <Float>\n                    <div\n                        ref={(el) => { this.tooltip = el; }}\n                        className={styles.clusterTooltip}\n                    />\n                </Float>\n                <svg\n                    ref={(elem) => { this.svg = elem; }}\n                    className={svgClassName}\n                />\n            </Fragment>\n        );\n    }\n}\n\nexport default Responsive(ClusterForceLayout);\n","import React, {\n    Fragment,\n} from 'react';\nimport {\n    select,\n    event,\n} from 'd3-selection';\nimport {\n    hierarchy,\n    tree,\n} from 'd3-hierarchy';\nimport { scaleOrdinal } from 'd3-scale';\nimport { easeSinInOut } from 'd3-ease';\nimport { schemePaired } from 'd3-scale-chromatic';\nimport { zoom } from 'd3-zoom';\nimport { PropTypes } from 'prop-types';\nimport SvgSaver from 'svgsaver';\nimport { doesObjectHaveNoData } from '@togglecorp/fujs';\n\nimport Icon from '../../General/Icon';\nimport Responsive from '../../General/Responsive';\nimport { getStandardFilename } from '../../../utils/common';\n\nimport styles from './styles.scss';\n\nconst propTypes = {\n    /**\n     * Size of the parent element/component (passed by the Responsive hoc)\n     */\n    boundingClientRect: PropTypes.shape({\n        width: PropTypes.number,\n        height: PropTypes.number,\n    }).isRequired,\n    /**\n     * Hierarchical data structure that can be computed to form a hierarchical layout\n     * <a href=\"https://github.com/d3/d3-hierarchy\">d3-hierarchy</a>\n     */\n    data: PropTypes.shape({\n        name: PropTypes.string,\n    }),\n    /**\n     * Handle save functionality\n     */\n    setSaveFunction: PropTypes.func,\n    /**\n     * Accessor function to return children of node\n     */\n    childrenSelector: PropTypes.func,\n    /**\n     * Select label for each node\n     */\n    labelSelector: PropTypes.func.isRequired,\n    /**\n     * Array of colors as hex color codes\n     */\n    colorScheme: PropTypes.arrayOf(PropTypes.string),\n    /**\n     * Cluster layout's node size\n     * <a href=\"https://github.com/d3/d3-hierarchy#cluster_nodeSize\">nodeSize</a>\n     */\n    nodeSize: PropTypes.arrayOf(PropTypes.number),\n    /**\n     * Additional css classes passed from parent\n     */\n    className: PropTypes.string,\n    /**\n     * Margins for the chart\n     */\n    margins: PropTypes.shape({\n        top: PropTypes.number,\n        right: PropTypes.number,\n        bottom: PropTypes.number,\n        left: PropTypes.number,\n    }),\n};\n\nconst defaultProps = {\n    data: [],\n    setSaveFunction: () => {},\n    childrenSelector: d => d.children,\n    colorScheme: schemePaired,\n    nodeSize: [50, 300],\n    className: '',\n    margins: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0,\n    },\n};\n\n/**\n * CollapsibleTree is a tree diagram showing the hierarchical structure of the data\n */\nclass CollapsibleTree extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n        if (props.setSaveFunction) {\n            props.setSaveFunction(this.save);\n        }\n        Object.assign(this, { x: 0, y: 0, k: 1 });\n    }\n\n    componentDidMount() {\n        this.drawChart();\n    }\n\n    componentDidUpdate() {\n        this.redrawChart();\n    }\n\n    setContext = (width, height, margins) => {\n        const {\n            top,\n            left,\n        } = margins;\n\n        const group = select(this.svg)\n            .call(\n                zoom()\n                    .filter(() => event.ctrlKey)\n                    .on('zoom', () => {\n                        const { x, y, k } = event.transform;\n                        Object.assign(this, { x, y, k });\n                        group\n                            .attr('transform', `translate(${x + left}, ${y + top + (height / 2)}) scale(${k})`);\n                    }),\n            )\n            .append('g')\n            .attr('transform', `translate(${left},${top + (height / 2)})`);\n\n        return group;\n    }\n\n    setupChart = () => {\n        const {\n            data,\n            childrenSelector,\n            boundingClientRect,\n            colorScheme,\n            nodeSize,\n            margins,\n        } = this.props;\n\n        const { width, height } = boundingClientRect;\n        const {\n            top,\n            right,\n            bottom,\n            left,\n        } = margins;\n\n        this.width = width - left - right;\n        this.height = height - top - bottom;\n\n        this.trees = tree().nodeSize(nodeSize);\n        this.root = hierarchy(data, childrenSelector);\n        this.root.x0 = height / 2;\n        this.root.y0 = 0;\n        this.colors = scaleOrdinal().range(colorScheme);\n        this.group = this.setContext(this.width, this.height, margins);\n        this.duration = 0;\n    }\n\n    save = () => {\n        const svg = select(this.svg);\n        const svgsaver = new SvgSaver();\n        svgsaver.asSvg(svg.node(), `${getStandardFilename('collapsible-tree', 'graph')}.svg`);\n    }\n\n    topicColors = (node) => {\n        const { labelSelector } = this.props;\n        // let color = this.colors(0);\n        let color;\n        if (node.depth === 0 || node.depth === 1) {\n            color = this.colors(labelSelector(node.data));\n        } else {\n            color = this.topicColors(node.parent);\n        }\n        return color;\n    }\n\n    diagonal = (s, d) => {\n        const path = `M ${s.y} ${s.x}\n            C ${(s.y + d.y) / 2} ${s.x},\n              ${(s.y + d.y) / 2} ${d.x},\n              ${d.y} ${d.x}`;\n\n        return path;\n    }\n\n    click = (d) => {\n        if (d.children) {\n            d.childrens = d.children; // eslint-disable-line no-param-reassign\n            d.children = null; // eslint-disable-line no-param-reassign\n        } else {\n            d.children = d.childrens; // eslint-disable-line no-param-reassign\n            d.childrens = null; // eslint-disable-line no-param-reassign\n        }\n        this.duration = 500;\n        this.update(d);\n    }\n\n    addNodes = (group, source, nodes) => {\n        const { labelSelector } = this.props;\n\n        let i = 0;\n        const node = group\n            .selectAll('g.node')\n            .data(nodes, (d) => {\n                if (d.id) {\n                    return d.id;\n                }\n                i += 1;\n                d.id = i; // eslint-disable-line no-param-reassign\n                return d.id;\n            });\n        const nodeEnter = node\n            .enter()\n            .append('g')\n            .attr('class', 'node')\n            .attr('cursor', 'pointer')\n            .attr('transform', `translate(${source.y0}, ${source.x0})`)\n            .on('click', this.click);\n\n        nodeEnter\n            .append('circle')\n            .attr('class', 'node')\n            .attr('r', 0)\n            .style('stroke', '#fff')\n            .style('stroke-width', '2px')\n            .style('fill', this.topicColors);\n\n        nodeEnter\n            .append('text')\n            .attr('dy', '.35em')\n            .attr('fill-opacity', 0)\n            .attr('x', 0)\n            .attr('y', -12) // d => (d.children || d.childrens ? 16 : 0))\n            .attr('text-anchor', 'middle') // d => (d.children ? 'end' : 'start'))\n            .text(d => labelSelector(d.data));\n\n\n        group\n            .select('text')\n            .call((d) => {\n                const { margins } = this.props;\n                const {\n                    top,\n                    left,\n                } = margins;\n                const {\n                    x = 0,\n                    y = 0,\n                    k = 1,\n                } = this;\n                const rootTextLength = d.node().getComputedTextLength() || 1;\n                const translateX = x < rootTextLength ? rootTextLength : 0;\n                group\n                    .transition()\n                    .attr('transform', `translate(${x + left + translateX}, ${y + top + (this.height / 2)}) scale(${k})`);\n            });\n\n        const nodeUpdate = nodeEnter.merge(node);\n\n        nodeUpdate\n            .transition()\n            .ease(easeSinInOut)\n            .duration(this.duration)\n            .attr('transform', d => `translate(${d.y}, ${d.x})`);\n\n        nodeUpdate\n            .select('circle.node')\n            .attr('r', 6)\n            .style('fill', this.topicColors)\n            .style('stroke', d => (d.childrens ? '#039be5' : '#fff'));\n\n        nodeUpdate\n            .selectAll('text')\n            .transition()\n            .ease(easeSinInOut)\n            .style('fill-opacity', 1);\n\n        const nodeExit = node\n            .exit()\n            .transition()\n            .ease(easeSinInOut)\n            .duration(this.duration)\n            .attr('transform', `translate(${source.y}, ${source.x})`)\n            .remove();\n\n        nodeExit\n            .select('circle')\n            .attr('r', 0);\n\n        nodeExit\n            .select('text')\n            .style('fill-opacity', 0);\n    }\n\n    addLinks = (group, source, links) => {\n        const link = group\n            .selectAll('path.link')\n            .data(links, d => d.id);\n\n        const linkEnter = link\n            .enter()\n            .insert('path', 'g')\n            .attr('class', 'link')\n            .attr('stroke', this.topicColors)\n            .attr('stroke-width', '1px')\n            .attr('fill', 'none')\n            .attr('d', () => {\n                const out = { x: source.x0, y: source.y0 };\n                return this.diagonal(out, out);\n            });\n\n        const linkUpdate = linkEnter\n            .merge(link);\n\n        linkUpdate\n            .transition()\n            .ease(easeSinInOut)\n            .duration(this.duration)\n            .attr('d', d => this.diagonal(d, d.parent));\n\n        link\n            .exit()\n            .transition()\n            .ease(easeSinInOut)\n            .duration(this.duration)\n            .attr('d', () => {\n                const out = { x: source.x, y: source.y };\n                return this.diagonal(out, out);\n            })\n            .remove();\n    }\n\n    update = (source) => {\n        const treeData = this.trees(this.root);\n        const nodes = treeData.descendants();\n        const links = treeData.descendants().slice(1);\n\n        this.addNodes(this.group, source, nodes);\n        this.addLinks(this.group, source, links);\n        nodes.forEach((d) => {\n            d.x0 = d.x; // eslint-disable-line no-param-reassign\n            d.y0 = d.y; // eslint-disable-line no-param-reassign\n        });\n    }\n\n    drawChart = () => {\n        const {\n            data,\n            boundingClientRect,\n        } = this.props;\n\n        if (!boundingClientRect.width) {\n            return;\n        }\n\n        if (boundingClientRect.width === 0 || boundingClientRect.height === 0) {\n            return;\n        }\n\n        if (!data || data.length === 0 || doesObjectHaveNoData(data)) {\n            return;\n        }\n\n        this.setupChart();\n        this.update(this.root);\n    }\n\n    redrawChart = () => {\n        const svg = select(this.svg);\n        svg.selectAll('*').remove();\n        this.drawChart();\n    }\n\n    render() {\n        const {\n            className,\n            boundingClientRect: {\n                width,\n                height,\n            },\n        } = this.props;\n\n        const treeStyle = [\n            'collapsible-tree',\n            className,\n        ].join(' ');\n\n        return (\n            <Fragment>\n                <svg\n                    className={treeStyle}\n                    ref={(elem) => { this.svg = elem; }}\n                    style={{\n                        width,\n                        height,\n                    }}\n                />\n                <Icon\n                    className={styles.info}\n                    name=\"info\"\n                    title=\"Use Ctrl + mouse to pan and zoom\"\n                />\n            </Fragment>\n        );\n    }\n}\n\nexport default Responsive(CollapsibleTree);\n","import React from 'react';\nimport {\n    scaleLinear,\n    scaleBand,\n    scaleSequential,\n} from 'd3-scale';\nimport { interpolateGnBu } from 'd3-scale-chromatic';\nimport { select } from 'd3-selection';\nimport { max, min, range } from 'd3-array';\nimport { axisRight } from 'd3-axis';\nimport { format } from 'd3-format';\nimport { PropTypes } from 'prop-types';\nimport SvgSaver from 'svgsaver';\nimport {\n    getColorOnBgColor,\n    getHexFromRgb,\n    isValidHexColor,\n    doesObjectHaveNoData,\n} from '@togglecorp/fujs';\n\nimport Responsive from '../../General/Responsive';\nimport { getStandardFilename } from '../../../utils/common';\n\nconst propTypes = {\n    /**\n     * Size of the parent element/component (passed by the Responsive hoc)\n     */\n    boundingClientRect: PropTypes.shape({\n        width: PropTypes.number,\n        height: PropTypes.number,\n    }).isRequired,\n    /**\n     * Data to be represented\n     * labels: labels are variables\n     * values: a square matrix with same variables show in rows and\n     * columns with each cell representing correlation between two variables\n     */\n    data: PropTypes.shape({\n        labels: PropTypes.arrayOf(PropTypes.string),\n        values: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.number)),\n    }).isRequired,\n    /**\n     * Handle save functionality\n     */\n    setSaveFunction: PropTypes.func,\n    /**\n     * Array of colors as hex color codes\n     */\n    colorScheme: PropTypes.func,\n    /**\n     * Show labels on the diagram or not\n     */\n    showLabels: PropTypes.bool,\n    /**\n     * Tilt labels or not\n     */\n    tiltLabels: PropTypes.bool,\n    /**\n     * Additional css classes passed from parent\n     */\n    className: PropTypes.string,\n    /**\n     * Margins for the chart\n     */\n    margins: PropTypes.shape({\n        top: PropTypes.number,\n        right: PropTypes.number,\n        bottom: PropTypes.number,\n        left: PropTypes.number,\n    }),\n};\n\nconst defaultProps = {\n    setSaveFunction: () => {},\n    colorScheme: interpolateGnBu,\n    showLabels: true,\n    tiltLabels: false,\n    className: '',\n    margins: {\n        top: 50,\n        right: 0,\n        bottom: 10,\n        left: 100,\n    },\n};\n\n/**\n * CorrelationMatrix visualizes the correlation\n * coefficients of multiple variables as colors in a grid\n */\nclass CorrelationMatrix extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n        if (props.setSaveFunction) {\n            props.setSaveFunction(this.save);\n        }\n    }\n\n    componentDidMount() {\n        this.drawChart();\n    }\n\n    componentDidUpdate() {\n        this.redrawChart();\n    }\n\n    setContext = (width, height, margins) => {\n        const {\n            top,\n            left,\n        } = margins;\n\n        return select(this.svg)\n            .append('g')\n            .attr('transform', `translate(${left},${top})`);\n    }\n\n    save = () => {\n        const svg = select(this.svg);\n        const svgsaver = new SvgSaver();\n        svgsaver.asSvg(svg.node(), `${getStandardFilename('correlationmatrix', 'graph')}.svg`);\n    }\n\n    redrawChart = () => {\n        const svg = select(this.svg);\n        svg.selectAll('*').remove();\n        this.drawChart();\n    }\n\n    drawChart = () => {\n        const {\n            data,\n            boundingClientRect,\n            colorScheme,\n            margins,\n        } = this.props;\n\n        if (!boundingClientRect.width) {\n            return;\n        }\n\n        if (!data || data.length === 0 || doesObjectHaveNoData(data)) {\n            return;\n        }\n        let { width, height } = boundingClientRect;\n\n        const {\n            top,\n            right,\n            bottom,\n            left,\n        } = margins;\n\n        const labelsData = data.labels;\n        const valuesData = data.values;\n\n        width = width - left - right;\n        height = height - top - bottom;\n\n        if (width < 0) width = 0;\n        if (height < 0) height = 0;\n\n        const matrixWidth = (0.8 * width);\n        const legendWidth = width - matrixWidth;\n        const maxValue = max(valuesData, layer => max(layer, d => d));\n        const minValue = min(valuesData, layer => min(layer, d => d));\n        const noofrows = valuesData.length;\n        const noofcols = valuesData[0].length;\n\n        const x = scaleBand()\n            .domain(range(noofcols))\n            .range([0, matrixWidth]);\n\n        const y = scaleBand()\n            .domain(range(noofrows))\n            .range([0, height]);\n\n        const colors = scaleSequential(colorScheme)\n            .domain([Math.floor(minValue), Math.ceil(maxValue)]);\n\n        const group = this.setContext(width, height, margins);\n        const labels = group.append('g').attr('class', 'labels');\n        const legend = select(this.svg)\n            .append('g')\n            .attr('transform', `translate(${matrixWidth + left + right}, ${top})`);\n\n        this.addCells(group, valuesData, x, y, colors);\n        this.addLabels(labels, labelsData, x, y);\n        this.addLegend(legend, height, legendWidth, colors, minValue, maxValue);\n    }\n\n\n    handleMouseOver = (node) => {\n        select(node)\n            .transition()\n            .select('text')\n            .style('visibility', 'visible');\n    }\n\n    handleMouseOut = (node) => {\n        select(node)\n            .transition()\n            .select('text')\n            .style('visibility', 'hidden');\n    }\n\n\n    addCells = (group, data, x, y, colors) => {\n        const row = group\n            .selectAll('.row')\n            .data(data)\n            .enter()\n            .append('g')\n            .attr('class', 'row')\n            .attr('transform', (d, i) => `translate(0, ${y(i)})`);\n\n        const cell = row\n            .selectAll('.cell')\n            .data(d => d)\n            .enter()\n            .append('g')\n            .attr('class', 'cell')\n            .attr('transform', (d, i) => `translate(${x(i)}, 0)`)\n            .style('cursor', 'pointer')\n            .on('mouseover', (d, i, nodes) => this.handleMouseOver(nodes[i]))\n            .on('mouseout', (d, i, nodes) => this.handleMouseOut(nodes[i]));\n\n        cell\n            .append('rect')\n            .attr('width', x.bandwidth())\n            .attr('height', y.bandwidth())\n            .attr('stroke', 'white')\n            .attr('stroke-width', 1);\n\n        row\n            .selectAll('.cell')\n            .data((d, i) => data[i])\n            .style('fill', colors);\n        const { showLabels } = this.props;\n        if (showLabels) {\n            this.addText(cell, x, y, colors);\n        }\n    }\n\n    addText = (group, x, y, colors) => {\n        group\n            .append('text')\n            .attr('dy', '.35em')\n            .attr('x', x.bandwidth() / 2)\n            .attr('y', y.bandwidth() / 2)\n            .attr('text-anchor', 'middle')\n            .style('visibility', 'hidden')\n            .text(d => format('.2n')(d))\n            .style('fill', (d) => {\n                const color = colors(d);\n                const colorBg = isValidHexColor(color) ? color : getHexFromRgb(color);\n                return getColorOnBgColor(colorBg);\n            });\n    }\n\n    addLabels = (group, labels, x, y) => {\n        const { tiltLabels } = this.props;\n\n        const columnLabels = group\n            .selectAll('.column-labels')\n            .data(labels)\n            .enter()\n            .append('g')\n            .attr('class', 'column-labels')\n            .attr('transform', (d, i) => `translate(${x(i)}, 0)`);\n\n        columnLabels\n            .append('text')\n            .attr('font-size', '.8em')\n            .attr('class', 'labels')\n            .attr('transform', `translate(${x.bandwidth() / 2}, -5)`)\n            .attr('text-anchor', 'middle')\n            .text(d => d);\n\n        const rowLabels = group\n            .selectAll('.row-labels')\n            .data(labels)\n            .enter()\n            .append('g')\n            .attr('class', 'row-labels')\n            .attr('transform', (d, i) => `translate(0, ${y(i)})`);\n\n        rowLabels\n            .append('text')\n            .attr('font-size', '.8em')\n            .attr('x', -8)\n            .attr('y', y.bandwidth() / 2)\n            .attr('dy', '.32em')\n            .attr('text-anchor', 'end')\n            .text(d => d);\n\n        if (tiltLabels) {\n            columnLabels\n                .selectAll('text')\n                .attr('text-anchor', 'start')\n                .attr('transform', `translate(${x.bandwidth() / 2}, -5) rotate(-45)`);\n        }\n    }\n\n    addLegend = (group, height, width, colors, minValue, maxValue) => {\n        const rectWidth = width / 4 || 0;\n\n        const values = scaleLinear()\n            .domain([height, 0])\n            .range([minValue, maxValue]);\n\n        const legend = group\n            .append('g')\n            .attr('transform', `translate(${rectWidth}, 0)`);\n\n        legend\n            .selectAll('rect')\n            .data(range(height))\n            .enter()\n            .append('rect')\n            .attr('y', (d, i) => i)\n            .attr('x', 0)\n            .attr('width', rectWidth)\n            .attr('height', 1)\n            .style('fill', d => colors(values(d)));\n\n        const yticks = scaleLinear()\n            .range([height, 0])\n            .domain([minValue, maxValue]);\n\n        const yAxis = axisRight(yticks);\n\n        legend\n            .append('g')\n            .attr('class', 'y-axis')\n            .attr('transform', `translate(${rectWidth}, 0)`)\n            .call(yAxis);\n    }\n\n    render() {\n        const {\n            className,\n            boundingClientRect: {\n                width,\n                height,\n            },\n        } = this.props;\n\n        const correlationMatrixStyle = [\n            'correlation-matrix',\n            className,\n        ].join(' ');\n\n        return (\n            <svg\n                className={correlationMatrixStyle}\n                ref={(elem) => { this.svg = elem; }}\n                style={{\n                    width,\n                    height,\n                }}\n            />\n        );\n    }\n}\n\nexport default Responsive(CorrelationMatrix);\n","import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport { select } from 'd3-selection';\nimport { extent } from 'd3-array';\nimport { schemePaired } from 'd3-scale-chromatic';\nimport {\n    cluster,\n    hierarchy,\n} from 'd3-hierarchy';\nimport {\n    scalePow,\n    scaleOrdinal,\n} from 'd3-scale';\nimport { doesObjectHaveNoData } from '@togglecorp/fujs';\n\nimport SvgSaver from 'svgsaver';\nimport Responsive from '../../General/Responsive';\nimport styles from './styles.scss';\nimport { getStandardFilename } from '../../../utils/common';\n\nconst propTypes = {\n    /**\n     * Size of the parent element/component (passed by the Responsive hoc)\n     */\n    boundingClientRect: PropTypes.shape({\n        width: PropTypes.number,\n        height: PropTypes.number,\n    }).isRequired,\n    /**\n     * Hierarchical data structure that can be computed to form a hierarchical layout\n     * <a href=\"https://github.com/d3/d3-hierarchy\">d3-hierarchy</a>\n     */\n    data: PropTypes.shape({\n        name: PropTypes.string,\n    }).isRequired,\n    /**\n     * Handle save functionality\n     */\n    setSaveFunction: PropTypes.func,\n    /**\n     * Accessor function to return children of node\n     */\n    childrenSelector: PropTypes.func,\n    /**\n     * Select label for each node\n     */\n    labelSelector: PropTypes.func.isRequired,\n    /**\n     * Select the value of each node\n     */\n    valueSelector: PropTypes.func,\n    /**\n     * Array of colors as hex color codes\n     */\n    colorScheme: PropTypes.arrayOf(PropTypes.string),\n    /**\n     * Additional css classes passed from parent\n     */\n    className: PropTypes.string,\n    /**\n     * Margins for the chart\n     */\n    margins: PropTypes.shape({\n        top: PropTypes.number,\n        right: PropTypes.number,\n        bottom: PropTypes.number,\n        left: PropTypes.number,\n    }),\n};\n\nconst defaultProps = {\n    childrenSelector: d => d.children,\n    setSaveFunction: () => {},\n    valueSelector: () => 1,\n    colorScheme: schemePaired,\n    className: '',\n    margins: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0,\n    },\n};\n\n/**\n * Dendrogram is a tree diagram showing the arrangement of\n * clusters produced by hierarchical clustering\n */\nclass Dendrogram extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n        if (props.setSaveFunction) {\n            props.setSaveFunction(this.save);\n        }\n    }\n\n    componentDidMount() {\n        this.drawChart();\n    }\n\n    componentDidUpdate() {\n        this.redrawChart();\n    }\n\n    setContext = (width, height, margins) => {\n        const {\n            top,\n            right,\n            bottom,\n            left,\n        } = margins;\n\n        return select(this.svg)\n            .attr('width', width + left + right)\n            .attr('height', height + top + bottom)\n            .append('g')\n            .attr('transform', `translate(${80 + left}, ${top})`);\n    }\n\n    save = () => {\n        const svg = select(this.svg);\n        const svgsaver = new SvgSaver();\n        svgsaver.asSvg(svg.node(), `${getStandardFilename('dendrogram', 'graph')}.svg`);\n    }\n\n    topicColors = (node, colors) => {\n        const { labelSelector } = this.props;\n        // let color = colors(0);\n        let color;\n        if (node.depth === 0 || node.depth === 1) {\n            color = colors(labelSelector(node.data));\n        } else {\n            color = this.topicColors(node.parent, colors);\n        }\n        return color;\n    }\n\n    diagonal = d => (\n        `M${d.y},${d.x}C${d.parent.y + 100},${d.x}`\n        + ` ${d.parent.y + 100},${d.parent.x} ${d.parent.y},${d.parent.x}`\n    )\n\n    addLines = (element, data, colors) => {\n        element\n            .selectAll('path')\n            .data(data)\n            .enter()\n            .append('path')\n            .attr('d', this.diagonal)\n            .style('stroke', d => this.topicColors(d, colors))\n            .style('stroke-opacity', 0.5)\n            .style('fill', 'none')\n            .style('stroke-width', 1.5);\n    }\n\n    addNodes = (element, data) => (\n        element\n            .selectAll('g')\n            .data(data)\n            .enter()\n            .append('g')\n            .attr('transform', d => `translate(${d.y}, ${d.x})`)\n    )\n\n    addCircles = (selection, colors, scaledValues) => {\n        selection\n            .append('circle')\n            .attr('r', (d) => {\n                if (d.value) {\n                    return scaledValues(d.value);\n                }\n                return 5;\n            })\n            .style('fill', d => this.topicColors(d, colors));\n    }\n\n    addLabels = (selection, colors, scaledValues) => {\n        const { labelSelector } = this.props;\n        selection\n            .append('text')\n            .attr('dy', '.3em')\n            .attr('dx', (d) => {\n                if (d.value) {\n                    return d.children ? `-${scaledValues(d.value) + 2}` : `${scaledValues(d.value) + 2}`;\n                }\n                return d.children ? -5 : 5;\n            })\n            .style('fill', d => this.topicColors(d, colors))\n            .style('text-anchor', d => (d.children ? 'end' : 'start'))\n            .text(d => labelSelector(d.data));\n    }\n\n    redrawChart = () => {\n        const svg = select(this.svg);\n        svg.selectAll('*').remove();\n        this.drawChart();\n    }\n\n    drawChart = () => {\n        const {\n            data,\n            boundingClientRect,\n            childrenSelector,\n            valueSelector,\n            colorScheme,\n            margins,\n        } = this.props;\n\n        if (!boundingClientRect.width) {\n            return;\n        }\n\n        if (!data || data.length === 0 || doesObjectHaveNoData(data)) {\n            return;\n        }\n\n        let { width, height } = boundingClientRect;\n        const {\n            top,\n            right,\n            bottom,\n            left,\n        } = margins;\n\n        width = width - left - right;\n        height = height - top - bottom;\n\n        const context = this.setContext(width, height, margins);\n        const lines = context.append('g').attr('class', 'lines');\n        const nodes = context.append('g').attr('class', 'nodes');\n        const colors = scaleOrdinal().range(colorScheme);\n\n        const tree = cluster()\n            .size([height, width - 200]);\n        const root = hierarchy(data, childrenSelector)\n            .sum(valueSelector);\n        const minmax = extent(root.descendants(), d => d.value);\n        const scaledValues = scalePow().exponent(0.5).domain(minmax).range([4, 20]);\n        tree(root);\n\n        this.addLines(lines, root.descendants().slice(1), colors);\n        this.addNodes(nodes, root.descendants());\n        const points = nodes.selectAll('g');\n        this.addLabels(points, colors, scaledValues);\n        this.addCircles(points, colors, scaledValues);\n    }\n\n    render() {\n        const { className } = this.props;\n\n        const dendrogramStyle = [\n            'dendrogram',\n            styles.dendrogram,\n            className,\n        ].join(' ');\n        return (\n            <svg\n                className={dendrogramStyle}\n                ref={(elem) => { this.svg = elem; }}\n            />\n        );\n    }\n}\n\nexport default Responsive(Dendrogram);\n","import React, {\n    Fragment,\n    PureComponent,\n} from 'react';\nimport { PropTypes } from 'prop-types';\nimport { schemeAccent } from 'd3-scale-chromatic';\nimport { select, event } from 'd3-selection';\nimport { arc, pie } from 'd3-shape';\nimport { scaleOrdinal } from 'd3-scale';\nimport { interpolateNumber } from 'd3-interpolate';\nimport 'd3-transition'; // https://github.com/d3/d3-selection/issues/185\nimport SvgSaver from 'svgsaver';\n\nimport Responsive from '../../General/Responsive';\nimport Float from '../../View/Float';\n\nimport { getStandardFilename } from '../../../utils/common';\nimport styles from './styles.scss';\n\nconst propTypes = {\n    /**\n     * Size of the parent element/component (passed by the Responsive hoc)\n     */\n    boundingClientRect: PropTypes.shape({\n        width: PropTypes.number,\n        height: PropTypes.number,\n    }).isRequired,\n    /**\n     * Data to be represented\n     * Each data point must have a label and value field\n     */\n    data: PropTypes.arrayOf(PropTypes.object),\n    /**\n     * Handle save functionality\n     */\n    setSaveFunction: PropTypes.func,\n    /**\n     * Select the value of data point\n     */\n    valueSelector: PropTypes.func.isRequired,\n    /**\n     * Select the label of data point\n     */\n    labelSelector: PropTypes.func.isRequired,\n    /**\n     * Array of colors as hex color codes\n     */\n    colorSelector: PropTypes.func,\n    /**\n     * Modifier function to change label\n     */\n    labelModifier: PropTypes.func,\n    /**\n     * Ratio of the width of annulus to the outerRadius where outerRadius\n     * is calculated based on the size of chart.\n     */\n    sideLengthRatio: PropTypes.number,\n    /**\n     * Array of colors as hex color codes\n     */\n    colorScheme: PropTypes.arrayOf(PropTypes.string),\n    /**\n     * Additional css classes passed from parent\n     */\n    className: PropTypes.string,\n    /**\n     * If true hide the labels from chart\n     */\n    hideLabel: PropTypes.bool,\n    /**\n     * Delay period for transition\n     */\n    period: PropTypes.number,\n};\n\nconst defaultProps = {\n    data: [],\n    setSaveFunction: () => {},\n    colorScheme: schemeAccent,\n    colorSelector: undefined,\n    className: '',\n    sideLengthRatio: 0.4,\n    labelModifier: undefined,\n    hideLabel: false,\n    period: 200,\n};\n\n/**\n * Donut Chart is a variation of Pie Chart with an area of center cut out.\n * Donut Chart de-emphasizes the use of area and focuses more on representing\n * values as arcs length.\n * <a href=\"https://github.com/d3/d3-shape#pies\">d3.pie</a>\n */\nclass DonutChart extends PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n        if (props.setSaveFunction) {\n            props.setSaveFunction(this.save);\n        }\n    }\n\n    componentDidMount() {\n        this.drawChart();\n    }\n\n    componentDidUpdate() {\n        this.redrawChart();\n    }\n\n    setContext = (data, width, height) => (\n        select(this.svg)\n            .datum(data)\n            .append('g')\n            .attr('transform', `translate(${width / 2}, ${height / 2})`)\n    )\n\n    midAngle = d => (d.startAngle + ((d.endAngle - d.startAngle) / 2));\n\n    save = () => {\n        const svg = select(this.svg);\n        const svgsaver = new SvgSaver();\n        svgsaver.asSvg(svg.node(), `${getStandardFilename('donutchart', 'graph')}.svg`);\n    }\n\n    arch = (padRadius, innerRadius) => arc().padRadius(padRadius).innerRadius(innerRadius);\n\n    textArch = (outerRadius, innerRadius) => arc()\n        .outerRadius(outerRadius).innerRadius(innerRadius);\n\n    arcTween = (element, arcs, newRadius, delay) => (\n        select(element)\n            .transition()\n            .duration(delay)\n            .attrTween('d', (d) => {\n                const i = interpolateNumber(d.outerRadius, newRadius);\n                return function tween(t) {\n                    // eslint-disable-next-line no-param-reassign\n                    d.outerRadius = i(t);\n                    return arcs(d);\n                };\n            })\n    );\n\n    addTransition = (element, arcs, period) => {\n        element\n            .selectAll('path')\n            .transition()\n            .duration((d, i) => i * period)\n            .attrTween('d', (d) => {\n                const i = interpolateNumber(d.startAngle + 0.1, d.endAngle);\n                return function tween(t) {\n                    // eslint-disable-next-line no-param-reassign\n                    d.endAngle = i(t);\n                    return arcs(d);\n                };\n            })\n            .transition()\n            .attr('pointer-events', '');\n    };\n\n    addDropShadow = (svg) => {\n        const defs = svg.append('defs');\n\n        const filter = defs\n            .append('filter')\n            .attr('id', 'drop-shadow')\n            .attr('height', '120%');\n\n        filter\n            .append('feGaussianBlur')\n            .attr('in', 'SourceAlpha')\n            .attr('stdDeviation', 2)\n            .attr('result', 'blur');\n\n        filter\n            .append('feOffset')\n            .attr('in', 'blur')\n            .attr('result', 'offsetBlur');\n\n        filter\n            .append('feFlood')\n            .attr('flood-color', '#F8F8F8')\n            .attr('flood-opacity', 1)\n            .attr('result', 'colorBlur');\n\n        filter\n            .append('feComposite')\n            .attr('in', 'colorBlur')\n            .attr('in2', 'offsetBlur')\n            .attr('operator', 'in');\n\n        const feMerge = filter.append('feMerge');\n        feMerge\n            .append('feMergeNode')\n            .attr('in', 'offsetBlur');\n        feMerge\n            .append('feMergeNode')\n            .attr('in', 'SourceGraphic');\n    };\n\n    addPaths = (element, options) => {\n        const {\n            outerRadius,\n            colors,\n            pies,\n            arcs,\n        } = options;\n\n        const {\n            valueSelector,\n            colorSelector,\n            labelSelector,\n            labelModifier,\n        } = this.props;\n\n        element\n            .selectAll('path')\n            .data(pies)\n            .enter()\n            .append('path')\n            .each((d) => {\n                // eslint-disable-next-line no-param-reassign\n                d.outerRadius = outerRadius - 4;\n            })\n            .attr('d', arcs)\n            .style('fill', (d) => {\n                if (colorSelector) {\n                    return colorSelector(d.data);\n                }\n                return colors(labelSelector(d.data));\n            })\n            .attr('cursor', 'pointer')\n            .attr('pointer-events', 'none')\n            .on('mouseover', (d, i, nodes) => {\n                this.arcTween(nodes[i], arcs, outerRadius, 0);\n                select(nodes[i]).style('filter', 'url(#drop-shadow)');\n            })\n            .on('mousemove', (d) => {\n                const label = labelSelector(d.data);\n                const value = valueSelector(d.data);\n                const textLabel = labelModifier ? labelModifier(label, value) : `${label} ${value}`;\n\n                select(this.tooltip)\n                    .html(`<span>${textLabel}</span>`)\n                    .style('display', 'inline-block')\n                    .style('top', () => {\n                        const { height } = this.tooltip.getBoundingClientRect();\n                        return `${event.pageY - height - (height / 2)}px`;\n                    })\n                    .style('right', () => {\n                        const { width } = this.tooltip.getBoundingClientRect();\n                        return `${document.body.clientWidth - event.pageX - (width / 2)}px`;\n                    });\n            })\n            .on('mouseout', (d, i, nodes) => {\n                this.arcTween(nodes[i], arcs, outerRadius - 4, 150);\n                select(this.tooltip)\n                    .style('display', 'none');\n                select(nodes[i]).style('filter', 'none');\n            });\n    };\n\n    addLabels = (element, options) => {\n        const { labelSelector } = this.props;\n        const {\n            radius,\n            pies,\n            textArcs,\n            period,\n        } = options;\n\n        element\n            .selectAll('text')\n            .data(pies)\n            .enter()\n            .append('text')\n            .attr('dy', '.35em')\n            .html(d => (`<tspan>${labelSelector(d.data)}</tspan>`))\n            .attr('transform', (d) => {\n                const pos = textArcs.centroid(d);\n                pos[0] = radius * 0.95 * (this.midAngle(d) < Math.PI ? 1 : -1);\n                return `translate(${pos})`;\n            })\n            .style('visibility', 'hidden')\n            .transition()\n            .delay((d, i) => i * period)\n            .style('visibility', 'visible')\n            .style('text-anchor', d => (this.midAngle(d) < Math.PI ? 'start' : 'end'))\n            .style('user-select', 'none');\n    }\n\n    addLines = (element, options) => {\n        const { labelSelector } = this.props;\n        const {\n            radius,\n            outerRadius,\n            colors,\n            pies,\n            arcs,\n            textArcs,\n            period,\n        } = options;\n\n        element\n            .selectAll('polyline')\n            .data(pies)\n            .enter()\n            .append('polyline')\n            .each((d) => {\n                // eslint-disable-next-line no-param-reassign\n                d.outerRadius = outerRadius - 10;\n            })\n            .transition()\n            .delay((d, i) => i * period)\n            .attr('points', (d) => {\n                const pos = textArcs.centroid(d);\n                pos[0] = radius * 0.95 * (this.midAngle(d) < Math.PI ? 1 : -1);\n                return [arcs.centroid(d), textArcs.centroid(d), pos];\n            })\n            .style('fill', 'none')\n            .style('stroke-width', `${2}px`)\n            .style('stroke', d => colors(labelSelector(d.data)));\n    }\n\n    redrawChart = () => {\n        const context = select(this.svg);\n        context.selectAll('*').remove();\n        this.drawChart();\n    }\n\n    drawChart = () => {\n        const {\n            boundingClientRect,\n            valueSelector,\n            data,\n            sideLengthRatio,\n            hideLabel,\n            colorScheme,\n            period,\n        } = this.props;\n\n        if (!boundingClientRect.width || !data || data.length === 0) {\n            return;\n        }\n\n        if (!boundingClientRect.width) {\n            return;\n        }\n\n        const { width, height } = boundingClientRect;\n\n        const context = this.setContext(data, width, height);\n        const slices = context.append('g').attr('class', 'slices');\n\n        let radius = (Math.min(width, height) / 2);\n\n        if (!hideLabel) {\n            radius -= 20;\n        }\n\n        const outerRadius = radius * 0.92;\n        const innerRadius = outerRadius - (outerRadius * sideLengthRatio);\n\n        const colors = scaleOrdinal().range(colorScheme);\n        const pies = pie()\n            .sort(null)\n            .value(valueSelector);\n\n        const textArcs = this.textArch(outerRadius, outerRadius);\n        const arcs = this.arch(outerRadius, innerRadius);\n\n        const options = {\n            radius,\n            outerRadius,\n            innerRadius,\n            colors,\n            pies,\n            arcs,\n            textArcs,\n            period,\n        };\n\n        this.addDropShadow(select(this.svg));\n        this.addPaths(slices, options);\n        if (!hideLabel) {\n            const labels = context.append('g').attr('class', 'labels');\n            const lines = context.append('g').attr('class', 'lines');\n            this.addLabels(labels, options);\n            this.addLines(lines, options);\n        }\n        this.addTransition(slices, arcs, period);\n    }\n\n    render() {\n        const {\n            className,\n            boundingClientRect: {\n                width,\n                height,\n            },\n        } = this.props;\n\n        const svgClassName = [\n            'donutchart',\n            className,\n        ].join(' ');\n\n        return (\n            <Fragment>\n                <Float>\n                    <div\n                        ref={(el) => { this.tooltip = el; }}\n                        className={styles.donutTooltip}\n                    />\n                </Float>\n                <svg\n                    style={{\n                        width,\n                        height,\n                    }}\n                    className={svgClassName}\n                    ref={(elem) => { this.svg = elem; }}\n                />\n            </Fragment>\n        );\n    }\n}\n\nexport default Responsive(DonutChart);\n","import React, {\n    Fragment,\n} from 'react';\nimport { select, event } from 'd3-selection';\nimport { scaleLinear, scaleOrdinal } from 'd3-scale';\nimport { schemePaired } from 'd3-scale-chromatic';\nimport { forceSimulation, forceLink, forceManyBody, forceCenter } from 'd3-force';\nimport { drag } from 'd3-drag';\nimport { extent } from 'd3-array';\nimport { voronoi } from 'd3-voronoi';\nimport { PropTypes } from 'prop-types';\nimport SvgSaver from 'svgsaver';\nimport { doesObjectHaveNoData } from '@togglecorp/fujs';\n\nimport Float from '../../View/Float';\nimport Responsive from '../../General/Responsive';\nimport { getStandardFilename } from '../../../utils/common';\n\nimport styles from './styles.scss';\n\nconst propTypes = {\n    /**\n     * Size of the parent element/component (passed by the Responsive hoc)\n     */\n    boundingClientRect: PropTypes.shape({\n        width: PropTypes.number,\n        height: PropTypes.number,\n    }).isRequired,\n    /**\n     * The data in the form of array of nodes and links\n     * Each node element must have an id, label and corresponding group\n     * Each link element is in the form of { source: sourceId, target: targetId value: number }\n     */\n    data: PropTypes.shape({\n        nodes: PropTypes.arrayOf(PropTypes.object),\n        links: PropTypes.arrayOf(PropTypes.object),\n    }),\n    /**\n     * Handle diagram save functionality\n     */\n    setSaveFunction: PropTypes.func,\n    /**\n     * Select a unique id for each node\n     */\n    idSelector: PropTypes.func.isRequired,\n    /**\n     * Select group of each node element\n     */\n    groupSelector: PropTypes.func,\n    /**\n     * Select the value for link\n     * The value of link is corresponding reflected on the width of link\n     */\n    valueSelector: PropTypes.func,\n    /**\n     * The radius of each voronoi circle\n     */\n    circleRadius: PropTypes.number,\n    /**\n     * Length of each link\n     */\n    distance: PropTypes.number,\n    /**\n     * if true, use voronoi interpolation\n     */\n    useVoronoi: PropTypes.bool,\n    /**\n     * Additional css classes passed from parent\n     */\n    className: PropTypes.string,\n    /**\n     * Array of colors as hex color codes\n     */\n    colorScheme: PropTypes.arrayOf(PropTypes.string),\n    /**\n     * Margins for the chart\n     */\n    margins: PropTypes.shape({\n        top: PropTypes.number,\n        right: PropTypes.number,\n        bottom: PropTypes.number,\n        left: PropTypes.number,\n    }),\n};\n\nconst defaultProps = {\n    data: {\n        nodes: [],\n        links: [],\n    },\n    setSaveFunction: () => {},\n    groupSelector: d => d.index,\n    valueSelector: () => 1,\n    circleRadius: 30,\n    useVoronoi: true,\n    className: '',\n    distance: 5,\n    colorScheme: schemePaired,\n    margins: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0,\n    },\n};\n\n/**\n * Represents the  network of nodes in force layout with many-body force.\n * Force directed graph helps to visualize connections between nodes in a network.\n * It can help to uncover relationships between groups as it naturally clusters well\n * connected nodes.\n *see <a href=\"https://github.com/d3/d3-force\">d3-force</a>\n */\nclass ForceDirectedGraph extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n        if (props.setSaveFunction) {\n            props.setSaveFunction(this.save);\n        }\n    }\n\n    componentDidMount() {\n        this.renderChart();\n        this.updateData(this.props);\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        const { data } = this.props;\n        if (nextProps.data !== data) {\n            this.updateData(nextProps);\n        }\n    }\n\n    componentDidUpdate() {\n        this.renderChart();\n    }\n\n    updateData = (props) => {\n        this.data = JSON.parse(JSON.stringify(props.data));\n    }\n\n    save = () => {\n        const svg = select(this.svg);\n        const svgsaver = new SvgSaver();\n        svgsaver.asSvg(svg.node(), `${getStandardFilename('forceddirectedgraph', 'graph')}.svg`);\n    }\n\n    renderChart() {\n        const {\n            boundingClientRect,\n            idSelector,\n            groupSelector,\n            valueSelector,\n            circleRadius,\n            colorScheme,\n            useVoronoi,\n            margins,\n            distance,\n        } = this.props;\n        const { data } = this;\n\n        const svg = select(this.svg);\n        svg.selectAll('*').remove();\n\n        if (!boundingClientRect.width) {\n            return;\n        }\n        if (!data || data.length === 0 || doesObjectHaveNoData(data)) {\n            return;\n        }\n        let { width, height } = boundingClientRect;\n        const {\n            top,\n            right,\n            bottom,\n            left,\n        } = margins;\n\n        const tooltip = select(this.tooltip);\n\n        width = width - left - right;\n        height = height - top - bottom;\n\n        const radius = Math.min(width, height) / 2;\n\n        const separation = scaleLinear()\n            .domain([1, 10])\n            .range([1, radius / 2]);\n\n        const group = svg\n            .append('g')\n            .attr('transform', `translate(${left}, ${top})`);\n\n        const color = scaleOrdinal().range(colorScheme);\n\n        const minmax = extent(data.links, valueSelector);\n        const scaledValues = scaleLinear().domain(minmax).range([1, 3]);\n\n        const voronois = voronoi()\n            .x(d => d.x)\n            .y(d => d.y)\n            .extent([[-10, -10], [width + 10, height + 10]]);\n\n        function recenterVoronoi(nodes) {\n            const shapes = [];\n            voronois.polygons(nodes).forEach((d) => {\n                if (!d.length) return;\n                const n = [];\n                d.forEach((c) => {\n                    n.push([c[0] - d.data.x, c[1] - d.data.y]);\n                });\n                n.data = d.data;\n                shapes.push(n);\n            });\n            return shapes;\n        }\n\n        const simulation = forceSimulation()\n            .force('link', forceLink().id(d => idSelector(d)).distance(separation(distance)))\n            .force('charge', forceManyBody())\n            .force('center', forceCenter(width / 2, height / 2));\n\n        function hideTooltip() {\n            tooltip.transition().style('display', 'none');\n        }\n\n        function dragstarted(d) {\n            hideTooltip();\n            if (!event.active) simulation.alphaTarget(0.3).restart();\n            d.fx = d.x;// eslint-disable-line\n            d.fy = d.y;// eslint-disable-line\n        }\n\n        function dragged(d) {\n            hideTooltip();\n            d.fx = event.x;// eslint-disable-line\n            d.fy = event.y;// eslint-disable-line\n        }\n\n        function dragended(d) {\n            hideTooltip();\n            if (!event.active) simulation.alphaTarget(0);\n            d.fx = null;// eslint-disable-line\n            d.fy = null;// eslint-disable-line\n        }\n\n        function mouseOverCircle(d) {\n            tooltip.html(`<span class=${styles.value}>${idSelector(d)}</span>`);\n            return tooltip\n                .transition()\n                .duration(100)\n                .style('display', 'inline-block');\n        }\n\n        function mouseMoveCircle() {\n            return tooltip\n                .style('top', `${event.pageY - 30}px`)\n                .style('left', `${event.pageX + 20}px`);\n        }\n\n        function mouseOutCircle() {\n            return tooltip\n                .transition()\n                .duration(100)\n                .style('display', 'none');\n        }\n\n        const link = group\n            .append('g')\n            .attr('class', `links ${styles.links}`)\n            .selectAll('line')\n            .data(data.links)\n            .enter()\n            .append('line')\n            .attr('stroke-width', d => scaledValues(valueSelector(d)));\n\n        const node = group\n            .selectAll('.nodes')\n            .data(data.nodes)\n            .enter()\n            .append('g')\n            .attr('class', `nodes ${styles.nodes}`)\n            .call(drag()\n                .on('start', dragstarted)\n                .on('drag', dragged)\n                .on('end', dragended))\n            .on('mouseover', mouseOverCircle)\n            .on('mousemove', mouseMoveCircle)\n            .on('mouseout', mouseOutCircle);\n\n        if (useVoronoi) {\n            node\n                .append('circle')\n                .attr('class', `circle ${styles.cirlce}`)\n                .attr('r', circleRadius)\n                .attr('fill', d => color(groupSelector(d)));\n\n            node\n                .append('circle')\n                .attr('r', 3)\n                .attr('fill', 'black');\n        } else {\n            node\n                .append('circle')\n                .attr('r', 5)\n                .attr('fill', d => color(groupSelector(d)));\n        }\n\n        function ticked() {\n            node.each((d) => {\n                d.x = Math.max(circleRadius, Math.min(width - circleRadius, d.x)); // eslint-disable-line\n                d.y = Math.max(circleRadius, Math.min(height - circleRadius, d.y)); // eslint-disable-line\n            });\n\n            link\n                .attr('x1', d => d.source.x)\n                .attr('y1', d => d.source.y)\n                .attr('x2', d => d.target.x)\n                .attr('y2', d => d.target.y);\n\n            if (useVoronoi) {\n                node\n                    .attr('transform', d => `translate(${d.x}, ${d.y})`)\n                    .attr('clip-path', d => `url(#clip-${d.index})`);\n\n                const clip = group\n                    .selectAll('clipPath')\n                    .data(recenterVoronoi(node.data()), d => d.data.index);\n\n                clip\n                    .enter()\n                    .append('clipPath')\n                    .attr('id', d => `clip-${d.data.index}`)\n                    .attr('class', 'clip');\n\n                clip\n                    .exit()\n                    .remove();\n\n                clip\n                    .selectAll('path')\n                    .remove();\n                clip\n                    .append('path')\n                    .attr('d', d => `M${d.join(',')}Z`);\n            } else {\n                node\n                    .attr('transform', d => `translate(${d.x}, ${d.y})`);\n            }\n        }\n\n        simulation\n            .nodes(data.nodes)\n            .on('tick', ticked);\n\n        simulation\n            .force('link')\n            .links(data.links);\n    }\n\n    render() {\n        const {\n            className,\n            boundingClientRect: {\n                width,\n                height,\n            },\n        } = this.props;\n\n        const svgClassName = [\n            'force-directed-graph',\n            styles.forceDirectedGraph,\n            className,\n        ].join(' ');\n\n        return (\n            <Fragment>\n                <svg\n                    className={svgClassName}\n                    ref={(elem) => { this.svg = elem; }}\n                    style={{\n                        width,\n                        height,\n                    }}\n                />\n                <Float>\n                    <div\n                        ref={(elem) => { this.tooltip = elem; }}\n                        className={styles.tooltip}\n                    />\n                </Float>\n            </Fragment>\n        );\n    }\n}\n\nexport default Responsive(ForceDirectedGraph);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { GoogleCharts } from 'google-charts';\nimport { _cs } from '@togglecorp/fujs';\n\nimport styles from './styles.scss';\n\nconst propTypes = {\n    /**\n     * Select a key for each data element\n     */\n    keySelector: PropTypes.func.isRequired,\n    /**\n     * Select the title for each element\n     */\n    titleSelector: PropTypes.func.isRequired,\n    /**\n     * Select children of each node\n     */\n    childSelector: PropTypes.func.isRequired,\n    /**\n     * Selected data element\n     */\n    value: PropTypes.array, // eslint-disable-line  react/forbid-prop-types\n    /**\n     * Hierarchical data element representing the organization structure\n     */\n    options: PropTypes.object, // eslint-disable-line  react/forbid-prop-types\n    /**\n     * if disabled no selection and mouseover events\n     */\n    disabled: PropTypes.bool,\n    /**\n     * if singleSelect only single element/node can be selected\n     */\n    singleSelect: PropTypes.bool,\n    /**\n     * if multiSelect multiple elements/nodes can be selected\n     */\n    multiSelect: PropTypes.bool,\n    /**\n     * onChange handler function\n     * this function is triggered when a selection is made\n     */\n    onChange: PropTypes.func,\n    /**\n     * Additional css classes passed from parent\n     */\n    className: PropTypes.string,\n};\nconst defaultProps = {\n    value: [],\n    options: [],\n    disabled: false,\n    singleSelect: false,\n    multiSelect: false,\n    onChange: () => [],\n    className: undefined,\n};\n\n/**\n * GoogleOrgChart provides a react component wrapper to google's Organization Chart.\n * For details: <a href=\"https://developers.google.com/chart/interactive/docs/gallery/orgchart\">Organization Chart</a>\n */\nclass GoogleOrgChart extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n        GoogleCharts.load(this.drawChart, { packages: ['orgchart'] });\n        this.mouseOverRow = undefined;\n    }\n\n    flattenData = (node, parentName) => {\n        const {\n            keySelector,\n            childSelector,\n            titleSelector,\n        } = this.props;\n\n        const key = keySelector(node);\n        const title = titleSelector(node);\n        const organs = childSelector(node);\n\n        const children = organs.map(organ => this.flattenData(organ, key));\n        const flattenedChildren = [].concat(...children);\n        return [\n            [{ v: key, f: title }, parentName, title],\n            ...flattenedChildren,\n        ];\n    }\n\n    mapSelectionToData = selection => (\n        selection.map((row) => {\n            const { row: selectedRow } = row;\n            const id = this.data.getValue(selectedRow, 0);\n            return { id };\n        }))\n\n    selectHandler = () => {\n        const {\n            singleSelect,\n            multiSelect,\n            value,\n            onChange,\n        } = this.props;\n\n        const selection = this.orgChart.getSelection();\n        let newSelection = [];\n        let selectedData = [];\n        if (selection.length === 0 && this.mouseOverRow) {\n            const { row } = this.mouseOverRow;\n            newSelection = value.filter(element => element.row !== row);\n            selectedData = this.mapSelectionToData(newSelection);\n        } else {\n            const [item] = selection;\n            if (singleSelect) {\n                newSelection = [item];\n            } else if (multiSelect) {\n                newSelection = [...value, item];\n            }\n            selectedData = this.mapSelectionToData(newSelection);\n        }\n        this.orgChart.setSelection(newSelection);\n        onChange(newSelection, selectedData);\n    };\n\n    mouseOverHandler = (row) => {\n        this.mouseOverRow = row;\n    }\n\n    drawChart = () => {\n        const {\n            disabled,\n            options,\n            value,\n        } = this.props;\n\n        const flatData = [['key', 'parent', 'title']]\n            .concat(this.flattenData(options, ''));\n        this.data = GoogleCharts.api.visualization.arrayToDataTable(flatData);\n        this.orgChart = new GoogleCharts.api.visualization.OrgChart(this.elem);\n\n        if (!disabled) {\n            GoogleCharts.api.visualization.events.addListener(this.orgChart, 'select', this.selectHandler);\n            GoogleCharts.api.visualization.events.addListener(this.orgChart, 'onmouseover', this.mouseOverHandler);\n        }\n\n        this.orgChart.draw(\n            this.data,\n            {\n                allowHtml: true,\n                nodeClass: styles.nodeClass,\n                selectedNodeClass: disabled ? styles.disabled : styles.selectedNodeClass,\n            },\n        );\n        this.orgChart.setSelection(value);\n    }\n\n    render() {\n        const { className } = this.props;\n\n        return (\n            <div\n                className={_cs(className, styles.orgChart)}\n                ref={(elem) => { this.elem = elem; }}\n            />\n        );\n    }\n}\n\nexport default GoogleOrgChart;\n","import React, {\n    PureComponent,\n    Fragment,\n} from 'react';\nimport { select, event } from 'd3-selection';\nimport { schemeSet3 } from 'd3-scale-chromatic';\nimport {\n    scaleOrdinal,\n    scaleLinear,\n    scaleBand,\n    scalePow,\n    scaleLog,\n} from 'd3-scale';\nimport {\n    axisLeft,\n    axisBottom,\n} from 'd3-axis';\nimport { max } from 'd3-array';\nimport { PropTypes } from 'prop-types';\nimport SvgSaver from 'svgsaver';\nimport { _cs, getColorOnBgColor } from '@togglecorp/fujs';\n\nimport Responsive from '../../General/Responsive';\nimport { getStandardFilename } from '../../../utils/common';\nimport Float from '../../View/Float';\n\nimport styles from './styles.scss';\n\nconst propTypes = {\n    /**\n     * Size of the parent element/component (passed by the Responsive hoc)\n     */\n    boundingClientRect: PropTypes.shape({\n        width: PropTypes.number,\n        height: PropTypes.number,\n    }).isRequired,\n    /**\n     * Handle save functionality\n     */\n    setSaveFunction: PropTypes.func,\n    /**\n     * Array of data elements each having a label and value\n     */\n    data: PropTypes.arrayOf(PropTypes.object),\n    /**\n     * Select the value of element\n     */\n    valueSelector: PropTypes.func.isRequired,\n    /**\n     * Select the label of element\n     */\n    labelSelector: PropTypes.func.isRequired,\n    /**\n     * Padding between two bars\n     */\n    bandPadding: PropTypes.number,\n    /**\n     * Select a color for each bar\n     */\n    colorSelector: PropTypes.func,\n    /**\n     * Format a value label displayed on top of bar\n     */\n    valueLabelFormat: PropTypes.func,\n    /**\n     * if true, show gridlines\n     */\n    showGridLines: PropTypes.bool,\n    /**\n     * if true, show tooltip\n     */\n    showTooltip: PropTypes.bool,\n    /**\n     * Modify the contents of tooltip\n     */\n    tooltipContent: PropTypes.func,\n    /**\n     * if true, tilt the labels on axis of chart\n     */\n    tiltLabels: PropTypes.bool,\n    /**\n     * Additional css classes passed from parent\n     */\n    className: PropTypes.string,\n    /**\n     * type of scaling used for bar length\n     * one of ['exponent', 'log', 'linear']\n     * see <a href=\"https://github.com/d3/d3-scale/blob/master/README.md\">d3.scale</a>\n     */\n    scaleType: PropTypes.string,\n    /**\n     * if exponent scaleType, set the current exponent to specified value\n     */\n    exponent: PropTypes.number,\n    /**\n     * Margins for the chart\n     */\n    margins: PropTypes.shape({\n        top: PropTypes.number,\n        right: PropTypes.number,\n        bottom: PropTypes.number,\n        left: PropTypes.number,\n    }),\n    /**\n     * Array of colors as hex color codes\n     */\n    colorScheme: PropTypes.arrayOf(PropTypes.string),\n};\n\nconst defaultProps = {\n    data: [],\n    setSaveFunction: () => {},\n    valueLabelFormat: undefined,\n    bandPadding: 0.2,\n    colorSelector: undefined,\n    showGridLines: false,\n    showTooltip: false,\n    tooltipContent: undefined,\n    className: '',\n    tiltLabels: false,\n    scaleType: 'linear',\n    exponent: 1,\n    margins: {\n        top: 24,\n        right: 24,\n        bottom: 24,\n        left: 72,\n    },\n    colorScheme: schemeSet3,\n};\n\n/**\n * Represent categorical data with horizontal bars with values proportional to the\n * length of each bar.\n */\nclass HorizontalBar extends PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n        if (props.setSaveFunction) {\n            props.setSaveFunction(this.save);\n        }\n    }\n\n    componentDidMount() {\n        this.drawChart();\n    }\n\n    componentDidUpdate() {\n        this.redrawChart();\n    }\n\n    getColor = (d, colors) => {\n        const {\n            labelSelector,\n            colorSelector,\n        } = this.props;\n\n        if (colorSelector) {\n            return colorSelector(d);\n        }\n        return colors(labelSelector(d));\n    }\n\n    save = () => {\n        const svg = select(this.svgRef);\n\n        const svgsaver = new SvgSaver();\n        svgsaver.asSvg(svg.node(), `${getStandardFilename('horizontalbar', 'graph')}.svg`);\n    }\n\n    powerOfTen = d => d / (10 ** Math.ceil(Math.log(d) / (Math.LN10))) === 1\n\n    addShadow = (svg) => {\n        const defs = svg.append('defs');\n\n        const filter = defs\n            .append('filter')\n            .attr('id', 'drop-shadow')\n            .attr('height', '130%');\n\n        filter\n            .append('feGaussianBlur')\n            .attr('in', 'SourceAlpha')\n            .attr('stdDeviation', 3)\n            .attr('result', 'ambientBlur');\n\n        filter\n            .append('feGaussianBlur')\n            .attr('in', 'SourceAlpha')\n            .attr('stdDeviation', 2)\n            .attr('result', 'castBlur');\n\n        filter\n            .append('feOffset')\n            .attr('in', 'castBlur')\n            .attr('dx', 3)\n            .attr('dy', 4)\n            .attr('result', 'offsetBlur');\n\n        filter\n            .append('feComposite')\n            .attr('in', 'ambientBlur')\n            .attr('in2', 'offsetBlur')\n            .attr('result', 'compositeShadow');\n\n        filter\n            .append('feComponentTransfer')\n            .append('feFuncA')\n            .attr('type', 'linear')\n            .attr('slope', 0.25);\n\n        const feMerge = filter.append('feMerge');\n        feMerge\n            .append('feMergeNode');\n        feMerge\n            .append('feMergeNode')\n            .attr('in', 'SourceGraphic');\n    }\n\n    addGrid = (group, x, y) => {\n        const {\n            valueLabelFormat,\n            boundingClientRect: {\n                width: containerWidth,\n                height: containerHeight,\n            },\n            margins: {\n                left,\n                top,\n                right,\n                bottom,\n            },\n        } = this.props;\n\n        const width = containerWidth - left - right;\n        const height = containerHeight - top - bottom;\n\n        const xAxis = axisBottom(x)\n            .tickSizeInner(-height)\n            .tickSizeOuter(0)\n            .tickPadding(10)\n            .tickFormat(valueLabelFormat);\n\n        const yAxis = axisLeft(y)\n            .tickSizeInner(-width)\n            .tickSizeOuter(0)\n            .tickPadding(10);\n\n        group\n            .append('g')\n            .attr('id', 'xaxis')\n            .attr('class', styles.grid)\n            .attr('transform', `translate(0, ${height})`)\n            .call(xAxis);\n\n        group\n            .append('g')\n            .attr('id', 'yaxis')\n            .attr('class', styles.grid)\n            .call(yAxis);\n    }\n\n    handleMouseOver = (d, node) => {\n        const {\n            showTooltip,\n            tooltipContent,\n            labelSelector,\n            valueSelector,\n            valueLabelFormat,\n        } = this.props;\n\n\n        select(node)\n            .style('filter', 'url(#drop-shadow)');\n\n        let defaultTooltipContent = '';\n        const value = valueLabelFormat ? valueLabelFormat(valueSelector(d)) : valueSelector(d);\n        const label = labelSelector(d);\n        if (showTooltip) {\n            defaultTooltipContent = `\n            <span class=\"${styles.label}\">\n                 ${label || ''}\n            </span>\n            <span class=\"${styles.value}\">\n                 ${value || ''}\n            </span>`;\n            const content = tooltipContent ? tooltipContent(d) : defaultTooltipContent;\n\n            this.tooltip.innerHTML = content;\n            const { style } = this.tooltip;\n            style.display = 'block';\n        }\n    }\n\n    handleMouseMove = () => {\n        const { style } = this.tooltip;\n        const { width, height } = this.tooltip.getBoundingClientRect();\n        // eslint-disable-next-line no-restricted-globals\n        const x = event.pageX;\n\n        // eslint-disable-next-line no-restricted-globals\n        const y = event.pageY;\n\n        const posX = x - (width / 2);\n        const posY = y - (height + 10);\n\n        style.top = `${posY}px`;\n        style.left = `${posX}px`;\n    }\n\n    handleMouseOut = (node) => {\n        const { style } = this.tooltip;\n        style.display = 'none';\n        select(node)\n            .style('filter', 'none');\n    }\n\n    redrawChart = () => {\n        const svg = select(this.svgRef);\n        svg.selectAll('*').remove();\n        this.drawChart();\n    }\n\n    drawChart = () => {\n        const {\n            data,\n            boundingClientRect,\n            valueSelector,\n            bandPadding,\n            scaleType,\n            exponent,\n            valueLabelFormat,\n            colorScheme,\n            labelSelector,\n            showGridLines,\n            margins,\n            tiltLabels,\n        } = this.props;\n\n        if (!boundingClientRect.width || !data || data.length === 0) {\n            return;\n        }\n\n        const {\n            width: containerWidth,\n            height: containerHeight,\n        } = boundingClientRect;\n\n        const {\n            top = 0,\n            right = 0,\n            bottom = 0,\n            left = 0,\n        } = margins;\n\n        const width = containerWidth - left - right;\n        const height = containerHeight - top - bottom;\n\n\n        if (width < 0) return;\n        if (height < 0) return;\n\n        const group = select(this.svgRef)\n            .append('g')\n            .attr('transform', `translate(${left}, ${top})`);\n\n        const maxValue = max(data, d => valueSelector(d));\n\n        let x = scaleLinear()\n            .range([0, width])\n            .domain([0, maxValue]);\n\n        if (scaleType === 'log') {\n            x = scaleLog()\n                .range([0, width])\n                .clamp(true)\n                .domain([0.1, maxValue]);\n        } else if (scaleType === 'exponent') {\n            x = scalePow()\n                .exponent([exponent])\n                .range([0, width])\n                .clamp(true)\n                .domain([0, maxValue]);\n        }\n\n        const y = scaleBand()\n            .rangeRound([height, 0])\n            .domain(data.map(d => labelSelector(d)))\n            .padding(bandPadding);\n\n        const colors = scaleOrdinal().range(colorScheme);\n\n        this.addShadow(group);\n\n        if (showGridLines) {\n            this.addGrid(group, x, y);\n        } else {\n            group\n                .append('g')\n                .attr('id', 'xaxis')\n                .attr('class', `x-axis ${styles.xAxis}`)\n                .attr('transform', `translate(0, ${height})`)\n                .call(axisBottom(x));\n\n            group\n                .append('g')\n                .attr('id', 'yaxis')\n                .attr('class', `y-axis ${styles.yAxis}`)\n                .call(axisLeft(y));\n        }\n\n        if (tiltLabels) {\n            group\n                .select('#xaxis')\n                .selectAll('text')\n                .attr('transform', 'rotate(-45)')\n                .style('text-anchor', 'end');\n        }\n\n        const groups = group\n            .selectAll('.bar')\n            .data(data)\n            .enter()\n            .append('g')\n            .attr('class', 'bar');\n\n        const bars = groups\n            .append('rect')\n            .attr('x', 0)\n            .attr('y', d => y(labelSelector(d)))\n            .attr('height', y.bandwidth())\n            .style('fill', d => this.getColor(d, colors))\n            .style('cursor', 'pointer')\n            .on('mouseover', (d, i, nodes) => this.handleMouseOver(d, nodes[i]))\n            .on('mousemove', this.handleMouseMove)\n            .on('mouseout', (d, i, nodes) => this.handleMouseOut(nodes[i]));\n\n        bars\n            .transition()\n            .duration(750)\n            .attr('width', d => x(valueSelector(d)));\n\n        group\n            .selectAll('.x-axis')\n            .selectAll('.tick line')\n            .style('visibility', 'hidden');\n\n        group\n            .selectAll('.y-axis')\n            .selectAll('.tick line')\n            .style('visibility', 'hidden');\n\n        groups\n            .append('text')\n            .attr('x', d => x(valueSelector(d)))\n            .attr('y', d => y(labelSelector(d)) + (y.bandwidth() / 2))\n            .attr('dy', '.35em')\n            .attr('text-anchor', 'end')\n            .style('fill', 'none')\n            .transition()\n            .delay(750)\n            .text(d => (valueLabelFormat ? valueLabelFormat(valueSelector(d)) : valueSelector(d)))\n            .on('end', (d, i, nodes) => {\n                const barWidth = bars.nodes()[i].width.baseVal.value || 0;\n                const textWidth = nodes[i].getComputedTextLength() || 0;\n                const longText = textWidth > barWidth;\n                const fillColor = longText ? '#000' : getColorOnBgColor(this.getColor(d, colors));\n                const newX = longText ? (barWidth + textWidth) : (barWidth);\n                select(nodes[i])\n                    .attr('x', newX)\n                    .style('fill', fillColor);\n            });\n\n        if (scaleType === 'log') {\n            group\n                .select('#xaxis')\n                .selectAll('.tick text')\n                .text(null)\n                .filter(this.powerOfTen)\n                .text(10)\n                .append('tspan')\n                .attr('dy', '-.7em')\n                .text(d => Math.round(Math.log(d) / Math.LN10));\n        }\n    }\n\n    render() {\n        const { className: classNameFromProps } = this.props;\n\n        const className = _cs(\n            'horizontal-bar-chart',\n            styles.horizontalBar,\n            classNameFromProps,\n        );\n\n        const tooltipClassName = _cs(\n            'tooltip',\n            styles.tooltip,\n        );\n\n        return (\n            <Fragment>\n                <svg\n                    className={className}\n                    ref={(elem) => { this.svgRef = elem; }}\n                />\n                <Float>\n                    <div\n                        className={tooltipClassName}\n                        ref={(elem) => { this.tooltip = elem; }}\n                    />\n                </Float>\n            </Fragment>\n        );\n    }\n}\n\nexport default Responsive(HorizontalBar);\n","/**\n * @author tnagorra <weathermist@gmail.com>\n */\n\nimport update from 'immutability-helper';\n\n// Auto vivification\nupdate.extend(\n    '$auto',\n    (value, object) => update(object || {}, value),\n);\nupdate.extend(\n    '$autoArray',\n    (value, object) => update(object || [], value),\n);\nupdate.extend(\n    '$autoPush',\n    (value, object) => (object || []).concat(value.length ? value : []),\n);\nupdate.extend(\n    '$autoUnshift',\n    (value, object) => (value.length ? value : []).concat(object || []),\n);\n\n// Control\nupdate.extend(\n    '$if',\n    (value, object) => {\n        if (value[0]) {\n            return update(object, value[1]);\n        }\n        return value[2] ? update(object, value[2]) : object;\n    },\n);\nupdate.extend(\n    '$bulk',\n    (value, object) => value.reduce(\n        (acc, val) => update(acc, val),\n        object,\n    ),\n);\n\n// Array\nupdate.extend(\n    '$filter',\n    (value, object) => {\n        const filtered = object.slice().filter(value);\n        if (filtered.length === object.length) {\n            return object;\n        }\n        return filtered;\n    },\n);\nupdate.extend(\n    '$sort',\n    (value, object) => object.slice().sort(value),\n);\nupdate.extend(\n    '$unique',\n    (value, object) => {\n        const memory = {};\n        const newArr = [];\n        // FIXME: use unique from common\n        object.forEach((o) => {\n            const id = value(o);\n            if (!memory[id]) {\n                memory[id] = true;\n                newArr.push(o);\n            }\n        });\n        // for efficiency\n        if (newArr.length === object.length) {\n            return object;\n        }\n        return newArr;\n    },\n);\nupdate.extend(\n    '$removeFromIndex',\n    (indices, lst) => {\n        if (indices.length <= 0 || lst.length <= 0) {\n            return lst;\n        }\n\n        const newLst = [...lst];\n        const newIndices = indices.sort((a, b) => b - a);\n        newIndices.forEach((index) => {\n            newLst.splice(index, 1);\n        });\n        return newLst;\n    },\n);\nupdate.extend(\n    '$replaceOrPush',\n    ([finder, modifier], lst) => {\n        const newLst = [...lst];\n        const index = newLst.findIndex(finder);\n        if (index === -1) {\n            return [...newLst, modifier()];\n        }\n        newLst.splice(index, 1, modifier(newLst[index]));\n        return newLst;\n    },\n);\n\n\n// Object\nupdate.extend('$unset', (keysToRemove, original) => {\n    const copy = { ...original };\n    keysToRemove.forEach((key) => {\n        delete copy[key];\n    });\n    return copy;\n});\n\nupdate.extend('$setDefault', (value, original) => {\n    if (original === undefined) {\n        return value;\n    }\n    return original;\n});\n\nupdate.extend('$setIfDefined', (value, original) => {\n    if (value === undefined) {\n        return original;\n    }\n    return value;\n});\n\nupdate.extend('$mergeIfDefined', (obj, original) => {\n    const copy = { ...original };\n    Object.keys(obj).forEach((key) => {\n        if (obj[key] !== undefined) {\n            copy[key] = obj[key];\n        }\n    });\n    return copy;\n});\n\nupdate.extend('$toggleElement', (value, object) => {\n    const index = object.indexOf(value);\n    if (index >= 0) {\n        const newObject = [...object];\n        newObject.splice(index, 1);\n        return newObject;\n    }\n\n    return [...object, value];\n});\n\nexport default update;\n","import React from 'react';\nimport { select, event } from 'd3-selection';\nimport { linkVertical } from 'd3-shape';\nimport { hierarchy, tree } from 'd3-hierarchy';\nimport { zoom } from 'd3-zoom';\nimport { PropTypes } from 'prop-types';\nimport SvgSaver from 'svgsaver';\nimport { doesObjectHaveNoData } from '@togglecorp/fujs';\n\nimport Icon from '../../General/Icon';\nimport Responsive from '../../General/Responsive';\nimport update from '../../../utils/immutable-update';\nimport { getStandardFilename } from '../../../utils/common';\n\nimport styles from './styles.scss';\n\nconst propTypes = {\n    /**\n     * Width and height of the container\n     */\n    boundingClientRect: PropTypes.shape({\n        width: PropTypes.number,\n        height: PropTypes.number,\n    }).isRequired,\n    /**\n     * Function to pass save function to parent component\n     */\n    setSaveFunction: PropTypes.func,\n    /**\n     * Selected values (nodes)\n     */\n    value: PropTypes.array, // eslint-disable-line\n    /**\n     * Hierarchical data to be visualized\n     */\n    data: PropTypes.shape({\n        name: PropTypes.string,\n    }),\n    /**\n     * Accessor function to return array of data representing the children\n     */\n    childSelector: PropTypes.func,\n    /**\n     * Access the individual label of each data element\n     */\n    labelSelector: PropTypes.func,\n    /**\n     * Access the id of each data element\n     */\n    idSelector: PropTypes.func,\n    /**\n     * Handle selection of nodes\n     */\n    onSelection: PropTypes.func,\n    /**\n     * If true no click events on nodes\n     */\n    /**\n     * Cluster minimum layout's node size\n     */\n    nodeSize: PropTypes.shape({\n        minNodeWidth: PropTypes.number,\n        minNodeHeight: PropTypes.number,\n    }),\n    /**\n     * Additional class name for styling\n     */\n    className: PropTypes.string,\n    /**\n     *  Margin object with properties for the four sides(clockwise from top)\n     */\n    margins: PropTypes.shape({\n        top: PropTypes.number,\n        right: PropTypes.number,\n        bottom: PropTypes.number,\n        left: PropTypes.number,\n    }),\n};\n\nconst defaultProps = {\n    className: '',\n    value: [],\n    data: {},\n    setSaveFunction: () => {},\n    childSelector: d => d.children,\n    labelSelector: d => d.name,\n    idSelector: d => d.id,\n    nodeSize: {\n        minNodeWidth: 150,\n        minNodeHeight: 50,\n    },\n    onSelection: () => [],\n    disabled: false,\n    margins: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0,\n    },\n};\n\nconst rectWidth = 30;\n\n/**\n * Organigram shows the structure and relationships of nodes as a hierarchy.\n */\nclass OrgChart extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n        if (props.setSaveFunction) {\n            props.setSaveFunction(this.save);\n        }\n        Object.assign(this, { x: 0, y: 0, k: 1 });\n        const { value = [] } = props;\n        this.state = {\n            selected: value,\n        };\n    }\n\n    componentDidMount() {\n        this.drawChart();\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        const { value } = this.props;\n        if (value !== nextProps.value) {\n            const { value: newValue = [] } = nextProps;\n            this.setState({ selected: newValue });\n        }\n    }\n\n    componentDidUpdate() {\n        this.redrawChart();\n    }\n\n    getNodeClassName = (d) => {\n        const classNames = [\n            'node',\n            styles.node,\n        ];\n\n        if (d.children) {\n            classNames.push('node-internal');\n        } else {\n            classNames.push('node-leaf');\n        }\n\n        const isActive = this.isSelected(d.data);\n        if (isActive) {\n            classNames.push(styles.active);\n            classNames.push('active');\n        }\n\n        return classNames.join(' ');\n    }\n\n    save = () => {\n        const svg = select(this.svg);\n        const svgsaver = new SvgSaver();\n        svgsaver.asSvg(svg.node(), `${getStandardFilename('orgchart', 'graph')}.svg`);\n    }\n\n    addOrRemoveSelection = (item) => {\n        const isSelected = this.isSelected(item.data);\n        if (isSelected) {\n            this.removeSelection(item);\n        } else {\n            this.addSelection(item);\n        }\n    };\n\n    addSelection = (item) => {\n        const newSelection = this.props.idSelector(item.data);\n\n        const settings = {\n            $bulk: [\n                { $push: [newSelection] },\n                { $unique: selection => selection },\n            ],\n        };\n        this.setState((prevState) => {\n            const selected = update(prevState.selected, settings);\n            return { selected };\n        });\n\n        this.props.onSelection(this.state.selected);\n    }\n\n    removeSelection = (item) => {\n        const index = this.findIndexInSelectedList(item.data);\n\n        const settings = {\n            $splice: [[index, 1]],\n        };\n        this.setState((prevState) => {\n            const selected = update(prevState.selected, settings);\n            return { selected };\n        });\n        this.props.onSelection(this.state.selected);\n    }\n\n    findIndexInSelectedList = (item) => {\n        const itemId = this.props.idSelector(item);\n        return this.state.selected.findIndex(e => e === itemId);\n    }\n\n\n    isSelected = (item) => {\n        const indexInSelection = this.findIndexInSelectedList(item);\n        return indexInSelection !== -1;\n    };\n\n    drawChart = () => {\n        const {\n            boundingClientRect,\n            data,\n            childSelector,\n            labelSelector,\n            disabled,\n            nodeSize,\n            margins,\n        } = this.props;\n\n        const svg = select(this.svg);\n        if (!boundingClientRect.width) {\n            return;\n        }\n\n        if (!data || data.length === 0 || doesObjectHaveNoData(data)) {\n            return;\n        }\n\n        let { width, height } = boundingClientRect;\n        const {\n            top,\n            right,\n            bottom,\n            left,\n        } = margins;\n\n        width = width - left - right;\n        height = height - top - bottom;\n\n        const group = svg\n            .attr('width', width + left + right)\n            .attr('height', height + top + bottom)\n            .call(zoom().on('zoom', () => {\n                const { x, y, k } = event.transform;\n                Object.assign(this, { x, y, k });\n                group\n                    .attr('transform', `translate(${x + left + (width / 2)}, ${top + rectWidth + y}) scale(${k})`);\n            }))\n            .append('g')\n            .attr(\n                'transform',\n                `translate(\n                    ${this.x + left + (width / 2)},\n                    ${top + rectWidth + this.y}) scale(${this.k}\n                )`,\n            );\n\n        const root = hierarchy(data, childSelector);\n\n        const widthPerTreeLeaves = width / root.leaves().length;\n        const heightPerTreeDepth = height / root.height;\n        const { minNodeWidth, minNodeHeight } = nodeSize;\n        const nodeWidth = widthPerTreeLeaves < minNodeWidth\n            ? minNodeWidth : widthPerTreeLeaves;\n        const nodeHeight = heightPerTreeDepth < minNodeHeight\n            ? minNodeHeight : heightPerTreeDepth - rectWidth;\n\n        const treemap = tree()\n            .nodeSize([nodeWidth, nodeHeight])\n            .separation((a, b) => (a.parent === b.parent ? 1 : 1.25));\n        const treeData = treemap(root);\n        const link = linkVertical()\n            .x(d => d.x)\n            .y(d => d.y);\n\n        const linkClassName = `${styles.link} link`;\n        group\n            .selectAll('.link')\n            .data(treeData.links())\n            .enter()\n            .append('path')\n            .attr('class', linkClassName)\n            .attr('d', link);\n\n        const nodes = group\n            .selectAll('.node')\n            .data(treeData.descendants())\n            .enter()\n            .append('g')\n            .attr('class', this.getNodeClassName)\n            .attr('transform', d => `translate(${d.x}, ${d.y})`);\n\n        nodes\n            .append('rect')\n            .style('cursor', 'pointer');\n\n        nodes\n            .append('text')\n            .attr('dy', '.35em')\n            .style('text-anchor', 'middle')\n            .style('pointer-events', 'none')\n            .text(d => labelSelector(d.data));\n\n        const boxPadding = {\n            x: 10,\n            y: 6,\n        };\n        const getBBox = d => select(d).node().parentNode.getBBox();\n        nodes\n            .selectAll('rect')\n            .attr('width', (d, i, groups) => getBBox(groups[i]).width + (boxPadding.x * 2))\n            .attr('height', (d, i, groups) => getBBox(groups[i]).height + (boxPadding.y * 2))\n            .attr('x', (d, i, groups) => getBBox(groups[i]).x - boxPadding.x)\n            .attr('y', (d, i, groups) => getBBox(groups[i]).y - boxPadding.y);\n\n        if (!disabled) {\n            nodes\n                .selectAll('rect')\n                .on('click', (item) => {\n                    this.addOrRemoveSelection(item);\n                });\n        }\n    }\n\n    redrawChart = () => {\n        const svg = select(this.svg);\n        svg.selectAll('*').remove();\n        this.drawChart();\n    }\n\n    render() {\n        const { className } = this.props;\n\n        const containerClassName = [\n            // for internal styling\n            styles.orgChart,\n\n            // global class name, for external override\n            'org-chart',\n\n            className,\n        ].join(' ');\n\n        const chartClassName = [\n            styles.chart,\n            'chart',\n        ].join(' ');\n\n        const infoIconClassName = [\n            styles.infoIcon,\n            'info-icon',\n        ].join(' ');\n\n        return (\n            <div className={containerClassName}>\n                <Icon\n                    className={infoIconClassName}\n                    name=\"info\"\n                    title=\"Use mouse to pan and zoom\"\n                />\n                <svg\n                    className={chartClassName}\n                    ref={(elem) => { this.svg = elem; }}\n                />\n            </div>\n        );\n    }\n}\n\nexport default Responsive(OrgChart);\n","import React, {\n    PureComponent,\n    Fragment,\n} from 'react';\nimport { select, event } from 'd3-selection';\nimport { linkVertical } from 'd3-shape';\nimport { hierarchy, tree } from 'd3-hierarchy';\nimport { zoom } from 'd3-zoom';\nimport { PropTypes } from 'prop-types';\nimport { getColorOnBgColor, doesObjectHaveNoData } from '@togglecorp/fujs';\n\nimport Icon from '../../General/Icon';\nimport Responsive from '../../General/Responsive';\n\nimport styles from './styles.scss';\n\nconst propTypes = {\n    /**\n     * Hierarchical data structure that can be computed to form a hierarchical layout\n     * <a href=\"https://github.com/d3/d3-hierarchy\">d3-hierarchy</a>\n     */\n    data: PropTypes.shape({\n        name: PropTypes.string,\n    }),\n    /**\n     * Size of the parent element/component (passed by the Responsive hoc)\n     */\n    boundingClientRect: PropTypes.shape({\n        width: PropTypes.number,\n        height: PropTypes.number,\n    }).isRequired,\n    /**\n     * Selected data element\n     */\n    value: PropTypes.string,\n    /**\n     * Accessor function to return array of data representing the children\n     */\n    childrenSelector: PropTypes.func,\n    /**\n     * Access the individual label of each data element\n     */\n    labelSelector: PropTypes.func.isRequired,\n    /**\n     * Access the id of each data element\n     */\n    idSelector: PropTypes.func.isRequired,\n    /**\n     * Handle selection of nodes\n     */\n    onSelection: PropTypes.func,\n    /**\n     * Cluster layout's node size\n     * <a href=\"https://github.com/d3/d3-hierarchy#cluster_nodeSize\">nodeSize</a>\n     */\n    nodeSize: PropTypes.arrayOf(PropTypes.number),\n    /**\n     * if true no click events on nodes\n     */\n    disabled: PropTypes.bool,\n    /**\n     *  Default color for nodes\n     */\n    fillColor: PropTypes.string,\n    /**\n     * Nodes color when selected\n     */\n    selectColor: PropTypes.string,\n    /**\n     * Additional class name for styling\n     */\n    className: PropTypes.string,\n    /**\n     *  Margin object with properties for the four sides (clockwise from top)\n     */\n    margins: PropTypes.shape({\n        top: PropTypes.number,\n        right: PropTypes.number,\n        bottom: PropTypes.number,\n        left: PropTypes.number,\n    }),\n};\n\nconst defaultProps = {\n    data: [],\n    value: undefined,\n    childrenSelector: d => d.children,\n    onSelection: () => {},\n    nodeSize: [150, 300],\n    disabled: false,\n    fillColor: '#ffffff',\n    selectColor: '#afeeee',\n    className: '',\n    margins: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0,\n    },\n};\n\nconst rectWidth = 30;\n\n/**\n * Organigram shows the structure and relationships of nodes as a hierarchy.\n */\nclass Organigram extends PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n        Object.assign(this, { x: 0, y: 0, k: 1 });\n    }\n\n    state = {\n        selected: this.props.value,\n    };\n\n    componentDidMount() {\n        this.drawChart();\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        const { value } = this.props;\n        if (value !== nextProps.value) {\n            this.setState({\n                selected: nextProps.value,\n            });\n        }\n    }\n\n    componentDidUpdate() {\n        this.redrawChart();\n    }\n\n    setContext = (width, height, margins) => {\n        const {\n            top,\n            left,\n        } = margins;\n\n        const group = select(this.svg)\n            .call(zoom().on('zoom', () => {\n                const { x, y, k } = event.transform;\n                Object.assign(this, { x, y, k });\n                group\n                    .attr('transform', `translate(${x + left + (width / 2)}, ${top + rectWidth + y}) scale(${k})`);\n            }))\n            .append('g')\n            .attr('transform',\n                `translate(${this.x + left + (width / 2)}, ${top + rectWidth + this.y}) scale(${this.k})`);\n\n        return group;\n    }\n\n    addDropShadow = (svg) => {\n        const defs = svg.append('defs');\n\n        const filter = defs\n            .append('filter')\n            .attr('id', 'drop-shadow')\n            .attr('height', '130%');\n\n        filter\n            .append('feGaussianBlur')\n            .attr('in', 'SourceAlpha')\n            .attr('stdDeviation', 2)\n            .attr('result', 'blur');\n\n        filter\n            .append('feOffset')\n            .attr('in', 'blur')\n            .attr('dx', 3)\n            .attr('dy', 3)\n            .attr('result', 'offsetBlur');\n\n        filter\n            .append('feFlood')\n            .attr('flood-color', '#e0e0e0')\n            .attr('flood-opacity', 1)\n            .attr('result', 'offsetColor');\n\n        filter\n            .append('feComposite')\n            .attr('in', 'offsetColor')\n            .attr('in2', 'offsetBlur')\n            .attr('operator', 'in')\n            .attr('result', 'offsetBlur');\n\n        const feMerge = filter.append('feMerge');\n\n        feMerge\n            .append('feMergeNode')\n            .attr('in', 'offsetBlur');\n        feMerge\n            .append('feMergeNode')\n            .attr('in', 'SourceGraphic');\n    }\n\n    toggleSelection = (data) => {\n        const isSelected = this.isSelected(data);\n        if (isSelected) {\n            this.removeSelection();\n        } else {\n            this.addSelection(data);\n        }\n    }\n\n    addSelection = (data) => {\n        const { idSelector } = this.props;\n\n        const newSelection = idSelector(data);\n        this.setState({\n            selected: newSelection,\n        });\n\n        this.props.onSelection(newSelection);\n    }\n\n    removeSelection = () => {\n        this.setState({\n            selected: undefined,\n        }, () => {\n            this.props.onSelection(undefined);\n        });\n    }\n\n    isSelected = data => this.props.idSelector(data) === this.state.selected;\n\n    colorExtractor = (item) => {\n        const {\n            selectColor,\n            fillColor,\n        } = this.props;\n\n        const isSelected = this.isSelected(item.data);\n        return isSelected ? selectColor : fillColor;\n    }\n\n    redrawChart = () => {\n        const svg = select(this.svg);\n        svg.selectAll('*').remove();\n        this.drawChart();\n    }\n\n    drawChart = () => {\n        const {\n            data,\n            boundingClientRect,\n            childrenSelector,\n            labelSelector,\n            nodeSize,\n            disabled,\n            margins,\n        } = this.props;\n\n        let {\n            width,\n            height,\n        } = boundingClientRect;\n\n        const {\n            top,\n            right,\n            bottom,\n            left,\n        } = margins;\n\n        width = width - left - right;\n        height = height - top - bottom;\n\n        const {\n            setContext,\n            colorExtractor,\n            addDropShadow,\n            toggleSelection,\n        } = this;\n\n        if (!boundingClientRect.width || doesObjectHaveNoData(data)) {\n            return;\n        }\n\n        addDropShadow(select(this.svg));\n        const group = setContext(width, height, margins);\n        const treemap = tree()\n            .nodeSize(nodeSize)\n            .separation((a, b) => (a.parent === b.parent ? 1 : 1.5));\n\n        const root = hierarchy(data, childrenSelector);\n        const treeData = treemap(root);\n        const links = treeData.links();\n        const points = treeData.descendants();\n        const link = linkVertical()\n            .x(d => d.x)\n            .y(d => d.y);\n\n        group\n            .selectAll('.link')\n            .data(links)\n            .enter()\n            .append('path')\n            .attr('class', 'link')\n            .attr('fill', 'none')\n            .attr('stroke', '#ccc')\n            .attr('d', link);\n\n        const node = group\n            .selectAll('.node')\n            .data(points)\n            .enter()\n            .append('g')\n            .attr('class', d => `node ${d.children ? 'node--internal' : 'node-leaf'}`)\n            .attr('transform', d => `translate(${d.x}, ${d.y})`);\n\n        node\n            .append('rect')\n            .attr('class', 'box')\n            .attr('rx', 3)\n            .attr('ry', 3)\n            .style('fill', colorExtractor)\n            .style('stroke', '#bdbdbd')\n            .style('filter', 'url(#drop-shadow)')\n            .style('cursor', 'pointer');\n\n        node\n            .append('text')\n            .attr('dy', '.35em')\n            .style('text-anchor', 'middle')\n            .style('pointer-events', 'none')\n            .text(d => labelSelector(d.data))\n            .style('fill', d => getColorOnBgColor(colorExtractor(d)));\n\n        const boxPadding = 10;\n\n        node\n            .selectAll('.box')\n            .attr('width', (d, i, nodes) => select(nodes[i]).node().parentNode.getBBox().width + boxPadding)\n            .attr('height', (d, i, nodes) => select(nodes[i]).node().parentNode.getBBox().height + boxPadding)\n            .attr('x', (d, i, nodes) => select(nodes[i]).node().parentNode.getBBox().x - (boxPadding / 2))\n            .attr('y', (d, i, nodes) => select(nodes[i]).node().parentNode.getBBox().y - (boxPadding / 2));\n\n        if (!disabled) {\n            node\n                .selectAll('.box')\n                .on('click', (cell) => {\n                    toggleSelection(cell.data);\n                });\n        }\n    }\n\n    render() {\n        const {\n            className,\n            boundingClientRect: {\n                width,\n                height,\n            },\n        } = this.props;\n\n        const svgClassName = [\n            'organigram',\n            styles.organigram,\n            className,\n        ].join(' ');\n\n        return (\n            <Fragment>\n                <svg\n                    ref={(elem) => { this.svg = elem; }}\n                    className={svgClassName}\n                    style={{\n                        width,\n                        height,\n                    }}\n                />\n                <Icon\n                    className={styles.info}\n                    name=\"info\"\n                    title=\"Use mouse to pan and zoom\"\n                />\n            </Fragment>\n        );\n    }\n}\n\nexport default Responsive(Organigram);\n","import React, {\n    PureComponent,\n    Fragment,\n} from 'react';\nimport { select } from 'd3-selection';\nimport { PropTypes } from 'prop-types';\nimport SvgSaver from 'svgsaver';\nimport { schemePaired } from 'd3-scale-chromatic';\nimport {\n    scalePoint,\n    scaleLinear,\n    scaleOrdinal,\n} from 'd3-scale';\nimport { keys } from 'd3-collection';\nimport { extent } from 'd3-array';\nimport { axisLeft } from 'd3-axis';\nimport {\n    brushY,\n    brushSelection,\n} from 'd3-brush';\nimport { line } from 'd3-shape';\n\nimport Responsive from '../../General/Responsive';\n\nimport { getStandardFilename } from '../../../utils/common';\nimport styles from './styles.scss';\n\nconst propTypes = {\n    /**\n     * Size of the parent element/component (passed by the Responsive hoc)\n     */\n    boundingClientRect: PropTypes.shape({\n        width: PropTypes.number,\n        height: PropTypes.number,\n    }).isRequired,\n    /**\n     * Data to be visualized. It consists of array of categorical data grouped\n     * together.\n     * Example: [{ name: \"AMC Ambassador Brougham\", economy (mpg): 13, cylinders: 8 }, ...]\n     * For each variable an axis is created and each item is represented by a line\n     */\n    data: PropTypes.arrayOf(\n        PropTypes.shape({\n            name: PropTypes.string,\n        }).isRequired,\n    ).isRequired,\n    /**\n     * Handler function to save the generated svg\n     */\n    setSaveFunction: PropTypes.func,\n    /**\n     * Property keys to be ignored when creating axis\n     */\n    ignoreProperties: PropTypes.arrayOf(PropTypes.string),\n    /**\n     * The label name of group\n     */\n    labelSelector: PropTypes.func.isRequired,\n    /**\n     * Color selector for each group\n     */\n    colorSelector: PropTypes.func,\n    /**\n     * Array of colors as hex color codes\n     */\n    colorScheme: PropTypes.arrayOf(PropTypes.string),\n    /**\n     * Additional css classes passed from parent\n     */\n    className: PropTypes.string,\n    /**\n     * Margins for the chart\n     */\n    margins: PropTypes.shape({\n        top: PropTypes.number,\n        right: PropTypes.number,\n        bottom: PropTypes.number,\n        left: PropTypes.number,\n    }),\n};\n\nconst defaultProps = {\n    setSaveFunction: () => {},\n    colorScheme: schemePaired,\n    ignoreProperties: [],\n    colorSelector: undefined,\n    className: '',\n    margins: {\n        top: 40,\n        right: 10,\n        bottom: 20,\n        left: 10,\n    },\n};\n/**\n * Parallel Coordinates visualization is used to compare multivariate numeric data.\n * It can be used to view relationships between variables.\n */\nclass ParallelCoordinates extends PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n        if (props.setSaveFunction) {\n            props.setSaveFunction(this.save);\n        }\n    }\n\n    componentDidMount() {\n        this.drawChart();\n    }\n\n    componentDidUpdate() {\n        this.redrawChart();\n    }\n\n    setContext = (width, height, margins) => {\n        const {\n            top,\n            left,\n        } = margins;\n\n        return select(this.svg)\n            .append('g')\n            .attr('transform', `translate(${left}, ${top})`);\n    }\n\n    save = () => {\n        const svg = select(this.svg);\n        const svgsaver = new SvgSaver();\n        svgsaver.asSvg(svg.node(), `${getStandardFilename('parallel-coordiantes', 'graph')}.svg`);\n    }\n\n    init = () => {\n        const {\n            margins,\n            boundingClientRect,\n            data,\n            ignoreProperties,\n            colorScheme,\n        } = this.props;\n\n        let {\n            width,\n            height,\n        } = boundingClientRect;\n\n        const {\n            top,\n            right,\n            bottom,\n            left,\n        } = margins;\n\n        width = width - left - right;\n        height = height - top - bottom;\n        this.dimensions = keys(data[0]).filter(d => !ignoreProperties.includes(d));\n        this.x = scalePoint()\n            .domain(this.dimensions)\n            .range([0, width])\n            .padding(0.1);\n        this.y = {};\n        this.dimensions\n            .forEach((d) => {\n                this.y[d] = scaleLinear()\n                    .domain(extent(data, value => value[d]))\n                    .range([height, 0]);\n                this.y[d].brush = brushY()\n                    .extent([[-10, this.y[d].range()[1]], [10, this.y[d].range()[0]]])\n                    .on('brush', this.brush);\n            });\n        this.colors = scaleOrdinal()\n            .range(colorScheme);\n    }\n\n    path = (d) => {\n        const data = this.dimensions.map(p => [this.x(p), this.y[p](d[p])]);\n        const lineGenerator = line()\n            .x(t => t[0])\n            .y(t => t[1]);\n        return lineGenerator(data);\n    };\n\n    brush = () => {\n        const svg = select(this.svg);\n        const actives = [];\n\n        svg\n            .selectAll('.brush')\n            .filter((d, i, nodes) => brushSelection(select(nodes[i]).node()))\n            .each((d, i, nodes) => {\n                actives.push({\n                    dimension: d,\n                    extent: brushSelection(select(nodes[i]).node()),\n                });\n            });\n\n        svg\n            .selectAll('.fg')\n            .style('display', (d) => {\n                const show = !actives.every((active) => {\n                    const dim = active.dimension;\n                    return active.extent[0] <= this.y[dim](d[dim])\n                        && this.y[dim](d[dim]) <= active.extent[1];\n                });\n                return show ? 'none' : null;\n            });\n    }\n\n    drawChart = () => {\n        const {\n            data,\n            boundingClientRect,\n            labelSelector,\n            colorSelector,\n            margins,\n        } = this.props;\n\n        if (!boundingClientRect.width || !data || data.length === 0) {\n            return;\n        }\n        this.init();\n\n        const {\n            width,\n            height,\n            dimensions,\n            x,\n            y,\n            path,\n            colors,\n        } = this;\n\n        const group = this.setContext(width, height, margins);\n\n        group\n            .append('g')\n            .attr('class', 'background')\n            .selectAll('.bg')\n            .data(data)\n            .enter()\n            .append('path')\n            .attr('class', 'bg')\n            .style('fill', 'none')\n            .style('stroke', (d) => {\n                if (colorSelector) {\n                    return colorSelector(d);\n                }\n                return colors(labelSelector(d));\n            })\n            .style('stroke-opacity', 0.2)\n            .attr('d', path);\n\n        group\n            .append('g')\n            .attr('class', 'foreground')\n            .selectAll('.fg')\n            .data(data)\n            .enter()\n            .append('path')\n            .attr('class', 'fg')\n            .style('stroke', (d) => {\n                if (colorSelector) {\n                    return colorSelector(d);\n                }\n                return colors(labelSelector(d));\n            })\n            .style('fill', 'none')\n            .attr('d', path);\n\n        const axes = group\n            .selectAll('.dimensions')\n            .data(dimensions)\n            .enter()\n            .append('g')\n            .attr('class', 'dimensions')\n            .attr('transform', d => `translate(${x(d)})`);\n\n        axes\n            .append('g')\n            .attr('class', `${styles.axis} axis`)\n            .each((d, i, nodes) => select(nodes[i]).call(axisLeft(y[d])))\n            .append('text')\n            .attr('class', `${styles.text} text`)\n            .attr('y', -10)\n            .attr('text-anchor', 'middle')\n            .text(d => d);\n\n        axes\n            .append('g')\n            .attr('class', 'brush')\n            .each((d, i, nodes) => {\n                select(nodes[i])\n                    .call(this.y[d].brush);\n            })\n            .selectAll('rect')\n            .attr('x', -10)\n            .attr('width', 20);\n    }\n\n    redrawChart = () => {\n        const svg = select(this.svg);\n        svg.selectAll('*').remove();\n        this.drawChart();\n    }\n\n    render() {\n        const {\n            className,\n        } = this.props;\n\n        const svgClassName = [\n            'parallel-coordiantes',\n            styles.parallel,\n            className,\n        ].join(' ');\n\n        return (\n            <Fragment>\n                <svg\n                    ref={(elem) => { this.svg = elem; }}\n                    className={svgClassName}\n                />\n            </Fragment>\n        );\n    }\n}\n\nexport default Responsive(ParallelCoordinates);\n","import React, {\n    PureComponent,\n} from 'react';\nimport { PropTypes } from 'prop-types';\nimport { schemeSet3 } from 'd3-scale-chromatic';\nimport { select } from 'd3-selection';\nimport { arc, pie } from 'd3-shape';\nimport { scaleOrdinal } from 'd3-scale';\nimport { interpolateNumber } from 'd3-interpolate';\nimport { transition } from 'd3-transition';\n\nimport Responsive from '../../General/Responsive';\n\nimport styles from './styles.scss';\n\n// eslint-disable-next-line no-unused-vars\nconst dummy = transition;\n\nconst propTypes = {\n    /**\n     * Size of the parent element/component (passed by the Responsive hoc)\n     */\n    boundingClientRect: PropTypes.shape({\n        width: PropTypes.number,\n        height: PropTypes.number,\n    }).isRequired,\n    /**\n     * Handle save functionality\n     */\n    setSaveFunction: PropTypes.func,\n    /**\n     * Array of elements to be visualized.\n     * Each data element consist of a label an value.\n     */\n    data: PropTypes.arrayOf(PropTypes.object),\n    /**\n     * Select value of data element\n     */\n    valueSelector: PropTypes.func.isRequired,\n    /**\n     * Select the label of data element\n     */\n    labelSelector: PropTypes.func.isRequired,\n    /**\n     * Array of colors as hex color codes\n     */\n    colorScheme: PropTypes.arrayOf(PropTypes.string),\n    /**\n     * Additional css classes passed from parent\n     */\n    className: PropTypes.string,\n};\n\nconst defaultProps = {\n    data: [],\n    setSaveFunction: () => {},\n    colorScheme: schemeSet3,\n    className: '',\n};\n\n/**\n * PieChart is used to represent categorical data by dividing a circle into\n * proportional segments. Each arc represents a proportion of each category.\n */\nclass PieChart extends PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n        if (props.setSaveFunction) {\n            props.setSaveFunction(this.save);\n        }\n    }\n\n    componentDidMount() {\n        this.drawChart();\n    }\n\n    componentDidUpdate() {\n        this.redrawChart();\n    }\n\n    setContext = (data, width, height) => (\n        select(this.svg)\n            .datum(data)\n            .append('g')\n            .attr('transform', `translate(${width / 2}, ${height / 2})`)\n    )\n\n    midAngle = d => (d.startAngle + ((d.endAngle - d.startAngle) / 2));\n\n    addPaths = (element, options) => {\n        const { labelSelector } = this.props;\n        const {\n            outerRadius,\n            colors,\n            pies,\n            arcs,\n        } = options;\n\n        element\n            .selectAll('path')\n            .data(pies)\n            .enter()\n            .append('path')\n            .each((d) => {\n                // eslint-disable-next-line no-param-reassign\n                d.outerRadius = outerRadius - 10;\n            })\n            .attr('d', arcs)\n            .style('fill', d => colors(labelSelector(d.data)))\n            .attr('pointer-events', 'none')\n            .attr('cursor', 'pointer')\n            .on('mouseover', (d, i, nodes) => {\n                this.arcTween(nodes[i], arcs, outerRadius, 0);\n                select(nodes[i]).style('filter', 'url(#drop-shadow)');\n            })\n            .on('mouseout', (d, i, nodes) => {\n                this.arcTween(nodes[i], arcs, outerRadius - 10, 150);\n                select(nodes[i]).style('filter', 'none');\n            });\n    }\n\n    addLabels = (element, options) => {\n        const { labelSelector } = this.props;\n        const {\n            radius,\n            pies,\n            textArcs,\n            period,\n        } = options;\n\n        element\n            .selectAll('text')\n            .data(pies)\n            .enter()\n            .append('text')\n            .attr('dy', '.35em')\n            .html(d => (`<tspan>${labelSelector(d.data)}</tspan>`))\n            .attr('transform', (d) => {\n                const pos = textArcs.centroid(d);\n                pos[0] = radius * 0.8 * (this.midAngle(d) < Math.PI ? 1 : -1);\n                return `translate(${pos})`;\n            })\n            .style('visibility', 'hidden')\n            .transition()\n            .delay((d, i) => i * period)\n            .style('visibility', 'visible')\n            .style('text-anchor', d => (this.midAngle(d) < Math.PI ? 'start' : 'end'))\n            .style('user-select', 'none');\n    }\n\n    addLines = (element, options) => {\n        const { labelSelector } = this.props;\n        const {\n            radius,\n            outerRadius,\n            colors,\n            pies,\n            arcs,\n            textArcs,\n            period,\n        } = options;\n\n        element\n            .selectAll('polyline')\n            .data(pies)\n            .enter()\n            .append('polyline')\n            .each((d) => {\n                // eslint-disable-next-line no-param-reassign\n                d.outerRadius = outerRadius - 10;\n            })\n            .transition()\n            .delay((d, i) => i * period)\n            .attr('points', (d) => {\n                const pos = textArcs.centroid(d);\n                pos[0] = radius * 0.8 * (this.midAngle(d) < Math.PI ? 1 : -1);\n                return [arcs.centroid(d), textArcs.centroid(d), pos];\n            })\n            .style('fill', 'none')\n            .style('stroke-width', `${2}px`)\n            .style('stroke', d => colors(labelSelector(d.data)));\n    }\n\n    redrawChart = () => {\n        const context = select(this.svg);\n        context.selectAll('*').remove();\n        this.drawChart();\n    }\n\n    addTransition = (element, arcs, period) => {\n        element\n            .selectAll('path')\n            .transition()\n            .duration((d, i) => i * period)\n            .attrTween('d', (d) => {\n                const i = interpolateNumber(d.startAngle + 0.1, d.endAngle);\n                return function tween(t) {\n                    // eslint-disable-next-line no-param-reassign\n                    d.endAngle = i(t);\n                    return arcs(d);\n                };\n            })\n            .transition()\n            .attr('pointer-events', '');\n    }\n\n\n    arcTween = (element, arcs, newRadius, delay) => (\n        select(element)\n            .transition()\n            .duration(delay)\n            .attrTween('d', (d) => {\n                const i = interpolateNumber(d.outerRadius, newRadius);\n                return function tween(t) {\n                    // eslint-disable-next-line no-param-reassign\n                    d.outerRadius = i(t);\n                    return arcs(d);\n                };\n            })\n    )\n\n    addDropShadow = (svg) => {\n        const defs = svg.append('defs');\n\n        const filter = defs\n            .append('filter')\n            .attr('id', 'drop-shadow')\n            .attr('height', '130%');\n\n        filter\n            .append('feGaussianBlur')\n            .attr('in', 'SourceAlpha')\n            .attr('stdDeviation', 2)\n            .attr('result', 'blur');\n\n        filter\n            .append('feOffset')\n            .attr('in', 'blur')\n            .attr('result', 'offsetBlur');\n\n        filter\n            .append('feFlood')\n            .attr('flood-color', '#F8F8F8')\n            .attr('flood-opacity', 1)\n            .attr('result', 'colorBlur');\n\n        filter\n            .append('feComposite')\n            .attr('in', 'colorBlur')\n            .attr('in2', 'offsetBlur')\n            .attr('operator', 'in');\n\n        const feMerge = filter.append('feMerge');\n        feMerge\n            .append('feMergeNode')\n            .attr('in', 'offsetBlur');\n        feMerge\n            .append('feMergeNode')\n            .attr('in', 'SourceGraphic');\n    }\n\n    drawChart = () => {\n        const {\n            boundingClientRect,\n            data,\n            valueSelector,\n            colorScheme,\n        } = this.props;\n\n        if (!boundingClientRect.width || !data || data.length === 0) {\n            return;\n        }\n\n        if (!boundingClientRect.width) {\n            return;\n        }\n\n        const { width, height } = boundingClientRect;\n\n        const context = this.setContext(data, width, height);\n        const slices = context.append('g').attr('class', 'slices');\n        const labels = context.append('g').attr('class', 'labels');\n        const lines = context.append('g').attr('class', 'lines');\n\n        const radius = Math.min(width, height) / 2;\n        const outerRadius = radius * 0.8;\n\n        const colors = scaleOrdinal()\n            .range(colorScheme);\n        const pies = pie()\n            .sort(null)\n            .value(valueSelector);\n\n        const textArcs = arc()\n            .outerRadius(outerRadius)\n            .innerRadius(outerRadius);\n        const arcs = arc()\n            .padRadius(outerRadius)\n            .innerRadius(0);\n\n        const period = 200;\n\n        const options = {\n            radius,\n            outerRadius,\n            colors,\n            pies,\n            arcs,\n            textArcs,\n            period,\n        };\n        this.addDropShadow(select(this.svg));\n        this.addPaths(slices, options);\n        this.addLabels(labels, options);\n        this.addLines(lines, options);\n        this.addTransition(slices, arcs, period);\n    }\n\n    render() {\n        const {\n            className,\n            boundingClientRect: {\n                width,\n                height,\n            },\n        } = this.props;\n\n        const svgClassName = [\n            'piechart',\n            styles.piechart,\n            className,\n        ].join(' ');\n\n        return (\n            <svg\n                className={svgClassName}\n                style={{\n                    width,\n                    height,\n                }}\n                ref={(elem) => { this.svg = elem; }}\n            />\n        );\n    }\n}\n\nexport default Responsive(PieChart);\n","import React from 'react';\nimport { select } from 'd3-selection';\nimport { tree, hierarchy } from 'd3-hierarchy';\nimport { extent } from 'd3-array';\nimport { schemePaired } from 'd3-scale-chromatic';\nimport { scalePow, scaleOrdinal } from 'd3-scale';\nimport { PropTypes } from 'prop-types';\nimport SvgSaver from 'svgsaver';\nimport { doesObjectHaveNoData } from '@togglecorp/fujs';\n\nimport Responsive from '../../General/Responsive';\nimport { getStandardFilename } from '../../../utils/common';\n\nimport styles from './styles.scss';\n\nconst propTypes = {\n    /**\n     * Size of the parent element/component (passed by the Responsive hoc)\n     */\n    boundingClientRect: PropTypes.shape({\n        width: PropTypes.number,\n        height: PropTypes.number,\n    }).isRequired,\n    /**\n     * Hierarchical data structure that can be computed to form a hierarchical layout\n     * <a href=\"https://github.com/d3/d3-hierarchy\">d3-hierarchy</a>\n     */\n    data: PropTypes.shape({\n        name: PropTypes.string,\n    }),\n    /**\n     * Handle save functionality\n     */\n    setSaveFunction: PropTypes.func,\n    /**\n     * Accessor function to return children of node\n     */\n    childrenSelector: PropTypes.func,\n    /**\n     * Accessor function to return children of node\n     */\n    labelSelector: PropTypes.func.isRequired,\n    /**\n     * Select the value of each node\n     */\n    valueSelector: PropTypes.func,\n    /**\n     * Array of colors as hex color codes\n     */\n    colorScheme: PropTypes.arrayOf(PropTypes.string),\n    /**\n     * Additional css classes passed from parent\n     */\n    className: PropTypes.string,\n    /**\n     * Margins for the chart\n     */\n    margins: PropTypes.shape({\n        top: PropTypes.number,\n        right: PropTypes.number,\n        bottom: PropTypes.number,\n        left: PropTypes.number,\n    }),\n};\n\nconst defaultProps = {\n    childrenSelector: d => d.children,\n    data: [],\n    setSaveFunction: () => {},\n    valueSelector: () => 1,\n    colorScheme: schemePaired,\n    className: '',\n    margins: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0,\n    },\n};\n\n/**\n * RadialDendrogram is a tree diagram showing the arrangement of clusters produced by hierarchical\n * clustering. The clusters are arranged in circle.\n */\nclass RadialDendrogram extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n        if (props.setSaveFunction) {\n            props.setSaveFunction(this.save);\n        }\n    }\n\n    componentDidMount() {\n        this.renderChart();\n    }\n\n    componentDidUpdate() {\n        this.renderChart();\n    }\n\n    save = () => {\n        const svg = select(this.svg);\n        const svgsaver = new SvgSaver();\n        svgsaver.asSvg(svg.node(), `${getStandardFilename('radialdendrogram', 'graph')}.svg`);\n    }\n\n    renderChart() {\n        const {\n            data,\n            boundingClientRect,\n            childrenSelector,\n            valueSelector,\n            labelSelector,\n            colorScheme,\n            margins,\n        } = this.props;\n\n        const svg = select(this.svg);\n        svg.selectAll('*').remove();\n\n        if (!boundingClientRect.width) {\n            return;\n        }\n        let { width, height } = boundingClientRect;\n\n        if (!data || data.length === 0 || doesObjectHaveNoData(data)) {\n            return;\n        }\n\n        const {\n            top,\n            right,\n            bottom,\n            left,\n        } = margins;\n\n        width = width - left - right;\n        height = height - top - bottom;\n\n        const colors = scaleOrdinal()\n            .range(colorScheme);\n\n        function topicColors(node) {\n            // let color = colors(0);\n            let color;\n            if (node.depth === 0 || node.depth === 1) {\n                color = colors(labelSelector(node.data));\n            } else {\n                color = topicColors(node.parent);\n            }\n            return color;\n        }\n\n        const group = svg\n            .append('g')\n            .attr('transform', `translate(${((width + left + right) / 2)}, ${((height + top + bottom) / 2)})`);\n\n        const radius = width < height ? width / 2 : height / 2;\n        const leafTextWidth = 50;\n\n        const trees = tree()\n            .size([360, radius - leafTextWidth])\n            .separation((a, b) => ((a.parent === b.parent ? 1 : 2) / a.depth));\n\n        const root = hierarchy(data, childrenSelector)\n            .sum(valueSelector);\n        trees(root);\n\n        const minmax = extent(root.descendants(), d => d.value);\n        const scaledValues = scalePow().exponent(0.5).domain(minmax).range([4, 10]);\n\n        function project(x, y) {\n            const angle = ((x - 90) / 180) * Math.PI;\n            return [y * Math.cos(angle), y * Math.sin(angle)];\n        }\n\n        function diagonal(d) {\n            return `M${project(d.x, d.y)},C${project(d.x, (d.y + d.parent.y) / 2)}`\n                + ` ${project(d.parent.x, (d.y + d.parent.y) / 2)} ${project(d.parent.x, d.parent.y)}`;\n        }\n\n        group\n            .selectAll('.link')\n            .data(root.descendants()\n                .slice(1))\n            .enter()\n            .append('path')\n            .attr('class', 'link')\n            .attr('stroke', topicColors)\n            .attr('fill', 'none')\n            .attr('storke-width', 1.5)\n            .attr('d', diagonal);\n\n        const node = group\n            .selectAll('.node')\n            .data(root.descendants())\n            .enter()\n            .append('g')\n            .attr('class', d => `node ${d.children ? 'node-internal' : 'node-leaf'}`)\n            .attr('transform', d => `translate(${project(d.x, d.y)})`);\n\n        node.append('circle')\n            .style('fill', topicColors)\n            .attr('r', (d) => {\n                if (d.value) {\n                    return scaledValues(d.value);\n                }\n                return 3;\n            });\n\n        node.append('text')\n            .attr('dy', '.3em')\n            .style('fill', topicColors)\n            .attr('x', d => ((d.x < 180) === (!d.children) ? `${scaledValues(d.value) + 4}` : `-${scaledValues(d.value) + 4}`))\n            .style('text-anchor', d => ((d.x < 180) === !d.children ? 'start' : 'end'))\n            .style('text-shadow', '0 1px 0 #fff, 0 -1px 0 #fff, 1px 0 0 #fff, -1px 0 0 #fff')\n            .attr('transform', d => `rotate(${d.x < 180 ? d.x - 90 : d.x + 90})`)\n            .text(d => labelSelector(d.data));\n    }\n\n    render() {\n        const {\n            className,\n            boundingClientRect: {\n                width,\n                height,\n            },\n        } = this.props;\n\n        const radialDendrogramStyle = [\n            'radial-dendrogram',\n            styles.radialDendrogram,\n            className,\n        ].join(' ');\n        return (\n            <svg\n                className={radialDendrogramStyle}\n                style={{\n                    width,\n                    height,\n                }}\n                ref={(elem) => { this.svg = elem; }}\n            />\n        );\n    }\n}\n\nexport default Responsive(RadialDendrogram);\n","import React, {\n    PureComponent,\n} from 'react';\nimport { PropTypes } from 'prop-types';\nimport SvgSaver from 'svgsaver';\nimport { schemePaired } from 'd3-scale-chromatic';\nimport { select } from 'd3-selection';\nimport { extent } from 'd3-array';\nimport {\n    sankey,\n    sankeyLinkHorizontal,\n} from 'd3-sankey';\nimport {\n    scaleLinear,\n    scaleOrdinal,\n} from 'd3-scale';\n\nimport Responsive from '../../General/Responsive';\n\nimport { getStandardFilename } from '../../../utils/common';\nimport styles from './styles.scss';\n\nconst propTypes = {\n    /**\n     * Size of the parent element/component (passed by the Responsive hoc)\n     */\n    boundingClientRect: PropTypes.shape({\n        width: PropTypes.number,\n        height: PropTypes.number,\n    }).isRequired,\n    /**\n     * the data to use to plot pie chart\n     */\n    data: PropTypes.shape({\n        nodes: PropTypes.arrayOf(PropTypes.object),\n        links: PropTypes.arrayOf(PropTypes.object),\n    }),\n    /**\n     * Handler function to save the generated svg\n     */\n    setSaveFunction: PropTypes.func,\n    /**\n     * Select the value for the unit data\n     */\n    valueSelector: PropTypes.func,\n    /**\n     * Select label for the data\n     */\n    labelSelector: PropTypes.func,\n    /**\n     * [minFontSize, maxFontSize] for the labels.\n     * Each label is scaled based on its value\n     */\n    fontSizeExtent: PropTypes.arrayOf(PropTypes.number),\n    /**\n     * Array of colors as hex color codes\n     */\n    colorScheme: PropTypes.arrayOf(PropTypes.string),\n    /**\n     * Additional css classes passed from parent\n     */\n    className: PropTypes.string,\n    /**\n     * Margins for the chart\n     */\n    margins: PropTypes.shape({\n        top: PropTypes.number,\n        right: PropTypes.number,\n        bottom: PropTypes.number,\n        left: PropTypes.number,\n    }),\n};\n\nconst defaultProps = {\n    data: {\n        nodes: [],\n        links: [],\n    },\n    setSaveFunction: () => {},\n    valueSelector: d => d.value,\n    labelSelector: d => d.label,\n    colorScheme: schemePaired,\n    fontSizeExtent: [14, 30],\n    className: '',\n    margins: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0,\n    },\n};\n\n/**\n * Sankey is helps to visualize flow and quantity in proportion to one another.\n * The width of the lines show respective magnitudes.\n * <a href=\"https://github.com/d3/d3-sankey\">Sankey</a>\n */\nclass Sankey extends PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n        if (props.setSaveFunction) {\n            props.setSaveFunction(this.save);\n        }\n\n        const { fontSizeExtent } = this.props;\n        this.dynamicFontSize = scaleLinear().range(fontSizeExtent);\n    }\n\n    componentDidMount() {\n        this.drawChart();\n    }\n\n    componentDidUpdate() {\n        this.redrawChart();\n    }\n\n    setContext = (width, height, margins) => {\n        const {\n            top,\n            left,\n        } = margins;\n\n        return select(this.svg)\n            .append('g')\n            .attr('transform', `translate(${left}, ${top})`);\n    }\n\n    getFontSize = (d) => {\n        const { valueSelector } = this.props;\n        return Math.floor(this.dynamicFontSize(valueSelector(d)));\n    }\n\n    updateRangeFontData = (nodes) => {\n        const { valueSelector } = this.props;\n        this.dynamicFontSize.domain(extent(nodes, d => valueSelector(d)));\n    }\n\n    save = () => {\n        const svg = select(this.svg);\n        const svgsaver = new SvgSaver();\n        svgsaver.asSvg(svg.node(), `${getStandardFilename('sankey', 'graph')}.svg`);\n    }\n\n    redrawChart = () => {\n        const context = select(this.svg);\n        context.selectAll('*').remove();\n        this.drawChart();\n    }\n\n    addLinks = (element, data, colors) => {\n        const { labelSelector, valueSelector } = this.props;\n\n        const links = element\n            .selectAll('.link')\n            .data(data)\n            .enter()\n            .append('path')\n            .attr('class', 'link')\n            .style('fill', 'none')\n            .attr('d', sankeyLinkHorizontal())\n            .style('cursor', 'pointer')\n            .style('stroke-width', d => Math.max(1, d.width))\n            .style('stroke', d => colors(labelSelector(d.source)))\n            .style('stroke-opacity', 0.3)\n            .sort((a, b) => b.width - a.width)\n            .on('mouseover', (d, i, nodes) => {\n                select(nodes[i]).style('stroke-opacity', 0.8);\n            })\n            .on('mouseout', (d, i, nodes) => {\n                select(nodes[i]).style('stroke-opacity', 0.3);\n            });\n\n        links\n            .append('title')\n            .text(d => `${labelSelector(d.source)} → ${labelSelector(d.target)}\\n${valueSelector(d)}`);\n    }\n\n    addNodes = (element, data, colors, width) => {\n        const { labelSelector, valueSelector } = this.props;\n        const nodes = element\n            .selectAll('.node')\n            .data(data)\n            .enter()\n            .append('g')\n            .attr('class', 'node');\n\n        nodes\n            .append('rect')\n            .attr('id', d => `node${d.index}`)\n            .attr('x', d => d.x0)\n            .attr('y', d => d.y0)\n            .attr('height', d => d.y1 - d.y0)\n            .attr('width', d => d.x1 - d.x0)\n            .style('fill', d => colors(labelSelector(d) || '#d3d3d3'))\n            .style('opacity', 0.8)\n            .style('stroke', '#d3d3d3')\n            .style('cursor', 'pointer')\n            .append('text')\n            .text(d => `${labelSelector(d)} ${valueSelector(d)}`);\n\n        nodes\n            .append('text')\n            .attr('x', d => d.x0 - 6)\n            .attr('y', d => ((d.y1 + d.y0) / 2))\n            .attr('dy', '.35em')\n            .attr('text-anchor', 'end')\n            .text(d => labelSelector(d))\n            .style('font-size', d => this.getFontSize(d))\n            .filter(d => d.x0 < width / 2)\n            .attr('x', d => d.x1 + 6)\n            .attr('text-anchor', 'start');\n\n        nodes\n            .append('title')\n            .text(d => `${labelSelector(d)}\\n${valueSelector(d)}`);\n\n        const links = select(this.svg)\n            .selectAll('.link');\n\n        nodes\n            .on('mouseover', (d) => {\n                nodes\n                    .select(`#node${d.index}`)\n                    .style('opacity', 1);\n\n                links\n                    .transition()\n                    .duration(300)\n                    .style('opacity', 0.1);\n\n                links\n                    .filter(s => d.name === s.source.name)\n                    .transition()\n                    .duration(300)\n                    .style('opacity', 1);\n\n                links\n                    .filter(t => d.name === t.target.name)\n                    .transition()\n                    .duration(300)\n                    .style('opacity', 1);\n            })\n            .on('mouseout', (d) => {\n                nodes\n                    .select(`#node${d.index}`)\n                    .style('opacity', 0.8);\n\n                links\n                    .transition()\n                    .duration(500)\n                    .style('opacity', 0.8);\n            });\n    }\n\n    drawChart = () => {\n        const {\n            data,\n            boundingClientRect,\n            colorScheme,\n            margins,\n        } = this.props;\n\n        if (!boundingClientRect.width || !data || data.length === 0) {\n            return;\n        }\n        let { width, height } = boundingClientRect;\n        const {\n            top,\n            right,\n            bottom,\n            left,\n        } = margins;\n\n        width = width - left - right;\n        height = height - top - bottom;\n        const context = this.setContext(width, height, margins);\n        const links = context.append('g').attr('class', 'links');\n        const nodes = context.append('g').attr('class', 'nodes');\n\n        const colors = scaleOrdinal().range(colorScheme);\n\n        const sankeyGenerator = sankey()\n            .nodeWidth(25)\n            .nodePadding(10)\n            .extent([[1, 1], [width - 1, height - 1]]);\n\n        sankeyGenerator(data);\n\n        this.updateRangeFontData(data.nodes);\n\n        this.addLinks(links, data.links, colors);\n        this.addNodes(nodes, data.nodes, colors, width);\n    }\n\n    render() {\n        const {\n            className,\n            boundingClientRect: {\n                width,\n                height,\n            },\n        } = this.props;\n\n        const svgClassName = [\n            'sankey',\n            styles.sankey,\n            className,\n        ].join(' ');\n\n        return (\n            <svg\n                className={svgClassName}\n                style={{\n                    width,\n                    height,\n                }}\n                ref={(elem) => { this.svg = elem; }}\n            />\n        );\n    }\n}\n\nexport default Responsive(Sankey);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport {\n    addSeparator,\n    isFalsy,\n    isTruthy,\n    formattedNormalize,\n} from '@togglecorp/fujs';\nimport { FaramOutputElement } from '@togglecorp/faram';\n\nimport styles from './styles.scss';\n\n\nconst propTypes = {\n    /**\n     * reqired for style override\n     */\n    className: PropTypes.string,\n    /**\n     * string to show, if value is unexpected\n     * Default: -\n     */\n    invalidText: PropTypes.string,\n    /**\n     * Normalize numer into Lac, Cr, Ar\n     */\n    normal: PropTypes.bool,\n    /**\n     * Numer of digits after decimal point. Rounding is also applied.\n     */\n    precision: PropTypes.number,\n    /**\n     * Prefix the output with certain string. Eg. $\n     */\n    prefix: PropTypes.string,\n    /**\n     * Specify which separator to use for thousands\n     */\n    separator: PropTypes.string,\n    /**\n     * Show or hide thousands separator\n     */\n    showSeparator: PropTypes.bool,\n    /**\n     * Show both positive and negative sign for number\n     */\n    showSign: PropTypes.bool,\n    /**\n     * Prefix the output with certain string. Eg. %\n     */\n    suffix: PropTypes.string,\n    /**\n     * The value of the numeral\n     */\n    value: PropTypes.number,\n\n    lang: PropTypes.string,\n};\n\nconst defaultProps = {\n    className: '',\n    invalidText: '-',\n    normal: false,\n    precision: 2,\n    prefix: undefined,\n    separator: undefined,\n    showSeparator: true,\n    showSign: false,\n    suffix: undefined,\n    value: undefined,\n    lang: undefined,\n};\n\n\n/**\n * Numeral component for formatted numbers\n */\nclass Numeral extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    static getNormalizedNumber({\n        value,\n        showSign = false,\n        normal = false,\n        precision = undefined,\n        showSeparator = true,\n        separator = ',',\n        lang = 'en',\n    }) {\n        // Only use absolute part if showSign is true (sign are added later)\n        let number = isTruthy(showSign) ? Math.abs(value) : value;\n\n        // Get normalize-suffix and reduce the number\n        let normalizeSuffix;\n\n        if (normal) {\n            const { number: num, normalizeSuffix: norm } = formattedNormalize(number, lang);\n            number = num;\n            normalizeSuffix = norm;\n        }\n\n        // Convert number to fixed precision\n        if (isTruthy(precision)) {\n            number = number.toFixed(precision);\n        }\n\n        // Convert number to add separator\n        if (showSeparator) {\n            number = addSeparator(number, separator);\n        }\n\n        return { number, normalizeSuffix };\n    }\n\n    static renderText(props) {\n        const {\n            normal,\n            precision,\n            prefix = '',\n            separator,\n            showSeparator,\n            showSign,\n            suffix = '',\n            value,\n            invalidText,\n            lang,\n        } = { ...defaultProps, ...props };\n\n        if (isFalsy(value)) {\n            return invalidText;\n        }\n\n        const { number, normalizeSuffix = '' } = Numeral.getNormalizedNumber({\n            value, showSign, normal, precision, showSeparator, separator, lang,\n        });\n\n        return `${prefix}${number}${normalizeSuffix}${suffix}`;\n    }\n\n    render() {\n        const {\n            className,\n            normal,\n            precision,\n            prefix,\n            separator,\n            showSeparator,\n            showSign,\n            suffix,\n            value,\n            lang,\n            invalidText,\n        } = this.props;\n\n        if (isFalsy(value)) {\n            return (\n                <span\n                    className={className}\n                >\n                    {invalidText}\n                </span>\n            );\n        }\n\n        const { number, normalizeSuffix } = Numeral.getNormalizedNumber({\n            value, showSign, normal, precision, showSeparator, separator, lang,\n        });\n\n        return (\n            <span className={`numeral ${className} ${styles.numeral}`}>\n                {\n                    isTruthy(prefix) && (\n                        <span className=\"prefix\">\n                            {prefix}\n                        </span>\n                    )\n                }\n                {\n                    isTruthy(showSign) && value !== 0 && (\n                        <span className=\"sign\">\n                            {value > 0 ? '+' : '-'}\n                        </span>\n                    )\n                }\n                <span className=\"number\">\n                    {number}\n                </span>\n                {\n                    isTruthy(normalizeSuffix) && (\n                        <span className=\"normalized-suffix\">\n                            {normalizeSuffix}\n                        </span>\n                    )\n                }\n                {\n                    isTruthy(suffix) && (\n                        <span className=\"suffix\">\n                            {suffix}\n                        </span>\n                    )\n                }\n            </span>\n        );\n    }\n}\n\nexport default FaramOutputElement(Numeral);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    _cs,\n    isTruthyString,\n} from '@togglecorp/fujs';\n\nimport FloatingContainer from '../FloatingContainer';\nimport styles from './styles.scss';\n\nconst propTypes = {\n    className: PropTypes.string,\n    tooltip: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n        PropTypes.node,\n    ]),\n    children: PropTypes.node.isRequired,\n    delay: PropTypes.number,\n    center: PropTypes.bool,\n};\n\nconst defaultProps = {\n    className: '',\n    tooltip: '',\n    center: false,\n    delay: 100,\n};\n\nconst noOp = () => {};\n\nconst TOOLTIP_WINDOW_PADDING = 4;\n\nexport default class Tooltip extends React.Component {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n        this.parentBCR = undefined;\n        this.state = {\n            showTooltip: false,\n        };\n    }\n\n    handleInvalidate = (container) => {\n        if (!this.parentBCR) {\n            return null;\n        }\n\n        const contentRect = container.getBoundingClientRect();\n\n        const windowRect = {\n            width: window.innerWidth,\n            height: window.innerHeight,\n        };\n\n        let topCalc = this.parentBCR.top - 12 - contentRect.height;\n        let leftCalc = this.parentBCR.left - (contentRect.width / 2);\n\n        const leftBoundMax = this.parentBCR.left + (contentRect.width / 2);\n\n        if (topCalc < 0) {\n            topCalc = this.parentBCR.bottom + 12;\n        }\n        if (leftCalc < 0) {\n            leftCalc = TOOLTIP_WINDOW_PADDING;\n        } else if (leftBoundMax > windowRect.width) {\n            leftCalc = windowRect.width - contentRect.width - TOOLTIP_WINDOW_PADDING;\n        }\n\n        const optionsContainerPosition = {\n            top: `${topCalc}px`,\n            left: `${leftCalc}px`,\n            width: 'auto',\n        };\n\n        return optionsContainerPosition;\n    }\n\n    handleHover = (e) => {\n        const {\n            delay,\n            center,\n        } = this.props;\n        clearTimeout(this.timeout);\n\n        if (center) {\n            const hoverBox = e.target.getBoundingClientRect();\n\n            this.parentBCR = {\n                left: hoverBox.left + (hoverBox.width / 2),\n                top: hoverBox.top,\n            };\n        } else {\n            this.parentBCR = { left: e.clientX, top: e.clientY };\n        }\n\n        this.hoverIn = true;\n        this.timeout = setTimeout(() => {\n            if (this.hoverIn) {\n                this.setState({ showTooltip: true });\n            }\n        }, delay);\n    }\n\n    handleHoverOut = () => {\n        this.hoverIn = false;\n        this.parentBCR = undefined;\n        this.setState({ showTooltip: false });\n    }\n\n    render() {\n        const {\n            tooltip,\n            children: child,\n            className,\n            center,\n        } = this.props;\n\n        const { showTooltip } = this.state;\n\n        const props = {\n            onMouseOver: this.handleHover,\n            onMouseOut: this.handleHoverOut,\n            onFocus: noOp,\n            onBlur: noOp,\n        };\n        const isTooltipNode = typeof tooltip === 'object';\n\n        return (\n            <React.Fragment>\n                {React.cloneElement(child, props)}\n                {isTruthyString(tooltip) && showTooltip && (\n                    <FloatingContainer\n                        className={_cs(\n                            styles.container,\n                            center && styles.center,\n                            !isTooltipNode && styles.textTooltip,\n                            className,\n                        )}\n                        onInvalidate={this.handleInvalidate}\n                        focusTrap\n                    >\n                        {tooltip}\n                    </FloatingContainer>\n                )}\n            </React.Fragment>\n        );\n    }\n}\n","import React, { PureComponent } from 'react';\nimport {\n    scaleOrdinal,\n    scaleLinear,\n    scaleBand,\n    scalePow,\n    scaleLog,\n} from 'd3-scale';\nimport { max } from 'd3-array';\nimport { PropTypes } from 'prop-types';\nimport memoize from 'memoize-one';\nimport { _cs } from '@togglecorp/fujs';\n\nimport Numeral from '../../View/Numeral';\nimport Tooltip from '../../View/Tooltip';\nimport Responsive from '../../General/Responsive';\n\nimport styles from './styles.scss';\n\nconst propTypes = {\n    /**\n     * Size of the parent element/component (passed by the Responsive hoc)\n     */\n    boundingClientRect: PropTypes.shape({\n        width: PropTypes.number,\n        height: PropTypes.number,\n    }).isRequired,\n    /**\n     * Array of data elements each having a label and value\n     */\n    data: PropTypes.arrayOf(PropTypes.object),\n    /**\n     * Select the value of element\n     */\n    valueSelector: PropTypes.func.isRequired,\n    /**\n     * Select the label of element\n     */\n    labelSelector: PropTypes.func.isRequired,\n    /**\n     * Padding between two bars as proportion to bar width\n     */\n    bandPadding: PropTypes.number,\n    /**\n     * Additional css classes passed from parent\n     */\n    className: PropTypes.string,\n    /**\n     * type of scaling used for bar length\n     * one of ['exponent', 'log', 'linear']\n     * see <a href=\"https://github.com/d3/d3-scale/blob/master/README.md\">d3.scale</a>\n     */\n    scaleType: PropTypes.string,\n    /**\n     * if exponent scaleType, set the current exponent to specified value\n     */\n    exponent: PropTypes.number,\n    /**\n     * Margins for the chart\n     */\n    margins: PropTypes.shape({\n        top: PropTypes.number,\n        right: PropTypes.number,\n        bottom: PropTypes.number,\n        left: PropTypes.number,\n    }),\n    /**\n     * Format how ticks are shown\n     */\n    tickFormat: PropTypes.func,\n    /**\n     * Number of ticks to be shown\n     */\n    noOfTicks: PropTypes.number,\n    /**\n     * if true, tick on axis are shown\n     */\n    showTicks: PropTypes.bool,\n    /**\n     * if true, grid lines are drawn\n     */\n    showGrids: PropTypes.bool,\n    /**\n     * if true, x-axis is hidden\n     */\n    hideXAxis: PropTypes.bool,\n    /**\n     * if true, y-axis is hidden\n     */\n    hideYAxis: PropTypes.bool,\n};\n\nconst defaultProps = {\n    data: [],\n    bandPadding: 0.2,\n    className: '',\n    scaleType: 'linear',\n    exponent: 1,\n    noOfTicks: 5,\n    tickFormat: undefined,\n    margins: {\n        top: 16,\n        right: 16,\n        bottom: 16,\n        left: 16,\n    },\n    showTicks: true,\n    showGrids: true,\n    hideXAxis: false,\n    hideYAxis: false,\n};\n\nconst MIN_BAR_HEIGHT = 22;\n\n/**\n * Represent categorical data with horizontal bars with values proportional to the\n * length of each bar.\n */\nclass SimpleHorizontalBarChart extends PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    getRenderData = memoize(\n        (data, scaleX, scaleY, labelSelector, valueSelector, maxValue, margins) => {\n            const { left } = margins;\n            const bandwidth = scaleY.bandwidth();\n            const step = scaleY.step();\n\n            return (\n                data.map((d) => {\n                    const label = labelSelector(d);\n                    const value = valueSelector(d);\n\n                    return {\n                        x: left,\n                        y: scaleY(label),\n                        height: bandwidth,\n                        yOffset: step,\n                        width: scaleX(value),\n                        label,\n                        value,\n                        percent: parseFloat(value / maxValue).toFixed(2),\n                    };\n                })\n            );\n        },\n    )\n\n    getMaxValue = memoize((data, valueSelector) => max(data, valueSelector))\n\n    getScaleX = memoize((scaleType, width, maxValue, exponent) => {\n        let scaleX;\n\n        switch (scaleType) {\n            case 'log':\n                scaleX = scaleLog();\n                scaleX.clamp(true);\n                break;\n            case 'exponent':\n                scaleX = scalePow();\n                scaleX.exponent([exponent]);\n                scaleX.clamp(true);\n                break;\n            case 'linear':\n            default:\n                scaleX = scaleLinear().clamp(true);\n        }\n\n        scaleX.range([0, width]);\n        scaleX.domain([0, maxValue]);\n\n        return scaleX;\n    })\n\n    getScaleY = memoize((data, top, height, labelSelector, bandPadding) => {\n        const scale = scaleBand()\n            .range([height, top])\n            .domain(data.map(labelSelector))\n            .padding(bandPadding);\n\n        let barsHeight = height;\n        const stepOffset = MIN_BAR_HEIGHT - scale.bandwidth();\n\n        if (stepOffset > 0) {\n            const newHeight = (scale.paddingOuter() * 2)\n                + ((scale.step() + stepOffset) * data.length);\n            scale.range([newHeight, top]);\n\n            barsHeight = newHeight;\n        }\n\n        return {\n            barsHeight,\n            scaleY: scale,\n        };\n    })\n\n    getScaleColor = memoize(colorScheme => scaleOrdinal().range(colorScheme))\n\n    getAxisBottomData = memoize((scaleX, margins, noOfTicks, tickFormat) => {\n        const { left = 0 } = margins;\n        return scaleX.ticks(noOfTicks).map(v => ({\n            value: tickFormat ? tickFormat(v) : v,\n            x: scaleX(v) + left,\n            y: 0,\n        }));\n    })\n\n    render() {\n        const {\n            className: classNameFromProps,\n            data,\n            boundingClientRect,\n            valueSelector,\n            labelSelector,\n            margins,\n            exponent,\n            scaleType,\n            bandPadding,\n            tickFormat,\n            noOfTicks,\n            showTicks,\n            showGrids,\n            hideXAxis,\n            hideYAxis,\n        } = this.props;\n\n        const {\n            width: containerWidth,\n            height: containerHeight,\n        } = boundingClientRect;\n\n        const isContainerInvalid = !containerWidth;\n        const isDataInvalid = !data || data.length === 0;\n\n        if (isContainerInvalid || isDataInvalid) {\n            return null;\n        }\n\n        const {\n            top = 0,\n            right = 0,\n            bottom = 0,\n            left = 0,\n        } = margins;\n\n        const width = containerWidth - left - right;\n        const height = containerHeight - top - bottom;\n\n        const maxValue = this.getMaxValue(data, valueSelector);\n        const scaleX = this.getScaleX(scaleType, width, maxValue, exponent);\n        const {\n            barsHeight,\n            scaleY,\n        } = this.getScaleY(data, top, height, labelSelector, bandPadding);\n\n        const renderData = this.getRenderData(\n            data,\n            scaleX,\n            scaleY,\n            labelSelector,\n            valueSelector,\n            maxValue,\n            margins,\n        );\n\n        const axisBottomData = this.getAxisBottomData(\n            scaleX,\n            margins,\n            noOfTicks,\n            tickFormat,\n        );\n\n        const className = _cs(\n            'horizontal-bar-chart',\n            styles.horizontalBarChart,\n            classNameFromProps,\n        );\n        const svgClassName = _cs(\n            'svg',\n            styles.svg,\n        );\n\n        const horizontalTextOffset = 6;\n        const heightXAxis = 30;\n\n        return (\n            <div\n                className={className}\n                style={{\n                    width: containerWidth,\n                    height: containerHeight,\n                }}\n            >\n                <div\n                    className={styles.overflowContainer}\n                    style={{\n                        marginTop: top,\n                    }}\n                >\n                    <svg\n                        className={svgClassName}\n                        width={width}\n                        height={barsHeight}\n                    >\n                        <g className={_cs(styles.grid, 'grid')}>\n                            { showGrids && axisBottomData.map(d => (\n                                <line\n                                    key={`grid-${d.x}`}\n                                    className={_cs(styles.yGrid, 'y-grid')}\n                                    x1={d.x + 0.5}\n                                    y1={top}\n                                    x2={d.x + 0.5}\n                                    y2={barsHeight}\n                                />\n                            ))}\n                        </g>\n                        <g className={_cs(styles.bars, 'bars')}>\n                            { renderData.map(d => (\n                                <React.Fragment key={d.y}>\n                                    <Tooltip\n                                        tooltip={`${d.label}: ${Numeral.renderText({\n                                            value: d.value,\n                                            precision: 0,\n                                        })} (${d.percent}%)`}\n                                    >\n                                        <rect // eslint-disable-line\n                                            className={_cs(styles.bar, 'bar')}\n                                            x={d.x}\n                                            y={d.y}\n                                            width={d.width}\n                                            height={d.height}\n                                        />\n                                    </Tooltip>\n                                    <text\n                                        className={_cs(styles.label, 'axis-label')}\n                                        x={d.x}\n                                        y={d.y}\n                                        dy={(d.height / 2) + 4}\n                                        dx={horizontalTextOffset}\n                                    >\n                                        { d.label }\n                                        :\n                                        {Numeral.renderText({\n                                            value: d.value,\n                                            precision: 0,\n                                        })}\n                                    </text>\n                                </React.Fragment>\n                            ))}\n                        </g>\n                        {!hideYAxis && (\n                            <line\n                                className={_cs(styles.yAxis, 'y-axis')}\n                                x1={left + 0.5}\n                                y1={top}\n                                x2={left + 0.5}\n                                y2={barsHeight}\n                            />\n                        )}\n                    </svg>\n                </div>\n                {!hideXAxis && (\n                    <div\n                        className={styles.axesContainer}\n                        style={{\n                            height: heightXAxis,\n                        }}\n                    >\n                        <svg\n                            className={styles.axes}\n                            width={width}\n                            height={heightXAxis}\n                        >\n                            <g className={_cs(styles.xAxis, 'x-axis')}>\n                                <line\n                                    className={_cs(styles.line, 'x-axis-line')}\n                                    x1={left}\n                                    y1={0.5}\n                                    x2={width}\n                                    y2={0.5}\n                                />\n                                { showTicks && axisBottomData.map(d => (\n                                    <g\n                                        className={_cs(styles.tick, 'x-axis-tick')}\n                                        key={`tick-${d.value}`}\n                                        transform={`translate(${d.x}, ${d.y})`}\n                                    >\n                                        <line\n                                            className={_cs(styles.dash, 'x-axis-tick-dash')}\n                                            x1={0.5}\n                                            y1={5}\n                                            x2={0.5}\n                                            y2={0}\n                                        />\n                                        <text\n                                            className={_cs(styles.label, 'x-axis-tick-label')}\n                                            y={6}\n                                            x={0.5}\n                                            dy=\"0.71em\"\n                                        >\n                                            {Numeral.renderText({\n                                                value: d.value,\n                                                precision: 1,\n                                                normal: true,\n                                            })}\n                                        </text>\n                                    </g>\n                                ))}\n                            </g>\n                        </svg>\n                    </div>\n                ) }\n            </div>\n        );\n    }\n}\nexport default Responsive(SimpleHorizontalBarChart);\n","import React, { PureComponent } from 'react';\nimport {\n    scaleLinear,\n    scaleBand,\n    scalePow,\n    scaleLog,\n} from 'd3-scale';\nimport { max } from 'd3-array';\nimport { PropTypes } from 'prop-types';\nimport memoize from 'memoize-one';\nimport { _cs } from '@togglecorp/fujs';\n\nimport Numeral from '../../View/Numeral';\nimport Tooltip from '../../View/Tooltip';\nimport Responsive from '../../General/Responsive';\n\nimport styles from './styles.scss';\n\nconst propTypes = {\n    /**\n     * Size of the parent element/component (passed by the Responsive hoc)\n     */\n    boundingClientRect: PropTypes.shape({\n        width: PropTypes.number,\n        height: PropTypes.number,\n    }).isRequired,\n    /**\n     * Array of data elements each having a label and value\n     */\n    data: PropTypes.arrayOf(PropTypes.object),\n    /**\n     * Select the value of element\n     */\n    valueSelector: PropTypes.func.isRequired,\n    /**\n     * Select the label of element\n     */\n    labelSelector: PropTypes.func.isRequired,\n    /**\n     * Padding between two bars as proportion to bar width\n     */\n    bandPadding: PropTypes.number,\n    /**\n     * Additional css classes passed from parent\n     */\n    className: PropTypes.string,\n    /**\n     * type of scaling used for bar length\n     * one of ['exponent', 'log', 'linear']\n     * see <a href=\"https://github.com/d3/d3-scale/blob/master/README.md\">d3.scale</a>\n     */\n    scaleType: PropTypes.string,\n    /**\n     * if exponent scaleType, set the current exponent to specified value\n     */\n    exponent: PropTypes.number,\n    /**\n     * Margins for the chart\n     */\n    margins: PropTypes.shape({\n        top: PropTypes.number,\n        right: PropTypes.number,\n        bottom: PropTypes.number,\n        left: PropTypes.number,\n    }),\n    /**\n     * Number of ticks to be shown\n     */\n    noOfTicks: PropTypes.number,\n    /**\n     * if true, tick on axis are shown\n     */\n    showTicks: PropTypes.bool,\n    /**\n     * if true, grid lines are drawn\n     */\n    showGrids: PropTypes.bool,\n    /**\n     * if true, x-axis is hidden\n     */\n    hideXAxis: PropTypes.bool,\n    /**\n     * if true, y-axis is hidden\n     */\n    hideYAxis: PropTypes.bool,\n};\n\nconst defaultProps = {\n    data: [],\n    bandPadding: 0.2,\n    className: '',\n    scaleType: 'linear',\n    exponent: 1,\n    noOfTicks: 5,\n    tickFormat: undefined,\n    margins: {\n        top: 16,\n        right: 16,\n        bottom: 16,\n        left: 16,\n    },\n    showTicks: true,\n    showGrids: true,\n    hideXAxis: false,\n    hideYAxis: false,\n};\n\n/**\n * Represent categorical data with vertical bars, heights are proportional to the\n * data values.\n */\nclass SimpleVerticalBarChart extends PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    getRenderData = memoize((\n        data, height, scaleX, scaleY, labelSelector, valueSelector, margins,\n    ) => {\n        const { left, top } = margins;\n        const renderData = data.map((d) => {\n            const label = labelSelector(d);\n            const value = valueSelector(d);\n            const barHeight = scaleY(value);\n\n            return {\n                x: scaleX(label) + left,\n                y: (height + top) - barHeight,\n                height: barHeight,\n                width: scaleX.bandwidth(),\n                label,\n                value,\n            };\n        });\n\n        return renderData;\n    })\n\n    getAxisLeftData = memoize((scaleY, height, margins, noOfTicks, tickFormat) => {\n        const { left, top } = margins;\n        return scaleY.ticks(noOfTicks).map(v => ({\n            value: tickFormat ? tickFormat(v) : v,\n            x: left,\n            y: (height + top) - scaleY(v),\n        }));\n    })\n\n    getMaxValue = memoize((data, valueSelector) => max(data, valueSelector))\n\n    getScaleY = memoize((scaleType, height, maxValue, exponent) => {\n        let scaleY;\n\n        switch (scaleType) {\n            case 'log':\n                scaleY = scaleLog();\n                scaleY.clamp(true);\n                break;\n            case 'exponent':\n                scaleY = scalePow();\n                scaleY.exponent([exponent]);\n                scaleY.clamp(true);\n                break;\n            case 'linear':\n            default:\n                scaleY = scaleLinear();\n        }\n\n        scaleY.range([0, height]);\n        scaleY.domain([0, maxValue]);\n\n        return scaleY;\n    })\n\n    getScaleX = memoize((data, width, labelSelector, bandPadding) => (\n        scaleBand()\n            .range([width, 0])\n            .domain(data.map(labelSelector))\n            .padding(bandPadding)\n    ))\n\n    render() {\n        const {\n            className: classNameFromProps,\n            data,\n            boundingClientRect,\n            valueSelector,\n            labelSelector,\n            margins,\n            exponent,\n            scaleType,\n            bandPadding,\n            tickFormat,\n            noOfTicks,\n            showTicks,\n            showGrids,\n            hideXAxis,\n            hideYAxis,\n        } = this.props;\n\n        const {\n            width: containerWidth,\n            height: containerHeight,\n        } = boundingClientRect;\n\n        const isContainerInvalid = !containerWidth;\n        const isDataInvalid = !data || data.length === 0;\n\n        if (isContainerInvalid || isDataInvalid) {\n            return null;\n        }\n\n        const {\n            top = 0,\n            right = 0,\n            bottom = 0,\n            left = 0,\n        } = margins;\n\n        const width = containerWidth - left - right;\n        const height = containerHeight - top - bottom;\n\n        if (height <= 0) {\n            return null;\n        }\n\n        const maxValue = this.getMaxValue(data, valueSelector);\n        const scaleY = this.getScaleY(scaleType, height, maxValue, exponent);\n        const scaleX = this.getScaleX(data, width, labelSelector, bandPadding);\n        const renderData = this.getRenderData(\n            data,\n            height,\n            scaleX,\n            scaleY,\n            labelSelector,\n            valueSelector,\n            margins,\n        );\n\n        const axisLeftData = this.getAxisLeftData(\n            scaleY,\n            height,\n            margins,\n            noOfTicks,\n            tickFormat,\n        );\n\n        const className = _cs(\n            'vertical-bar-chart',\n            styles.verticalBarChart,\n            classNameFromProps,\n        );\n\n        const svgClassName = _cs(\n            'svg',\n            styles.svg,\n        );\n\n        // const horizontalTextOffset = 6;\n        // const minBarWidthToRenderText = 16;\n\n        return (\n            <div\n                className={className}\n                width={containerWidth}\n                height={containerHeight}\n            >\n                <svg\n                    className={svgClassName}\n                    width={width + left + right}\n                    height={height + top + bottom}\n                >\n                    <g className={_cs(styles.grid, 'grid')}>\n                        { showGrids && axisLeftData.map(d => (\n                            <line\n                                key={`grid-${d.y}`}\n                                className={_cs(styles.xGrid, 'x-grid')}\n                                x1={left}\n                                y1={d.y + 0.5}\n                                x2={width + left}\n                                y2={d.y + 0.5}\n                            />\n                        ))}\n                    </g>\n                    <g className={_cs(styles.bars, 'bars')}>\n                        {renderData.map(d => (\n                            <React.Fragment key={d.x}>\n                                <Tooltip\n                                    tooltip={`${d.label}: ${Numeral.renderText({\n                                        value: d.value,\n                                    })}`}\n                                >\n                                    <rect\n                                        className={_cs(styles.bar, 'bar')}\n                                        x={d.x}\n                                        y={d.y}\n                                        width={d.width}\n                                        height={d.height}\n                                    />\n                                </Tooltip>\n                            </React.Fragment>\n                        ))}\n                    </g>\n                    <g>\n                        {!hideXAxis && (\n                            <line\n                                className={_cs(styles.xAxis, 'x-axis')}\n                                x1={left}\n                                y1={height + top + 0.5}\n                                x2={width + left}\n                                y2={height + top + 0.5}\n                            />\n                        )}\n                        {!hideYAxis && (\n                            <g className={_cs(styles.yAxis, 'y-axis')}>\n                                <line\n                                    className={_cs(styles.line, 'line')}\n                                    // + 0.5 to avoid antialiasing\n                                    x1={left + 0.5}\n                                    y1={top}\n                                    x2={left + 0.5}\n                                    y2={height + top}\n                                />\n                                { showTicks && axisLeftData.map(d => (\n                                    <g\n                                        className={_cs(styles.ticks, 'ticks')}\n                                        key={`tick-${d.value}`}\n                                        transform={`translate(${d.x}, ${d.y})`}\n                                    >\n                                        <line\n                                            className={_cs(styles.line, 'line')}\n                                            x1={0}\n                                            y1={0.5}\n                                            x2={-5}\n                                            y2={0.5}\n                                        />\n                                        <text\n                                            className={_cs(styles.label, 'tick-label')}\n                                            y={0.5}\n                                            x={-6}\n                                            dy=\"0.32em\"\n                                        >\n                                            {Numeral.renderText({\n                                                value: d.value,\n                                                precision: 1,\n                                                normal: true,\n                                            })}\n                                        </text>\n                                    </g>\n                                ))}\n                            </g>\n                        )}\n                    </g>\n                </svg>\n            </div>\n        );\n    }\n}\n\nexport default Responsive(SimpleVerticalBarChart);\n","import React, {\n    PureComponent,\n    Fragment,\n} from 'react';\nimport {\n    select,\n    mouse,\n} from 'd3-selection';\nimport {\n    extent,\n    bisector,\n} from 'd3-array';\nimport { scaleLinear } from 'd3-scale';\nimport { PropTypes } from 'prop-types';\nimport {\n    line,\n    area,\n} from 'd3-shape';\nimport SvgSaver from 'svgsaver';\nimport Float from '../../View/Float';\nimport Responsive from '../../General/Responsive';\n\nimport { getStandardFilename } from '../../../utils/common';\n\nimport styles from './styles.scss';\n\nconst propTypes = {\n    /**\n     * Size of the parent element/component (passed by the Responsive hoc)\n     */\n    boundingClientRect: PropTypes.shape({\n        width: PropTypes.number,\n        height: PropTypes.number,\n    }).isRequired,\n    /**\n     * Array of data elements each having xvalue and yvalue\n     */\n    data: PropTypes.arrayOf(PropTypes.object),\n    /**\n     * Access the x-value of data point\n     */\n    xValueSelector: PropTypes.func.isRequired,\n    /**\n     * Access the y-value of data point\n     */\n    yValueSelector: PropTypes.func.isRequired,\n    /**\n     * Modify the x-value label\n     */\n    xLabelModifier: PropTypes.func,\n    /**\n     * Modify the y-value label\n     */\n    yLabelModifier: PropTypes.func,\n    /**\n     * Handle onHover functionality\n     */\n    onHover: PropTypes.func,\n    /**\n     * if true, fill the area under the line\n     */\n    fill: PropTypes.bool,\n    /**\n     * Additional css classes passed from parent\n     */\n    className: PropTypes.string,\n    /**\n     * Margins for the chart\n     */\n    margins: PropTypes.shape({\n        top: PropTypes.number,\n        right: PropTypes.number,\n        bottom: PropTypes.number,\n        left: PropTypes.number,\n    }),\n};\n\nconst defaultProps = {\n    data: [],\n    fill: true,\n    onHover: () => {},\n    xLabelModifier: d => d,\n    yLabelModifier: d => d,\n    className: '',\n    margins: {\n        top: 2,\n        right: 0,\n        bottom: 2,\n        left: 0,\n    },\n};\n\nconst circleRadius = 5;\n\n/**\n * SparkLines is a small line chart which shows the general shape of variation.\n * It can be used to visualize trends and statistical information.\n */\nclass SparkLines extends PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    componentDidMount() {\n        this.drawChart();\n    }\n\n    componentDidUpdate() {\n        this.redrawChart();\n    }\n\n    save = () => {\n        const svg = select(this.svg);\n        const svgsaver = new SvgSaver();\n        svgsaver.asSvg(svg.node(), `${getStandardFilename('sparklines', 'graph')}.svg`);\n    }\n\n    handleMouseMove = (element, focus) => {\n        const {\n            data,\n            onHover,\n            xLabelModifier,\n            yLabelModifier,\n        } = this.props;\n        const {\n            scaleX,\n            scaleY,\n            xValue,\n            yValue,\n            bisectXValue,\n        } = this;\n        const x0 = scaleX.invert(mouse(element)[0]);\n        const i = bisectXValue(data, x0, 1);\n        const d0 = data[i - 1];\n        const d1 = data[i] || d0;\n        const d = x0 - xValue(d0) > xValue(d1) - x0 ? d1 : d0;\n        onHover(d);\n        focus\n            .select('.circle')\n            .attr('transform', `translate(${scaleX(xValue(d))}, ${scaleY(yValue(d))})`);\n\n        focus\n            .select('.crosshair')\n            .attr('transform', `translate(${scaleX(xValue(d))}, ${0})`);\n\n        const { top, left } = focus.node().getBoundingClientRect();\n        const xLabel = xLabelModifier(xValue(d));\n        const yLabel = yLabelModifier(yValue(d));\n\n        select(this.tooltip)\n            .html(`<span class=${styles.yvalue}>${yLabel}</span>\n                   <span class=${styles.xvalue}>${xLabel}</span>`)\n            .style('top', () => {\n                const { height } = this.tooltip.getBoundingClientRect();\n                return `${top - height - circleRadius}px`;\n            })\n            .style('left', () => {\n                const { width } = this.tooltip.getBoundingClientRect();\n                return `${left - (width / 2)}px`;\n            })\n            .style('opacity', '1');\n    }\n\n    drawChart = () => {\n        const {\n            data,\n            boundingClientRect,\n            margins,\n            fill,\n            xValueSelector,\n            yValueSelector,\n        } = this.props;\n\n        if (!boundingClientRect.width || !data || data.length === 0) {\n            return;\n        }\n\n        const { width, height } = boundingClientRect;\n\n        const {\n            top,\n            right,\n            bottom,\n            left,\n        } = margins;\n\n        const marginForCircle = 2 * circleRadius;\n\n        this.width = width - left - right - marginForCircle;\n        this.height = height - top - bottom - marginForCircle;\n\n        const group = select(this.svg)\n            .append('g')\n            .attr('class', styles.sparkLine)\n            .attr('transform', `translate(${left + circleRadius}, ${top + circleRadius})`);\n\n\n        this.xValue = d => xValueSelector(d);\n        this.yValue = d => yValueSelector(d);\n\n        this.bisectXValue = bisector(this.xValue).left;\n\n        this.scaleX = scaleLinear()\n            .range([0, this.width])\n            .domain(extent(data.map(d => this.xValue(d))));\n\n        this.scaleY = scaleLinear()\n            .range([this.height, 0])\n            .domain(extent(data.map(d => this.yValue(d))));\n\n        const areas = area()\n            .x(d => this.scaleX(this.xValue(d)))\n            .y0(this.height)\n            .y1(d => this.scaleY(this.yValue(d)));\n\n        const lines = line()\n            .x(d => this.scaleX(this.xValue(d)))\n            .y(d => this.scaleY(this.yValue(d)));\n\n        if (fill) {\n            group.append('path')\n                .attr('class', `fill ${styles.area}`)\n                .datum(data)\n                .attr('d', areas);\n        }\n\n        group\n            .append('path')\n            .attr('class', `line ${styles.path}`)\n            .datum(data)\n            .attr('d', lines)\n            .style('fill', 'none');\n\n        const focus = group\n            .append('g')\n            .attr('class', styles.focus)\n            .style('display', 'none');\n\n        focus\n            .append('line')\n            .attr('class', `crosshair ${styles.line}`)\n            .attr('y1', 0)\n            .attr('y2', this.height);\n\n        focus\n            .append('circle')\n            .attr('class', 'circle')\n            .attr('r', circleRadius);\n\n        group\n            .append('rect')\n            .attr('class', 'overlay')\n            .style('fill', 'none')\n            .style('pointer-events', 'all')\n            .attr('width', this.width + left + right)\n            .attr('height', this.height + top + bottom)\n            .attr('transform', `translate(${left}, ${top})`)\n            .on('mouseover', () => focus.style('display', null))\n            .on('mouseout', () => {\n                focus.style('display', 'none');\n                select(this.tooltip)\n                    .style('opacity', '0');\n            })\n            .on('mousemove', (d, i, nodes) => this.handleMouseMove(nodes[0], focus));\n    }\n\n    redrawChart = () => {\n        const svg = select(this.svg);\n        svg.selectAll('*').remove();\n        this.drawChart();\n    }\n\n    render() {\n        const {\n            className,\n            boundingClientRect: {\n                width,\n                height,\n            },\n        } = this.props;\n\n        const sparkLinesStyle = [\n            'spark-lines',\n            styles.sparkLines,\n            className,\n        ].join(' ');\n\n        return (\n            <Fragment>\n                <svg\n                    ref={(element) => { this.svg = element; }}\n                    className={sparkLinesStyle}\n                    style={{\n                        width,\n                        height,\n                    }}\n                />\n                <Float>\n                    <div\n                        ref={(elem) => { this.tooltip = elem; }}\n                        className={styles.tooltip}\n                    />\n                </Float>\n            </Fragment>\n        );\n    }\n}\n\nexport default Responsive(SparkLines);\n","import React, {\n    Fragment,\n    PureComponent,\n} from 'react';\nimport {\n    select,\n    event,\n} from 'd3-selection';\nimport {\n    scaleLinear,\n    scaleOrdinal,\n    scaleBand,\n} from 'd3-scale';\nimport { schemePaired } from 'd3-scale-chromatic';\nimport { keys } from 'd3-collection';\nimport {\n    stack,\n    stackOffsetDiverging,\n} from 'd3-shape';\nimport {\n    min, max,\n} from 'd3-array';\nimport {\n    axisBottom,\n    axisLeft,\n} from 'd3-axis';\nimport { PropTypes } from 'prop-types';\nimport SvgSaver from 'svgsaver';\n\nimport Responsive from '../../General/Responsive';\nimport Float from '../../View/Float';\nimport { getStandardFilename } from '../../../utils/common';\n\nimport styles from './styles.scss';\n\nconst propTypes = {\n    /**\n     * Size of the parent element/component (passed by the Responsive hoc)\n     */\n    boundingClientRect: PropTypes.shape({\n        width: PropTypes.number,\n        height: PropTypes.number,\n    }).isRequired,\n    /**\n     * The data to be visualized\n     * Array of categorical data grouped together\n     * Example data:\n     * [{ state: 'Province 1', river: 10, hills: 20 }, { state: 'Province 2', river: 1, hills: 3}]\n     */\n    data: PropTypes.arrayOf(\n        PropTypes.shape({\n            name: PropTypes.string,\n        }),\n    ).isRequired,\n    /**\n     * Handle save functionality\n     */\n    setSaveFunction: PropTypes.func,\n    /**\n     * Name of the group identifier key\n     */\n    labelName: PropTypes.string.isRequired,\n    /**\n     * Select the identifier for group\n     */\n    labelSelector: PropTypes.func.isRequired,\n    /**\n     * Additional css classes passed from parent\n     */\n    className: PropTypes.string,\n    /**\n     * Array of colors as hex color codes.\n     * It is used if colors are not provided through data.\n     */\n    colorScheme: PropTypes.arrayOf(PropTypes.string),\n    /**\n     * Margins for the chart\n     */\n    margins: PropTypes.shape({\n        top: PropTypes.number,\n        right: PropTypes.number,\n        bottom: PropTypes.number,\n        left: PropTypes.number,\n    }),\n};\n\nconst defaultProps = {\n    setSaveFunction: () => {},\n    className: '',\n    colorScheme: schemePaired,\n    margins: {\n        top: 10,\n        right: 0,\n        bottom: 40,\n        left: 40,\n    },\n};\n\n/**\n * StackedBarChart groups multiple variables on top of each other across multiple\n * groups.It helps to visualize the relationship among members of\n * the group and compare the values across multiple groups.\n */\nclass StackedBarChart extends PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n        if (props.setSaveFunction) {\n            props.setSaveFunction(this.save);\n        }\n    }\n\n    componentDidMount() {\n        this.drawChart();\n    }\n\n    componentDidUpdate() {\n        this.redrawChart();\n    }\n\n    save = () => {\n        const svgsaver = new SvgSaver();\n        const svg = select(this.svg);\n        svgsaver(svg.node(), `${getStandardFilename('stacked-bar-chart', 'graph')}.svg`);\n    }\n\n    init = () => {\n        const {\n            boundingClientRect,\n            margins,\n            data,\n            colorScheme,\n            labelName,\n            labelSelector,\n        } = this.props;\n\n        const {\n            width,\n            height,\n        } = boundingClientRect;\n\n        const {\n            top,\n            right,\n            bottom,\n            left,\n        } = margins;\n\n        this.width = width - right - left;\n        this.height = height - top - bottom;\n        this.group = select(this.svg)\n            .append('g')\n            .attr('transform', `translate(${left}, ${top})`);\n\n        this.dimensions = keys(data[0]).filter(d => d !== labelName);\n        this.labels = data.map(d => labelSelector(d));\n\n        this.series = stack()\n            .keys(this.dimensions)\n            .offset(stackOffsetDiverging)(data);\n\n        this.x = scaleBand()\n            .domain(this.labels)\n            .rangeRound([0, width])\n            .padding(0.1);\n\n        const stackMin = row => min(row, d => d[0]);\n        const stackMax = row => max(row, d => d[1]);\n        this.y = scaleLinear()\n            .domain([min(this.series, stackMin), max(this.series, stackMax)])\n            .rangeRound([height - bottom, top])\n            .nice();\n\n        this.colors = scaleOrdinal(colorScheme);\n    }\n\n    mouseOverRect = (node) => {\n        select(this.tooltip)\n            .html(`<span>${node[1] - node[0]}</span>`)\n            .transition()\n            .duration(50)\n            .style('display', 'inline-block');\n    }\n\n    mouseMove = () => {\n        select(this.tooltip)\n            .style('top', `${event.pageY - 30}px`)\n            .style('left', `${event.pageX + 20}px`);\n    }\n\n    mouseOutRect = () => {\n        select(this.tooltip)\n            .transition()\n            .duration(50)\n            .style('display', 'none');\n    }\n\n    drawChart = () => {\n        const {\n            boundingClientRect,\n            data,\n            labelSelector,\n        } = this.props;\n\n        if (!boundingClientRect.width || !data || data.length === 0) {\n            return;\n        }\n\n        this.init();\n\n        const {\n            group,\n            series,\n            x,\n            y,\n            colors,\n            mouseOverRect,\n            mouseMove,\n            mouseOutRect,\n            width,\n        } = this;\n\n        group\n            .append('g')\n            .selectAll('g')\n            .data(series)\n            .enter()\n            .append('g')\n            .attr('fill', d => colors(d.key))\n            .selectAll('rect')\n            .data(d => d)\n            .enter()\n            .append('rect')\n            .on('mouseover', mouseOverRect)\n            .on('mousemove', mouseMove)\n            .on('mouseout', mouseOutRect)\n            .attr('width', x.bandwidth)\n            .attr('x', d => x(labelSelector(d.data)))\n            .attr('y', d => y(d[1]))\n            .attr('height', d => y(d[0]) - y(d[1]))\n            .attr('cursor', 'pointer');\n\n        group\n            .append('g')\n            .attr('class', styles.xAxis)\n            .attr('transform', `translate(0, ${y(0)})`)\n            .call(axisBottom(x).tickSize(0).tickPadding(6));\n\n        group\n            .append('g')\n            .attr('class', styles.yAxis)\n            .call(axisLeft(y).tickSize(0).tickPadding(6));\n\n        const legend = group\n            .append('g')\n            .attr('text-anchor', 'end')\n            .selectAll('g')\n            .data(this.dimensions)\n            .enter()\n            .append('g')\n            .attr('transform', (d, i) => `translate(0, ${i * 20})`);\n\n        legend\n            .append('rect')\n            .attr('x', width - 19)\n            .attr('width', 19)\n            .attr('height', 19)\n            .attr('fill', d => colors(d));\n\n        legend\n            .append('text')\n            .attr('x', width - 24)\n            .attr('y', 10)\n            .attr('dy', '0.32em')\n            .text(d => d);\n    }\n\n    redrawChart = () => {\n        const svg = select(this.svg);\n        svg.selectAll('*').remove();\n        this.drawChart();\n    }\n\n    render() {\n        const {\n            className,\n            boundingClientRect: {\n                width,\n                height,\n            },\n        } = this.props;\n\n        const svgClassName = [\n            'stacked-bar-chart',\n            styles.barchart,\n            className,\n        ].join(' ');\n\n        return (\n            <Fragment>\n                <svg\n                    ref={(element) => { this.svg = element; }}\n                    className={svgClassName}\n                    style={{\n                        width,\n                        height,\n                    }}\n                />\n                <Float>\n                    <div\n                        ref={(el) => { this.tooltip = el; }}\n                        className={styles.tooltip}\n                    />\n                </Float>\n            </Fragment>\n        );\n    }\n}\n\nexport default Responsive(StackedBarChart);\n","import React, {\n    Fragment,\n    PureComponent,\n} from 'react';\nimport SvgSaver from 'svgsaver';\nimport { PropTypes } from 'prop-types';\nimport { schemeSet2 } from 'd3-scale-chromatic';\nimport {\n    select,\n    event,\n    mouse,\n} from 'd3-selection';\nimport {\n    scaleLinear,\n    scaleOrdinal,\n} from 'd3-scale';\nimport {\n    area,\n    stack,\n    stackOffsetWiggle,\n    stackOrderInsideOut,\n    curveBasis,\n} from 'd3-shape';\nimport { keys } from 'd3-collection';\nimport {\n    extent,\n    min,\n    max,\n} from 'd3-array';\nimport { areaLabel } from 'd3-area-label';\nimport { axisBottom } from 'd3-axis';\nimport { getColorOnBgColor } from '@togglecorp/fujs';\n\nimport Responsive from '../../General/Responsive';\nimport Float from '../../View/Float';\n\nimport { getStandardFilename } from '../../../utils/common';\n\nimport styles from './styles.scss';\n\nconst propTypes = {\n    /**\n     * Size of the parent element/component (passed by the Responsive hoc)\n     */\n    boundingClientRect: PropTypes.shape({\n        width: PropTypes.number,\n        height: PropTypes.number,\n    }).isRequired,\n    /**\n     * The data to be visualized.\n     * Array of categorical data grouped together where is group has a group identifier.\n     * Example data: [{ state: 'Province 1', river: 10, hills: 20 },\n     * { state: 'Province 2', river: 1, hills: 3}]\n     */\n    data: PropTypes.arrayOf(\n        PropTypes.shape({\n            name: PropTypes.string,\n        }),\n    ).isRequired,\n    /**\n     * Handle save functionality\n     */\n    setSaveFunction: PropTypes.func,\n    /**\n     * Additional css classes passed from parent\n     */\n    className: PropTypes.string,\n    /**\n     * Select the identifier for group\n     */\n    labelSelector: PropTypes.func.isRequired,\n    /**\n     * Name of the group identifier key\n     */\n    labelName: PropTypes.string.isRequired,\n    /**\n     * Array of colors as hex color codes.\n     * It is used if colors are not provided through data.\n     */\n    colorScheme: PropTypes.arrayOf(PropTypes.string),\n    /**\n     * Margins for the chart\n     */\n    margins: PropTypes.shape({\n        top: PropTypes.number,\n        right: PropTypes.number,\n        bottom: PropTypes.number,\n        left: PropTypes.number,\n    }),\n};\n\nconst defaultProps = {\n    setSaveFunction: () => {},\n    className: '',\n    colorScheme: schemeSet2,\n    margins: {\n        top: 10,\n        right: 10,\n        bottom: 50,\n        left: 50,\n    },\n};\n/**\n * StreamGraph is a variation of Stacked Bar Chart. The variables are  plotted against a\n * fixed axis and the values are displaced around a variying central baseline.\n * It helps to visualize high volume data and changes in data values over time of\n * different categories. StreamGraph are used to give general view of the data.\n */\nclass StreamGraph extends PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n        if (props.setSaveFunction) {\n            props.setSaveFunction(this.save);\n        }\n    }\n\n    componentDidMount() {\n        this.drawChart();\n    }\n\n    componentDidUpdate() {\n        this.redrawChart();\n    }\n\n    onMouseOver = (d, i) => {\n        const {\n            group,\n        } = this;\n\n        group\n            .selectAll('.layer')\n            .transition()\n            .duration(250)\n            .attr('opacity', (e, j) => (j === i ? 1 : 0.6))\n            .attr('storke-width', '0px');\n\n        group\n            .select('.mouse-line')\n            .style('opacity', '1');\n    }\n\n    onMouseMove = (d, i, nodes) => {\n        const {\n            x,\n            labels,\n            tooltip,\n            group,\n            height,\n        } = this;\n\n        const {\n            data,\n            labelSelector,\n        } = this.props;\n\n        const mouseXpos = mouse(nodes[i])[0];\n        const xValue = Math.floor(x.invert(mouseXpos));\n\n        const labelData = data.filter(row => labelSelector(row) === xValue)[0] || [];\n        let out = `<span>${xValue}</span>`;\n        labels.forEach((label) => {\n            const value = labelData[label] || 0;\n            out += `<span class=${styles.label}>${label}: ${value}</span>`;\n        });\n\n        group\n            .select('.mouse-line')\n            .attr('d', `M${mouseXpos},${height} ${mouseXpos},${0}`);\n\n        tooltip\n            .html(out)\n            .style('display', 'block')\n            .style('top', `${event.pageY - 30}px`)\n            .style('left', `${event.pageX + 20}px`);\n\n        select(nodes[i])\n            .classed('hover', true);\n    }\n\n    onMouseOut = (d, i, nodes) => {\n        const {\n            group,\n            tooltip,\n        } = this;\n\n        group\n            .selectAll('.layer')\n            .transition()\n            .duration(250)\n            .attr('opacity', 1);\n\n        group\n            .select('.mouse-line')\n            .style('opacity', 0);\n\n        tooltip\n            .style('display', 'none');\n\n        select(nodes[i])\n            .classed('hover', 'false');\n    }\n\n    save = () => {\n        const svgsaver = new SvgSaver();\n        const svg = select(this.svg);\n        svgsaver.asSvg(svg.node(), `${getStandardFilename('stream-graph', 'graph')}.svg`);\n    }\n\n    init = () => {\n        const {\n            boundingClientRect,\n            margins,\n            data,\n            labelName,\n            labelSelector,\n            colorScheme,\n        } = this.props;\n\n        const {\n            width,\n            height,\n        } = boundingClientRect;\n\n        const {\n            top,\n            right,\n            bottom,\n            left,\n        } = margins;\n\n        this.width = width - left - right;\n        this.height = height - top - bottom;\n\n        this.group = select(this.svg)\n            .append('g')\n            .attr('transform', `translate(${left}, ${top})`);\n\n        this.labels = keys(data[0]).filter(d => d !== labelName);\n        const values = data.map(d => labelSelector(d));\n\n        this.series = stack()\n            .keys(this.labels)\n            .order(stackOrderInsideOut)\n            .offset(stackOffsetWiggle)(data);\n\n        this.x = scaleLinear()\n            .domain(extent(values))\n            .range([0, this.width]);\n\n        const stackMin = row => min(row, d => d[0]);\n        const stackMax = row => max(row, d => d[1]);\n\n        this.y = scaleLinear()\n            .domain([min(this.series, stackMin), max(this.series, stackMax)])\n            .range([this.height, 0])\n            .nice();\n\n        this.colors = scaleOrdinal()\n            .domain(this.labels)\n            .range(colorScheme);\n\n        this.size = area()\n            .x(d => this.x(labelSelector(d.data)))\n            .y0(d => this.y(d[0]))\n            .y1(d => this.y(d[1]))\n            .curve(curveBasis);\n\n        this.tooltip = select(this.tip);\n    }\n\n    drawChart = () => {\n        const {\n            boundingClientRect,\n            data,\n        } = this.props;\n\n        if (!boundingClientRect.width || !data || data.length === 0) {\n            return;\n        }\n\n        this.init();\n        const {\n            group,\n            size,\n            colors,\n            series,\n            x,\n            onMouseOver,\n            onMouseMove,\n            onMouseOut,\n        } = this;\n\n        group\n            .selectAll('.layer')\n            .data(series)\n            .enter()\n            .append('path')\n            .attr('d', size)\n            .attr('class', 'layer')\n            .style('fill', d => colors(d.key))\n            .attr('stroke', t => colors(t.key))\n            .attr('stroke-width', '2px');\n\n        group\n            .selectAll('.area-label')\n            .data(series)\n            .enter()\n            .append('text')\n            .attr('class', 'area-label')\n            .text(d => d.key)\n            .style('fill', d => getColorOnBgColor(colors(d.key)))\n            .style('fill-opacity', 0.7)\n            .style('pointer-events', 'none')\n            .attr('transform', areaLabel(size));\n\n        group\n            .append('g')\n            .attr('class', styles.xAxis)\n            .attr('transform', `translate(0, ${this.height})`)\n            .call(axisBottom(x).tickSize(0).tickPadding(6));\n\n        group\n            .selectAll('.layer')\n            .attr('opacity', 1)\n            .style('cursor', 'pointer')\n            .on('mouseover', onMouseOver)\n            .on('mousemove', onMouseMove)\n            .on('mouseout', onMouseOut);\n\n        group\n            .append('g')\n            .append('path')\n            .attr('class', 'mouse-line')\n            .attr('pointer-events', 'none')\n            .style('stroke', '#d3d3d3')\n            .style('stroke-width', '1px')\n            .style('opacity', '0');\n    }\n\n    redrawChart = () => {\n        const svg = select(this.svg);\n        svg.selectAll('*').remove();\n        this.drawChart();\n    }\n\n    render() {\n        const {\n            className,\n            boundingClientRect: {\n                width,\n                height,\n            },\n        } = this.props;\n\n        const svgClassName = [\n            'stream-graph',\n            styles.streamGraph,\n            className,\n        ].join(' ');\n\n        const tooltipClassName = [\n            'stream-graph-tooltip',\n            styles.streamGraphTooltip,\n        ].join(' ');\n\n        return (\n            <Fragment>\n                <svg\n                    ref={(el) => { this.svg = el; }}\n                    className={svgClassName}\n                    style={{\n                        width,\n                        height,\n                    }}\n                />\n                <Float>\n                    <div\n                        ref={(el) => { this.tip = el; }}\n                        className={tooltipClassName}\n                    />\n                </Float>\n            </Fragment>\n        );\n    }\n}\n\nexport default Responsive(StreamGraph);\n","import React, {\n    PureComponent,\n    Fragment,\n} from 'react';\nimport { select, event } from 'd3-selection';\nimport { hierarchy, partition } from 'd3-hierarchy';\nimport { arc } from 'd3-shape';\nimport { interpolateArray } from 'd3-interpolate';\nimport { scaleLinear, scaleOrdinal } from 'd3-scale';\nimport { PropTypes } from 'prop-types';\nimport { schemePaired } from 'd3-scale-chromatic';\nimport { path } from 'd3-path';\nimport SvgSaver from 'svgsaver';\nimport { getColorOnBgColor, randomString, doesObjectHaveNoData } from '@togglecorp/fujs';\n\nimport Responsive from '../../General/Responsive';\nimport { getStandardFilename } from '../../../utils/common';\nimport Float from '../../View/Float';\n\nimport styles from './styles.scss';\n\nconst propTypes = {\n    /**\n     * Size of the parent element/component (passed by the Responsive hoc)\n     */\n    boundingClientRect: PropTypes.shape({\n        width: PropTypes.number,\n        height: PropTypes.number,\n    }).isRequired,\n    /**\n     * Hierarchical data structure that can be computed to form a hierarchical layout\n     * <a href=\"https://github.com/d3/d3-hierarchy\">d3-hierarchy</a>\n     */\n    data: PropTypes.shape({\n        name: PropTypes.string,\n    }).isRequired,\n    /**\n     * Handle save functionality\n     */\n    setSaveFunction: PropTypes.func,\n    /**\n     * Accessor function to return children of node\n     */\n    childrenSelector: PropTypes.func,\n    /**\n     * Select label for each node\n     */\n    labelSelector: PropTypes.func.isRequired,\n    /**\n     * Modify the tooltip content\n     */\n    tooltipContent: PropTypes.func,\n    /**\n     * Select a color for each node\n     */\n    colorSelector: PropTypes.func,\n    /**\n     * Select the value of each node\n     */\n    valueSelector: PropTypes.func.isRequired,\n    /**\n     * if true, a tooltip is shown\n     */\n    showTooltip: PropTypes.bool,\n    /**\n     * Array of colors as hex color codes\n     */\n    colorScheme: PropTypes.arrayOf(PropTypes.string),\n    /**\n     * Additional css classes passed from parent\n     */\n    className: PropTypes.string,\n    /**\n     * Margins for the chart\n     */\n    margins: PropTypes.shape({\n        top: PropTypes.number,\n        right: PropTypes.number,\n        bottom: PropTypes.number,\n        left: PropTypes.number,\n    }),\n};\n\nconst defaultProps = {\n    setSaveFunction: () => {},\n    childrenSelector: d => d.children,\n    colorScheme: schemePaired,\n    colorSelector: undefined,\n    tooltipContent: undefined,\n    showTooltip: true,\n    className: '',\n    margins: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0,\n    },\n};\n\nconst twoPi = 2 * Math.PI;\nconst tooltipOffset = { x: 10, y: 10 };\n/**\n * SunBurst shows hierarchical data as a series of rings and slices. Each slice represents a\n * node of the tree structure. SunBurst can be thought as a multi level pie chart.\n  */\nclass SunBurst extends PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n        if (props.setSaveFunction) {\n            props.setSaveFunction(this.save);\n        }\n    }\n\n    componentDidMount() {\n        this.drawChart();\n    }\n\n    componentDidUpdate() {\n        this.redrawChart();\n    }\n\n    getColor = (d) => {\n        const {\n            labelSelector,\n            colorSelector,\n        } = this.props;\n\n        if (colorSelector) {\n            return colorSelector(d);\n        }\n        return this.colors(labelSelector(d.children ? d.data : d.parent.data));\n    }\n\n    save = () => {\n        const svg = select(this.svg);\n        const svgsaver = new SvgSaver();\n        svgsaver.asSvg(svg.node(), `${getStandardFilename('sunburst', 'graph')}.svg`);\n    }\n\n    calculateBounds = () => {\n        const {\n            margins,\n            boundingClientRect,\n        } = this.props;\n\n        const {\n            width,\n            height,\n        } = boundingClientRect;\n\n        const {\n            top,\n            right,\n            bottom,\n            left,\n        } = margins;\n\n        this.width = width - left - right;\n        this.height = height - top - bottom;\n\n        this.svgGroupTransformation = `translate(\n            ${(this.width) / 2},\n            ${(this.height) / 2}\n        )`;\n    }\n\n    init = () => {\n        const { colorScheme } = this.props;\n\n        this.calculateBounds();\n\n        this.radius = Math.min(this.width, this.height) / 2;\n\n        this.x = scaleLinear()\n            .range([0, twoPi])\n            .clamp(true);\n\n        this.y = scaleLinear()\n            .range([0, this.radius]);\n\n        this.colors = scaleOrdinal()\n            .range(colorScheme);\n\n        this.arch = arc()\n            .startAngle(d => this.x(d.x0))\n            .endAngle(d => this.x(d.x1))\n            .innerRadius(d => Math.max(0, this.y(d.y0)))\n            .outerRadius(d => Math.max(0, this.y(d.y1)));\n    }\n\n    middleArcLine = (d) => {\n        const halfPi = Math.PI / 2;\n        const angles = [this.x(d.x0) - halfPi, this.x(d.x1) - halfPi];\n        const r = Math.max(0, (this.y(d.y0) + this.y(d.y1)) / 2);\n\n        const middleAngle = (angles[1] + angles[0]) / 2;\n        const invertDirection = middleAngle > 0 && middleAngle < Math.PI;\n        if (invertDirection) { angles.reverse(); }\n\n        const paths = path();\n        paths.arc(0, 0, r, angles[0], angles[1], invertDirection);\n        return paths.toString();\n    }\n\n    filterText = (d) => {\n        if (d.depth === 0) {\n            return false;\n        }\n        const CHAR_SPACE = 6;\n        const deltaAngle = this.x(d.x1) - this.x(d.x0);\n        const r = Math.max(0, (this.y(d.y0) + this.y(d.y1)) / 2);\n        const perimeter = r * deltaAngle;\n\n        return d.data.name.length * CHAR_SPACE < perimeter;\n    }\n\n    handleClick = (d = { x0: 0, x1: 1, y0: 0, y1: 1 }) => {\n        const transitions = select(this.svg)\n            .transition()\n            .duration(750)\n            .tween('scale', () => {\n                const xd = interpolateArray(this.x.domain(), [d.x0, d.x1]);\n                const yd = interpolateArray(this.y.domain(), [d.y0, 1]);\n                const yr = interpolateArray(this.y.range(), [d.y0 ? 20 : 0, this.radius]);\n                return (t) => { this.x.domain(xd(t)); this.y.domain(yd(t)).range(yr(t)); };\n            });\n\n        transitions\n            .selectAll('path.main-arc')\n            .attrTween('d', t => () => this.arch(t));\n\n        transitions\n            .selectAll('path.hidden-arc')\n            .attrTween('d', t => () => this.middleArcLine(t));\n\n        transitions\n            .selectAll('text')\n            .attrTween('display', t => () => (this.filterText(t) ? null : 'none'));\n\n        this.moveStackToFront(d);\n    }\n\n    handleArcMouseOver = (d) => {\n        const {\n            tooltipContent,\n            labelSelector,\n            showTooltip,\n        } = this.props;\n\n        if (showTooltip) {\n            const defaultTooltipContent = `\n            <span class=\"${styles.label}\">\n                 ${labelSelector(d.data) || ''}\n            </span>\n            <span class=\"${styles.value}\">\n                 ${d.value || ''}\n            </span>`;\n\n            const content = tooltipContent ? tooltipContent(d) : defaultTooltipContent;\n\n            this.tooltip.innerHTML = content;\n\n            const { style } = this.tooltip;\n            style.display = 'block';\n        }\n    }\n\n    handleArcMouseMove = () => {\n        const { style } = this.tooltip;\n\n        const { height, width } = this.tooltip.getBoundingClientRect();\n\n        style.top = `${event.pageY - height - tooltipOffset.y}px`;\n        style.left = `${event.pageX - (width / 2)}px`;\n    }\n\n    handleArcMouseOut = () => {\n        const { style } = this.tooltip;\n        style.display = 'none';\n    }\n\n    moveStackToFront = (t) => {\n        select(this.svg)\n            .selectAll('.slice')\n            .filter(d => d === t)\n            .each((d, i, nodes) => {\n                nodes[i].parentNode.appendChild(nodes[i]);\n                if (d.parent) {\n                    this.moveStackToFront(d.parent);\n                }\n            });\n    }\n\n    drawChart = () => {\n        const {\n            boundingClientRect,\n            data,\n            childrenSelector,\n            labelSelector,\n            valueSelector,\n        } = this.props;\n\n        if (!boundingClientRect.width || doesObjectHaveNoData(data)) {\n            return;\n        }\n\n        this.init();\n        const uniqueId = randomString();\n\n        const {\n            width,\n            height,\n        } = boundingClientRect;\n\n        const svg = select(this.svg);\n\n        const group = svg\n            .attr('width', width)\n            .attr('height', height)\n            .on('click', this.handleClick)\n            .append('g')\n            .attr('transform', this.svgGroupTransformation);\n\n        const root = hierarchy(data, childrenSelector)\n            .sum(d => valueSelector(d));\n        const partitions = partition()(root);\n        const slicesData = partitions.descendants();\n\n        const slices = group\n            .selectAll('g.slice')\n            .data(slicesData);\n\n        slices.exit().remove();\n\n        const newSlice = slices\n            .enter()\n            .append('g')\n            .attr('class', 'slice')\n            .on('click', (d) => {\n                event.stopPropagation();\n                this.handleClick(d);\n            });\n\n        newSlice\n            .append('path')\n            .attr('class', 'main-arc')\n            .style('fill', d => this.getColor(d))\n            .attr('d', this.arch)\n            .style('cursor', 'pointer')\n            .style('stroke-width', d => d.height + 2)\n            .style('stroke', 'white')\n            .on('mouseover', this.handleArcMouseOver)\n            .on('mousemove', this.handleArcMouseMove)\n            .on('mouseout', this.handleArcMouseOut)\n            .style('fill', d => this.colors(labelSelector(d.children ? d.data : d.parent.data)))\n            .style('cursor', 'pointer')\n            .on('click', d => this.handleClick(d));\n\n        newSlice\n            .append('path')\n            .attr('class', 'hidden-arc')\n            .style('fill', 'none')\n            .attr('id', (_, i) => `${uniqueId}-hiddenArc${i}`)\n            .attr('d', this.middleArcLine);\n\n        const text = newSlice\n            .append('text')\n            .attr('display', d => (this.filterText(d) ? null : 'none'))\n            .style('pointer-events', 'none');\n\n        text\n            .append('textPath')\n            .attr('startOffset', '50%')\n            .attr('text-anchor', 'middle')\n            .attr('xlink:href', (_, i) => `#${uniqueId}-hiddenArc${i}`)\n            .text(d => labelSelector(d.data))\n            .style('fill', (d) => {\n                const colorBg = this.getColor(d);\n                return getColorOnBgColor(colorBg);\n            });\n    }\n\n    redrawChart = () => {\n        const context = select(this.svg);\n        context.selectAll('*').remove();\n        this.drawChart();\n    }\n\n    render() {\n        const { className } = this.props;\n        const svgClassName = [\n            'sunburst',\n            styles.sunburst,\n            className,\n        ].join(' ');\n\n        const tooltipClassName = [\n            'sunburst-tooltip',\n            styles.sunburstTooltip,\n        ].join(' ');\n\n        return (\n            <Fragment>\n                <svg\n                    ref={(elem) => { this.svg = elem; }}\n                    className={svgClassName}\n                />\n                <Float>\n                    <div\n                        ref={(el) => { this.tooltip = el; }}\n                        className={tooltipClassName}\n                    />\n                </Float>\n            </Fragment>\n        );\n    }\n}\n\nexport default Responsive(SunBurst);\n","import React from 'react';\nimport { select } from 'd3-selection';\nimport { PropTypes } from 'prop-types';\nimport {\n    scaleOrdinal,\n} from 'd3-scale';\nimport { schemeSet3 } from 'd3-scale-chromatic';\nimport {\n    hierarchy,\n    treemap,\n} from 'd3-hierarchy';\nimport SvgSaver from 'svgsaver';\nimport { getColorOnBgColor, doesObjectHaveNoData } from '@togglecorp/fujs';\n\nimport Responsive from '../../General/Responsive';\nimport { getStandardFilename } from '../../../utils/common';\n\nimport styles from './styles.scss';\n\nconst propTypes = {\n    /**\n     * Size of the parent element/component (passed by the Responsive hoc)\n     */\n    boundingClientRect: PropTypes.shape({\n        width: PropTypes.number,\n        height: PropTypes.number,\n    }).isRequired,\n    /**\n     * Hierarchical data structure that can be computed to form a hierarchical layout\n     * <a href=\"https://github.com/d3/d3-hierarchy\">d3-hierarchy</a>\n     */\n    data: PropTypes.shape({\n        name: PropTypes.string,\n    }),\n    /**\n     * Handle save functionality\n     */\n    setSaveFunction: PropTypes.func,\n    /**\n     * Accessor function to return children of node\n     */\n    childrenSelector: PropTypes.func,\n    /**\n     * Select the value of each node\n     */\n    valueSelector: PropTypes.func.isRequired,\n    /**\n     * Select label for each node\n     */\n    labelSelector: PropTypes.func.isRequired,\n    /**\n     * Array of colors as hex color codes\n     */\n    colorScheme: PropTypes.arrayOf(PropTypes.string),\n    /**\n     * Additional css classes passed from parent\n     */\n    className: PropTypes.string,\n};\n\nconst defaultProps = {\n    data: {},\n    setSaveFunction: () => {},\n    childrenSelector: d => d.children,\n    colorScheme: schemeSet3,\n    className: '',\n};\n\n/**\n * TreeMap is a rectangular space-filling approach to visualizing hierarchical data structure.\n * The area of each rectangle denotes the value of the element on which the rectangle is based on.\n * Subcategories are nested inside the parent rectangle.\n */\nclass TreeMap extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n        if (props.setSaveFunction) {\n            props.setSaveFunction(this.save);\n        }\n    }\n\n    componentDidMount() {\n        this.drawChart();\n    }\n\n    componentDidUpdate() {\n        this.redrawChart();\n    }\n\n    save = () => {\n        const svg = select(this.svg);\n        const svgsaver = new SvgSaver();\n        svgsaver.asSvg(svg.node(), `${getStandardFilename('treemap', 'graph')}.svg`);\n    }\n\n    redrawChart = () => {\n        const svg = select(this.svg);\n        svg.selectAll('*').remove();\n        this.drawChart();\n    }\n\n    handleMouseOver = (element) => {\n        select(element)\n            .transition()\n            .attr('opacity', 1);\n    }\n\n    handleMouseOut = (element) => {\n        select(element)\n            .transition()\n            .attr('opacity', 0.8);\n    }\n\n    drawChart = () => {\n        const {\n            data,\n            childrenSelector,\n            boundingClientRect,\n            valueSelector,\n            labelSelector,\n            colorScheme,\n        } = this.props;\n\n        if (!boundingClientRect.width || !data || doesObjectHaveNoData(data)) {\n            return;\n        }\n\n        const { width, height } = boundingClientRect;\n\n        const group = select(this.svg)\n            .attr('width', width)\n            .attr('height', height)\n            .append('g')\n            .datum(data);\n\n        const treemaps = treemap()\n            .size([width, height])\n            .round(true)\n            .padding(d => d.height);\n\n        const colors = scaleOrdinal()\n            .range(colorScheme);\n\n        const root = hierarchy(data, childrenSelector)\n            .sum(d => valueSelector(d));\n        treemaps(root);\n\n        const cell = group\n            .selectAll('g')\n            .data(root.leaves())\n            .enter()\n            .append('g')\n            .attr('transform', d => `translate(${d.x0}, ${d.y0})`);\n\n        cell\n            .append('rect')\n            .attr('class', styles.rectangle)\n            .attr('id', d => valueSelector(d.data))\n            .attr('width', d => d.x1 - d.x0)\n            .attr('height', d => d.y1 - d.y0)\n            .attr('fill', d => colors(labelSelector(d.parent.data)))\n            .attr('opacity', 0.8)\n            .on('mouseover', (d, i, nodes) => this.handleMouseOver(nodes[i]))\n            .on('mouseout', (d, i, nodes) => this.handleMouseOut(nodes[i]));\n\n        cell\n            .append('text')\n            .attr('x', d => (d.x1 - d.x0) / 2)\n            .attr('y', d => (d.y1 - d.y0) / 2)\n            .attr('text-anchor', 'middle')\n            .attr('class', styles.label)\n            .text(d => labelSelector(d.data))\n            .style('fill', d => getColorOnBgColor(colors(labelSelector(d.parent.data))))\n            .style('visibility', (d, i, nodes) => {\n                const textLength = nodes[i].getComputedTextLength();\n                const elementWidth = (d.x1 - d.x0);\n                return textLength < elementWidth ? 'visible' : 'hidden';\n            });\n\n        cell\n            .append('title')\n            .text(d => `${labelSelector(d.data)}`);\n    }\n\n    render() {\n        const { className } = this.props;\n\n        const treemapStyle = [\n            'treemap',\n            styles.treemap,\n            className,\n        ].join(' ');\n\n        return (\n            <svg\n                className={treemapStyle}\n                ref={(elem) => { this.svg = elem; }}\n            />\n        );\n    }\n}\n\nexport default Responsive(TreeMap);\n","import React, {\n    PureComponent,\n    Fragment,\n} from 'react';\nimport { select } from 'd3-selection';\nimport { schemeSet3 } from 'd3-scale-chromatic';\nimport { max } from 'd3-array';\nimport SvgSaver from 'svgsaver';\nimport {\n    scaleOrdinal,\n    scaleBand,\n    scaleLinear,\n} from 'd3-scale';\nimport {\n    axisLeft,\n    axisBottom,\n} from 'd3-axis';\nimport { _cs } from '@togglecorp/fujs';\nimport PropTypes from 'prop-types';\n\nimport Responsive from '../../General/Responsive';\nimport Float from '../../View/Float';\n\nimport { getStandardFilename } from '../../../utils/common';\n\nimport styles from './styles.scss';\n\nconst propTypes = {\n    /**\n     * Size of the parent element/component (passed by the Responsive hoc)\n     */\n    boundingClientRect: PropTypes.shape({\n        width: PropTypes.number,\n        height: PropTypes.number,\n    }).isRequired,\n    /**\n     * Array of data elements each having a label and value\n     */\n    data: PropTypes.arrayOf(PropTypes.object).isRequired,\n    /**\n     * Handle chart saving functionality\n     */\n    setSaveFunction: PropTypes.func,\n    /**\n     * Select the value of element\n     */\n    valueSelector: PropTypes.func.isRequired,\n    /**\n     * Select the label of element\n     */\n    labelSelector: PropTypes.func.isRequired,\n    /**\n     * Padding between two bars as proportion to bar width\n     */\n    bandPadding: PropTypes.number,\n    /**\n     * Select a color for each bar\n     */\n    colorSelector: PropTypes.func,\n    /**\n     * Handle mouseover over a bar\n     */\n    onBarMouseOver: PropTypes.func,\n    /**\n     * if true, show axis\n     */\n    showAxis: PropTypes.bool,\n    /**\n     * Array of colors as hex color codes\n     */\n    colorScheme: PropTypes.arrayOf(PropTypes.string),\n    /**\n     * if ture, tooltip is visible\n     */\n    showTooltip: PropTypes.bool,\n    /**\n     * Handle the contents of tooltip\n     */\n    tooltipContent: PropTypes.func,\n    /**\n     * Margins for the chart\n     */\n    margins: PropTypes.shape({\n        top: PropTypes.number,\n        right: PropTypes.number,\n        bottom: PropTypes.number,\n        left: PropTypes.number,\n    }),\n    className: PropTypes.string,\n};\n\nconst defaultProps = {\n    setSaveFunction: undefined,\n    onBarMouseOver: undefined,\n    colorSelector: undefined,\n    bandPadding: 0.2,\n    colorScheme: schemeSet3,\n    showAxis: true,\n    showTooltip: false,\n    tooltipContent: undefined,\n    margins: {\n        top: 24,\n        right: 24,\n        bottom: 24,\n        left: 72,\n    },\n    className: '',\n};\n\n/**\n * VerticalBarChart represents categorical data with vertical bars. Height of each bar represent\n * the value of data element.\n  */\nclass VerticalBarChart extends PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n\n        if (props.setSaveFunction) {\n            props.setSaveFunction(this.save);\n        }\n    }\n\n    componentDidMount() {\n        this.drawChart();\n    }\n\n    componentDidUpdate() {\n        this.redrawChart();\n    }\n\n    getColor = (d, colors) => {\n        const {\n            labelSelector,\n            colorSelector,\n        } = this.props;\n\n        if (colorSelector) {\n            return colorSelector(d);\n        }\n\n        return colors(labelSelector(d));\n    }\n\n    save = () => {\n        const svgsaver = new SvgSaver();\n        const { current: svgElement } = this.svgRef;\n        const svg = select(svgElement);\n        svgsaver.asSvg(svg.node(), `${getStandardFilename('barchart', 'graph')}.svg`);\n    }\n\n    redrawChart = () => {\n        const svg = select(this.svgRef);\n        svg.selectAll('*').remove();\n\n        svg.selectAll('*').remove();\n        this.drawChart();\n    }\n\n    handleMouseOver = (d) => {\n        const {\n            valueSelector,\n            labelSelector,\n            showTooltip,\n            tooltipContent,\n            onBarMouseOver,\n        } = this.props;\n\n        if (onBarMouseOver) {\n            onBarMouseOver(d);\n        }\n\n        if (showTooltip) {\n            const value = valueSelector(d);\n            const label = labelSelector(d);\n            const defaultTooltip = `\n                <span class=\"${styles.label}\">\n                     ${label || ''}\n                </span>\n                <span class=\"${styles.value}\">\n                     ${value || ''}\n                </span>\n            `;\n            const content = tooltipContent ? tooltipContent(d) : defaultTooltip;\n            this.tooltip.innerHTML = content;\n            const { style } = this.tooltip;\n            style.display = 'block';\n        }\n    }\n\n    handleMouseMove = () => {\n        const { showTooltip } = this.props;\n\n        if (showTooltip) {\n            const { style } = this.tooltip;\n            const { width, height } = this.tooltip.getBoundingClientRect();\n            // eslint-disable-next-line no-restricted-globals\n            const x = event.pageX;\n\n            // eslint-disable-next-line no-restricted-globals\n            const y = event.pageY;\n\n            const posX = x - (width / 2);\n            const posY = y - (height + 10);\n\n            style.top = `${posY}px`;\n            style.left = `${posX}px`;\n        }\n    }\n\n    handleMouseOut = () => {\n        const {\n            showTooltip,\n        } = this.props;\n\n        if (showTooltip) {\n            const { style } = this.tooltip;\n            style.display = 'none';\n        }\n    }\n\n    drawChart = () => {\n        const {\n            data,\n            boundingClientRect,\n            valueSelector,\n            labelSelector,\n            bandPadding,\n            margins,\n            showAxis,\n            colorScheme,\n        } = this.props;\n\n        if (!boundingClientRect.width || !data || data.length === 0) {\n            return;\n        }\n\n        const { width: fullWidth, height: fullHeight } = boundingClientRect;\n        const {\n            left = 0,\n            top = 0,\n            right = 0,\n            bottom = 0,\n        } = margins;\n\n        const width = fullWidth - left - right;\n        const height = fullHeight - top - bottom;\n\n        const colors = scaleOrdinal().range(colorScheme);\n\n        const group = select(this.svgRef)\n            .append('g')\n            .attr('transform', `translate(${left}, ${top})`);\n\n        const x = scaleBand()\n            .domain(data.map(d => labelSelector(d)))\n            .rangeRound([0, width])\n            .padding(bandPadding);\n\n        const y = scaleLinear()\n            .domain([0, max(data, valueSelector)])\n            .range([height, 0])\n            .clamp(true);\n\n        group\n            .selectAll('.bar')\n            .data(data)\n            .enter()\n            .append('rect')\n            .attr('class', `bar ${styles.bar}`)\n            .attr('x', d => x(labelSelector(d)))\n            .attr('y', d => y(valueSelector(d)))\n            .attr('width', x.bandwidth())\n            .attr('height', d => height - y(valueSelector(d)))\n            .style('fill', d => this.getColor(d, colors))\n            .on('mouseover', d => this.handleMouseOver(d))\n            .on('mousemove', this.handleMouseMove)\n            .on('mouseout', this.handleMouseOut);\n\n        if (showAxis) {\n            const xAxis = axisBottom(x);\n            const yAxis = axisLeft(y);\n\n            group\n                .append('g')\n                .attr('class', `xaxis ${styles.xaxis}`)\n                .attr('transform', `translate(0, ${height})`)\n                .call(xAxis);\n\n            group\n                .append('g')\n                .attr('class', `yaxis ${styles.yaxis}`)\n                .call(yAxis);\n        }\n    }\n\n    render() {\n        const { className: classNameFromProps } = this.props;\n\n        const className = _cs(\n            'vertical-bar-chart',\n            styles.verticalBarChart,\n            classNameFromProps,\n        );\n\n        const tooltipClassName = _cs(\n            'tooltip',\n            styles.tooltip,\n        );\n\n        return (\n            <Fragment>\n                <svg\n                    className={className}\n                    ref={(elem) => { this.svgRef = elem; }}\n                />\n                <Float>\n                    <div\n                        className={tooltipClassName}\n                        ref={(elem) => { this.tooltip = elem; }}\n                    />\n                </Float>\n            </Fragment>\n        );\n    }\n}\n\nexport default Responsive(VerticalBarChart);\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cloud from 'd3-cloud';\nimport SvgSaver from 'svgsaver';\nimport { select } from 'd3-selection';\nimport { scaleOrdinal } from 'd3-scale';\nimport { schemeSet2 } from 'd3-scale-chromatic';\nimport { _cs } from '@togglecorp/fujs';\nimport memoize from 'memoize-one';\n\nimport Responsive from '../../General/Responsive';\nimport { getStandardFilename } from '../../../utils/common';\n\nimport styles from './styles.scss';\n\nconst propTypes = {\n    className: PropTypes.string,\n    /**\n     * Size of the parent element/component (passed by the Responsive hoc)\n     */\n    boundingClientRect: PropTypes.shape({\n        width: PropTypes.number,\n        height: PropTypes.number,\n    }).isRequired,\n    /**\n     * Data to be represented in the word cloud.\n     */\n    data: PropTypes.arrayOf(PropTypes.object).isRequired,\n    /**\n     * Select a label for each data point\n     */\n    // eslint-disable-next-line react/no-unused-prop-types\n    labelSelector: PropTypes.func,\n    /**\n     * Select the frequency value for each data point\n     */\n    // eslint-disable-next-line react/no-unused-prop-types\n    frequencySelector: PropTypes.func,\n    /**\n     * Font specification for each word cloud node\n     */\n    // eslint-disable-next-line react/no-unused-prop-types\n    font: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n    /**\n     * Provide a rotation value for each node\n     */\n    // eslint-disable-next-line react/no-unused-prop-types\n    rotate: PropTypes.oneOfType([PropTypes.number, PropTypes.func]),\n    /**\n     * Handler function to save the generated svg\n     */\n    setSaveFunction: PropTypes.func,\n    // onWordMouseOver: PropTypes.func,\n    // onWordClick: PropTypes.func,\n    /**\n     * Array of colors as hex color codes\n     */\n    colorScheme: PropTypes.arrayOf(PropTypes.string),\n};\n\nconst defaultProps = {\n    className: '',\n    font: 'sans-serif',\n    // rotate: () => (Math.floor(Math.random() * 2) * 90),\n    rotate: 0,\n    setSaveFunction: undefined,\n    // onWordClick: undefined,\n    // onWordMouseOver: undefined,\n    labelSelector: d => d.text,\n    frequencySelector: d => d.size,\n    colorScheme: schemeSet2,\n};\n\nconst emptyObject = {};\nconst emptyList = [];\n\n/**\n * Display how frequently a word appears by making the size of each word proportion to its\n * frequency.\n */\nclass WordCloud extends PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n\n        if (props.setSaveFunction) {\n            props.setSaveFunction(this.save);\n        }\n\n        this.state = {\n            calculatedWords: emptyList,\n        };\n\n        this.startWordCloudComputation(props);\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        this.startWordCloudComputation(nextProps);\n    }\n\n    getColorScale = colorScheme => scaleOrdinal().range(colorScheme);\n\n    startWordCloudComputation = ({\n        boundingClientRect: {\n            width: containerWidth,\n            height: containerHeight,\n        } = emptyObject,\n        data,\n        font,\n        rotate,\n        labelSelector,\n        frequencySelector,\n    }) => {\n        const isContainerInvalid = !containerWidth;\n        const isDataInvalid = !data || data.length === 0;\n\n        if (isContainerInvalid || isDataInvalid) {\n            return;\n        }\n\n        this.calculateWordCloud(\n            containerWidth,\n            containerHeight,\n            font,\n            data,\n            rotate,\n            labelSelector,\n            frequencySelector,\n        );\n    }\n\n    save = () => {\n        const { current: svgElement } = this.svgRef;\n        const svg = select(svgElement);\n        const svgsaver = new SvgSaver();\n        svgsaver.asSvg(svg.node(), `${getStandardFilename('wordcloud', 'graph')}.svg`);\n    }\n\n    handleWordCloudCalculationEnd = (words) => {\n        this.setState({ calculatedWords: words });\n    }\n\n    // eslint-disable-next-line react/sort-comp\n    calculateWordCloud = memoize((\n        width,\n        height,\n        font,\n        data,\n        rotate,\n        labelSelector,\n        frequencySelector,\n    ) => {\n        this.setState({ calculatedWords: undefined });\n\n        const words = data.map(labelSelector);\n        const frequencies = data.map(frequencySelector);\n\n        const renderArea = width * height;\n        const totalLetterLength = words.join(' ').length;\n        const renderAreaFactor = renderArea / totalLetterLength;\n\n        const minFont = 7;\n        const maxFont = Math.max(\n            2 * minFont,\n            Math.sqrt(renderAreaFactor),\n        );\n\n        /*\n        const paddingFactor = 5;\n        const padding = paddingFactor > 0\n            ? Math.sqrt(renderAreaFactor) / paddingFactor\n            : 0;\n        */\n\n        const maxSize = Math.max(...frequencies, 1);\n        const sizeOffset = maxFont / maxSize;\n        const fontSizeSelector = d => Math.max(\n            minFont,\n            Math.min(frequencySelector(d) * sizeOffset, maxFont),\n        );\n\n        const layoutData = JSON.parse(JSON.stringify(data));\n\n        const layout = cloud();\n        layout.size([width, height])\n            .font(font)\n            .words(layoutData)\n            .padding(2)\n            .rotate(rotate)\n            .text(labelSelector)\n            .fontSize(fontSizeSelector)\n            .on('end', this.handleWordCloudCalculationEnd);\n\n        setTimeout(layout.start, 0);\n    })\n\n    render() {\n        const {\n            className: classNameFromProps,\n            boundingClientRect: {\n                width: containerWidth,\n                height: containerHeight,\n            } = emptyObject,\n            data,\n            colorScheme,\n        } = this.props;\n\n        const isContainerInvalid = !containerWidth;\n        const isDataInvalid = !data || data.length === 0;\n\n        if (isContainerInvalid || isDataInvalid) {\n            return null;\n        }\n\n        const className = _cs(\n            classNameFromProps,\n            styles.wordCloud,\n            'word-cloud',\n        );\n\n        /*\n        const svgClassName = _cs(\n            'svg',\n            styles.svg,\n        );\n        */\n\n        const colorScale = this.getColorScale(colorScheme);\n        const { calculatedWords } = this.state;\n\n        return (\n            <div\n                className={className}\n                style={{\n                    width: containerWidth,\n                    height: containerHeight,\n                }}\n            >\n                { calculatedWords && (\n                    <svg\n                        // className={svgClassName}\n                        width={containerWidth}\n                        height={containerHeight}\n                        ref={this.svgRef}\n                    >\n                        <g transform={`translate(${containerWidth / 2}, ${containerHeight / 2})`}>\n                            { calculatedWords.map(w => (\n                                <text\n                                    key={w.text}\n                                    style={{\n                                        fontSize: w.size,\n                                        fontFamily: w.font,\n                                    }}\n                                    fill={colorScale(w.text)}\n                                    textAnchor=\"middle\"\n                                    transform={`translate(${w.x}, ${w.y}) rotate(${w.rotate})`}\n                                >\n                                    { w.text }\n                                </text>\n                            )) }\n                        </g>\n                    </svg>\n                ) }\n            </div>\n        );\n    }\n}\n\nexport default Responsive(WordCloud);\n","import React from 'react';\nimport { select } from 'd3-selection';\nimport { PropTypes } from 'prop-types';\nimport {\n    scaleLinear,\n    scaleOrdinal,\n} from 'd3-scale';\nimport { range } from 'd3-array';\nimport { hsl, rgb } from 'd3-color';\nimport { schemeSet3 } from 'd3-scale-chromatic';\nimport {\n    hierarchy,\n    treemap,\n} from 'd3-hierarchy';\nimport SvgSaver from 'svgsaver';\nimport {\n    getColorOnBgColor,\n    getHexFromRgb,\n    doesObjectHaveNoData,\n} from '@togglecorp/fujs';\n\nimport Responsive from '../../General/Responsive';\nimport { getStandardFilename } from '../../../utils/common';\n\nimport styles from './styles.scss';\n\nconst propTypes = {\n    /**\n     * Size of the parent element/component (passed by the Responsive hoc)\n     */\n    boundingClientRect: PropTypes.shape({\n        width: PropTypes.number,\n        height: PropTypes.number,\n    }).isRequired,\n    /**\n     * Hierarchical data structure that can be computed to form a hierarchical layout\n     * <a href=\"https://github.com/d3/d3-hierarchy\">d3-hierarchy</a>\n     */\n    data: PropTypes.shape({\n        name: PropTypes.string,\n    }),\n    /**\n     * Handle save functionality\n     */\n    setSaveFunction: PropTypes.func,\n    /**\n     * Accessor function to return children of node\n     */\n    childrenSelector: PropTypes.func,\n    /**\n     * Select the value of each node\n     */\n    valueSelector: PropTypes.func.isRequired,\n    /**\n     * Select label for each node\n     */\n    labelSelector: PropTypes.func.isRequired,\n    /**\n     * Array of colors as hex color codes\n     */\n    colorScheme: PropTypes.arrayOf(PropTypes.string),\n    /**\n     * Additional css classes passed from parent\n     */\n    className: PropTypes.string,\n};\n\nconst defaultProps = {\n    data: {},\n    setSaveFunction: () => {},\n    childrenSelector: d => d.children,\n    colorScheme: schemeSet3,\n    className: '',\n};\n/**\n * TreeMap is a rectangular space-filling approach to visualizing hierarchical data structure.\n * The area of each rectangle denotes the value of the element on which the rectangle is based on.\n * Subcategories are nested inside the parent rectangle.\n * Using this variation of TreeMap, only parent values are shown.\n * If one needs to see chidren of each node, one can click the respective parent rectangle.\n * The graph zooms into the clicked rectangle to\n * show its contents.\n */\nclass ZoomableTreeMap extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n        if (props.setSaveFunction) {\n            props.setSaveFunction(this.save);\n        }\n    }\n\n    componentDidMount() {\n        this.drawChart();\n    }\n\n    componentDidUpdate() {\n        this.redrawChart();\n    }\n\n    getColorShades = (value) => {\n        const { labelSelector } = this.props;\n        const parentLabel = labelSelector(value.parent.data);\n        const color = this.colors(parentLabel);\n\n        const hslColor = hsl(color);\n\n        hslColor.s = this.saturations(labelSelector(value.data));\n        hslColor.l = this.lightness(labelSelector(value.data));\n        return hslColor;\n    }\n\n    save = () => {\n        const svg = select(this.svg);\n        const svgsaver = new SvgSaver();\n        svgsaver.asSvg(svg.node(), `${getStandardFilename('treemap', 'graph')}.svg`);\n    }\n\n    redrawChart = () => {\n        const svg = select(this.svg);\n        svg.selectAll('*').remove();\n        this.drawChart();\n    }\n\n    visibility = (d, element) => {\n        const textLength = element.getComputedTextLength();\n        const elementWidth = (this.x(d.x1) - this.x(d.x0) - 6);\n        return textLength < elementWidth ? 1 : 0;\n    }\n\n    childLabel = (element) => {\n        element\n            .attr('x', t => this.x(t.x1) - 6)\n            .attr('y', t => this.y(t.y1) - 6)\n            .attr('dy', '-.35em')\n            .attr('text-anchor', 'end')\n            .style('opacity', (d, i, nodes) => this.visibility(d, nodes[i]));\n    }\n\n    parentLabel = (element) => {\n        element\n            .attr('x', d => this.x(d.x0) + 6)\n            .attr('y', d => this.y(d.y0) + 6)\n            .style('opacity', (d, i, nodes) => this.visibility(d, nodes[i]));\n    }\n\n    handleMouseOver = (element) => {\n        select(element)\n            .transition()\n            .attr('opacity', 1);\n    }\n\n    handleMouseOut = (element) => {\n        select(element)\n            .transition()\n            .attr('opacity', 0.8);\n    }\n\n    drawChart = () => {\n        const {\n            data,\n            childrenSelector,\n            boundingClientRect,\n            valueSelector,\n            colorScheme,\n        } = this.props;\n\n        if (!boundingClientRect.width || !data || doesObjectHaveNoData(data)) {\n            return;\n        }\n\n        const top = 40;\n\n        const { width, height } = boundingClientRect;\n\n        this.x = scaleLinear()\n            .domain([0, width])\n            .range([0, width]);\n        this.y = scaleLinear()\n            .domain([0, height - top])\n            .range([0, height - top]);\n\n        this.group = select(this.svg)\n            .attr('width', width)\n            .attr('height', height)\n            .append('g')\n            .attr('transform', `translate(0, ${top})`)\n            .style('shape-rendering', 'crispEdges');\n\n        const treemaps = treemap()\n            .size([width, height - top])\n            .round(true)\n            .padding(d => d.height);\n\n        this.colors = scaleOrdinal()\n            .range(colorScheme);\n\n        this.saturations = scaleOrdinal()\n            .range(range(0.5, 1, 0.1));\n\n        this.lightness = scaleOrdinal()\n            .range(range(0.5, 1, 0.1));\n\n        const root = hierarchy(data, childrenSelector)\n            .sum(d => valueSelector(d));\n\n        treemaps(root);\n\n        const grandparent = this\n            .group\n            .append('g')\n            .attr('class', `grandparent ${styles.grandparent}`);\n\n        grandparent\n            .append('rect')\n            .attr('y', -top)\n            .attr('width', width)\n            .attr('height', top);\n\n        grandparent\n            .append('text')\n            .attr('x', top / 2)\n            .attr('y', -(top / 2))\n            .attr('dy', '.32em');\n\n        this.display(root);\n        this.transitioning = false;\n    }\n\n    display = (d) => {\n        const {\n            labelSelector,\n        } = this.props;\n\n        this.group\n            .select('.grandparent')\n            .datum(d.parent)\n            .on('click', this.transitions)\n            .select('text')\n            .text(this.name(d));\n\n        this.group\n            .select('.grandparent')\n            .datum(d.parent)\n            .select('rect');\n\n        const first = this.group\n            .insert('g', '.grandparent')\n            .datum(d)\n            .attr('class', 'depth');\n\n        const second = first\n            .selectAll('g')\n            .data(d.children)\n            .enter()\n            .append('g');\n\n        second\n            .filter(node => node.children)\n            .classed(`children ${styles.children}`, true)\n            .on('click', this.transitions);\n\n        const children = second\n            .selectAll('.child')\n            .data(node => node.children || [node])\n            .enter()\n            .append('g');\n\n        children\n            .append('rect')\n            .attr('class', `child ${styles.child}`)\n            .call(this.rect) // is this required\n            .append('title')\n            .text(t => `${labelSelector(t.data)}`);\n\n        children\n            .append('text')\n            .attr('class', `child-label ${styles.childLabel}`)\n            .text(t => `${labelSelector(t.data)}`)\n            .call(this.childLabel);\n        second\n            .append('rect')\n            .attr('class', `parent ${styles.parent}`)\n            .call(this.rect)\n            .append('title');\n\n        second\n            .append('text')\n            .attr('class', `parent-label ${styles.parentLabel}`)\n            .attr('dy', '.75em')\n            .text(t => `${labelSelector(t.data)}`)\n            .call(this.parentLabel);\n        second\n            .selectAll('rect')\n            .style('fill', t => this.getColorShades(t));\n\n        children\n            .selectAll('text')\n            .style('fill', (t) => {\n                const colorBg = getHexFromRgb(rgb(this.getColorShades(t)).toString());\n                return getColorOnBgColor(colorBg);\n            });\n\n        return second;\n    }\n\n    transitions = (d) => {\n        if (this.transitioning || !d) return;\n        this.transitioning = true;\n        const g2 = this.display(d);\n        const firstTransition = this.group\n            .select('.depth')\n            .transition().duration(650);\n        const secondTransition = g2.transition().duration(650);\n        this.x.domain([d.x0, d.x1]);\n        this.y.domain([d.y0, d.y1]);\n        this.group.style('shape-rendering', null);\n        this.group.selectAll('.depth').sort((a, b) => a.depth - b.depth);\n        g2\n            .selectAll('text')\n            .style('fill-opacity', 0);\n\n        firstTransition\n            .selectAll('.parent-label').call(this.parentLabel).style('fill-opacity', 0);\n        secondTransition\n            .selectAll('.parent-label').call(this.parentLabel).style('fill-opacity', 1);\n        firstTransition\n            .selectAll('.child-label').call(this.childLabel).style('fill-opacity', 0);\n        secondTransition\n            .selectAll('.child-label').call(this.childLabel).style('fill-opacity', 1);\n        firstTransition\n            .selectAll('rect').call(this.rect);\n        secondTransition\n            .selectAll('rect').call(this.rect);\n\n        firstTransition\n            .on('end.remove', (_, i, nodes) => {\n                select(nodes[i]).remove();\n                this.transitioning = false;\n            });\n    }\n\n    text = (text) => {\n        const { x, y } = this;\n        text\n            .attr('x', d => x(d.x0) + 6)\n            .attr('y', d => y(d.y0) + 6);\n    }\n\n    rect = (node) => {\n        const { x, y } = this;\n        node\n            .attr('x', d => x(d.x0))\n            .attr('y', d => y(d.y0))\n            .attr('width', d => x(d.x1) - x(d.x0))\n            .attr('height', d => y(d.y1) - y(d.y0));\n    }\n\n    name = (d) => {\n        const { labelSelector } = this.props;\n        let result = '';\n        const separator = ' / ';\n        d.ancestors().reverse().forEach((node) => {\n            result += labelSelector(node.data) + separator;\n        });\n\n        return result\n            .split(separator)\n            .filter(i => i !== '')\n            .join(separator);\n    }\n\n    render() {\n        const { className } = this.props;\n\n        const treemapStyle = [\n            'treemap',\n            styles.treemap,\n            className,\n        ].join(' ');\n\n        return (\n            <svg\n                className={treemapStyle}\n                ref={(elem) => { this.svg = elem; }}\n            />\n        );\n    }\n}\n\nexport default Responsive(ZoomableTreeMap);\n","import React, {\n    PureComponent,\n    Fragment,\n} from 'react';\nimport { select, event } from 'd3-selection';\nimport {\n    extent,\n    max,\n    min,\n    histogram,\n    thresholdSturges,\n} from 'd3-array';\nimport { scaleLinear } from 'd3-scale';\nimport {\n    axisBottom,\n    axisLeft,\n} from 'd3-axis';\nimport { color } from 'd3-color';\n\nimport PropTypes from 'prop-types';\n\nimport styles from './styles.scss';\n\nimport Numeral from '../../View/Numeral';\nimport Responsive from '../../General/Responsive';\nimport Float from '../../View/Float';\n\nconst emptyObject = {};\n\nconst propTypes = {\n    /**\n     * Array of numeric values to be represented as histogram\n     */\n    data: PropTypes.array.isRequired, // eslint-disable-line react/forbid-prop-types\n    /**\n     * Size of the parent element/component (passed by the Responsive hoc)\n     */\n    boundingClientRect: PropTypes.shape({\n        width: PropTypes.number,\n        height: PropTypes.number,\n    }).isRequired,\n    /**\n     * Array of two colors to map height of histogram\n     */\n    colorRange: PropTypes.arrayOf(PropTypes.object),\n    /**\n     * if showAxis is true, axis is shown\n     */\n    showAxis: PropTypes.bool,\n    /**\n     * if showGrids is true, grids are shown\n     */\n    showGrids: PropTypes.bool,\n    /**\n     * modify the values to be shown in tooltip when hovered over histogram\n     */\n    tooltipContent: PropTypes.func,\n    /**\n     * Format the tick value shown in axis\n     * see <a href=\"https://github.com/d3/d3-scale/blob/master/README.md#tickFormat\">tickFormat</a>\n     */\n    tickFormat: PropTypes.func,\n    /**\n     * show tooltip if true\n     */\n    showTooltip: PropTypes.bool,\n    /**\n     * Thresholds function to use for binning\n     */\n    thresholds: PropTypes.func,\n    /**\n     * Additional classes\n     */\n    className: PropTypes.string,\n    /**\n     * Margins for the chart\n     */\n    margins: PropTypes.shape({\n        top: PropTypes.number,\n        right: PropTypes.number,\n        bottom: PropTypes.number,\n        left: PropTypes.number,\n    }),\n\n};\n\nconst defaultProps = {\n    // TODO: use global styling variables\n    colorRange: [\n        color('rgba(90, 198, 198, 1)').brighter(),\n        color('rgba(90, 198, 198, 1)').darker(),\n    ],\n    showAxis: true,\n    showGrids: true,\n    thresholds: thresholdSturges,\n    className: '',\n    tickFormat: d => (\n        Numeral.renderText({\n            value: d,\n            precision: 1,\n            normal: true,\n        })\n    ),\n    tooltipContent: undefined,\n    showTooltip: true,\n\n    // TODO: use global styling variables\n    margins: {\n        top: 10,\n        right: 20,\n        bottom: 30,\n        left: 30,\n    },\n};\n\n/**\n * Histogram shows the underlying frequency distribution of continuous data.\n * The area of bar indicates the frequency of occurrences of each bin. However\n * here the width of each bin is constant so height can represent the frequency.\n */\nclass Histogram extends PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    componentDidMount() {\n        this.drawChart();\n    }\n\n    componentDidUpdate() {\n        this.redrawChart();\n    }\n\n    onMouseOver = (d) => {\n        const {\n            showTooltip,\n            tooltipContent,\n        } = this.props;\n\n        if (showTooltip) {\n            const defaultContent = `\n                <span>\n                    ${Numeral.renderText({ value: d.length, precision: 0 })}\n                </span>\n            `;\n\n            const content = tooltipContent ? tooltipContent(d) : defaultContent;\n\n            this.tooltip.innerHTML = content;\n            this.tooltip.style.display = 'block';\n        }\n    }\n\n    onMouseMove = () => {\n        const { style } = this.tooltip;\n\n        const { width, height } = this.tooltip.getBoundingClientRect();\n\n        const { pageX: xpos, pageY: ypos } = event;\n\n        style.top = `${ypos - height - 10}px`;\n        style.left = `${(xpos - (width / 2))}px`;\n    }\n\n    onMouseOut = () => {\n        this.tooltip.style.display = 'none';\n    }\n\n    drawChart = () => {\n        const {\n            data,\n            colorRange,\n            boundingClientRect,\n            margins,\n            showAxis,\n            showGrids,\n            tickFormat,\n            thresholds,\n        } = this.props;\n\n        if (!boundingClientRect.width || !data || data.length === 0) {\n            return;\n        }\n\n        const {\n            width: fullWidth,\n            height: fullHeight,\n        } = boundingClientRect;\n\n        const {\n            left = 0,\n            top = 0,\n            right = 0,\n            bottom = 0,\n        } = margins;\n\n        const width = fullWidth - left - right;\n        const height = fullHeight - top - bottom;\n\n        if (width < 0 || height < 0) {\n            return;\n        }\n\n        const dataExtent = extent(data);\n\n        const x = scaleLinear()\n            .domain(dataExtent).nice()\n            .range([0, width]);\n\n        const bins = histogram()\n            .domain(x.domain())\n            .thresholds(thresholds)(data);\n\n        const y = scaleLinear()\n            .domain([0, max(bins, d => d.length)]).nice()\n            .range([height, 0]);\n\n        const yMax = max(bins, d => d.length);\n        const yMin = min(bins, d => d.length);\n\n        const colorScale = scaleLinear()\n            .domain([yMin, yMax])\n            .range(colorRange);\n\n        const group = select(this.svg)\n            .append('g')\n            .attr('transform', `translate(${left}, ${top})`);\n\n        group\n            .selectAll('.bar')\n            .data(bins)\n            .enter()\n            .append('g')\n            .attr('class', `bar ${styles.bar}`)\n            .append('rect')\n            .attr('x', (d) => {\n                if ((x(d.x1) - x(d.x0)) <= 0) {\n                    return 0;\n                }\n                return x(d.x0) + 1;\n            })\n            .attr('width', (d) => {\n                if ((x(d.x1) - x(d.x0)) <= 0) {\n                    return width;\n                }\n                return Math.max(0, x(d.x1) - x(d.x0) - 1);\n            })\n            .attr('y', d => y(d.length))\n            .attr('height', d => y(0) - y(d.length))\n            .attr('fill', d => colorScale(d.length))\n            .on('mouseover', this.onMouseOver)\n            .on('mousemove', this.onMouseMove)\n            .on('mouseout', this.onMouseOut);\n\n        if (showAxis) {\n            group\n                .append('g')\n                .attr('class', `xaxis ${styles.xaxis}`)\n                .attr('transform', `translate(0, ${height})`)\n                .call(\n                    axisBottom(x)\n                        .tickFormat(tickFormat),\n                );\n\n            group\n                .append('g')\n                .attr('class', `yaxis ${styles.yaxis}`)\n                .call(\n                    axisLeft(y)\n                        .tickFormat(tickFormat),\n                );\n        }\n\n        if (showGrids) {\n            group\n                .append('g')\n                .attr('class', `yaxis-grids ${styles.yaxisGrids}`)\n                .call(\n                    axisLeft(y)\n                        .tickSizeInner(-width),\n                );\n        }\n    };\n\n    redrawChart = () => {\n        const svg = select(this.svg);\n        svg.selectAll('*').remove();\n        this.drawChart();\n    };\n\n    render() {\n        const {\n            className: classNameFromProps,\n            boundingClientRect: {\n                width,\n                height,\n            } = emptyObject,\n        } = this.props;\n\n        const className = [\n            'histogram',\n            styles.histogram,\n            classNameFromProps,\n        ].join(' ');\n\n        const tooltipClassName = [\n            'tooltip',\n            styles.tooltip,\n        ].join(' ');\n\n        return (\n            <Fragment>\n                <svg\n                    className={className}\n                    style={{\n                        width,\n                        height,\n                    }}\n                    ref={(elem) => { this.svg = elem; }}\n                />\n                <Float>\n                    <div\n                        ref={(el) => { this.tooltip = el; }}\n                        className={tooltipClassName}\n                    />\n                </Float>\n            </Fragment>\n        );\n    }\n}\n\nexport default Responsive(Histogram);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { select } from 'd3-selection';\n// FIXME: idk if this has a side-effect\nimport { range } from 'd3-array';\nimport {\n    arc,\n    pie,\n    line,\n    curveLinear,\n} from 'd3-shape';\nimport {\n    scaleLinear,\n    scaleOrdinal,\n} from 'd3-scale';\n\nimport Responsive from '../../General/Responsive';\n\nimport styles from './styles.scss';\n\nconst propTypes = {\n    boundingClientRect: PropTypes.shape({\n        width: PropTypes.number,\n        height: PropTypes.number,\n    }).isRequired,\n    sectionPercents: PropTypes.arrayOf(PropTypes.number).isRequired,\n    minAngle: PropTypes.number,\n    maxAngle: PropTypes.number,\n    minValue: PropTypes.number.isRequired,\n    maxValue: PropTypes.number.isRequired,\n    currentValue: PropTypes.number.isRequired,\n    colorScheme: PropTypes.arrayOf(PropTypes.string),\n    showLabels: PropTypes.bool,\n    className: PropTypes.string,\n    margins: PropTypes.shape({\n        top: PropTypes.number,\n        right: PropTypes.number,\n        bottom: PropTypes.number,\n        left: PropTypes.number,\n    }),\n};\n\nconst defaultProps = {\n    className: '',\n    colorScheme: ['#3f51b5', '#00E396', '#FEB019', '#FF4560', '#43BCCD'],\n    minAngle: -90,\n    maxAngle: 90,\n    showLabels: false,\n    margins: {\n        top: 20,\n        right: 20,\n        bottom: 20,\n        left: 20,\n    },\n};\n\nconst degToRad = deg => deg * (Math.PI / 180);\nconst radToDeg = rad => rad * (180 / Math.PI);\n\nclass GaugeChart extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    componentDidMount() {\n        this.drawChart();\n    }\n\n    componentDidUpdate() {\n        this.redrawChart();\n    }\n\n    drawChart = () => {\n        const {\n            boundingClientRect,\n            margins,\n            colorScheme,\n            sectionPercents,\n            minAngle,\n            maxAngle,\n            minValue,\n            maxValue,\n            currentValue,\n            showLabels,\n        } = this.props;\n\n        const {\n            width: containerWidth,\n            height: containerHeight,\n        } = boundingClientRect;\n\n        const {\n            top = 0,\n            right = 0,\n            bottom = 0,\n            left = 0,\n        } = margins;\n\n        if (!boundingClientRect.width) return;\n\n        const width = containerWidth - left - right;\n        const height = containerHeight - top - bottom;\n\n        if (width < 0 || height < 0) return;\n\n        const radius = Math.min(width, height * 2) / 2;\n\n        const deltaAngle = maxAngle - minAngle;\n\n        const ringWidthPercent = 0.2;\n        const insetPercent = 0.01;\n        const labelInsetPercent = 0.009;\n        const pointerWidthPercent = 0.1;\n\n        const ringWidth = ringWidthPercent * radius;\n        const ringInset = insetPercent * radius;\n\n        const arcColors = scaleOrdinal().range(colorScheme);\n\n        const group = select(this.svg)\n            .append('g')\n            .attr('transform', `translate(${left}, ${top})`);\n\n        const scaleValue = scaleLinear()\n            .range([0, 1])\n            .clamp(true)\n            .domain([minValue, maxValue]);\n\n        const arch = arc()\n            .innerRadius(radius - ringWidth - ringInset)\n            .outerRadius(radius - ringInset);\n\n        const pies = pie()\n            .sort(null)\n            .value(d => d)\n            .startAngle(degToRad(minAngle))\n            .endAngle(degToRad(maxAngle));\n\n        const tickData = pies(sectionPercents);\n\n        group\n            .selectAll('.arc')\n            .data(tickData)\n            .enter()\n            .append('g')\n            .attr('class', `${styles.arc} arc`)\n            .attr('transform', () => `translate( ${radius},${radius})`)\n            .append('path')\n            .attr('fill', (d, i) => arcColors(i))\n            .attr('d', arch);\n\n        const pointerWidth = pointerWidthPercent * radius;\n        const pointerHeadLengthPercent = 1 - insetPercent - ringWidthPercent;\n        const pointerHeadLength = Math.round(radius * pointerHeadLengthPercent);\n\n        const lineData = [\n            [pointerWidth / 2, 0],\n            [0, -pointerHeadLength],\n            [-(pointerWidth / 2), 0],\n            [0, 0],\n            [pointerWidth / 2, 0],\n        ];\n        const pointerLine = line().curve(curveLinear);\n\n        group\n            .selectAll('.pointer')\n            .data([lineData])\n            .enter()\n            .append('g')\n            .attr('class', `${styles.pointer} pointer`)\n            .attr('transform', `translate( ${radius},${radius})`)\n            .append('path')\n            .attr('d', pointerLine)\n            .attr('transform', `rotate(${minAngle})`);\n\n        group\n            .append('g')\n            .append('circle')\n            .attr('class', `${styles.pointerCircle} pointer-circle`)\n            .attr('transform', `translate(${radius}, ${radius})`)\n            .attr('cx', 0)\n            .attr('cy', 0)\n            .attr('r', pointerWidth / 2);\n\n        const ratio = scaleValue(currentValue);\n        const newAngle = minAngle + (ratio * deltaAngle);\n\n        group\n            .select('.pointer')\n            .select('path')\n            .transition()\n            .duration(1000)\n            .attr('transform', `rotate(${newAngle})`);\n\n        if (showLabels) {\n            group\n                .append('g')\n                .selectAll('.label')\n                .data(pies(sectionPercents))\n                .enter()\n                .append('g')\n                .attr('class', `${styles.label} label`)\n                .attr('transform', `translate(${radius}, ${radius})`)\n                .append('text')\n                .text(d => d.data)\n                .attr('transform', (d) => {\n                    const end = d.endAngle;\n                    const start = d.startAngle;\n                    const center = (radToDeg(end) + radToDeg(start)) / 2;\n\n                    return `rotate (${center}) translate(0, ${(labelInsetPercent * radius) - radius})`;\n                });\n        }\n    }\n\n    redrawChart = () => {\n        const svg = select(this.svg);\n        svg.selectAll('*').remove();\n        this.drawChart();\n    }\n\n    render() {\n        const {\n            className,\n            boundingClientRect: {\n                width,\n                height,\n            },\n        } = this.props;\n\n        const gaugeChartStyle = [\n            'gauge-chart',\n            styles.gaugeChart,\n            className,\n        ].join(' ');\n\n        return (\n            <svg\n                ref={(element) => { this.svg = element; }}\n                className={gaugeChartStyle}\n                style={{\n                    width,\n                    height,\n                }}\n            />\n        );\n    }\n}\n\nexport default Responsive(GaugeChart);\n","import React, {\n    PureComponent,\n    Fragment,\n} from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport { PropTypes } from 'prop-types';\nimport {\n    select,\n} from 'd3-selection';\nimport {\n    scalePoint,\n    scaleOrdinal,\n    scaleLinear,\n    scaleBand,\n} from 'd3-scale';\nimport { line } from 'd3-shape';\nimport {\n    axisLeft,\n    axisBottom,\n} from 'd3-axis';\nimport { schemeAccent } from 'd3-scale-chromatic';\nimport { max } from 'd3-array';\n\nimport Responsive from '../../General/Responsive';\nimport Float from '../../View/Float';\n\nimport styles from './styles.scss';\n\nconst propTypes = {\n    /**\n     * Size of the parent element/component (passed by the Responsive hoc)\n     */\n    boundingClientRect: PropTypes.shape({\n        width: PropTypes.number,\n        height: PropTypes.number,\n    }).isRequired,\n    /**\n     * The data to be visualized\n     * values: Array of categorical data grouped together\n     * columns: Array of category names\n     * colors: map of columns to respective colors\n     * Example data:\n     * {\n     *     values: [\n     *         { state: 'Province 1', river: 10, hills: 20 },\n     *         { state: 'Province 2', river: 1, hills: 3},\n     *     ],\n     *     columns: ['river', 'hills'],\n     *     colors: { river: '#ff00ff', hills: '#0000ff' },\n     * }\n     */\n    data: PropTypes.shape({\n        values: PropTypes.array,\n        columns: PropTypes.array,\n        colors: PropTypes.object,\n    }).isRequired,\n    /**\n     * Select a group for each data value.\n     */\n    groupSelector: PropTypes.func.isRequired,\n    /**\n     * Select a group for line data value\n     */\n    lineDataSelector: PropTypes.func,\n    /**\n     * Array of colors as hex color codes.\n     * It is used if colors are not provided through data.\n     */\n    colorScheme: PropTypes.arrayOf(PropTypes.string),\n    /**\n     * Additional css classes passed from parent\n     */\n    className: PropTypes.string,\n    /**\n     * Axis arguments for x-axis\n     * See <a href=\"https://github.com/d3/d3-axis#axis_tickArguments\">tickArguments</a>\n     */\n    xTickArguments: PropTypes.array, // eslint-disable-line react/forbid-prop-types\n    /**\n     * Axis arguments for y-axis\n     * See <a href=\"https://github.com/d3/d3-axis#axis_tickArguments\">tickArguments</a>\n     */\n    yTickArguments: PropTypes.array, // eslint-disable-line react/forbid-prop-types\n    /**\n     * Margins for the chart\n     */\n    margins: PropTypes.shape({\n        top: PropTypes.number,\n        right: PropTypes.number,\n        bottom: PropTypes.number,\n        left: PropTypes.number,\n    }),\n    tooltipRenderer: PropTypes.func,\n    showValue: PropTypes.bool,\n};\n\nconst defaultProps = {\n    className: '',\n    colorScheme: schemeAccent,\n    xTickArguments: [],\n    yTickArguments: [null, 's'],\n    lineDataSelector: undefined,\n    margins: {\n        top: 20,\n        right: 0,\n        bottom: 40,\n        left: 40,\n    },\n    showValue: false,\n    tooltipRenderer: undefined,\n};\n\n/**\n * GroupedBarChart is used to represent and compare different categories of two or more groups.\n * It helps to better visualize and interpret differences between categories across groups as they\n * are arranged side-by-side.\n */\nclass GroupedBarChart extends PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    componentDidMount() {\n        this.drawChart();\n    }\n\n    componentDidUpdate() {\n        this.redrawChart();\n    }\n\n    mouseOverRect = (node) => {\n        const {\n            key,\n            value,\n        } = node;\n        const {\n            tooltipRenderer,\n        } = this.props;\n\n        const content = tooltipRenderer ? ReactDOMServer.renderToString(tooltipRenderer(node))\n            : `${key}: ${value}`;\n\n        select(this.tooltip)\n            .html(`<div>${content}</div>`)\n            .style('display', 'inline-block');\n    }\n\n    mouseOverCircle = (node) => {\n        const {\n            tooltipRenderer,\n            lineDataSelector,\n            groupSelector,\n        } = this.props;\n\n        const content = tooltipRenderer ? ReactDOMServer.renderToString(tooltipRenderer(node))\n            : `${groupSelector(node)}: ${lineDataSelector(node)}`;\n\n        select(this.tooltip)\n            .html(`<div/>${content}</div>`)\n            .style('display', 'inline-block');\n    }\n\n    mouseMove = () => {\n        const { height, width } = this.tooltip.getBoundingClientRect();\n        select(this.tooltip)\n            // eslint-disable-next-line no-restricted-globals\n            .style('top', `${event.pageY - height - (height / 2)}px`)\n            // eslint-disable-next-line no-restricted-globals\n            .style('left', `${event.pageX - (width / 2)}px`);\n    }\n\n    mouseOutRect = () => {\n        select(this.tooltip)\n            .style('display', 'none');\n    }\n\n    redrawChart = () => {\n        const svg = select(this.svg);\n        svg.selectAll('*').remove();\n        this.drawChart();\n    }\n\n    drawChart = () => {\n        const {\n            boundingClientRect,\n            data,\n            groupSelector,\n            colorScheme,\n            margins,\n            xTickArguments,\n            yTickArguments,\n            lineDataSelector,\n            showValue,\n        } = this.props;\n\n        if (!boundingClientRect.width || !data || data.length === 0) {\n            return;\n        }\n\n        const {\n            width: containerWidth,\n            height: containerHeight,\n        } = boundingClientRect;\n\n        const {\n            top = 0,\n            right = 0,\n            bottom = 0,\n            left = 0,\n        } = margins;\n\n        const width = containerWidth - left - right;\n        const height = containerHeight - top - bottom;\n\n        const { values = [], columns = [], colors = undefined } = data;\n\n        const defaultColor = scaleOrdinal()\n            .range(colorScheme);\n\n        const x0 = scaleBand()\n            .domain(values.map(d => groupSelector(d)))\n            .rangeRound([0, width])\n            .paddingInner(0.1);\n\n        const x1 = scaleBand()\n            .domain(columns)\n            .rangeRound([0, x0.bandwidth()])\n            .padding(0.05);\n\n        const y = scaleLinear()\n            .domain([0, max(values, d => max(columns, key => d[key]))]).nice()\n            .rangeRound([height, 0]);\n\n        const group = select(this.svg)\n            .append('g')\n            .attr('transform', `translate(${left}, ${top})`);\n\n        const groups = group\n            .append('g')\n            .selectAll('g')\n            .data(values)\n            .enter()\n            .append('g')\n            .attr('transform', d => `translate(${x0(groupSelector(d))}, 0)`)\n            .selectAll('rect')\n            .data(d => columns.map(key => ({ key, value: d[key] })));\n\n        groups.enter()\n            .append('rect')\n            .attr('class', `bar ${styles.bar}`)\n            .on('mouseover', d => this.mouseOverRect(d))\n            .on('mousemove', this.mouseMove)\n            .on('mouseout', this.mouseOutRect)\n            .attr('x', d => x1(d.key))\n            .attr('y', d => y(d.value))\n            .attr('width', x1.bandwidth())\n            .attr('height', d => y(0) - y(d.value))\n            .attr('fill', d => (colors ? colors[d.key] : defaultColor(d.key)));\n        if (showValue) {\n            groups\n                .enter()\n                .append('text')\n                .attr('class', `text ${styles.text}`)\n                .attr('x', d => x1(d.key) + (x1.bandwidth() / 2))\n                .attr('y', d => y(d.value) - 2)\n                .text(({ value }) => value);\n        }\n\n        group\n            .append('g')\n            .attr('class', `x-axis ${styles.xAxis}`)\n            .attr('transform', `translate(0, ${height})`)\n            .call(axisBottom(x0).tickSize(0).tickPadding(6).ticks(...xTickArguments));\n\n        group\n            .append('g')\n            .attr('class', `y-axis ${styles.yAxis}`)\n            .call(axisLeft(y).ticks(...yTickArguments));\n\n        if (lineDataSelector) {\n            const lineX = scalePoint()\n                .domain(values.map(d => groupSelector(d)))\n                .rangeRound([0, width])\n                .padding(0.1);\n\n            const lineY = scaleLinear()\n                .domain([0, max(values, d => max(columns, key => d[key]))]).nice()\n                .rangeRound([height, 0]);\n\n            const spline = line()\n                .x(d => lineX(groupSelector(d)))\n                .y(d => lineY(lineDataSelector(d)));\n\n            group\n                .append('g')\n                .append('path')\n                .datum(values)\n                .attr('class', `${styles.line} line`)\n                .attr('fill', 'none')\n                .attr('d', spline);\n\n            group\n                .append('g')\n                .selectAll('.dot')\n                .data(values)\n                .enter()\n                .append('circle')\n                .attr('class', `${styles.dot} dot`)\n                .on('mouseover', d => this.mouseOverCircle(d))\n                .on('mousemove', this.mouseMove)\n                .on('mouseout', this.mouseOutRect)\n                .attr('cx', d => lineX(groupSelector(d)))\n                .attr('cy', d => lineY(lineDataSelector(d)))\n                .attr('r', 4);\n        }\n    }\n\n    render() {\n        const {\n            className,\n            boundingClientRect: {\n                width,\n                height,\n            },\n        } = this.props;\n        const svgClassName = [\n            'grouped-bar-chart',\n            styles.groupedBarChart,\n            className,\n        ].join(' ');\n\n        return (\n            <Fragment>\n                <svg\n                    className={svgClassName}\n                    ref={(elem) => { this.svg = elem; }}\n                    style={{\n                        width,\n                        height,\n                    }}\n                />\n                <Float>\n                    <div\n                        ref={(el) => { this.tooltip = el; }}\n                        className={styles.tooltip}\n                    />\n                </Float>\n            </Fragment>\n        );\n    }\n}\n\nexport default Responsive(GroupedBarChart);\n","export default {\n    data: [\n        {\n            label: 'Floyd',\n            value: 371,\n        },\n        {\n            label: 'Amie',\n            value: 450,\n        },\n        {\n            label: 'Key',\n            value: 838,\n        },\n        {\n            label: 'Monique',\n            value: 931,\n        },\n        {\n            label: 'Patterson',\n            value: 293,\n        },\n        {\n            label: 'Merle',\n            value: 338,\n        },\n        {\n            label: 'Fernandez',\n            value: 886,\n        },\n        {\n            label: 'Swanson',\n            value: 449,\n        },\n        {\n            label: 'Dudley',\n            value: 950,\n        },\n        {\n            label: 'Morgan',\n            value: 808,\n        },\n        {\n            label: 'Harper',\n            value: 538,\n        },\n        {\n            label: 'Mcdowell',\n            value: 561,\n        },\n        {\n            label: 'Hernandez',\n            value: 196,\n        },\n        {\n            label: 'Reed',\n            value: 297,\n        },\n        {\n            label: 'Flowers',\n            value: 472,\n        },\n        {\n            label: 'Farrell',\n            value: 602,\n        },\n        {\n            label: 'Ayala',\n            value: 148,\n        },\n        {\n            label: 'Sherrie',\n            value: 700,\n        },\n        {\n            label: 'Bond',\n            value: 464,\n        },\n        {\n            label: 'Gross',\n            value: 692,\n        },\n        {\n            label: 'Katharine',\n            value: 211,\n        },\n        {\n            label: 'Atkinson',\n            value: 647,\n        },\n        {\n            label: 'Mable',\n            value: 255,\n        },\n        {\n            label: 'Callahan',\n            value: 387,\n        },\n        {\n            label: 'Davenport',\n            value: 733,\n        },\n        {\n            label: 'Maggie',\n            value: 687,\n        },\n    ],\n};\n","export default {\n    key: 'base',\n    organs: [\n        {\n            key: 'Organ 26ZrPiNH',\n            organs: [\n                {\n                    key: 'Organ 2Xu5ElnL',\n                    organs: [],\n                    title: 'asda',\n                },\n                {\n                    key: 'Organ pDRS6XpU',\n                    organs: [],\n                    title: 'aaa',\n                },\n            ],\n            title: 'a',\n        },\n        {\n            key: 'Organ ewLqv3qw',\n            organs: [],\n            title: 'a',\n        },\n        {\n            key: 'Organ 265KFBWM',\n            organs: [],\n            title: 'b',\n        },\n        {\n            key: 'Organ ZQbCvJMo',\n            organs: [],\n            title: 'asd',\n        },\n        {\n            key: 'Organ Hmb4DeeR',\n            organs: [],\n            title: 'asd',\n        },\n        {\n            key: 'Organ ZtsyViCS',\n            organs: [\n                {\n                    key: 'organ-Y6yKWTRE',\n                    organs: [],\n                    title: 'a',\n                },\n                {\n                    key: 'organ-YMLdoFyR',\n                    organs: [],\n                    title: 'aasd',\n                },\n                {\n                    key: 'organ-5MJxDJxM',\n                    organs: [],\n                    title: 'org',\n                },\n                {\n                    key: 'organ-dgWHIFSX',\n                    organs: [],\n                    title: 'sad',\n                },\n            ],\n            title: 'asdasd',\n        },\n    ],\n    title: 'Base',\n};\n","export default {\n    labels: [\n        'Health', 'Pollution', 'Pollution', 'Disasters', 'Crisis', 'Environment',\n        'Public Health', 'Refugees', 'Condition', 'Migration', 'Trafficking', 'Deforestation', 'Global Warming',\n        'Diseases', 'Resettlement', 'Immigrants', 'Nutrition',\n    ],\n    values: [\n        [2, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0],\n        [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0],\n        [0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0],\n        [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0],\n        [1, 0, 0, 1, 0, 0, 4, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0],\n        [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0],\n        [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0],\n        [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0],\n        [0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0],\n        [1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 9, 0, 0, 1, 1, 0, 1, 1, 0],\n        [1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0],\n        [1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 7, 1, 0, 0, 1, 0, 0],\n        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0],\n        [0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n        [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0],\n        [0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0],\n    ],\n};\n","export default {\n    labels: ['Pollution', 'Environment', 'Disasters', 'Refugees', 'Crisis', 'Health'],\n    values: [\n        [1.000000, -0.852162, -0.847551, -0.776168, 0.681172, -0.867659],\n        [-0.852162, 1.000000, 0.902033, 0.832447, -0.699938, 0.782496],\n        [-0.847551, 0.902033, 1.000000, 0.790949, -0.710214, 0.887980],\n        [-0.776168, 0.832447, 0.790949, 1.000000, -0.448759, 0.658748],\n        [0.681172, -0.699938, -0.710214, -0.448759, 1.000000, -0.712441],\n        [-0.867659, 0.782496, 0.887980, 0.658748, -0.712441, 1.000000],\n    ],\n};\n","export default [\n    {\n        score: 10,\n        value: 'gold',\n        cluster: 0,\n    },\n    {\n        score: 9,\n        value: 'internet',\n        cluster: 0,\n    },\n    {\n        score: 8,\n        value: 'page',\n        cluster: 0,\n    },\n    {\n        score: 7,\n        value: 'people',\n        cluster: 0,\n    },\n    {\n        score: 6,\n        value: 'post',\n        cluster: 0,\n    },\n    {\n        score: 5,\n        value: 'goal',\n        cluster: 0,\n    },\n    {\n        score: 4,\n        value: 'exemplary',\n        cluster: 0,\n    },\n    {\n        score: 3,\n        value: 'yesterdays',\n        cluster: 0,\n    },\n    {\n        score: 2,\n        value: 'reddit',\n        cluster: 0,\n    },\n    {\n        score: 1,\n        value: 'encourage',\n        cluster: 0,\n    },\n    {\n        score: 10,\n        value: 'said',\n        cluster: 1,\n    },\n    {\n        score: 9,\n        value: 'child',\n        cluster: 1,\n    },\n    {\n        score: 8,\n        value: 'health',\n        cluster: 1,\n    },\n    {\n        score: 7,\n        value: 'need',\n        cluster: 1,\n    },\n    {\n        score: 6,\n        value: 'humanitarian',\n        cluster: 1,\n    },\n    {\n        score: 5,\n        value: 'include',\n        cluster: 1,\n    },\n    {\n        score: 4,\n        value: 'crisis',\n        cluster: 1,\n    },\n    {\n        score: 3,\n        value: 'access',\n        cluster: 1,\n    },\n    {\n        score: 2,\n        value: 'uhrc',\n        cluster: 1,\n    },\n    {\n        score: 1,\n        value: 'sekaggya',\n        cluster: 1,\n    },\n    {\n        score: 10,\n        value: 'computer',\n        cluster: 2,\n    },\n    {\n        score: 9,\n        value: 'ﬂow',\n        cluster: 2,\n    },\n    {\n        score: 8,\n        value: 'ff',\n        cluster: 2,\n    },\n    {\n        score: 7,\n        value: 'fertiliser',\n        cluster: 2,\n    },\n    {\n        score: 6,\n        value: 'fertilizer',\n        cluster: 2,\n    },\n    {\n        score: 5,\n        value: 'fetch',\n        cluster: 2,\n    },\n    {\n        score: 4,\n        value: 'fever',\n        cluster: 2,\n    },\n    {\n        score: 3,\n        value: 'fewer',\n        cluster: 2,\n    },\n    {\n        score: 2,\n        value: 'field',\n        cluster: 2,\n    },\n    {\n        score: 1,\n        value: 'female',\n        cluster: 2,\n    },\n    {\n        score: 10,\n        value: 'esewa',\n        cluster: 3,\n    },\n    {\n        score: 9,\n        value: 'asdfasdf',\n        cluster: 3,\n    },\n    {\n        score: 8,\n        value: 'payment',\n        cluster: 3,\n    },\n    {\n        score: 7,\n        value: 'transaction',\n        cluster: 3,\n    },\n    {\n        score: 6,\n        value: 'user',\n        cluster: 3,\n    },\n    {\n        score: 5,\n        value: 'merchant',\n        cluster: 3,\n    },\n    {\n        score: 4,\n        value: 'sdk',\n        cluster: 3,\n    },\n    {\n        score: 3,\n        value: 'application',\n        cluster: 3,\n    },\n    {\n        score: 2,\n        value: 'mobile',\n        cluster: 3,\n    },\n    {\n        score: 1,\n        value: 'server',\n        cluster: 3,\n    },\n    {\n        score: 10,\n        value: 'food',\n        cluster: 4,\n    },\n    {\n        score: 9,\n        value: 'people',\n        cluster: 4,\n    },\n    {\n        score: 8,\n        value: 'work',\n        cluster: 4,\n    },\n    {\n        score: 7,\n        value: 'million',\n        cluster: 4,\n    },\n    {\n        score: 6,\n        value: 'yemen',\n        cluster: 4,\n    },\n    {\n        score: 5,\n        value: 'cold',\n        cluster: 4,\n    },\n    {\n        score: 4,\n        value: 'lets',\n        cluster: 4,\n    },\n    {\n        score: 3,\n        value: 'child',\n        cluster: 4,\n    },\n    {\n        score: 2,\n        value: 'flu',\n        cluster: 4,\n    },\n    {\n        score: 1,\n        value: 'result',\n        cluster: 4,\n    },\n];\n","export default {\n    nodes: [\n        { id: 'Health', group: 1 },\n        { id: 'Crisis', group: 2 },\n        { id: 'Refugees', group: 3 },\n        { id: 'Disasters', group: 4 },\n        { id: 'Population', group: 7 },\n        { id: 'Diseases', group: 1 },\n        { id: 'Nutrition', group: 1 },\n        { id: 'Environment', group: 1 },\n        { id: 'Hunger', group: 2 },\n        { id: 'Famine', group: 2 },\n        { id: 'Death', group: 2 },\n        { id: 'Global Warming', group: 2 },\n        { id: 'Migration', group: 3 },\n        { id: 'Trafficking', group: 3 },\n        { id: 'Language', group: 3 },\n        { id: 'Cultural', group: 3 },\n        { id: 'Resettlement', group: 3 },\n        { id: 'Social Service', group: 3 },\n        { id: 'State', group: 3 },\n        { id: 'Programs', group: 3 },\n        { id: 'Terrorism', group: 4 },\n        { id: 'Wildfires', group: 4 },\n        { id: 'Earthquake', group: 4 },\n        { id: 'Landslide', group: 4 },\n        { id: 'Floods', group: 4 },\n        { id: 'Hurricane', group: 4 },\n        { id: 'Tornado', group: 4 },\n        { id: 'Pollution', group: 5 },\n        { id: 'Public Health', group: 5 },\n        { id: 'Biogas', group: 5 },\n        { id: 'Carbon footprint', group: 5 },\n        { id: 'Drinking Water', group: 5 },\n        { id: 'Gasonline', group: 5 },\n    ],\n    links: [\n        { source: 'Health', target: 'Population', value: 4 },\n        { source: 'Health', target: 'Diseases', value: 4 },\n        { source: 'Health', target: 'Nutrition', value: 8 },\n        { source: 'Health', target: 'Environment', value: 8 },\n        { source: 'Crisis', target: 'Hunger', value: 4 },\n        { source: 'Crisis', target: 'Famine', value: 4 },\n        { source: 'Crisis', target: 'Death', value: 8 },\n        { source: 'Crisis', target: 'Environment', value: 8 },\n        { source: 'Crisis', target: 'Global Warming', value: 8 },\n        { source: 'Refugees', target: 'Migration', value: 4 },\n        { source: 'Refugees', target: 'Trafficking', value: 4 },\n        { source: 'Refugees', target: 'Language', value: 8 },\n        { source: 'Refugees', target: 'Cultural', value: 8 },\n        { source: 'Refugees', target: 'Resettlement', value: 8 },\n        { source: 'Refugees', target: 'Social Service', value: 8 },\n        { source: 'Refugees', target: 'State', value: 8 },\n        { source: 'Refugees', target: 'Programs', value: 8 },\n        { source: 'Disasters', target: 'Migration', value: 4 },\n        { source: 'Disasters', target: 'Terrorism', value: 4 },\n        { source: 'Disasters', target: 'Wildfires', value: 8 },\n        { source: 'Disasters', target: 'Earthquake', value: 8 },\n        { source: 'Disasters', target: 'Landslide', value: 8 },\n        { source: 'Disasters', target: 'Floods', value: 1 },\n        { source: 'Disasters', target: 'Hurricane', value: 2 },\n        { source: 'Disasters', target: 'Tornado', value: 4 },\n        { source: 'Environment', target: 'Pollution', value: 1 },\n        { source: 'Environment', target: 'Global Warming', value: 4 },\n        { source: 'Environment', target: 'Public Health', value: 4 },\n        { source: 'Environment', target: 'Biogas', value: 2 },\n        { source: 'Environment', target: 'Carbon footprint', value: 8 },\n        { source: 'Environment', target: 'Drinking Water', value: 2 },\n        { source: 'Environment', target: 'Gasonline', value: 8 },\n        { source: 'Health', target: 'Crisis', value: 8 },\n        { source: 'Health', target: 'Refugees', value: 8 },\n        { source: 'Health', target: 'Disasters', value: 8 },\n        { source: 'Health', target: 'Environment', value: 8 },\n        { source: 'Crisis', target: 'Refugees', value: 8 },\n        { source: 'Crisis', target: 'Disasters', value: 8 },\n        { source: 'Crisis', target: 'Environment', value: 8 },\n        { source: 'Refugees', target: 'Disasters', value: 8 },\n        { source: 'Refugees', target: 'Environment', value: 8 },\n    ],\n};\n","export default {\n    name: 'TOPICS',\n    color: '#fff',\n    children: [{\n        name: 'Health',\n        color: '#f00',\n        children: [{\n            name: 'Population',\n            size: 4,\n            color: '#f00',\n        }, {\n            name: 'Diseases',\n            size: 4,\n            color: '#f00',\n        }],\n    }, {\n        name: 'Crisis',\n        color: '#0f0',\n        children: [{\n            name: 'Hunger',\n            size: 3,\n            color: '#0f0',\n        }, {\n            name: 'Famine',\n            size: 3,\n            color: '#0f0',\n        }, {\n            name: 'Death',\n            size: 3,\n            color: '#0f0',\n        }],\n    }, {\n        name: 'Refugees',\n        color: '#00f',\n        children: [{\n            name: 'Migration',\n            size: 4,\n            color: '#00f',\n        }, {\n            name: 'Trafficking',\n            size: 4,\n            color: '#00f',\n        }],\n    }, {\n        name: 'Disasters',\n        color: '#ff0',\n        children: [{\n            name: 'Earthquake',\n            size: 4,\n            color: '#ff0',\n        }, {\n            name: 'Landslide',\n            size: 4,\n            color: '#ff0',\n        }, {\n            name: 'Wildfire',\n            size: 4,\n            color: '#ff0',\n        }],\n    }, {\n        name: 'Environment',\n        color: '#0ff',\n        children: [{\n            name: 'Deforestation',\n            size: 4,\n            color: '#0ff',\n        }, {\n            name: 'Pollution',\n            size: 4,\n            color: '#0ff',\n        }, {\n            name: 'Global warming',\n            size: 4,\n            color: '#0ff',\n        }, {\n            name: 'Public health',\n            size: 4,\n            color: '#0ff',\n        }],\n    }],\n};\n","export default {\n    data: [\n        { label: 1, value: 19 },\n        { label: 2, value: 5 },\n        { label: 3, value: 13 },\n        { label: 4, value: 17 },\n        { label: 5, value: 19 },\n        { label: 6, value: 27 },\n    ],\n};\n","export default [\n    {\n        name: 'Carbon',\n        A: 50,\n        B: 60,\n        C: 30,\n    },\n    {\n        name: 'Aluminium',\n        A: 80,\n        B: 10,\n        C: 50,\n    },\n    {\n        name: 'Iron',\n        A: 30,\n        B: 30,\n        C: 37,\n    },\n    {\n        name: 'Gold',\n        A: 50,\n        B: 70,\n        C: 80,\n    },\n    {\n        name: 'Calcium',\n        A: 60,\n        B: 90,\n        C: 40,\n    },\n    {\n        name: 'Silver',\n        A: 80,\n        B: 20,\n        C: 10,\n    },\n];\n","export default {\n    nodes: [\n        { name: 'Agricultural waste' },\n        { name: 'Bio-conversion' },\n        { name: 'Liquid' },\n        { name: 'Losses' },\n        { name: 'Solid' },\n        { name: 'Gas' },\n        { name: 'Biofuel imports' },\n        { name: 'Biomass imports' },\n        { name: 'Coal imports' },\n        { name: 'Coal' },\n        { name: 'Coal reserves' },\n        { name: 'District heating' },\n        { name: 'Industry' },\n        { name: 'Heating and cooling - commercial' },\n        { name: 'Heating and cooling - homes' },\n        { name: 'Electricity grid' },\n        { name: 'Over generation / exports' },\n        { name: 'H2 conversion' },\n        { name: 'Road transport' },\n        { name: 'Agriculture' },\n        { name: 'Rail transport' },\n        { name: 'Lighting & appliances - commercial' },\n        { name: 'Lighting & appliances - homes' },\n        { name: 'Gas imports' },\n        { name: 'Ngas' },\n        { name: 'Gas reserves' },\n        { name: 'Thermal generation' },\n        { name: 'Geothermal' },\n        { name: 'H2' },\n        { name: 'Hydro' },\n        { name: 'International shipping' },\n        { name: 'Domestic aviation' },\n        { name: 'International aviation' },\n        { name: 'National navigation' },\n        { name: 'Marine algae' },\n        { name: 'Nuclear' },\n        { name: 'Oil imports' },\n        { name: 'Oil' },\n        { name: 'Oil reserves' },\n        { name: 'Other waste' },\n        { name: 'Pumped heat' },\n        { name: 'Solar PV' },\n        { name: 'Solar Thermal' },\n        { name: 'Solar' },\n        { name: 'Tidal' },\n        { name: 'UK land based bioenergy' },\n        { name: 'Wave' },\n        { name: 'Wind' },\n    ],\n    links: [\n        { source: 0, target: 1, value: 124.729 },\n        { source: 1, target: 2, value: 0.597 },\n        { source: 1, target: 3, value: 26.862 },\n        { source: 1, target: 4, value: 280.322 },\n        { source: 1, target: 5, value: 81.144 },\n        { source: 6, target: 2, value: 35 },\n        { source: 7, target: 4, value: 35 },\n        { source: 8, target: 9, value: 11.606 },\n        { source: 10, target: 9, value: 63.965 },\n        { source: 9, target: 4, value: 75.571 },\n        { source: 11, target: 12, value: 10.639 },\n        { source: 11, target: 13, value: 22.505 },\n        { source: 11, target: 14, value: 46.184 },\n        { source: 15, target: 16, value: 104.453 },\n        { source: 15, target: 14, value: 113.726 },\n        { source: 15, target: 17, value: 27.14 },\n        { source: 15, target: 12, value: 342.165 },\n        { source: 15, target: 18, value: 37.797 },\n        { source: 15, target: 19, value: 4.412 },\n        { source: 15, target: 13, value: 40.858 },\n        { source: 15, target: 3, value: 56.691 },\n        { source: 15, target: 20, value: 7.863 },\n        { source: 15, target: 21, value: 90.008 },\n        { source: 15, target: 22, value: 93.494 },\n        { source: 23, target: 24, value: 40.719 },\n        { source: 25, target: 24, value: 82.233 },\n        { source: 5, target: 13, value: 0.129 },\n        { source: 5, target: 3, value: 1.401 },\n        { source: 5, target: 26, value: 151.891 },\n        { source: 5, target: 19, value: 2.096 },\n        { source: 5, target: 12, value: 48.58 },\n        { source: 27, target: 15, value: 7.013 },\n        { source: 17, target: 28, value: 20.897 },\n        { source: 17, target: 3, value: 6.242 },\n        { source: 28, target: 18, value: 20.897 },\n        { source: 29, target: 15, value: 6.995 },\n        { source: 2, target: 12, value: 121.066 },\n        { source: 2, target: 30, value: 128.69 },\n        { source: 2, target: 18, value: 135.835 },\n        { source: 2, target: 31, value: 14.458 },\n        { source: 2, target: 32, value: 206.267 },\n        { source: 2, target: 19, value: 3.64 },\n        { source: 2, target: 33, value: 33.218 },\n        { source: 2, target: 20, value: 4.413 },\n        { source: 34, target: 1, value: 4.375 },\n        { source: 24, target: 5, value: 122.952 },\n        { source: 35, target: 26, value: 839.978 },\n        { source: 36, target: 37, value: 504.287 },\n        { source: 38, target: 37, value: 107.703 },\n        { source: 37, target: 2, value: 611.99 },\n        { source: 39, target: 4, value: 56.587 },\n        { source: 39, target: 1, value: 77.81 },\n        { source: 40, target: 14, value: 193.026 },\n        { source: 40, target: 13, value: 70.672 },\n        { source: 41, target: 15, value: 59.901 },\n        { source: 42, target: 14, value: 19.263 },\n        { source: 43, target: 42, value: 19.263 },\n        { source: 43, target: 41, value: 59.901 },\n        { source: 4, target: 19, value: 0.882 },\n        { source: 4, target: 26, value: 400.12 },\n        { source: 4, target: 12, value: 46.477 },\n        { source: 26, target: 15, value: 525.531 },\n        { source: 26, target: 3, value: 787.129 },\n        { source: 26, target: 11, value: 79.329 },\n        { source: 44, target: 15, value: 9.452 },\n        { source: 45, target: 1, value: 182.01 },\n        { source: 46, target: 15, value: 19.013 },\n        { source: 47, target: 15, value: 289.366 },\n    ],\n};\n","export default [\n    {\n        month: 'Q1-2016',\n        apples: 3840,\n        bananas: 1920,\n        cherries: -1960,\n        dates: -400,\n    },\n    {\n        month: 'Q2-2016',\n        apples: 1600,\n        bananas: 1440,\n        cherries: -960,\n        dates: -400,\n    },\n    {\n        month: 'Q3-2016',\n        apples: 640,\n        bananas: 960,\n        cherries: -640,\n        dates: -600,\n    },\n    {\n        month: 'Q4-2016',\n        apples: 320,\n        bananas: 480,\n        cherries: -640,\n        dates: -400,\n    },\n];\n","export default [\n    {\n        time: 1,\n        apples: 2761,\n        oranges: 4354,\n        mango: 1697,\n        papaya: 3873,\n    },\n    {\n        time: 2,\n        apples: 1230,\n        oranges: 4283,\n        mango: 4735,\n        papaya: 1954,\n    },\n    {\n        time: 3,\n        apples: 1161,\n        oranges: 2008,\n        mango: 4793,\n        papaya: 2796,\n    },\n    {\n        time: 4,\n        apples: 2787,\n        oranges: 2861,\n        mango: 4361,\n        papaya: 2603,\n    },\n    {\n        time: 5,\n        apples: 3300,\n        oranges: 2185,\n        mango: 4383,\n        papaya: 1712,\n    },\n    {\n        time: 6,\n        apples: 4312,\n        oranges: 4187,\n        mango: 2363,\n        papaya: 2341,\n    },\n    {\n        time: 7,\n        apples: 2148,\n        oranges: 4086,\n        mango: 2833,\n        papaya: 3127,\n    },\n    {\n        time: 8,\n        apples: 1003,\n        oranges: 3050,\n        mango: 4713,\n        papaya: 4049,\n    },\n    {\n        time: 9,\n        apples: 3116,\n        oranges: 3265,\n        mango: 1734,\n        papaya: 3097,\n    },\n    {\n        time: 10,\n        apples: 2271,\n        oranges: 3753,\n        mango: 1314,\n        papaya: 3783,\n    },\n    {\n        time: 11,\n        apples: 4426,\n        oranges: 4888,\n        mango: 1044,\n        papaya: 4537,\n    },\n    {\n        time: 12,\n        apples: 4764,\n        oranges: 3825,\n        mango: 1770,\n        papaya: 1122,\n    },\n    {\n        time: 13,\n        apples: 1582,\n        oranges: 4082,\n        mango: 2299,\n        papaya: 2372,\n    },\n    {\n        time: 14,\n        apples: 1072,\n        oranges: 3593,\n        mango: 1334,\n        papaya: 4321,\n    },\n    {\n        time: 15,\n        apples: 1964,\n        oranges: 4664,\n        mango: 4014,\n        papaya: 4382,\n    },\n    {\n        time: 16,\n        apples: 2991,\n        oranges: 4800,\n        mango: 4479,\n        papaya: 4598,\n    },\n    {\n        time: 17,\n        apples: 4381,\n        oranges: 3607,\n        mango: 3862,\n        papaya: 3540,\n    },\n    {\n        time: 18,\n        apples: 4900,\n        oranges: 2975,\n        mango: 1836,\n        papaya: 2850,\n    },\n    {\n        time: 19,\n        apples: 3538,\n        oranges: 4645,\n        mango: 1092,\n        papaya: 1962,\n    },\n    {\n        time: 20,\n        apples: 4588,\n        oranges: 2744,\n        mango: 1941,\n        papaya: 3286,\n    },\n    {\n        time: 21,\n        apples: 2970,\n        oranges: 4712,\n        mango: 2724,\n        papaya: 1766,\n    },\n    {\n        time: 22,\n        apples: 2813,\n        oranges: 2452,\n        mango: 4386,\n        papaya: 4896,\n    },\n    {\n        time: 23,\n        apples: 1200,\n        oranges: 4331,\n        mango: 2585,\n        papaya: 1316,\n    },\n    {\n        time: 24,\n        apples: 3853,\n        oranges: 2160,\n        mango: 2777,\n        papaya: 2873,\n    },\n    {\n        time: 25,\n        apples: 2863,\n        oranges: 3231,\n        mango: 4391,\n        papaya: 4770,\n    },\n    {\n        time: 26,\n        apples: 3809,\n        oranges: 3326,\n        mango: 1627,\n        papaya: 2722,\n    },\n    {\n        time: 27,\n        apples: 3550,\n        oranges: 3407,\n        mango: 1016,\n        papaya: 3924,\n    },\n    {\n        time: 28,\n        apples: 4294,\n        oranges: 3290,\n        mango: 1367,\n        papaya: 1895,\n    },\n    {\n        time: 29,\n        apples: 2889,\n        oranges: 2373,\n        mango: 3432,\n        papaya: 4407,\n    },\n    {\n        time: 30,\n        apples: 4862,\n        oranges: 4223,\n        mango: 3824,\n        papaya: 1776,\n    },\n    {\n        time: 31,\n        apples: 1613,\n        oranges: 3511,\n        mango: 1844,\n        papaya: 4475,\n    },\n    {\n        time: 32,\n        apples: 1210,\n        oranges: 4237,\n        mango: 2320,\n        papaya: 3233,\n    },\n    {\n        time: 33,\n        apples: 2527,\n        oranges: 3820,\n        mango: 1718,\n        papaya: 1911,\n    },\n    {\n        time: 34,\n        apples: 4940,\n        oranges: 2143,\n        mango: 1634,\n        papaya: 4365,\n    },\n    {\n        time: 35,\n        apples: 4036,\n        oranges: 4452,\n        mango: 2931,\n        papaya: 1240,\n    },\n    {\n        time: 36,\n        apples: 3530,\n        oranges: 3219,\n        mango: 3091,\n        papaya: 2685,\n    },\n    {\n        time: 37,\n        apples: 2360,\n        oranges: 2427,\n        mango: 1547,\n        papaya: 4101,\n    },\n    {\n        time: 38,\n        apples: 4918,\n        oranges: 4776,\n        mango: 4410,\n        papaya: 1547,\n    },\n    {\n        time: 39,\n        apples: 4729,\n        oranges: 3322,\n        mango: 2278,\n        papaya: 4480,\n    },\n    {\n        time: 40,\n        apples: 2098,\n        oranges: 3345,\n        mango: 1476,\n        papaya: 1614,\n    },\n    {\n        time: 41,\n        apples: 4170,\n        oranges: 4832,\n        mango: 3061,\n        papaya: 1169,\n    },\n    {\n        time: 42,\n        apples: 2637,\n        oranges: 4502,\n        mango: 3220,\n        papaya: 4010,\n    },\n    {\n        time: 43,\n        apples: 1372,\n        oranges: 3072,\n        mango: 3588,\n        papaya: 1567,\n    },\n    {\n        time: 44,\n        apples: 4819,\n        oranges: 3204,\n        mango: 4191,\n        papaya: 3808,\n    },\n    {\n        time: 45,\n        apples: 2776,\n        oranges: 2983,\n        mango: 1359,\n        papaya: 2969,\n    },\n    {\n        time: 46,\n        apples: 3230,\n        oranges: 4498,\n        mango: 1385,\n        papaya: 4658,\n    },\n    {\n        time: 47,\n        apples: 2881,\n        oranges: 3543,\n        mango: 4267,\n        papaya: 3622,\n    },\n    {\n        time: 48,\n        apples: 2099,\n        oranges: 3021,\n        mango: 1316,\n        papaya: 2331,\n    },\n    {\n        time: 49,\n        apples: 2479,\n        oranges: 2569,\n        mango: 1617,\n        papaya: 2537,\n    },\n    {\n        time: 50,\n        apples: 3322,\n        oranges: 2070,\n        mango: 2265,\n        papaya: 3226,\n    },\n    {\n        time: 51,\n        apples: 2048,\n        oranges: 4369,\n        mango: 1422,\n        papaya: 2536,\n    },\n    {\n        time: 52,\n        apples: 4369,\n        oranges: 3299,\n        mango: 1456,\n        papaya: 1865,\n    },\n    {\n        time: 53,\n        apples: 1138,\n        oranges: 2524,\n        mango: 1279,\n        papaya: 2424,\n    },\n    {\n        time: 54,\n        apples: 2162,\n        oranges: 2367,\n        mango: 4334,\n        papaya: 2115,\n    },\n    {\n        time: 55,\n        apples: 3170,\n        oranges: 3092,\n        mango: 2913,\n        papaya: 4968,\n    },\n    {\n        time: 56,\n        apples: 1548,\n        oranges: 2123,\n        mango: 1234,\n        papaya: 3970,\n    },\n    {\n        time: 57,\n        apples: 3965,\n        oranges: 2327,\n        mango: 1560,\n        papaya: 3209,\n    },\n    {\n        time: 58,\n        apples: 1301,\n        oranges: 3229,\n        mango: 2595,\n        papaya: 4580,\n    },\n    {\n        time: 59,\n        apples: 2639,\n        oranges: 4788,\n        mango: 3444,\n        papaya: 4115,\n    },\n    {\n        time: 60,\n        apples: 3198,\n        oranges: 4112,\n        mango: 1376,\n        papaya: 3871,\n    },\n    {\n        time: 61,\n        apples: 2726,\n        oranges: 3056,\n        mango: 3233,\n        papaya: 3251,\n    },\n    {\n        time: 62,\n        apples: 3794,\n        oranges: 2643,\n        mango: 4619,\n        papaya: 2317,\n    },\n    {\n        time: 63,\n        apples: 4879,\n        oranges: 2608,\n        mango: 2325,\n        papaya: 1321,\n    },\n    {\n        time: 64,\n        apples: 4330,\n        oranges: 3444,\n        mango: 4676,\n        papaya: 3187,\n    },\n    {\n        time: 65,\n        apples: 3530,\n        oranges: 2422,\n        mango: 2793,\n        papaya: 2419,\n    },\n    {\n        time: 66,\n        apples: 3734,\n        oranges: 2067,\n        mango: 2575,\n        papaya: 1629,\n    },\n    {\n        time: 67,\n        apples: 4720,\n        oranges: 4610,\n        mango: 4913,\n        papaya: 3941,\n    },\n    {\n        time: 68,\n        apples: 3698,\n        oranges: 2298,\n        mango: 1540,\n        papaya: 3876,\n    },\n    {\n        time: 69,\n        apples: 3483,\n        oranges: 2920,\n        mango: 3381,\n        papaya: 3473,\n    },\n    {\n        time: 70,\n        apples: 2584,\n        oranges: 4923,\n        mango: 4436,\n        papaya: 4337,\n    },\n    {\n        time: 71,\n        apples: 2756,\n        oranges: 2526,\n        mango: 4242,\n        papaya: 4199,\n    },\n    {\n        time: 72,\n        apples: 4993,\n        oranges: 4835,\n        mango: 4935,\n        papaya: 3690,\n    },\n    {\n        time: 73,\n        apples: 3996,\n        oranges: 3268,\n        mango: 4686,\n        papaya: 2707,\n    },\n    {\n        time: 74,\n        apples: 4243,\n        oranges: 3484,\n        mango: 4855,\n        papaya: 1660,\n    },\n    {\n        time: 75,\n        apples: 1303,\n        oranges: 2235,\n        mango: 2317,\n        papaya: 4755,\n    },\n    {\n        time: 76,\n        apples: 3223,\n        oranges: 3787,\n        mango: 3835,\n        papaya: 1728,\n    },\n    {\n        time: 77,\n        apples: 1642,\n        oranges: 2945,\n        mango: 1405,\n        papaya: 3015,\n    },\n    {\n        time: 78,\n        apples: 1215,\n        oranges: 2993,\n        mango: 3679,\n        papaya: 2908,\n    },\n    {\n        time: 79,\n        apples: 1017,\n        oranges: 3941,\n        mango: 4404,\n        papaya: 3755,\n    },\n    {\n        time: 80,\n        apples: 1502,\n        oranges: 2781,\n        mango: 4652,\n        papaya: 1757,\n    },\n    {\n        time: 81,\n        apples: 2929,\n        oranges: 4753,\n        mango: 1727,\n        papaya: 3306,\n    },\n    {\n        time: 82,\n        apples: 1191,\n        oranges: 4200,\n        mango: 2404,\n        papaya: 3941,\n    },\n    {\n        time: 83,\n        apples: 1963,\n        oranges: 2968,\n        mango: 2680,\n        papaya: 4789,\n    },\n    {\n        time: 84,\n        apples: 1022,\n        oranges: 2733,\n        mango: 2477,\n        papaya: 4660,\n    },\n    {\n        time: 85,\n        apples: 1130,\n        oranges: 3445,\n        mango: 3389,\n        papaya: 2324,\n    },\n    {\n        time: 86,\n        apples: 2125,\n        oranges: 4764,\n        mango: 3561,\n        papaya: 2609,\n    },\n    {\n        time: 87,\n        apples: 2323,\n        oranges: 2555,\n        mango: 4387,\n        papaya: 3927,\n    },\n    {\n        time: 88,\n        apples: 1154,\n        oranges: 3402,\n        mango: 4396,\n        papaya: 3924,\n    },\n    {\n        time: 89,\n        apples: 1166,\n        oranges: 4628,\n        mango: 1647,\n        papaya: 1429,\n    },\n    {\n        time: 90,\n        apples: 3621,\n        oranges: 2885,\n        mango: 3849,\n        papaya: 4185,\n    },\n    {\n        time: 91,\n        apples: 4458,\n        oranges: 2031,\n        mango: 2481,\n        papaya: 1786,\n    },\n    {\n        time: 92,\n        apples: 2847,\n        oranges: 4316,\n        mango: 2728,\n        papaya: 2424,\n    },\n    {\n        time: 93,\n        apples: 1020,\n        oranges: 4621,\n        mango: 2561,\n        papaya: 1534,\n    },\n    {\n        time: 94,\n        apples: 3817,\n        oranges: 4040,\n        mango: 1108,\n        papaya: 3998,\n    },\n    {\n        time: 95,\n        apples: 3961,\n        oranges: 3532,\n        mango: 2301,\n        papaya: 4955,\n    },\n    {\n        time: 96,\n        apples: 3581,\n        oranges: 4398,\n        mango: 3817,\n        papaya: 1455,\n    },\n    {\n        time: 97,\n        apples: 4276,\n        oranges: 4909,\n        mango: 3614,\n        papaya: 4441,\n    },\n    {\n        time: 98,\n        apples: 2894,\n        oranges: 3981,\n        mango: 1816,\n        papaya: 3114,\n    },\n    {\n        time: 99,\n        apples: 2800,\n        oranges: 2360,\n        mango: 3136,\n        papaya: 2498,\n    },\n    {\n        time: 100,\n        apples: 1906,\n        oranges: 3365,\n        mango: 2415,\n        papaya: 3024,\n    },\n];\n","export default [\n    {\n        text: 'study',\n        size: 40,\n    },\n    {\n        text: 'motion',\n        size: 15,\n    },\n    {\n        text: 'forces',\n        size: 10,\n    },\n    {\n        text: 'electricity',\n        size: 15,\n    },\n    {\n        text: 'movement',\n        size: 10,\n    },\n    {\n        text: 'relation',\n        size: 5,\n    },\n    {\n        text: 'things',\n        size: 10,\n    },\n    {\n        text: 'force',\n        size: 5,\n    },\n    {\n        text: 'ad',\n        size: 5,\n    },\n    {\n        text: 'energy',\n        size: 85,\n    },\n    {\n        text: 'living',\n        size: 5,\n    },\n    {\n        text: 'nonliving',\n        size: 5,\n    },\n    {\n        text: 'laws',\n        size: 15,\n    },\n    {\n        text: 'speed',\n        size: 45,\n    },\n    {\n        text: 'velocity',\n        size: 30,\n    },\n    {\n        text: 'define',\n        size: 5,\n    },\n    {\n        text: 'constraints',\n        size: 5,\n    },\n    {\n        text: 'universe',\n        size: 10,\n    },\n    {\n        text: 'physics',\n        size: 120,\n    },\n    {\n        text: 'describing',\n        size: 5,\n    },\n    {\n        text: 'matter',\n        size: 90,\n    },\n    {\n        text: 'physics-the',\n        size: 5,\n    },\n    {\n        text: 'world',\n        size: 10,\n    },\n    {\n        text: 'works',\n        size: 10,\n    },\n    {\n        text: 'science',\n        size: 70,\n    },\n    {\n        text: 'interactions',\n        size: 30,\n    },\n    {\n        text: 'studies',\n        size: 5,\n    },\n    {\n        text: 'properties',\n        size: 45,\n    },\n    {\n        text: 'nature',\n        size: 40,\n    },\n    {\n        text: 'branch',\n        size: 30,\n    },\n    {\n        text: 'concerned',\n        size: 25,\n    },\n    {\n        text: 'source',\n        size: 40,\n    },\n    {\n        text: 'google',\n        size: 10,\n    },\n    {\n        text: 'defintions',\n        size: 5,\n    },\n    {\n        text: 'two',\n        size: 15,\n    },\n    {\n        text: 'grouped',\n        size: 15,\n    },\n    {\n        text: 'traditional',\n        size: 15,\n    },\n    {\n        text: 'fields',\n        size: 15,\n    },\n    {\n        text: 'acoustics',\n        size: 15,\n    },\n    {\n        text: 'optics',\n        size: 15,\n    },\n    {\n        text: 'mechanics',\n        size: 20,\n    },\n    {\n        text: 'thermodynamics',\n        size: 15,\n    },\n    {\n        text: 'electromagnetism',\n        size: 15,\n    },\n    {\n        text: 'modern',\n        size: 15,\n    },\n    {\n        text: 'extensions',\n        size: 15,\n    },\n    {\n        text: 'thefreedictionary',\n        size: 15,\n    },\n    {\n        text: 'interaction',\n        size: 15,\n    },\n    {\n        text: 'org',\n        size: 25,\n    },\n    {\n        text: 'answers',\n        size: 5,\n    },\n    {\n        text: 'natural',\n        size: 15,\n    },\n    {\n        text: 'objects',\n        size: 5,\n    },\n    {\n        text: 'treats',\n        size: 10,\n    },\n    {\n        text: 'acting',\n        size: 5,\n    },\n    {\n        text: 'department',\n        size: 5,\n    },\n    {\n        text: 'gravitation',\n        size: 5,\n    },\n    {\n        text: 'heat',\n        size: 10,\n    },\n    {\n        text: 'light',\n        size: 10,\n    },\n    {\n        text: 'magnetism',\n        size: 10,\n    },\n    {\n        text: 'modify',\n        size: 5,\n    },\n    {\n        text: 'general',\n        size: 10,\n    },\n    {\n        text: 'bodies',\n        size: 5,\n    },\n    {\n        text: 'philosophy',\n        size: 5,\n    },\n    {\n        text: 'brainyquote',\n        size: 5,\n    },\n    {\n        text: 'words',\n        size: 5,\n    },\n    {\n        text: 'ph',\n        size: 5,\n    },\n    {\n        text: 'html',\n        size: 5,\n    },\n    {\n        text: 'lrl',\n        size: 5,\n    },\n    {\n        text: 'zgzmeylfwuy',\n        size: 5,\n    },\n    {\n        text: 'subject',\n        size: 5,\n    },\n    {\n        text: 'distinguished',\n        size: 5,\n    },\n    {\n        text: 'chemistry',\n        size: 5,\n    },\n    {\n        text: 'biology',\n        size: 5,\n    },\n    {\n        text: 'includes',\n        size: 5,\n    },\n    {\n        text: 'radiation',\n        size: 5,\n    },\n    {\n        text: 'sound',\n        size: 5,\n    },\n    {\n        text: 'structure',\n        size: 5,\n    },\n    {\n        text: 'atoms',\n        size: 5,\n    },\n    {\n        text: 'including',\n        size: 10,\n    },\n    {\n        text: 'atomic',\n        size: 10,\n    },\n    {\n        text: 'nuclear',\n        size: 10,\n    },\n    {\n        text: 'cryogenics',\n        size: 10,\n    },\n    {\n        text: 'solid-state',\n        size: 10,\n    },\n    {\n        text: 'particle',\n        size: 10,\n    },\n    {\n        text: 'plasma',\n        size: 10,\n    },\n    {\n        text: 'deals',\n        size: 5,\n    },\n    {\n        text: 'merriam-webster',\n        size: 5,\n    },\n    {\n        text: 'dictionary',\n        size: 10,\n    },\n    {\n        text: 'analysis',\n        size: 5,\n    },\n    {\n        text: 'conducted',\n        size: 5,\n    },\n    {\n        text: 'order',\n        size: 5,\n    },\n    {\n        text: 'understand',\n        size: 5,\n    },\n    {\n        text: 'behaves',\n        size: 5,\n    },\n    {\n        text: 'en',\n        size: 5,\n    },\n    {\n        text: 'wikipedia',\n        size: 5,\n    },\n    {\n        text: 'wiki',\n        size: 5,\n    },\n    {\n        text: 'physics-',\n        size: 5,\n    },\n    {\n        text: 'physical',\n        size: 5,\n    },\n    {\n        text: 'behaviour',\n        size: 5,\n    },\n    {\n        text: 'collinsdictionary',\n        size: 5,\n    },\n    {\n        text: 'english',\n        size: 5,\n    },\n    {\n        text: 'time',\n        size: 35,\n    },\n    {\n        text: 'distance',\n        size: 35,\n    },\n    {\n        text: 'wheels',\n        size: 5,\n    },\n    {\n        text: 'revelations',\n        size: 5,\n    },\n    {\n        text: 'minute',\n        size: 5,\n    },\n    {\n        text: 'acceleration',\n        size: 20,\n    },\n    {\n        text: 'torque',\n        size: 5,\n    },\n    {\n        text: 'wheel',\n        size: 5,\n    },\n    {\n        text: 'rotations',\n        size: 5,\n    },\n    {\n        text: 'resistance',\n        size: 5,\n    },\n    {\n        text: 'momentum',\n        size: 5,\n    },\n    {\n        text: 'measure',\n        size: 10,\n    },\n    {\n        text: 'direction',\n        size: 10,\n    },\n    {\n        text: 'car',\n        size: 5,\n    },\n    {\n        text: 'add',\n        size: 5,\n    },\n    {\n        text: 'traveled',\n        size: 5,\n    },\n    {\n        text: 'weight',\n        size: 5,\n    },\n    {\n        text: 'electrical',\n        size: 5,\n    },\n    {\n        text: 'power',\n        size: 5,\n    },\n];\n","export default {\n    values: [\n        {\n            state: 'CA',\n            'Under 5 Years': 2704659,\n            '5 to 13 Years': 4499890,\n            '14 to 17 Years': 2159981,\n            '18 to 24 Years': 3853788,\n            '25 to 44 Years': 10604510,\n            '45 to 64 Years': 8819342,\n            '65 Years and Over': 4114496,\n        },\n        {\n            state: 'TX',\n            'Under 5 Years': 2027307,\n            '5 to 13 Years': 3277946,\n            '14 to 17 Years': 1420518,\n            '18 to 24 Years': 2454721,\n            '25 to 44 Years': 7017731,\n            '45 to 64 Years': 5656528,\n            '65 Years and Over': 2472223,\n        },\n        {\n            state: 'NY',\n            'Under 5 Years': 1208495,\n            '5 to 13 Years': 2141490,\n            '14 to 17 Years': 1058031,\n            '18 to 24 Years': 1999120,\n            '25 to 44 Years': 5355235,\n            '45 to 64 Years': 5120254,\n            '65 Years and Over': 2607672,\n        },\n        {\n            state: 'FL',\n            'Under 5 Years': 1140516,\n            '5 to 13 Years': 1938695,\n            '14 to 17 Years': 925060,\n            '18 to 24 Years': 1607297,\n            '25 to 44 Years': 4782119,\n            '45 to 64 Years': 4746856,\n            '65 Years and Over': 3187797,\n        },\n        {\n            state: 'IL',\n            'Under 5 Years': 894368,\n            '5 to 13 Years': 1558919,\n            '14 to 17 Years': 725973,\n            '18 to 24 Years': 1311479,\n            '25 to 44 Years': 3596343,\n            '45 to 64 Years': 3239173,\n            '65 Years and Over': 1575308,\n        },\n        {\n            state: 'PA',\n            'Under 5 Years': 737462,\n            '5 to 13 Years': 1345341,\n            '14 to 17 Years': 679201,\n            '18 to 24 Years': 1203944,\n            '25 to 44 Years': 3157759,\n            '45 to 64 Years': 3414001,\n            '65 Years and Over': 1910571,\n        },\n    ],\n    columns: [\n        'Under 5 Years',\n        '5 to 13 Years',\n        '14 to 17 Years',\n        '18 to 24 Years',\n        '25 to 44 Years',\n        '45 to 64 Years',\n        '65 Years and Over',\n    ],\n};\n","import React, { Component } from 'react';\nimport { _cs } from '@togglecorp/fujs';\nimport { randomUniform } from 'd3-random';\nimport { range } from 'd3-array';\n\nimport VerticalTabs from '#rscv/VerticalTabs';\nimport MultiViewContainer from '#rscv/MultiViewContainer';\n\nimport ChordDiagram from '#rscz/ChordDiagram';\nimport ClusterForceLayout from '#rscz/ClusterForceLayout';\nimport CollapsibleTree from '#rscz/CollapsibleTree';\nimport CorrelationMatrix from '#rscz/CorrelationMatrix';\nimport Dendrogram from '#rscz/Dendrogram';\nimport DonutChart from '#rscz/DonutChart';\nimport ForceDirectedGraph from '#rscz/ForceDirectedGraph';\nimport GoogleOrgChart from '#rscz/GoogleOrgChart';\nimport HorizontalBar from '#rscz/HorizontalBar';\nimport OrgChart from '#rscz/OrgChart';\nimport Organigram from '#rscz/Organigram';\nimport ParallelCoordinates from '#rscz/ParallelCoordinates';\nimport PieChart from '#rscz/PieChart';\nimport RadialDendrogram from '#rscz/RadialDendrogram';\nimport Sankey from '#rscz/Sankey';\nimport SimpleHorizontalBarChart from '#rscz/SimpleHorizontalBarChart';\nimport SimpleVerticalBarChart from '#rscz/SimpleVerticalBarChart';\nimport SparkLines from '#rscz/SparkLines';\nimport StackedBarChart from '#rscz/StackedBarChart';\nimport StreamGraph from '#rscz/StreamGraph';\nimport SunBurst from '#rscz/SunBurst';\nimport TreeMap from '#rscz/TreeMap';\nimport VerticalBarChart from '#rscz/VerticalBarChart';\nimport WordCloud from '#rscz/WordCloud';\nimport ZoomableTreeMap from '#rscz/ZoomableTreeMap';\nimport Histogram from '#rscz/Histogram';\nimport GaugeChart from '#rscz/GaugeChart';\nimport GroupedBarChart from '#rscz/GroupedBarChart';\n\nimport barData from '#resources/data/barData.js';\nimport orgChartData from '#resources/data/orgChartData.js';\nimport chordData from '#resources/data/chordData';\nimport correlationData from '#resources/data/correlationData';\nimport clusterData from '#resources/data/clusterData';\nimport forceDirectedData from '#resources/data/forceDirectedData';\nimport hierarchicalData from '#resources/data/hierarchical';\nimport lineData from '#resources/data/lineData';\nimport parallelData from '#resources/data/parallelData';\nimport sankeyData from '#resources/data/sankeyData';\nimport stackedData from '#resources/data/stackedData';\nimport streamData from '#resources/data/streamData';\nimport words from '#resources/data/wordCloudData';\nimport groupedData from '#resources/data/groupedData';\n\nimport styles from './styles.scss';\n\nconst histogramData = range(2000).map(randomUniform(0, 0));\n\nclass Visualization extends Component {\n    constructor(props) {\n        super(props);\n        this.state = ({\n            value: [],\n            // range: undefined,\n        });\n        this.tabs = {\n            chordDiagram: 'Chord Diagram',\n            clusterForceLayout: 'Cluster Force Layout',\n            collapsibleTree: 'Collapsible Tree',\n            correlationMatrix: 'Correlation Matrix',\n            dendrogram: 'Dendrogram',\n            donutChart: 'Donut Chart',\n            forcedDirectedGraph: 'Force Directed Graph',\n            forcedDirectedGraphVoronoi: 'Force Directed Graph (Voronoi)',\n            googleOrgChart: 'Google Org Chart',\n            histogram: 'Histogram',\n            horizontalBar: 'Horizontal Bar',\n            orgChart: 'Org Chart',\n            organigram: 'Organigram',\n            parallelCoordinates: 'Parallel Coordinates',\n            pieChart: 'Pie Chart',\n            radialDendrogram: 'Radial Dendrogram',\n            sankey: 'Sankey Diagram',\n            simpleHorizontalBarChart: 'Simple Horizontal Bar Chart',\n            simpleVerticalBarChart: 'Simple Vertical Bart Chart',\n            sparkLines: 'Spark Lines',\n            stackedBarChart: 'Stacked Bar Chart',\n            streamGraph: 'Stream Graph',\n            sunBurst: 'Sunburst',\n            treemap: 'Treemap',\n            verticalBarChart: 'Vertical Bar Chart',\n            wordCloud: 'Word Cloud',\n            zoomableTreemap: 'Zoomable Treemap',\n            gaugeChart: 'Gauge Chart',\n            groupedBarChart: 'Grouped Bar Chart',\n        };\n\n        this.views = {\n            chordDiagram: {\n                wrapContainer: true,\n                component: () => (\n                    <ChordDiagram\n                        className={styles.viz}\n                        data={chordData.values}\n                        labelsData={chordData.labels}\n                    />\n                ),\n            },\n            collapsibleTree: {\n                wrapContainer: true,\n                component: () => (\n                    <CollapsibleTree\n                        className={styles.viz}\n                        data={hierarchicalData}\n                        labelSelector={d => d.name}\n                    />\n                ),\n            },\n            correlationMatrix: {\n                wrapContainer: true,\n                component: () => (\n                    <CorrelationMatrix\n                        className={styles.viz}\n                        data={correlationData}\n                        colorSchemeType=\"continuous\"\n                    />\n                ),\n            },\n            dendrogram: {\n                wrapContainer: true,\n                component: () => (\n                    <Dendrogram\n                        className={styles.viz}\n                        data={hierarchicalData}\n                        labelSelector={d => d.name}\n                        valueSelector={d => d.size}\n                    />\n                ),\n            },\n            donutChart: {\n                wrapContainer: true,\n                component: () => (\n                    <DonutChart\n                        className={styles.viz}\n                        data={barData.data}\n                        valueSelector={d => d.value}\n                        labelSelector={d => d.label}\n                        period={30}\n                    />\n                ),\n            },\n            forcedDirectedGraph: {\n                wrapContainer: true,\n                component: () => (\n                    <ForceDirectedGraph\n                        className={styles.viz}\n                        data={forceDirectedData}\n                        idSelector={d => d.id}\n                        groupSelector={d => d.group}\n                        valueSelector={d => d.value}\n                        useVoronoi={false}\n                    />\n                ),\n            },\n            forcedDirectedGraphVoronoi: {\n                wrapContainer: true,\n                component: () => (\n                    <ForceDirectedGraph\n                        className={styles.viz}\n                        data={forceDirectedData}\n                        idSelector={d => d.id}\n                        groupSelector={d => d.group}\n                        valueSelector={d => d.value}\n                        useVoronoi\n                    />\n                ),\n            },\n            googleOrgChart: {\n                wrapContainer: true,\n                component: () => {\n                    const { value } = this.state;\n                    return (\n                        <GoogleOrgChart\n                            className={styles.viz}\n                            options={orgChartData}\n                            value={value}\n                            keySelector={d => d.key}\n                            multiSelect\n                            childSelector={d => d.organs}\n                            titleSelector={d => d.title}\n                        />\n                    );\n                },\n            },\n            clusterForceLayout: {\n                wrapContainer: true,\n                component: () => (\n                    <ClusterForceLayout\n                        className={styles.viz}\n                        data={clusterData}\n                        idSelector={d => d.value}\n                        groupSelector={d => d.cluster}\n                        valueSelector={d => d.score}\n                    />\n                ),\n            },\n            horizontalBar: {\n                wrapContainer: true,\n                component: () => (\n                    <HorizontalBar\n                        className={styles.viz}\n                        data={barData.data}\n                        valueSelector={d => d.value}\n                        labelSelector={d => d.label}\n                        showLabels={false}\n                        showTooltip\n                    />\n                ),\n            },\n            orgChart: {\n                wrapContainer: true,\n                component: () => (\n                    <OrgChart\n                        className={styles.viz}\n                        data={hierarchicalData}\n                        idSelector={d => d.name}\n                    />\n                ),\n            },\n            organigram: {\n                wrapContainer: true,\n                component: () => (\n                    <Organigram\n                        className={styles.viz}\n                        data={hierarchicalData}\n                        idSelector={d => d.name}\n                        labelSelector={d => d.name}\n                    />\n                ),\n\n            },\n            parallelCoordinates: {\n                wrapContainer: true,\n                component: () => (\n                    <ParallelCoordinates\n                        data={parallelData}\n                        className={styles.viz}\n                        ignoreProperties={['name']}\n                        labelName=\"name\"\n                        labelSelector={d => d.name}\n                    />\n                ),\n            },\n            pieChart: {\n                wrapContainer: true,\n                component: () => (\n                    <PieChart\n                        className={styles.viz}\n                        data={barData.data}\n                        valueSelector={d => d.value}\n                        labelSelector={d => d.label}\n                    />\n                ),\n            },\n            radialDendrogram: {\n                wrapContainer: true,\n                component: () => (\n                    <RadialDendrogram\n                        className={styles.viz}\n                        data={hierarchicalData}\n                        labelSelector={d => d.name}\n                    />\n                ),\n            },\n            sankey: {\n                wrapContainer: true,\n                component: () => (\n                    <Sankey\n                        className={styles.viz}\n                        data={sankeyData}\n                        valueSelector={d => d.value}\n                        labelSelector={d => d.name}\n                    />\n                ),\n            },\n            sparkLines: {\n                wrapContainer: true,\n                component: () => (\n                    <SparkLines\n                        className={styles.viz}\n                        data={lineData.data}\n                        xValueSelector={d => d.label}\n                        yValueSelector={d => d.value}\n                    />\n                ),\n            },\n            stackedBarChart: {\n                wrapContainer: true,\n                component: () => (\n                    <StackedBarChart\n                        data={stackedData}\n                        className={styles.viz}\n                        labelName=\"month\"\n                        labelSelector={d => d.month}\n                    />\n                ),\n            },\n            streamGraph: {\n                wrapContainer: true,\n                component: () => (\n                    <StreamGraph\n                        data={streamData}\n                        className={styles.viz}\n                        labelName=\"time\"\n                        labelSelector={d => d.time}\n                    />\n                ),\n            },\n            sunBurst: {\n                wrapContainer: true,\n                component: () => (\n                    <SunBurst\n                        className={styles.viz}\n                        data={hierarchicalData}\n                        valueSelector={d => d.size}\n                        labelSelector={d => d.name}\n                    />\n                ),\n            },\n            treemap: {\n                wrapContainer: true,\n                component: () => (\n                    <TreeMap\n                        className={styles.viz}\n                        data={hierarchicalData}\n                        valueSelector={d => d.size}\n                        labelSelector={d => d.name}\n                    />\n                ),\n            },\n            zoomableTreemap: {\n                wrapContainer: true,\n                component: () => (\n                    <ZoomableTreeMap\n                        className={styles.viz}\n                        data={hierarchicalData}\n                        valueSelector={d => d.size}\n                        labelSelector={d => d.name}\n                    />\n                ),\n            },\n            verticalBarChart: {\n                wrapContainer: true,\n                component: () => (\n                    <VerticalBarChart\n                        className={styles.viz}\n                        data={barData.data}\n                        valueSelector={d => d.value}\n                        labelSelector={d => d.label}\n                        margins={\n                            {\n                                top: 0,\n                                right: 0,\n                                bottom: 24,\n                                left: 0,\n                            }\n                        }\n                    />\n                ),\n            },\n            simpleHorizontalBarChart: {\n                wrapContainer: true,\n                component: () => (\n                    <SimpleHorizontalBarChart\n                        className={styles.viz}\n                        data={barData.data}\n                        valueSelector={d => d.value}\n                        labelSelector={d => d.label}\n                        showLabels={false}\n                        showTooltip\n                    />\n                ),\n            },\n            simpleVerticalBarChart: {\n                wrapContainer: true,\n                component: () => (\n                    <SimpleVerticalBarChart\n                        className={styles.viz}\n                        data={barData.data}\n                        valueSelector={d => d.value}\n                        labelSelector={d => d.label}\n                        showAxis={false}\n                        margins={\n                            {\n                                top: 0,\n                                right: 0,\n                                bottom: 0,\n                                left: 0,\n                            }\n                        }\n                    />\n                ),\n            },\n            wordCloud: {\n                wrapContainer: true,\n                component: () => (\n                    <WordCloud\n                        data={words}\n                        className={styles.viz}\n                    />\n                ),\n            },\n            histogram: {\n                wrapContainer: true,\n                component: () => (\n                    <Histogram\n                        className={styles.viz}\n                        data={histogramData}\n                    />\n                ),\n            },\n            gaugeChart: {\n                wrapContainer: true,\n                component: () => (\n                    <GaugeChart\n                        className={styles.viz}\n                        noOfSections={5}\n                        minValue={0}\n                        maxValue={100}\n                        currentValue={50}\n                    />\n                ),\n            },\n            groupedBarChart: {\n                wrapContainer: true,\n                component: () => (\n                    <GroupedBarChart\n                        className={styles.viz}\n                        data={groupedData}\n                        groupSelector={d => d.state}\n                    />\n                ),\n            },\n        };\n    }\n\n    render() {\n        const { className } = this.props;\n\n        return (\n            <div className={_cs(styles.dashboard, className)}>\n                <div className={styles.content}>\n                    <VerticalTabs\n                        tabs={this.tabs}\n                        className={styles.tabs}\n                        useHash\n                    />\n                    <MultiViewContainer\n                        containerClassName={styles.container}\n                        views={this.views}\n                        useHash\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Visualization;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"treemap\":\"styles_treemap_3Dloyo7oqnRwqzfEXt0m3X\",\"rectangle\":\"styles_rectangle_UJxyiLqYJ_IlviTIpnSEB\",\"label\":\"styles_label_2zKrn_tR2lhwZRgjkVAQ80\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"responsive\":\"styles_responsive_XTAmUr_AyL8JYYWv3aPMk\",\"responsive-child\":\"styles_responsive-child_2P-ToCXVpPphHCh-VdqyeF\",\"responsiveChild\":\"styles_responsive-child_2P-ToCXVpPphHCh-VdqyeF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"horizontal-bar\":\"styles_horizontal-bar_3HR48sjnSS_Z737fgkXTG-\",\"horizontalBar\":\"styles_horizontal-bar_3HR48sjnSS_Z737fgkXTG-\",\"grid\":\"styles_grid_1ZCLnxXxNUdCWeGhUHQDma\",\"x-axis\":\"styles_x-axis_13mTUdbqt-vMcyqvVso7x3\",\"xAxis\":\"styles_x-axis_13mTUdbqt-vMcyqvVso7x3\",\"y-axis\":\"styles_y-axis_33obEjvOOsMLKIft0C8h7z\",\"yAxis\":\"styles_y-axis_33obEjvOOsMLKIft0C8h7z\",\"tooltip\":\"styles_tooltip_1P54zX3kAhdQz7yUnkTQ19\",\"fade-in\":\"styles_fade-in_3vQKEEmyYc-7FOotBViBRG\",\"fadeIn\":\"styles_fade-in_3vQKEEmyYc-7FOotBViBRG\",\"label\":\"styles_label_3dzytWXqqPW7sHtrjwZ1AG\",\"value\":\"styles_value_3i7GfBV0WN3Alw-tQw7ODN\",\"spin\":\"styles_spin_1MmdYy-BafuUPhIMjgkvhs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"org-chart\":\"styles_org-chart_3ADUuAXFrllgMvbLSUHRyN\",\"orgChart\":\"styles_org-chart_3ADUuAXFrllgMvbLSUHRyN\",\"node-class\":\"styles_node-class_3gZ2H1dnKPHfdVzYVnfSey\",\"nodeClass\":\"styles_node-class_3gZ2H1dnKPHfdVzYVnfSey\",\"disabled\":\"styles_disabled_3_3yNI418TAZe4y2rKdYQ0\",\"selected-node-class\":\"styles_selected-node-class_1LpKqvURzC-iQs42GE4hF0\",\"selectedNodeClass\":\"styles_selected-node-class_1LpKqvURzC-iQs42GE4hF0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"info\":\"styles_info_1e4xunEO93f-nHbSPBzSXp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"parallel\":\"styles_parallel_3t_LsXHY_soOtnSgetawRo\",\"axis\":\"styles_axis_3Hg0E0C2xjMkawGU9-YXtV\",\"text\":\"styles_text_1U4JKmcaHHIoIXKTUeUQGy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sunburst-tooltip\":\"styles_sunburst-tooltip_3jzIV54nVzy79x6lAioisM\",\"sunburstTooltip\":\"styles_sunburst-tooltip_3jzIV54nVzy79x6lAioisM\",\"fade-in\":\"styles_fade-in_3JP6XZkdfcwJ5eK3Wpndtr\",\"fadeIn\":\"styles_fade-in_3JP6XZkdfcwJ5eK3Wpndtr\",\"label\":\"styles_label_1kClKiYLmd78qBSIg7o0mS\",\"value\":\"styles_value_2nbjz_0bXuialp2imV2qn9\",\"spin\":\"styles_spin_289nWdrisl5LnMjXPagUA5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"barchart\":\"styles_barchart_2qRRuBaHCSAwlRpJh63Vv_\",\"y-axis\":\"styles_y-axis_gLo-nXk-ojySnajrAVrlh\",\"yAxis\":\"styles_y-axis_gLo-nXk-ojySnajrAVrlh\",\"x-axis\":\"styles_x-axis_1e4afpUcu5ZO-GYz-BZLu\",\"xAxis\":\"styles_x-axis_1e4afpUcu5ZO-GYz-BZLu\",\"tooltip\":\"styles_tooltip_1EqZbR1Cv3t_rtpMybZxI7\",\"fade-in\":\"styles_fade-in_1spiri-oUF2Md8mX_0NjiF\",\"fadeIn\":\"styles_fade-in_1spiri-oUF2Md8mX_0NjiF\",\"spin\":\"styles_spin_3-ccVxWX70BVxCtnKgi6Gd\"};"],"sourceRoot":""}