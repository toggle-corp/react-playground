{"version":3,"sources":["webpack:///./src/vendor/react-store/components/Input/RawFileInput/styles.scss","webpack:///./src/vendor/react-store/components/Input/DateInput/ActionButtons/styles.scss","webpack:///./src/vendor/react-store/components/Input/ListSelection/styles.scss","webpack:///./src/vendor/react-store/components/Input/MultiSelectInput/styles.scss","webpack:///./src/vendor/react-store/components/Input/TextArea/styles.scss","webpack:///./src/vendor/react-store/components/Input/DateInput/styles.scss","webpack:///./src/vendor/react-store/components/Input/NumberInput/styles.scss","webpack:///./src/vendor/react-store/components/Input/HintAndError/styles.scss","webpack:///./src/vendor/react-store/components/Input/DatePicker/MonthPicker/styles.scss","webpack:///./src/vendor/react-store/components/Input/SelectInputWithList/styles.scss","webpack:///./src/views/Inputs/InputDetails/styles.scss","webpack:///./src/vendor/react-store/components/View/Modal/Body/styles.scss","webpack:///./src/vendor/react-store/components/View/Modal/styles.scss","webpack:///./src/vendor/react-store/components/Input/RawInput/styles.scss","webpack:///./src/vendor/react-store/components/View/Modal/Footer/index.js","webpack:///./src/vendor/react-store/components/Input/ScaleInput/styles.scss","webpack:///./src/vendor/react-store/components/Input/SegmentInput/styles.scss","webpack:///./src/vendor/react-store/components/Input/RadioInput/styles.scss","webpack:///./src/vendor/react-store/components/Input/DateFilter/styles.scss","webpack:///./src/vendor/react-store/components/Input/DatePicker/styles.scss","webpack:///./src/vendor/react-store/components/View/Modal/Header/styles.scss","webpack:///./src/vendor/react-store/components/Input/Label/styles.scss","webpack:///./src/vendor/react-store/components/Input/RadioInput/Option/styles.scss","webpack:///./src/vendor/react-store/components/Input/Checkbox/styles.scss","webpack:///./src/vendor/react-store/components/View/ListItem/styles.scss","webpack:///./src/vendor/react-store/components/Input/MultiSelectInput/Options/styles.scss","webpack:///./src/vendor/react-store/components/Input/SearchMultiSelectInput/Options/styles.scss","webpack:///./src/vendor/react-store/components/Action/Button/PrimaryButton.js","webpack:///./src/vendor/react-store/components/Input/SearchMultiSelectInput/Checkbox/styles.scss","webpack:///./src/vendor/react-store/components/Input/Checkbox/index.js","webpack:///./src/vendor/react-store/components/Input/HintAndError/index.tsx","webpack:///./src/vendor/react-store/components/Input/Label/index.tsx","webpack:///./src/vendor/react-store/components/Input/ColorInput/index.js","webpack:///./src/vendor/react-store/components/View/ApplyModal/index.js","webpack:///./src/vendor/react-store/components/General/HandleKeyboard.js","webpack:///./src/vendor/react-store/components/Input/RawInput/index.js","webpack:///./src/vendor/react-store/utils/bounds.js","webpack:///./src/vendor/react-store/components/Input/SelectInput/Options/Option/index.js","webpack:///./src/vendor/react-store/components/Input/SelectInput/Options/index.js","webpack:///./src/vendor/react-store/components/Input/SelectInput/index.js","webpack:///./src/vendor/react-store/components/General/Delay.js","webpack:///./src/vendor/react-store/components/Input/DatePicker/DayPicker/DaysHeader.js","webpack:///./src/vendor/react-store/components/Input/DatePicker/DayPicker/index.js","webpack:///./src/vendor/react-store/components/Input/DatePicker/MonthPicker/index.js","webpack:///./src/vendor/react-store/components/Input/DatePicker/YearPicker/index.js","webpack:///./src/vendor/react-store/components/Input/DatePicker/index.js","webpack:///./src/vendor/react-store/components/Input/DigitalInput/index.js","webpack:///./src/vendor/react-store/components/Input/DateInput/ActionButtons/index.js","webpack:///./src/vendor/react-store/components/Input/DateInput/index.js","webpack:///./src/vendor/react-store/components/Input/DateFilter/index.js","webpack:///./src/vendor/react-store/components/Action/Button/AccentButton.js","webpack:///./src/vendor/react-store/components/Input/TextArea/index.js","webpack:///./src/vendor/react-store/components/Input/FormattedTextArea/index.js","webpack:///./src/vendor/react-store/components/Input/ListSelection/index.js","webpack:///./src/vendor/react-store/components/Input/MultiSelectInput/Checkbox/index.js","webpack:///./src/vendor/react-store/components/Input/MultiSelectInput/Option/index.js","webpack:///./src/vendor/react-store/components/Input/MultiSelectInput/Options/index.js","webpack:///./src/vendor/react-store/components/Input/MultiSelectInput/index.js","webpack:///./src/vendor/react-store/components/Input/NumberInput/index.js","webpack:///./src/vendor/react-store/components/Input/RadioInput/Option/index.js","webpack:///./src/vendor/react-store/components/Input/RadioInput/index.js","webpack:///./src/vendor/react-store/components/Input/RangeFilter/index.js","webpack:///./src/vendor/react-store/components/Input/RawFileInput/index.js","webpack:///./src/vendor/react-store/components/Input/ScaleInput/index.js","webpack:///./src/vendor/react-store/components/Input/TextInput/index.js","webpack:///./src/vendor/react-store/components/Input/SearchInput/index.js","webpack:///./src/vendor/react-store/components/Input/SearchMultiSelectInput/Checkbox/index.js","webpack:///./src/vendor/react-store/components/Input/SearchMultiSelectInput/Option/index.js","webpack:///./src/vendor/react-store/components/Input/SearchMultiSelectInput/Options/index.js","webpack:///./src/vendor/react-store/components/Input/SearchMultiSelectInput/index.js","webpack:///./src/vendor/react-store/components/Input/SearchSelectInput/Options/Option/index.js","webpack:///./src/vendor/react-store/components/Input/SearchSelectInput/Options/index.js","webpack:///./src/vendor/react-store/components/Input/SearchSelectInput/index.js","webpack:///./src/vendor/react-store/components/Input/SegmentInput/Option/index.js","webpack:///./src/vendor/react-store/components/Input/SegmentInput/index.js","webpack:///./src/vendor/react-store/components/View/ListItem/index.js","webpack:///./src/vendor/react-store/components/Action/DismissableListItem/index.js","webpack:///./src/vendor/react-store/components/Input/SelectInputWithList/index.js","webpack:///./src/vendor/react-store/components/Input/TimeInput/ActionButtons/index.js","webpack:///./src/vendor/react-store/components/Input/TimeInput/index.js","webpack:///./src/vendor/react-store/components/Input/TimeFilter/index.js","webpack:///./src/views/Inputs/inputList.tsx","webpack:///./src/views/Inputs/InputDetails/index.tsx","webpack:///./src/views/Inputs/index.tsx","webpack:///./src/vendor/react-store/components/Input/SearchSelectInput/Options/Option/styles.scss","webpack:///./src/vendor/react-store/components/Input/TimeInput/styles.scss","webpack:///./src/vendor/react-store/components/Input/FormattedTextArea/styles.scss","webpack:///./src/vendor/react-store/components/Input/ColorInput/styles.scss","webpack:///./src/vendor/react-store/components/Input/SearchMultiSelectInput/styles.scss","webpack:///./src/vendor/react-store/components/View/Modal/Footer/styles.scss","webpack:///./src/vendor/react-store/components/Input/SearchInput/styles.scss","webpack:///./src/vendor/react-store/components/Action/DismissableListItem/styles.scss","webpack:///./src/vendor/react-store/components/Input/SelectInput/Options/Option/styles.scss","webpack:///./src/vendor/react-store/components/Input/DatePicker/DayPicker/styles.scss","webpack:///./src/vendor/react-store/components/Input/SearchSelectInput/Options/styles.scss","webpack:///./src/vendor/react-store/components/Input/DigitalInput/styles.scss","webpack:///./src/vendor/react-store/components/Input/TextInput/styles.scss","webpack:///./src/vendor/react-store/components/Input/SelectInput/styles.scss","webpack:///./src/vendor/react-store/components/Input/MultiSelectInput/Option/styles.scss","webpack:///./src/vendor/react-store/components/Input/TimeFilter/styles.scss","webpack:///./src/vendor/react-store/components/Input/MultiSelectInput/Checkbox/styles.scss","webpack:///./src/vendor/react-store/components/Input/SegmentInput/Option/styles.scss","webpack:///./src/vendor/react-store/components/Input/DatePicker/YearPicker/styles.scss","webpack:///./src/views/Inputs/styles.scss","webpack:///./src/vendor/react-store/components/View/Modal/Header/index.js","webpack:///./src/vendor/react-store/components/Input/SearchMultiSelectInput/Option/styles.scss","webpack:///./src/vendor/react-store/components/Input/SearchSelectInput/styles.scss","webpack:///./src/vendor/react-store/components/View/Modal/index.js","webpack:///./src/vendor/react-store/components/Input/SelectInput/Options/styles.scss","webpack:///./src/vendor/react-store/components/Input/TimeInput/ActionButtons/styles.scss","webpack:///./src/vendor/react-store/components/View/Modal/Body/index.js"],"names":["module","exports","propTypes","className","PropTypes","string","children","oneOfType","arrayOf","element","node","isRequired","Footer","this","props","classNames","styles","footer","join","React","PureComponent","PrimaryButton","buttonType","disabled","bool","value","onChange","func","label","tooltip","readOnly","checkboxType","changeDelay","number","defaultProps","undefined","Checkbox","e","target","checked","inputId","randomString","classNameFromProps","otherProps","_cs","checkbox","spanClassName","checkmark","inputClassName","input","labelClassName","htmlFor","title","Icon","name","id","handleInputChange","type","FaramInputElement","HintAndError","show","error","hint","inputHintAndError","inputError","inputHint","empty","message","InputLabel","text","active","inputLabel","showLabel","showHintAndError","ColorInput","colorPickerContainer","containerRect","getBoundingClientRect","parentRect","boundingClientRect","container","offset","top","right","bottom","left","calcFloatingPositionInMainWindow","setState","showColorPicker","newColor","hex","state","buttonClassNames","colorBox","colorInput","push","ref","el","onClick","handleColorBoxClick","color","style","backgroundColor","FloatingContainer","parent","onBlur","handleColorPickerBlur","onInvalidate","handleColorPickerInvalidate","focusTrap","handleColorChange","noOp","onClose","onApply","schema","object","ApplyModal","values","faramErrors","faramValues","getClassName","Modal","closeOnEscape","handleFaramChange","onValidationFailure","handleFaramFailure","onValidationSuccess","handleFaramSuccess","DangerButton","autoFocus","focusedKey","options","array","keySelector","isOptionsShown","onFocusChange","onHideOptions","onShowOptions","onOptionSelect","TAB","ESC","ENTER","DOWN","UP","specialKeys","getNewKey","oldKey","increment","length","oldIndex","findIndex","o","newIndex","modulo","WrappedComponent","ListenerComponent","keyCode","includes","stopPropagation","preventDefault","nextProps","oldIsOptionsShown","oldOptions","oldKeySelector","newIsOptionsShown","newOptions","newKeySelector","newFocusedKey","onKeyDown","handleInputKeyDown","hoistNonReactStatics","TextInput","elementRef","rawInput","defaultRect","width","height","defaultOffset","defaultLimit","minW","maxW","Infinity","minH","maxH","defaultParams","contentRect","boundingRect","limit","calcFloatRectInMainWindow","p","params","newWidth","Math","max","min","newContentRect","containerOffsetY","containerOffsetX","calcFloatRect","window","scrollY","scrollX","innerWidth","innerHeight","calcFloatPositionInMainWindow","floatRect","optionKey","onFocus","isActive","isFocused","Option","option","focused","focusedByMouse","current","scrollIntoView","block","createRef","scrollToFocus","handleClick","onMouseMove","handleMouseMove","onMouseLeave","handleMouseLeave","data","labelSelector","optionLabelSelector","renderEmpty","onOptionClick","onOptionFocus","parentContainer","Options","_","key","EmptyComponent","Empty","List","modifier","renderOption","propTypeKey","RawKeyInput","handleKeyboard","RawInput","hideClearButton","optionsClassName","placeholder","d","SelectInput","memoize","filter","caseInsensitiveSubmatch","sort","a","b","compareStringSearch","activeOption","find","inputRef","select","showOptionsPopup","searchValue","inputInFocus","optionsContainer","containerRef","finalSearchValue","findDefaultSearchValue","isFilled","showClearButton","filteredOptions","filterOptions","selectInput","showOptions","filled","inputAndActions","actionsClassName","actions","dropdownButtonClassName","dropdownButton","clearClassName","clearButton","handleInputBlur","handleInputFocus","handleShowOptionsPopup","handleFocusChange","handleHideOptionsPopup","handleOptionSelect","tabIndex","iconName","handleClearButtonClick","transparent","Button","handleOptionsInvalidate","any","DelayedComponent","info","changeTimeout","clearTimeout","pendingChange","setTimeout","lastValue","console","warn","stateValue","handleChange","DaysHeader","dayNames","map","year","month","onYearMonthChange","onMonthClick","DayPicker","dayKey","highlight","today","getFullYear","getMonth","getDate","day","selectedId","selected","highlighted","newValue","Date","oldTimestamp","getTime","newTimestamp","date","getDayClassName","handleDayChange","week","days","renderDay","createDays","firstDate","lastDate","numDays","firstDay","getDay","totalDays","lastDay","weeks","i","j","parseInt","initial","monthName","monthNames","dayPicker","header","handlePrevious","handleNext","renderWeek","onYearClick","MonthPicker","monthIndex","monthPicker","handlePrevYearClick","handleNextYearClick","months","getMonthClassName","handleMonthChange","YEARS_PER_PAGE","YearPicker","oldState","startYear","round","years","endYear","yearPicker","getYearClassName","handleYearChange","DatePicker","datePicker","picker","setMonthPicker","handleYearMonthChange","setYearPicker","initialDate","Picker","renderPicker","padLength","DigitalInput","event","valueFromProps","getNewValue","digitalInput","isFalsy","padStart","oldValue","match","padAndTrim","ActionButtons","onClearButtonClick","onTodayButtonClick","onCalendarButtonClick","clearButtonClassName","button","clear","separator","createDate","y","m","getErrorForDateValues","yearValue","monthValue","dayValue","encodeDate","decodeDate","split","isValidDateString","DateInput","yearInputFocused","monthInputFocused","dayInputFocused","dateInput","invalid","String","slice","showDatePicker","datePickerContainer","timestamp","newDate","decodeAsDate","valueToOverride","actionButtonsContainer","containerHover","datetime","handleDatePickerBlur","handleDatePickerInvalidate","handleDatePickerDatePick","FloatingDatePicker","renderDatePicker","inputAndActionsClassName","onMouseOver","handleContainerHover","handleContainerLeave","units","handleDayInputFocus","handleDayInputBlur","dayUnit","getNumDaysInMonthX","step","handleDayInputChange","handleMonthInputFocus","handleMonthInputBlur","monthUnit","handleMonthInputChange","handleYearInputFocus","handleYearInputBlur","yearUnit","handleYearInputChange","actionButtons","handleTodayButtonClick","handleCalendarButtonClick","handleActionButtonsInvalidate","Delay","shape","startDate","endDate","presets","setHours","yesterday","setDate","currentWeek","lastSevenDays","currentMonth","setMonth","lastThirtyDays","DateFilter","showExactModal","showRangeModal","setNewDate","dateFilterModal","closeExactModal","applyExactDate","exactModalSchema","faramElementName","closeRangeModal","applyRangeDate","rangeModalSchema","calculateOptionsAndValue","selectInputOptions","selectInputValue","CustomExactModal","renderExactModal","CustomRangeModal","renderRangeModal","Fragment","handleSelectInputChange","fields","requiredCondition","formatDateToString","defaultOptions","preset","Object","keys","test","formatDate","AccentButton","required","resize","selectOnFocus","NormalTextArea","textArea","handleBlur","handleFocus","showFormatButton","FormattedTextArea","formatPdfText","excerpt","formattedText","area","formatButton","handleFormatText","smallVerticalPadding","smallHorizontalPadding","shouldDisableFormat","listClassName","tooltipSelector","searchText","segment","item","NormalListSelection","listSelection","multiSegment","singleSegment","isFalsyString","isSelected","index","indexOf","splice","itemData","val","handleItemChange","getFilteredOptions","ListView","renderer","rendererParams","renderParams","Input","renderInput","optionLabel","activeKeys","activeKeysMap","listToMap","k","generateActiveMap","oldActiveKeys","newActiveKeys","isListEqual","emptyList","hideSelectAllButton","NormalMultiSelectInput","optionsMap","selectedOptions","isDefined","v","optionIndex","showSelectAllButton","inputTitle","findPlaceholderValue","finalPlaceholder","multiSelectInput","completelyFilled","inputAndActionClassName","selectAllButtonClassName","selectAllButton","handleSelectAllButtonClick","sanitizeNumber","replace","realValue","isTruthy","isSign","getNumberAndSign","Number","isNaN","sign","stringValue","toString","firstCharacter","charAt","substring","NormalNumberInput","numberWithSeparator","addSeparator","NaN","numberInput","getDisplayValue","radioClassName","radio","defaultChecked","RadioInput","selectedOption","handleOptionClick","getSelectedOption","radioInput","optionKeyExtractor","RangeFilter","startValue","handleUpdate","endValue","updateFromProps","startIndex","endIndex","handleStartValueChange","handleEndValueChange","showStatus","multiple","accept","RawFileInput","Array","isArray","file","filesFromInput","from","fileInput","files","isValidFile","invalidFiles","fileInputWrapper","status","getFileStatus","mimeType","acceptString","extensionMatch","exec","mimeMatch","some","toLowerCase","colorSelector","isDefaultSelector","default","ScaleInput","scaleInput","defaultOption","getOptionClassName","checkAndSetDefaultValue","textInput","SearchInput","searchInput","iconClassName","icon","typeToSearch","noMatchingResults","noOptionsAvailable","maxDisplayOptions","SearchMultiSelectInput","renderEmptyFromProps","SearchSelectInput","SegmentOption","segmentOption","segmentButtonInput","SegmentInput","segmentInput","changeEvent","finalValue","segmentContainer","marker","ListItem","listItem","onDismiss","itemKey","DismissableListItem","dismissableListItem","dismissButton","handleDismissButtonClick","hideRemoveFromListButton","selectClassName","listProps","topRightChild","emptyComponent","SelectInputWithList","selectInputWithList","datum","handleItemDismiss","objectValues","getObjectFromValue","newProps","TopRightChild","listClassNames","list","selectClassNames","hasTopRightChild","Item","headerContainer","MultiSelectInput","getListItemParams","encodeTime","h","decodeTime","isValidTimeString","TimeInput","hourInputFocused","minuteInputFocused","timeInput","getHours","getMinutes","hourValue","minuteValue","handleHourInputFocus","handleHourInputBlur","unit","handleHourInputChange","handleMinuteInputFocus","handleMinuteInputBlur","handleMinuteInputChange","startTime","endTime","TimeFilter","time","timeFilterModal","applyExactTime","applyRangeTime","fruits","vegetables","inputList","description","component","groupKey","TextArea","rows","NumberInput","ListSelection","InputDetails","Component","usage","componentProps","inputDetails","heading","content","Inputs","formattedTextArea","searchSelectInput","searchMultiSelectInput","faramSchema","views","tabs","inputs","VerticalTabs","useHash","groupKeySelector","inputGroupKeySelector","groupRendererParams","inputGroupRendererParams","groupComparator","inputGroupComparator","faram","MultiViewContainer","myInput","rightComponent","Header","headerClassNames","ESCAPE_KEY","closeOnOutsideClick","wrapper","wrapperRef","contains","outsideClick","escape","document","addEventListener","handleKeyPressed","handleClickOutside","removeEventListener","modal","Body","body"],"mappings":"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XlsB,MAAO,CACHc,MAAO,UACPic,iBAAkB,WAClBoP,KAAM,GAEVF,SAAU,UAEd,CACIte,IAAK,oBACLrL,MAAO,sBACPypB,YAAa,4DACbC,UAAWlN,GACX9e,MAAO,CACHc,MAAO,UACPic,iBAAkB,oBAClBoP,KAAM,GAEVF,SAAU,UAEd,CACIte,IAAK,cACLrL,MAAO,eACPypB,YAAa,yBACbC,UAAWI,GACXpsB,MAAO,CACHc,MAAO,MACPic,iBAAkB,eAEtBkP,SAAU,UAEd,CACIte,IAAK,WACLrL,MAAO,WACPypB,YAAa,kCACbC,UAAW1qB,EACXtB,MAAO,CACHc,MAAO,wCACPic,iBAAkB,YAEtBkP,SAAU,UAEd,CACIte,IAAK,aACLrL,MAAO,cACPypB,YAAa,yEACbC,UAAWpoB,EACX5D,MAAO,CACHc,MAAO,QACPic,iBAAkB,cAEtBkP,SAAU,UAId,CACIte,IAAK,YACLrL,MAAO,aACPypB,YAAa,qEACbC,UAAWnT,GACX7Y,MAAO,CACHc,MAAO,iBACPic,iBAAkB,aAEtBkP,SAAU,QAEd,CACIte,IAAK,aACLrL,MAAO,cACPypB,YAAa,oEACbC,UAAWzP,GACXvc,MAAO,CACHc,MAAO,aACPic,iBAAkB,cAEtBkP,SAAU,QAEd,CACIte,IAAK,aACLrL,MAAO,cACPypB,YAAa,oCACbC,UAAW1V,GACXtW,MAAO,CACHc,MAAO,WACPic,iBAAkB,cAEtBkP,SAAU,QAId,CACIte,IAAK,YACLrL,MAAO,aACPypB,YAAa,sBACbC,UAAW1B,GACXtqB,MAAO,CACHc,MAAO,gBACPic,iBAAkB,aAEtBkP,SAAU,QAEd,CACIte,IAAK,aACLrL,MAAO,cACPypB,YAAa,+CACbC,UAAWT,GACXvrB,MAAO,CACHc,MAAO,YACPic,iBAAkB,cAEtBkP,SAAU,QAKd,CACIte,IAAK,aACLrL,MAAO,cACPypB,YAAa,+CACbC,UAAWrF,GACX3mB,MAAO,CACHc,MAAO,WACPic,iBAAkB,aAClB1V,YAEJ4kB,SAAU,aAEd,CACIte,IAAK,aACLrL,MAAO,cACPypB,YAAa,mDACbC,UAAW9H,GACXlkB,MAAO,CACH+c,iBAAkB,aAClBva,KAAM,QAEN6E,QAASukB,GAAOxS,MAAM,EAAG,IAE7B6S,SAAU,aAEd,CACIte,IAAK,eACLrL,MAAO,gBACPypB,YAAa,qDACbC,UAAWjE,GACX/nB,MAAO,CACHc,MAAO,QACPic,iBAAkB,eAClB1V,QAASukB,GAAOxS,MAAM,EAAG,IAE7B6S,SAAU,aAEd,CACIte,IAAK,cACLrL,MAAO,eACPypB,YAAa,4CACbC,UAAWvd,GACXzO,MAAO,CACHc,MAAO,QACPic,iBAAkB,cAClB1V,QAASukB,IAEbK,SAAU,aAEd,CACIte,IAAK,oBACLrL,MAAO,sBACPypB,YAAa,kEACbC,UAAWrE,GACX3nB,MAAO,CACHc,MAAO,QACPic,iBAAkB,oBAClB1V,QAASukB,IAEbK,SAAU,aAId,CACIte,IAAK,gBACLrL,MAAO,iBACPypB,YAAa,+CACbC,UAAWK,GACXrsB,MAAO,CACHc,MAAO,aACPic,iBAAkB,gBAClB1V,QAASwkB,GAAWzS,MAAM,EAAG,IAEjC6S,SAAU,mBAEd,CACIte,IAAK,mBACLrL,MAAO,qBACPypB,YAAa,qDACbC,UAAWhC,GACXhqB,MAAO,CACHc,MAAO,aACPic,iBAAkB,mBAClB1V,QAASwkB,IAEbI,SAAU,mBAEd,CACIte,IAAK,yBACLrL,MAAO,4BACPypB,YAAa,wEACbC,UAAWvE,GACXznB,MAAO,CACHc,MAAO,aACPic,iBAAkB,yBAClB1V,QAASwkB,IAEbI,SAAU,mBAEd,CACIte,IAAK,sBACLrL,MAAO,yBACPypB,YAAa,uFACbC,UAAW9C,GACXlpB,MAAO,CACHc,MAAO,aACPic,iBAAkB,sBAClB1V,QAASwkB,IAEbI,SAAU,mBAId,CACIte,IAAK,cACLrL,MAAO,eACPypB,YAAa,wCACbC,UAAWxH,GACXxkB,MAAO,CACHc,MAAO,QACPic,iBAAkB,cAClB1V,YAEJ4kB,SAAU,QAGd,CACIte,IAAK,eACLrL,MAAO,iBACPypB,YAAa,sBACbC,UAAW5G,GACXplB,MAAO,CACH+c,iBAAkB,eAClBvd,S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","file":"js/4.s/chunkhash].js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"file-input-wrapper\":\"styles_file-input-wrapper_ZgOW_-Ybpa2bR-vAfZug-\",\"fileInputWrapper\":\"styles_file-input-wrapper_ZgOW_-Ybpa2bR-vAfZug-\",\"label\":\"styles_label_m2vUa_CJKucEPZjfCLet-\",\"input\":\"styles_input_2a2h-jBCKmNI86IYk7weHC\",\"status\":\"styles_status_1cyO8qxlEN-pTW_ta0JhQt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"styles_button_3-wTLiArDeE7FgGl0mAnDg\",\"clear\":\"styles_clear_2_oD_Dxz-HAJaXnUCrVaDF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list-selection\":\"styles_list-selection_2alYshyZHzILhBxplw-Pmv\",\"listSelection\":\"styles_list-selection_2alYshyZHzILhBxplw-Pmv\",\"options\":\"styles_options_1hBg1mRW-swCWsYh4K61S-\",\"item\":\"styles_item_r9ntw7gkU31NExe-FhLRE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"multi-select-input\":\"styles_multi-select-input_Zc8RDCV8FJPRtnsAAJs5U\",\"multiSelectInput\":\"styles_multi-select-input_Zc8RDCV8FJPRtnsAAJs5U\",\"input-and-actions\":\"styles_input-and-actions_1Q34vqBbtmYBVFKvivD77j\",\"inputAndActions\":\"styles_input-and-actions_1Q34vqBbtmYBVFKvivD77j\",\"input\":\"styles_input_2z20_cTN__Rp0ZH4pzonIB\",\"actions\":\"styles_actions_3W2-zhmGL2obU5oadPDQJr\",\"clear-button\":\"styles_clear-button_1iymlhFqBP89TXJFY_w9iR\",\"clearButton\":\"styles_clear-button_1iymlhFqBP89TXJFY_w9iR\",\"select-all-button\":\"styles_select-all-button_1sGHsbAYu2wC5tZBTDwhEB\",\"selectAllButton\":\"styles_select-all-button_1sGHsbAYu2wC5tZBTDwhEB\",\"dropdown-button\":\"styles_dropdown-button_asW7vtoajAGkOEzfB4zRh\",\"dropdownButton\":\"styles_dropdown-button_asW7vtoajAGkOEzfB4zRh\",\"disabled\":\"styles_disabled_17S0AdqovrEyuenuK03yDV\",\"filled\":\"styles_filled_2CrCKoD0RCcA8hKMaks2uL\",\"input-in-focus\":\"styles_input-in-focus_19BALNwiqPXHh3nNrr7Lg6\",\"inputInFocus\":\"styles_input-in-focus_19BALNwiqPXHh3nNrr7Lg6\",\"hide-clear-button\":\"styles_hide-clear-button_2nRMBxJeUEY2piY_hzWUJJ\",\"hideClearButton\":\"styles_hide-clear-button_2nRMBxJeUEY2piY_hzWUJJ\",\"completely-filled\":\"styles_completely-filled_3Qxk6jOhkagETHn76j9sPi\",\"completelyFilled\":\"styles_completely-filled_3Qxk6jOhkagETHn76j9sPi\",\"hide-select-all-button\":\"styles_hide-select-all-button_3_D0IRk74pWvKkcp_oakYV\",\"hideSelectAllButton\":\"styles_hide-select-all-button_3_D0IRk74pWvKkcp_oakYV\",\"show-options\":\"styles_show-options_1o14FRsFEWwsXwO5Sw_iSv\",\"showOptions\":\"styles_show-options_1o14FRsFEWwsXwO5Sw_iSv\",\"error\":\"styles_error_2CV5ap0rvwyED4_1I5OvzB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text-area\":\"styles_text-area_2JuYY9p9MB-adwopdnj5xc\",\"textArea\":\"styles_text-area_2JuYY9p9MB-adwopdnj5xc\",\"input\":\"styles_input_1__apEZ1A6o4k4DVvPXmPs\",\"focused\":\"styles_focused_2I9k67Sxbm6xvVkZd8S5Ze\",\"label\":\"styles_label_vcsMn1DtgbczZpoBbdjDv\",\"error\":\"styles_error_1YJfxKxRBgZLi9TSNt46SF\",\"required\":\"styles_required_2MOi3wqC88DH776ISSlFVW\",\"disabled\":\"styles_disabled_3P5wOrZlcwpMg5WF5t9CVb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"date-input\":\"styles_date-input_2H7F0TQUvqXa_HhIf8o1aa\",\"dateInput\":\"styles_date-input_2H7F0TQUvqXa_HhIf8o1aa\",\"disabled\":\"styles_disabled__8P4z99HVg3nQCrn_Brg5\",\"input\":\"styles_input_3o6WwaVXWoqAxq47RaG_hC\",\"date-picker-container\":\"styles_date-picker-container_2gCyBK_hrzLr_poIkXv2E-\",\"datePickerContainer\":\"styles_date-picker-container_2gCyBK_hrzLr_poIkXv2E-\",\"units\":\"styles_units_VGhzqYsGN8l3ZAXFd2CKM\",\"day-unit\":\"styles_day-unit_2UQ9yED6tdG3tE8pAHAu72\",\"dayUnit\":\"styles_day-unit_2UQ9yED6tdG3tE8pAHAu72\",\"month-unit\":\"styles_month-unit_1Bv8MDMng8PQlXl5x46-Id\",\"monthUnit\":\"styles_month-unit_1Bv8MDMng8PQlXl5x46-Id\",\"year-unit\":\"styles_year-unit_337Xp2QLR1dOfXjcSsczHR\",\"yearUnit\":\"styles_year-unit_337Xp2QLR1dOfXjcSsczHR\",\"action-buttons\":\"styles_action-buttons_oHDqouP7lhHfh4RlhjlAK\",\"actionButtons\":\"styles_action-buttons_oHDqouP7lhHfh4RlhjlAK\",\"focused\":\"styles_focused_i1N1DM0b3vi2uLavs2tU6\",\"invalid\":\"styles_invalid_3SXzfA6BbRUYU0RhzR2T-o\",\"error\":\"styles_error_3L0mTbqLae9Q5PcgtsRRqR\",\"readOnly\":\"styles_readOnly_37zbcgpKF1I37BEEhrRkb5\",\"label\":\"styles_label_WnB5GOj7oTUbh8JbCCDXA\",\"spin\":\"styles_spin_1sCTXWheEDy19M1IzqcuCO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"number-input\":\"styles_number-input_ek39K8MroOPWNM69HqhpQ\",\"numberInput\":\"styles_number-input_ek39K8MroOPWNM69HqhpQ\",\"input\":\"styles_input_27WueZiWIAwQXuOlKCegCU\",\"focused\":\"styles_focused_1y8gOfVfxBvhH_dQedH_8M\",\"label\":\"styles_label_3PUBAJIL3sYqmwW74q_9D0\",\"error\":\"styles_error_10izC4bd8TXMpL8SxekG_m\",\"required\":\"styles_required_2yNgJnBWoyKtpuE617zNg8\",\"disabled\":\"styles_disabled_39IbWPVjVfG-UONiGzjf6i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input-hint-and-error\":\"styles_input-hint-and-error_2huNJ6pKs5Blz8tXgSy_Lt\",\"inputHintAndError\":\"styles_input-hint-and-error_2huNJ6pKs5Blz8tXgSy_Lt\",\"input-hint\":\"styles_input-hint_1Rz2Eg2OspB-K2H0pDe1Ic\",\"inputHint\":\"styles_input-hint_1Rz2Eg2OspB-K2H0pDe1Ic\",\"input-error\":\"styles_input-error_2zaUfTahIgMJef8wOPe51k\",\"inputError\":\"styles_input-error_2zaUfTahIgMJef8wOPe51k\",\"empty\":\"styles_empty_2zLUGskG6LKT6HTW5kcprT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"month-picker\":\"styles_month-picker_6nzV9sTWHFz1_RJf4zco1\",\"monthPicker\":\"styles_month-picker_6nzV9sTWHFz1_RJf4zco1\",\"header\":\"styles_header_2ni5OrZsTDoL93m4ic0af1\",\"left\":\"styles_left_1et0kTJKxzwXJQ3pgb9J30\",\"right\":\"styles_right_-kTeULqBnDnS2eih1uwex\",\"year\":\"styles_year_ChRRnvA40UaCuMIyn6V_Q\",\"months\":\"styles_months_3Qco0XjK7RdeXBhd5KqSoQ\",\"month\":\"styles_month_2W-5xaReKPumYnkcSUMLIX\",\"selected\":\"styles_selected_1VDNl2AFZlpF0r4PkFSgEy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select-input-with-list\":\"styles_select-input-with-list_o_TbQWmsyqawqD8zJihYM\",\"selectInputWithList\":\"styles_select-input-with-list_o_TbQWmsyqawqD8zJihYM\",\"header-container\":\"styles_header-container_HN54SDGh1_G5icucpgwni\",\"headerContainer\":\"styles_header-container_HN54SDGh1_G5icucpgwni\",\"input\":\"styles_input_2BW-f_t3bGBvv3AhtdeWno\",\"list\":\"styles_list_uaBN9vUaIpgVTwsOPhReV\",\"list-item\":\"styles_list-item_oW1yieZaVq_ZEaw36opqs\",\"listItem\":\"styles_list-item_oW1yieZaVq_ZEaw36opqs\",\"error\":\"styles_error_2-QisYW_Eg3wyadv8faTHf\",\"disabled\":\"styles_disabled_A9BL5gVxdZk1CuUDOc3EK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input-details\":\"styles_input-details_3oF-Vqm7EtMaAkgp90qdSp\",\"inputDetails\":\"styles_input-details_3oF-Vqm7EtMaAkgp90qdSp\",\"left\":\"styles_left_25sfckP4Lv2VtgG2_iA76o\",\"header\":\"styles_header_1BpsACa1WbBwFMjIh8yAgC\",\"heading\":\"styles_heading_3Nl3hNrnGbJhd724cQYgju\",\"description\":\"styles_description_1q2vJbWVi3VdIhOvWW0IJO\",\"content\":\"styles_content_1if14QVlzsDPilHot5xE1A\",\"right\":\"styles_right_2350ETG4Roa4hsK_SDqef6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"styles_body_HijTe5NrtNgu5ORSwcu1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"styles_modal_2Lr_843zhTbroZhirZo-o3\",\"fade-in-from-top\":\"styles_fade-in-from-top_1KXaZ0pHnJPYk0p0OaOEOA\",\"fadeInFromTop\":\"styles_fade-in-from-top_1KXaZ0pHnJPYk0p0OaOEOA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"raw-input\":\"styles_raw-input_2slUotT2TZccE-Us91RhLY\",\"rawInput\":\"styles_raw-input_2slUotT2TZccE-Us91RhLY\"};","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport styles from './styles.scss';\n\nconst propTypes = {\n    className: PropTypes.string,\n\n    /**\n     * child elements\n     */\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.element),\n        PropTypes.element,\n        PropTypes.node,\n    ]).isRequired,\n};\n\nconst defaultProps = {\n    className: '',\n};\n\n\nexport default class Footer extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    render() {\n        const {\n            children,\n            className,\n        } = this.props;\n\n        const classNames = [\n            'modal-footer',\n            className,\n            styles.footer,\n        ];\n        return (\n            <footer className={classNames.join(' ')}>\n                { children }\n            </footer>\n        );\n    }\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scale-input\":\"styles_scale-input_3K7DJU4M4x9YKAKXnLCbwe\",\"scaleInput\":\"styles_scale-input_3K7DJU4M4x9YKAKXnLCbwe\",\"value\":\"styles_value_1__QYkPpMfxLXq75r55nLX\",\"active\":\"styles_active_1gm9V9rd130dpaj3UYVIvN\",\"disabled\":\"styles_disabled_2wyx_FdL8sc76pOSt1gSab\",\"read-only\":\"styles_read-only_2wKnn-hg33gNnl-d6Kz6_3\",\"readOnly\":\"styles_read-only_2wKnn-hg33gNnl-d6Kz6_3\",\"spin\":\"styles_spin_1w14-ldyFT-PppcOoBEIDs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"segment-input\":\"styles_segment-input_2CAYxYgqYTmVw2ItvRTcFk\",\"segmentInput\":\"styles_segment-input_2CAYxYgqYTmVw2ItvRTcFk\",\"segment-container\":\"styles_segment-container_19hOgr9IwSF2UmWVVo1Zm-\",\"segmentContainer\":\"styles_segment-container_19hOgr9IwSF2UmWVVo1Zm-\",\"label\":\"styles_label_2QODvLcDUm9XQVLpbYFJr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio-input\":\"styles_radio-input_2WW5bGxSIvjxEAth3aFaV9\",\"radioInput\":\"styles_radio-input_2WW5bGxSIvjxEAth3aFaV9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"date-filter-modal\":\"styles_date-filter-modal_30CnqL_GjIe5nCz14m5BNr\",\"dateFilterModal\":\"styles_date-filter-modal_30CnqL_GjIe5nCz14m5BNr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"date-picker\":\"styles_date-picker_tLsqAWd9h-yLicnWDlcnc\",\"datePicker\":\"styles_date-picker_tLsqAWd9h-yLicnWDlcnc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"styles_header_B0ZHzcAk6V8NyKSuaL0r3\",\"heading\":\"styles_heading_3PzHg6Pro0E9vD-j7Q-8nJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input-label\":\"styles_input-label_31dXhWApX7bUurozUenkmh\",\"inputLabel\":\"styles_input-label_31dXhWApX7bUurozUenkmh\",\"empty\":\"styles_empty_2mBuRKp8ULd1ZrT31d4NoJ\",\"active\":\"styles_active_1DTcYPHkviyK9oDptuZxhr\",\"error\":\"styles_error_1hm5pdENjkamJcExwKZ4zh\",\"disabled\":\"styles_disabled_1wx5FGxMbdzmYyHHdNAf_7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"option\":\"styles_option_3dYxBJTx51Hm-i9JW4Nqx4\",\"input\":\"styles_input_1JKiHQc-l5W2spbbFYEpLJ\",\"radio\":\"styles_radio_3cML1blvgQ52ljhhvzN35T\",\"label\":\"styles_label_kAJR6hmD_OweCi0lmdURl\",\"checked\":\"styles_checked_1d5pPc7DycrPPdi9GwHtGF\",\"disabled\":\"styles_disabled_2kmWoJTpdnNpIsMSY3YP-B\",\"read-only\":\"styles_read-only_1SHFC2d1fFoNwbGfLlMFxd\",\"readOnly\":\"styles_read-only_1SHFC2d1fFoNwbGfLlMFxd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"styles_checkbox_1Ef_v4FN4lZwZmAXBGTOoN\",\"checkmark\":\"styles_checkmark_PTv2WhfXW_uhd649a0nm7\",\"input\":\"styles_input_1r2mAndbKvNB0aU-YtZnqb\",\"label\":\"styles_label_2hrz80Vg2G6LePJQIGAl9L\",\"checked\":\"styles_checked_3dNAk-QBB6TxlNSbPZp4AG\",\"disabled\":\"styles_disabled_lpZ68AsDnR5cccmGTjZud\",\"read-only\":\"styles_read-only_1wiv544jQ4TEc3eBB5YO_t\",\"readOnly\":\"styles_read-only_1wiv544jQ4TEc3eBB5YO_t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list-item\":\"styles_list-item_b9fYEpJtO9INKv4hxDbxI\",\"listItem\":\"styles_list-item_b9fYEpJtO9INKv4hxDbxI\",\"marker\":\"styles_marker_33mhXQ1YzDYu9vXuxlWTkw\",\"label\":\"styles_label_R0IKKuL51tr9VsIpqayFx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"options\":\"styles_options_1AQD7GsNSvLgjG6OJlygVG\",\"empty\":\"styles_empty_2oNWb2JnJ6IeUdVFCnf7WZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"options\":\"styles_options_N45WUQuozg1EDlyNjhmRs\",\"empty\":\"styles_empty_MRQQPCPyojcFAEjff5jaC\",\"spin\":\"styles_spin_d1lcYcVS2j4KUcXiNXp7_\"};","import React from 'react';\nimport Button from './index.js';\n\nconst PrimaryButton = props => (\n    <Button buttonType=\"button-primary\" {...props} />\n);\nexport default PrimaryButton;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"styles_checkbox_1s_UT_LZGm_IbkgET2IRDS\"};","import PropTypes from 'prop-types';\nimport React from 'react';\nimport {\n    randomString,\n    _cs,\n} from '@togglecorp/fujs';\nimport { FaramInputElement } from '@togglecorp/faram';\n\nimport Icon from '../../General/Icon';\n\nimport styles from './styles.scss';\n\nconst propTypes = {\n    /**\n     * for styling by className\n     */\n    className: PropTypes.string,\n\n    /**\n     * Is input disabled?\n     */\n    disabled: PropTypes.bool,\n\n    value: PropTypes.bool,\n\n    /**\n     * A callback for when the input changes its content\n     */\n    onChange: PropTypes.func.isRequired,\n\n    /**\n     * label for the checkbox\n     */\n    label: PropTypes.node.isRequired,\n\n    tooltip: PropTypes.string,\n\n    readOnly: PropTypes.bool,\n\n    checkboxType: PropTypes.string,\n\n    // FIXME\n    changeDelay: PropTypes.number,\n};\n\nconst defaultProps = {\n    className: '',\n    disabled: false,\n    checkboxType: 'checkbox',\n    tooltip: '',\n    readOnly: false,\n    value: false,\n    changeDelay: undefined,\n};\n\nclass Checkbox extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n\n        this.inputId = randomString();\n    }\n\n    handleInputChange = (e) => {\n        const value = e.target.checked;\n        this.props.onChange(value);\n    }\n\n    render() {\n        const {\n            label,\n            tooltip,\n            className: classNameFromProps,\n            value,\n            disabled,\n            readOnly,\n            checkboxType,\n            onChange, // eslint-disable-line no-unused-vars, @typescript-eslint/no-unused-vars\n            changeDelay, // eslint-disable-line no-unused-vars, @typescript-eslint/no-unused-vars\n            ...otherProps\n        } = this.props;\n\n        const className = _cs(\n            styles.checkbox,\n            'checkbox',\n            classNameFromProps,\n            value && styles.checked,\n            value && 'checked',\n            disabled && styles.disabled,\n            disabled && 'disabled',\n            readOnly && styles.readOnly,\n            readOnly && 'read-only',\n        );\n\n        const spanClassName = _cs(\n            styles.checkmark,\n            'checkmark',\n        );\n\n        const inputClassName = _cs(\n            'input',\n            styles.input,\n        );\n\n        const labelClassName = _cs(\n            'label',\n            styles.label,\n        );\n\n        return (\n            <label\n                htmlFor={this.inputId}\n                className={className}\n                title={tooltip}\n            >\n                <Icon\n                    name={value ? checkboxType : 'checkboxOutlineBlank'}\n                    className={spanClassName}\n                />\n                <input\n                    id={this.inputId}\n                    onChange={this.handleInputChange}\n                    className={inputClassName}\n                    type=\"checkbox\"\n                    checked={value}\n                    disabled={disabled || readOnly}\n                    {...otherProps}\n                />\n                <div className={labelClassName}>\n                    { label }\n                </div>\n            </label>\n        );\n    }\n}\n\nexport default FaramInputElement(Checkbox);\n","import React from 'react';\nimport { _cs } from '@togglecorp/fujs';\n\nimport styles from './styles.scss';\n\ninterface Props {\n    show?: boolean;\n    error?: boolean;\n    hint?: string;\n}\n\nexport default class HintAndError extends React.PureComponent<Props> {\n    public static defaultProps = {\n        show: true,\n    };\n\n    public render() {\n        const {\n            show,\n            error,\n            hint,\n        } = this.props;\n\n        if (!show) {\n            return null;\n        }\n\n        const className = _cs(\n            styles.inputHintAndError,\n            'input-hint-and-error',\n            error && styles.inputError,\n            error && 'input-error',\n            hint && styles.inputHint,\n            hint && 'input-hint',\n            !(hint || error) && styles.empty,\n            !(hint || error) && 'empty',\n        );\n\n        const message = error ? hint : undefined;\n\n        return (\n            <div\n                className={className}\n                title={message}\n            >\n                { message || '-' }\n            </div>\n        );\n    }\n}\n","import React from 'react';\n\nimport { _cs } from '@togglecorp/fujs';\nimport styles from './styles.scss';\n\ninterface Props {\n    show?: boolean;\n    text?: string;\n    error?: boolean;\n    className?: string;\n    active?: boolean;\n    disabled?: boolean;\n}\n\nexport default class InputLabel extends React.PureComponent<Props> {\n    public static defaultProps = {\n        className: '',\n        text: '',\n        error: false,\n        show: true,\n        active: false,\n        disabled: false,\n    };\n\n    public render() {\n        const {\n            show,\n            text,\n            error,\n            className: classNameFromProps,\n            active,\n            disabled,\n            ...otherProps\n        } = this.props;\n\n        if (!show) {\n            return null;\n        }\n\n        const className = _cs(\n            classNameFromProps,\n            'input-label',\n            styles.inputLabel,\n            !text && 'empty',\n            !text && styles.empty,\n            error && styles.error,\n            error && 'error',\n            active && styles.active,\n            active && 'active',\n            disabled && styles.disabled,\n            disabled && 'disabled',\n        );\n\n        return (\n            <div\n                className={className}\n                title={text}\n                {...otherProps}\n            >\n                {text}\n            </div>\n        );\n    }\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { SketchPicker } from 'react-color';\n\nimport { randomString } from '@togglecorp/fujs';\nimport { FaramInputElement } from '@togglecorp/faram';\n\nimport { calcFloatingPositionInMainWindow } from '../../../utils/common';\n\nimport FloatingContainer from '../../View/FloatingContainer';\nimport HintAndError from '../HintAndError';\nimport Label from '../Label';\n\nimport styles from './styles.scss';\n\nconst propTypes = {\n    /**\n     * for styling by className\n     */\n    className: PropTypes.string,\n\n    value: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n\n    /**\n     * String to show in case of error\n     */\n    error: PropTypes.string,\n\n    /**\n     * Hint text\n     */\n    hint: PropTypes.string,\n\n    /**\n     * A callback for when the input changes its content\n     */\n    onChange: PropTypes.func.isRequired,\n\n    /**\n     * label for the checkbox\n     */\n    label: PropTypes.node.isRequired,\n\n    showLabel: PropTypes.bool,\n\n    showHintAndError: PropTypes.bool,\n\n    disabled: PropTypes.bool,\n    readOnly: PropTypes.bool,\n};\n\nconst defaultProps = {\n    className: '',\n    showLabel: true,\n    value: undefined,\n    error: '',\n    hint: '',\n    showHintAndError: true,\n    disabled: false,\n    readOnly: false,\n};\n\nclass ColorInput extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            showColorPicker: false,\n        };\n\n        this.inputId = randomString();\n        this.boundingClientRect = {};\n    }\n\n    handleColorPickerInvalidate = (colorPickerContainer) => {\n        const containerRect = colorPickerContainer.getBoundingClientRect();\n        let parentRect = this.boundingClientRect;\n        if (this.container) {\n            parentRect = this.container.getBoundingClientRect();\n        }\n\n        const offset = {\n            top: 2,\n            right: 0,\n            bottom: 0,\n            left: 0,\n        };\n        if (this.props.showHintAndError) {\n            offset.top = 12;\n        }\n\n        const optionsContainerPosition = (\n            calcFloatingPositionInMainWindow(parentRect, containerRect, offset)\n        );\n        return optionsContainerPosition;\n    }\n\n    handleInputChange = (e) => {\n        const value = e.target.checked;\n        this.props.onChange(value);\n    }\n\n    handleColorBoxClick = () => {\n        this.boundingClientRect = this.container.getBoundingClientRect();\n        this.setState({ showColorPicker: true });\n    }\n\n    handleCloseColorPickerClick = () => {\n        this.setState({ showColorPicker: false });\n    }\n\n    handleColorChange = (newColor) => {\n        if (this.props.onChange) {\n            this.props.onChange(newColor.hex);\n        }\n    }\n\n    handleColorPickerBlur = () => {\n        this.setState({ showColorPicker: false });\n    }\n\n    render() {\n        const {\n            label,\n            className,\n            value,\n            showLabel,\n            showHintAndError,\n            error,\n            hint,\n            disabled,\n            readOnly,\n        } = this.props;\n\n        const { showColorPicker } = this.state;\n        const buttonClassNames = [\n            styles.colorBox,\n            'color-box',\n        ];\n\n        const classNames = [\n            styles.colorInput,\n            className,\n        ];\n\n        if (disabled) {\n            buttonClassNames.push(styles.disabled);\n            classNames.push(styles.disabled);\n        }\n\n        return (\n            <div\n                className={classNames.join(' ')}\n                ref={(el) => { this.container = el; }}\n            >\n                <Label\n                    className={styles.label}\n                    show={showLabel}\n                    text={label}\n                />\n                <button\n                    type=\"button\"\n                    className={buttonClassNames.join(' ')}\n                    onClick={this.handleColorBoxClick}\n                    disabled={disabled || readOnly}\n                >\n                    <span\n                        className={`${styles.color} color`}\n                        style={{ backgroundColor: value }}\n                    />\n                </button>\n                <HintAndError\n                    show={showHintAndError}\n                    hint={hint}\n                    error={error}\n                />\n                {\n                    showColorPicker && (\n                        <FloatingContainer\n                            parent={this.container}\n                            onBlur={this.handleColorPickerBlur}\n                            onInvalidate={this.handleColorPickerInvalidate}\n                            focusTrap\n                        >\n                            <SketchPicker\n                                color={value}\n                                onChange={this.handleColorChange}\n                            />\n                        </FloatingContainer>\n                    )\n                }\n            </div>\n        );\n    }\n}\n\nexport default FaramInputElement(ColorInput);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport Faram from '@togglecorp/faram';\n\nimport PrimaryButton from '../../Action/Button/PrimaryButton';\nimport DangerButton from '../../Action/Button/DangerButton';\n\nimport Modal from '../Modal';\nimport ModalHeader from '../Modal/Header';\nimport ModalBody from '../Modal/Body';\nimport ModalFooter from '../Modal/Footer';\n\nconst noOp = () => undefined;\n\nconst propTypes = {\n    className: PropTypes.string,\n    children: PropTypes.node.isRequired,\n    title: PropTypes.string.isRequired,\n    onClose: PropTypes.func,\n    onApply: PropTypes.func,\n    schema: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n};\n\nconst defaultProps = {\n    className: '',\n    onClose: noOp,\n    onApply: noOp,\n};\n\n\n// FIXME: remove this or move this to better place\nexport default class ApplyModal extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            faramValues: {},\n            faramErrors: {},\n        };\n    }\n\n    getClassName = () => {\n        const { className } = this.props;\n        const classNames = [\n            className,\n            'apply-modal',\n        ];\n\n        return classNames.join(' ');\n    }\n\n    handleFaramSuccess = (values) => {\n        const { onApply } = this.props;\n        if (onApply) {\n            onApply(values);\n        }\n    }\n\n    handleFaramFailure = (faramErrors) => {\n        this.setState({ faramErrors });\n    }\n\n    handleFaramChange = (faramValues, faramErrors) => {\n        this.setState({\n            faramValues,\n            faramErrors,\n        });\n    }\n\n    render() {\n        const className = this.getClassName();\n        const {\n            onClose,\n            title,\n            children,\n            schema,\n        } = this.props;\n\n        const {\n            faramValues,\n            faramErrors,\n        } = this.state;\n\n        return (\n            <Modal\n                className={className}\n                closeOnEscape\n                onClose={onClose}\n            >\n                <Faram\n                    onChange={this.handleFaramChange}\n                    onValidationFailure={this.handleFaramFailure}\n                    onValidationSuccess={this.handleFaramSuccess}\n                    schema={schema}\n                    value={faramValues}\n                    error={faramErrors}\n                >\n                    <ModalHeader title={title} />\n                    <ModalBody>\n                        {children}\n                    </ModalBody>\n                    <ModalFooter>\n                        <DangerButton\n                            onClick={onClose}\n                            autoFocus\n                        >\n                            Close\n                        </DangerButton>\n                        <PrimaryButton type=\"submit\">\n                            Apply\n                        </PrimaryButton>\n                    </ModalFooter>\n                </Faram>\n            </Modal>\n        );\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { modulo } from '@togglecorp/fujs';\n\nconst propTypes = {\n    focusedKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    // eslint-disable-next-line react/forbid-prop-types\n    options: PropTypes.array,\n    keySelector: PropTypes.func.isRequired,\n    isOptionsShown: PropTypes.bool,\n\n    onFocusChange: PropTypes.func.isRequired,\n    onHideOptions: PropTypes.func.isRequired,\n    onShowOptions: PropTypes.func.isRequired,\n    onOptionSelect: PropTypes.func.isRequired,\n};\n\nconst defaultProps = {\n    focusedKey: undefined,\n    options: [],\n    isOptionsShown: false,\n};\n\nconst TAB = 9;\nconst ESC = 27;\nconst ENTER = 13;\nconst DOWN = 38;\nconst UP = 40;\nconst specialKeys = [UP, DOWN, ENTER];\n\nconst getNewKey = (oldKey, increment, options, keySelector) => {\n    if (options.length <= 0) {\n        return undefined;\n    }\n\n    const index = options.findIndex(o => keySelector(o) === oldKey);\n    // NOTE: index should never to -1 to begin with\n\n    let oldIndex = index;\n    if (oldIndex === -1) {\n        oldIndex = increment > 0 ? -1 : 0;\n    }\n\n    const newIndex = modulo(oldIndex + increment, options.length);\n\n    return keySelector(options[newIndex]);\n};\n\nexport default (WrappedComponent) => {\n    const ListenerComponent = class extends React.PureComponent {\n        static propTypes = propTypes;\n\n        static defaultProps = defaultProps;\n\n        componentWillReceiveProps(nextProps) {\n            const {\n                isOptionsShown: oldIsOptionsShown,\n                options: oldOptions,\n                keySelector: oldKeySelector,\n            } = this.props;\n            const {\n                isOptionsShown: newIsOptionsShown,\n                options: newOptions,\n                keySelector: newKeySelector,\n            } = nextProps;\n\n            if (\n                (!oldIsOptionsShown && newIsOptionsShown)\n                || (oldKeySelector !== newKeySelector)\n                || (oldOptions !== newOptions)\n            ) {\n                const newFocusedKey = getNewKey(\n                    undefined,\n                    1,\n                    newOptions,\n                    newKeySelector,\n                );\n                nextProps.onFocusChange(newFocusedKey);\n            }\n        }\n\n        handleInputKeyDown = (e) => {\n            const {\n                focusedKey,\n                options,\n                keySelector,\n                isOptionsShown,\n\n                onHideOptions,\n                onShowOptions,\n                onOptionSelect,\n                onFocusChange,\n            } = this.props;\n            const { keyCode } = e;\n\n            if (isOptionsShown && (keyCode === TAB || keyCode === ESC)) {\n                // If tab or escape was pressed and dropdown is being shown,\n                // hide the dropdown.\n                onHideOptions();\n            } else if (!isOptionsShown && specialKeys.includes(keyCode)) {\n                // If any of the special keys was pressed but the dropdown is currently hidden,\n                // show the dropdown.\n                e.stopPropagation();\n                e.preventDefault();\n                onShowOptions();\n            } else if (keyCode === ENTER) {\n                if (focusedKey) {\n                    e.stopPropagation();\n                    e.preventDefault();\n                    onOptionSelect(focusedKey);\n                }\n            } else if (keyCode === UP) {\n                e.stopPropagation();\n                e.preventDefault();\n                const newFocusedKey = getNewKey(focusedKey, 1, options, keySelector);\n                onFocusChange(newFocusedKey);\n            } else if (keyCode === DOWN) {\n                e.stopPropagation();\n                e.preventDefault();\n                const newFocusedKey = getNewKey(focusedKey, -1, options, keySelector);\n                onFocusChange(newFocusedKey);\n            }\n        }\n\n        render() {\n            const {\n                focusedKey, // eslint-disable-line no-unused-vars, @typescript-eslint/no-unused-vars\n                options, // eslint-disable-line no-unused-vars, @typescript-eslint/no-unused-vars\n                // eslint-disable-next-line no-unused-vars, @typescript-eslint/no-unused-vars\n                keySelector,\n                // eslint-disable-next-line no-unused-vars, @typescript-eslint/no-unused-vars\n                isOptionsShown,\n                // eslint-disable-next-line no-unused-vars, @typescript-eslint/no-unused-vars\n                onFocusChange,\n                // eslint-disable-next-line no-unused-vars, @typescript-eslint/no-unused-vars\n                onHideOptions,\n                // eslint-disable-next-line no-unused-vars, @typescript-eslint/no-unused-vars\n                onShowOptions,\n                // eslint-disable-next-line no-unused-vars, @typescript-eslint/no-unused-vars\n                onOptionSelect,\n                ...otherProps\n            } = this.props;\n\n            return (\n                <WrappedComponent\n                    onKeyDown={this.handleInputKeyDown}\n                    {...otherProps}\n                />\n            );\n        }\n    };\n\n    return hoistNonReactStatics(ListenerComponent, WrappedComponent);\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { _cs } from '@togglecorp/fujs';\nimport styles from './styles.scss';\n\nconst propTypes = {\n    className: PropTypes.string,\n};\n\nconst defaultProps = {\n    className: '',\n};\n\nexport default class TextInput extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    render() {\n        // NOTE: elementRef is pass through prop.\n        // So, it doesn't require prop type declaration.\n\n        const {\n            className,\n            elementRef, // eslint-disable-line react/prop-types\n            ...otherProps\n        } = this.props;\n\n        return (\n            <input\n                ref={elementRef}\n                className={_cs(\n                    className,\n                    styles.rawInput,\n                    'raw-input',\n                )}\n                {...otherProps}\n            />\n        );\n    }\n}\n","export const defaultRect = {\n    top: 0,\n    left: 0,\n    width: 0,\n    height: 0,\n};\n\nexport const defaultOffset = {\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n};\n\nexport const defaultLimit = {\n    minW: 0,\n    maxW: Infinity,\n    minH: 0,\n    maxH: Infinity,\n};\n\nconst defaultParams = {\n    contentRect: { ...defaultRect },\n    parentRect: { ...defaultRect },\n    boundingRect: { ...defaultRect },\n    offset: { ...defaultOffset },\n    limit: { ...defaultLimit },\n};\n\nexport const calcFloatRect = (p) => {\n    const params = {\n        ...defaultParams,\n        ...p,\n    };\n\n    const {\n        contentRect,\n        parentRect,\n        boundingRect,\n        offset,\n        limit,\n    } = params;\n\n    const newWidth = Math.max(\n        Math.min(\n            contentRect.width,\n            limit.maxW,\n        ),\n        limit.minW,\n    );\n\n    const newContentRect = {\n        top: (parentRect.top + parentRect.height) - offset.top,\n        left: parentRect.left - offset.left,\n        width: newWidth,\n    };\n\n    // TODO: consider the case where height doesn't fit on either side (top or bottom)\n    const containerOffsetY = parentRect.top + parentRect.height + contentRect.height;\n    if (boundingRect.height < containerOffsetY) {\n        newContentRect.top = (parentRect.top + boundingRect.top)\n            - (contentRect.height + offset.bottom);\n    }\n\n    const containerOffsetX = parentRect.left + newWidth;\n    if (boundingRect.width < containerOffsetX) {\n        newContentRect.left = (boundingRect.left + parentRect.left + parentRect.width)\n            - (newContentRect.width + offset.right);\n    }\n\n    return newContentRect;\n};\n\nexport const calcFloatRectInMainWindow = p => (\n    calcFloatRect({\n        ...p,\n        boundingRect: {\n            top: window.scrollY,\n            left: window.scrollX,\n            width: window.innerWidth,\n            height: window.innerHeight,\n        },\n    })\n);\n\nexport const calcFloatPositionInMainWindow = (p) => {\n    const floatRect = calcFloatRectInMainWindow(p);\n\n    return {\n        top: `${floatRect.top}px`,\n        left: `${floatRect.left}px`,\n        width: `${floatRect.width}px`,\n    };\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './styles.scss';\n\nconst propTypes = {\n    className: PropTypes.string,\n    optionKey: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]).isRequired,\n    onClick: PropTypes.func.isRequired,\n    onFocus: PropTypes.func.isRequired,\n    children: PropTypes.node,\n    isActive: PropTypes.bool,\n    isFocused: PropTypes.bool,\n};\n\nconst defaultProps = {\n    isActive: false,\n    isFocused: false,\n    className: '',\n    children: undefined,\n};\n\nexport default class Option extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n        this.ref = React.createRef();\n        this.focusedByMouse = undefined;\n    }\n\n    componentDidMount() {\n        const { isFocused } = this.props;\n\n        if (isFocused) {\n            this.scrollToFocus();\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const { isFocused } = this.props;\n\n        if (!isFocused && nextProps.isFocused) {\n            this.scrollToFocus();\n        } else {\n            this.focusedByMouse = false;\n        }\n    }\n\n    getClassName = () => {\n        const {\n            className,\n            isActive,\n            isFocused,\n        } = this.props;\n\n        const classNames = [\n            className,\n            styles.option,\n            'option',\n        ];\n\n        if (isActive) {\n            classNames.push(styles.active);\n            classNames.push('active');\n        }\n\n        if (isFocused) {\n            classNames.push(styles.focused);\n            classNames.push('focused');\n        }\n\n        return classNames.join(' ');\n    }\n\n    handleClick = () => {\n        const {\n            optionKey,\n            onClick,\n        } = this.props;\n\n        onClick(optionKey);\n    }\n\n    handleMouseMove = () => {\n        const {\n            optionKey,\n            onFocus,\n        } = this.props;\n\n        this.focusedByMouse = true;\n        onFocus(optionKey);\n    }\n\n    handleMouseLeave = () => {\n        this.focusedByMouse = false;\n    }\n\n    scrollToFocus = () => {\n        if (!this.focusedByMouse) {\n            this.ref.current.scrollIntoView({\n                block: 'nearest',\n            });\n        }\n    }\n\n    render() {\n        const { children } = this.props;\n        const className = this.getClassName();\n\n        return (\n            <button\n                ref={this.ref}\n                className={className}\n                onClick={this.handleClick}\n                onMouseMove={this.handleMouseMove}\n                onMouseLeave={this.handleMouseLeave}\n                type=\"button\"\n            >\n                { children }\n            </button>\n        );\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport FloatingContainer from '../../../View/FloatingContainer';\nimport List from '../../../View/List';\n\nimport Option from './Option';\n\nimport styles from './styles.scss';\n\nconst propTypes = {\n    className: PropTypes.string,\n    show: PropTypes.bool,\n    data: PropTypes.arrayOf(PropTypes.object),\n    keySelector: PropTypes.func.isRequired,\n    labelSelector: PropTypes.func.isRequired,\n    optionLabelSelector: PropTypes.func,\n    renderEmpty: PropTypes.func,\n    onOptionClick: PropTypes.func.isRequired,\n    onOptionFocus: PropTypes.func.isRequired,\n    value: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    focusedKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    onBlur: PropTypes.func.isRequired,\n    onInvalidate: PropTypes.func.isRequired,\n\n    // eslint-disable-next-line react/forbid-prop-types\n    parentContainer: PropTypes.object,\n};\n\nconst defaultProps = {\n    className: '',\n    show: false,\n    data: [],\n    focusedKey: undefined,\n    optionLabelSelector: undefined,\n    renderEmpty: () => 'No option available',\n    value: undefined,\n    parentContainer: undefined,\n};\n\nexport default class Options extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    renderOption = (_, option) => {\n        const {\n            keySelector,\n            labelSelector,\n            optionLabelSelector,\n            onOptionClick,\n            onOptionFocus,\n            value,\n            focusedKey,\n        } = this.props;\n\n        const key = keySelector(option);\n        const label = optionLabelSelector ? (\n            optionLabelSelector(option)\n        ) : (\n            labelSelector(option)\n        );\n\n        const isActive = key === value;\n        const isFocused = key === focusedKey;\n\n        return (\n            <Option\n                key={key}\n                optionKey={key}\n                onClick={onOptionClick}\n                onFocus={onOptionFocus}\n                isActive={isActive}\n                isFocused={isFocused}\n            >\n                { label }\n            </Option>\n        );\n    }\n\n    renderEmpty = () => {\n        const {\n            data,\n            renderEmpty: EmptyComponent,\n        } = this.props;\n\n        if (data.length !== 0) {\n            return null;\n        }\n\n        const className = `\n            empty\n            ${styles.empty}\n        `;\n\n        return (\n            <div className={className}>\n                <EmptyComponent />\n            </div>\n        );\n    }\n\n    render() {\n        const {\n            className: classNameFromProps,\n            show,\n            data,\n            onBlur,\n            onInvalidate,\n            parentContainer,\n        } = this.props;\n\n        if (!show) {\n            return null;\n        }\n\n        const className = `\n            ${classNameFromProps}\n            ${styles.options}\n            options\n        `;\n\n        const Empty = this.renderEmpty;\n\n        return (\n            <FloatingContainer\n                onBlur={onBlur}\n                onInvalidate={onInvalidate}\n                parent={parentContainer}\n                className={className}\n            >\n                <List\n                    data={data}\n                    modifier={this.renderOption}\n                />\n                <Empty />\n            </FloatingContainer>\n        );\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport memoize from 'memoize-one';\nimport {\n    caseInsensitiveSubmatch,\n    compareStringSearch,\n    _cs,\n} from '@togglecorp/fujs';\nimport { FaramInputElement } from '@togglecorp/faram';\n\n\nimport Button from '../../Action/Button';\nimport DangerButton from '../../Action/Button/DangerButton';\nimport handleKeyboard from '../../General/HandleKeyboard';\nimport HintAndError from '../HintAndError';\nimport Label from '../Label';\nimport RawInput from '../RawInput';\n\nimport {\n    calcFloatPositionInMainWindow,\n    defaultOffset,\n    defaultLimit,\n} from '../../../utils/bounds';\n\n\nimport Options from './Options';\nimport styles from './styles.scss';\n\nconst propTypeKey = PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n]);\n\nconst RawKeyInput = handleKeyboard(RawInput);\nconst emptyList = [];\n\n// NOTE: labelSelector must return string\n// NOTE: optionLabelSelector may return renderable node\nconst propTypes = {\n    autoFocus: PropTypes.bool,\n    disabled: PropTypes.bool,\n    hideClearButton: PropTypes.bool,\n    readOnly: PropTypes.bool,\n    showHintAndError: PropTypes.bool,\n    showLabel: PropTypes.bool,\n\n    className: PropTypes.string,\n    error: PropTypes.string,\n    hint: PropTypes.string,\n    label: PropTypes.string,\n    optionsClassName: PropTypes.string,\n    placeholder: PropTypes.string,\n    title: PropTypes.string,\n\n    options: PropTypes.arrayOf(PropTypes.object),\n    value: propTypeKey,\n    onChange: PropTypes.func.isRequired,\n\n    keySelector: PropTypes.func,\n    labelSelector: PropTypes.func,\n    optionLabelSelector: PropTypes.func,\n\n    renderEmpty: PropTypes.func,\n};\n\nconst defaultProps = {\n    autoFocus: undefined,\n    className: '',\n    disabled: false,\n    error: undefined,\n    hideClearButton: false,\n    hint: undefined,\n    keySelector: d => d.key,\n    label: '',\n    labelSelector: d => d.label,\n    optionLabelSelector: undefined,\n    options: emptyList,\n    optionsClassName: '',\n    placeholder: 'Select an option',\n    readOnly: false,\n    renderEmpty: undefined,\n    showHintAndError: true,\n    showLabel: true,\n    title: undefined,\n    value: undefined,\n};\n\nclass SelectInput extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            // FIXME: this may break\n            inputInFocus: props.autoFocus,\n            focusedKey: undefined,\n\n            showOptionsPopup: false,\n            searchValue: undefined,\n        };\n\n        this.containerRef = React.createRef();\n        this.inputRef = React.createRef();\n    }\n\n    componentDidMount() {\n        const { current: container } = this.containerRef;\n        if (container) {\n            this.boundingClientRect = container.getBoundingClientRect();\n        }\n    }\n\n    filterOptions = memoize((\n        options,\n        labelSelector,\n        value,\n    ) => {\n        const newOptions = options\n            .filter(\n                option => (\n                    value === undefined || caseInsensitiveSubmatch(labelSelector(option), value)\n                ),\n            )\n            .sort((a, b) => compareStringSearch(\n                labelSelector(a),\n                labelSelector(b),\n                value,\n            ));\n        return newOptions;\n    });\n\n    findDefaultSearchValue = memoize((\n        options,\n        labelSelector,\n        keySelector,\n        value,\n    ) => {\n        const activeOption = options.find(\n            d => keySelector(d) === value,\n        );\n\n        if (activeOption === undefined) {\n            return '';\n        }\n\n        return labelSelector(activeOption);\n    });\n\n\n    // Helper\n\n    handleShowOptionsPopup = () => {\n        const { current: input } = this.inputRef;\n        if (input) {\n            input.select();\n        }\n\n        /*\n        // NOTE: this may not be required\n        const { current: container } = this.containerRef;\n        if (container) {\n            this.boundingClientRect = container.getBoundingClientRect();\n        }\n        */\n\n        this.setState({\n            showOptionsPopup: true,\n            searchValue: undefined,\n        });\n    }\n\n    handleHideOptionsPopup = () => {\n        this.setState({\n            showOptionsPopup: false,\n            searchValue: undefined,\n        });\n    }\n\n    // Input\n\n    handleInputFocus = () => {\n        this.setState({ inputInFocus: true });\n    }\n\n    handleInputBlur = () => {\n        this.setState({ inputInFocus: false });\n    }\n\n    handleInputChange = (e) => {\n        const { value } = e.target;\n\n        /*\n        // NOTE: this may not be required\n        const { current: container } = this.containerRef;\n        if (container) {\n            this.boundingClientRect = container.getBoundingClientRect();\n        }\n        */\n\n        this.setState({\n            showOptionsPopup: true,\n            searchValue: value,\n        });\n    }\n\n    // Options\n\n    handleOptionsInvalidate = (optionsContainer) => {\n        const contentRect = optionsContainer.getBoundingClientRect();\n        let parentRect = this.boundingClientRect;\n        const { current: container } = this.containerRef;\n\n        if (container) {\n            parentRect = container.getBoundingClientRect();\n        }\n\n        const { showHintAndError } = this.props;\n\n        const offset = { ...defaultOffset };\n        if (showHintAndError) {\n            offset.top = 12;\n        }\n\n        const limit = {\n            ...defaultLimit,\n            minW: parentRect.width,\n            maxW: parentRect.width,\n        };\n\n        const optionsContainerPosition = (\n            calcFloatPositionInMainWindow({\n                parentRect,\n                contentRect,\n                offset,\n                limit,\n            })\n        );\n\n        return optionsContainerPosition;\n    };\n\n    handleOptionSelect = (optionKey) => {\n        const {\n            value,\n            onChange,\n        } = this.props;\n\n        this.setState({\n            showOptionsPopup: false,\n            searchValue: undefined,\n        });\n\n        if (optionKey !== value) {\n            onChange(optionKey);\n        }\n    }\n\n    handleClearButtonClick = () => {\n        const {\n            onChange,\n            value,\n        } = this.props;\n\n        if (value !== undefined) {\n            onChange(undefined);\n        }\n    }\n\n    handleFocusChange = (focusedKey) => {\n        this.setState({ focusedKey });\n    }\n\n    render() {\n        const {\n            error,\n            hint,\n            keySelector,\n            label,\n            labelSelector,\n            optionLabelSelector,\n            optionsClassName,\n            renderEmpty,\n            showHintAndError,\n            showLabel,\n            title,\n            value,\n            disabled,\n            readOnly,\n            placeholder,\n            autoFocus,\n            hideClearButton,\n            className: classNameFromProps,\n            options,\n        } = this.props;\n\n        const {\n            showOptionsPopup,\n            focusedKey,\n            inputInFocus,\n            searchValue,\n        } = this.state;\n\n        // NOTE: finalSearchValue shouldn't be undefined\n        const finalSearchValue = searchValue === undefined\n            ? this.findDefaultSearchValue(options, labelSelector, keySelector, value)\n            : searchValue;\n\n        const isFilled = finalSearchValue && finalSearchValue.length !== 0;\n        const showClearButton = isFilled && !(hideClearButton || disabled || readOnly);\n\n        const { current: container } = this.containerRef;\n\n        const filteredOptions = this.filterOptions(\n            options,\n            labelSelector,\n            // NOTE: Using value instead of finalSearchValue\n            // this will display all options at first\n            searchValue,\n        );\n\n        const className = _cs(\n            classNameFromProps,\n            'select-input',\n            styles.selectInput,\n            showOptionsPopup && styles.showOptions,\n            showOptionsPopup && 'show-options',\n            disabled && styles.disabled,\n            disabled && 'disabled',\n            error && styles.error,\n            error && 'error',\n            inputInFocus && styles.inputInFocus,\n            inputInFocus && 'input-in-focus',\n            hideClearButton && styles.hideClearButton,\n            hideClearButton && 'hide-clear-button',\n            isFilled && styles.filled,\n            isFilled && 'filled',\n        );\n\n        const inputClassName = _cs(\n            styles.inputAndActions,\n            'input-and-actions',\n        );\n\n        const actionsClassName = `\n            actions\n            ${styles.actions}\n        `;\n\n        const dropdownButtonClassName = `\n            dropdown-button\n            ${styles.dropdownButton}\n        `;\n\n        const clearClassName = `\n            clear-button\n            ${styles.clearButton}\n        `;\n\n        return (\n            <div\n                className={className}\n                ref={this.containerRef}\n                title={title}\n            >\n                { showLabel && (\n                    <Label\n                        text={label}\n                        error={!!error}\n                        disabled={disabled}\n                        active={inputInFocus || showOptionsPopup}\n                    />\n                )}\n                <div className={inputClassName}>\n                    <RawKeyInput\n                        className={styles.input}\n                        type=\"text\"\n                        elementRef={this.inputRef}\n                        onBlur={this.handleInputBlur}\n                        onFocus={this.handleInputFocus}\n                        onClick={this.handleShowOptionsPopup}\n                        onChange={this.handleInputChange}\n                        value={finalSearchValue}\n                        autoFocus={autoFocus}\n                        placeholder={placeholder}\n                        disabled={disabled || readOnly}\n\n                        focusedKey={focusedKey}\n                        options={filteredOptions}\n                        keySelector={keySelector}\n                        isOptionsShown={showOptionsPopup}\n                        onFocusChange={this.handleFocusChange}\n                        onHideOptions={this.handleHideOptionsPopup}\n                        onShowOptions={this.handleShowOptionsPopup}\n                        onOptionSelect={this.handleOptionSelect}\n                    />\n                    <div className={actionsClassName}>\n                        { showClearButton && (\n                            <DangerButton\n                                tabIndex=\"-1\"\n                                iconName=\"close\"\n                                className={clearClassName}\n                                onClick={this.handleClearButtonClick}\n                                transparent\n                            />\n                        )}\n                        <Button\n                            tabIndex=\"-1\"\n                            iconName=\"arrowDropdown\"\n                            className={dropdownButtonClassName}\n                            onClick={this.handleShowOptionsPopup}\n                            disabled={disabled || readOnly}\n                            transparent\n                        />\n                    </div>\n                </div>\n                { showHintAndError && (\n                    <HintAndError\n                        error={error}\n                        hint={hint}\n                    />\n                )}\n                <Options\n                    className={optionsClassName}\n                    labelSelector={labelSelector}\n                    onBlur={this.handleHideOptionsPopup}\n                    onInvalidate={this.handleOptionsInvalidate}\n                    onOptionClick={this.handleOptionSelect}\n                    optionLabelSelector={optionLabelSelector}\n                    parentContainer={container}\n                    renderEmpty={renderEmpty}\n                    value={value}\n\n                    show={showOptionsPopup}\n                    keySelector={keySelector}\n                    data={filteredOptions}\n                    onOptionFocus={this.handleFocusChange}\n                    focusedKey={focusedKey}\n                />\n            </div>\n        );\n    }\n}\n\nexport default FaramInputElement(SelectInput);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\n\nconst propTypes = {\n    value: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n    onChange: PropTypes.func,\n    changeDelay: PropTypes.number,\n};\n\nconst defaultProps = {\n    value: undefined,\n    onChange: () => {},\n    changeDelay: 100,\n};\n\nexport default (WrappedComponent) => {\n    const DelayedComponent = class extends React.PureComponent {\n        static propTypes = propTypes;\n\n        static defaultProps = defaultProps;\n\n        constructor(props) {\n            super(props);\n            const { value } = props;\n\n            this.pendingChange = false;\n            this.lastValue = value;\n            this.state = {\n                value,\n            };\n        }\n\n        componentWillReceiveProps(nextProps) {\n            const { value } = this.props;\n            if (value !== nextProps.value) {\n                if (!this.pendingChange) {\n                    this.lastValue = nextProps.value;\n                    this.setState({\n                        value: nextProps.value,\n                    });\n                } else {\n                    console.warn('DELAYER: Not sending new value due to pending change.');\n                }\n            }\n        }\n\n        componentWillUnmount() {\n            if (this.changeTimeout) {\n                clearTimeout(this.changeTimeout);\n            }\n        }\n\n        handleChange = (value, error, info) => {\n            const {\n                onChange,\n                changeDelay,\n            } = this.props;\n\n            if (this.changeTimeout) {\n                clearTimeout(this.changeTimeout);\n            }\n\n            this.pendingChange = true;\n            this.setState({ value });\n\n            this.changeTimeout = setTimeout(\n                () => {\n                    this.pendingChange = false;\n                    // this.setState({ value: this.lastValue });\n                    onChange(value, error, info);\n                },\n                changeDelay,\n            );\n        }\n\n        render() {\n            const {\n                onChange, // eslint-disable-line no-unused-vars, @typescript-eslint/no-unused-vars\n                value, // eslint-disable-line no-unused-vars, @typescript-eslint/no-unused-vars\n                // eslint-disable-next-line no-unused-vars, @typescript-eslint/no-unused-vars\n                changeDelay,\n                ...otherProps\n            } = this.props;\n            const { value: stateValue } = this.state;\n\n            return (\n                <WrappedComponent\n                    value={stateValue}\n                    onChange={this.handleChange}\n                    {...otherProps}\n                />\n            );\n        }\n    };\n\n    return hoistNonReactStatics(DelayedComponent, WrappedComponent);\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nconst propTypes = {\n    className: PropTypes.string,\n};\n\nconst defaultProps = {\n    className: '',\n};\n\n\nexport default class DaysHeader extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    static dayNames = [\n        { key: 'sunday', value: 'S' },\n        { key: 'monday', value: 'M' },\n        { key: 'tuesday', value: 'T' },\n        { key: 'wednesday', value: 'W' },\n        { key: 'thursday', value: 'T' },\n        { key: 'friday', value: 'F' },\n        { key: 'saturday', value: 'S' },\n    ];\n\n    render() {\n        const { className } = this.props;\n        return (\n            <div className={`days-header ${className}`}>\n                {\n                    DaysHeader.dayNames.map(d => (\n                        <span\n                            className=\"day\"\n                            key={d.key}\n                        >\n                            {d.value}\n                        </span>\n                    ))\n                }\n            </div>\n        );\n    }\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport Button from '../../../Action/Button';\n\nimport DaysHeader from './DaysHeader';\nimport styles from './styles.scss';\n\nconst propTypes = {\n    className: PropTypes.string,\n    year: PropTypes.number.isRequired,\n    month: PropTypes.number.isRequired,\n    value: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    onChange: PropTypes.func,\n    onYearMonthChange: PropTypes.func,\n    onMonthClick: PropTypes.func,\n};\n\nconst defaultProps = {\n    className: '',\n    value: undefined,\n    onChange: undefined,\n    onYearMonthChange: undefined,\n    onMonthClick: undefined,\n};\n\nexport default class DayPicker extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    static monthNames = [\n        'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',\n        'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec',\n    ];\n\n    constructor(props) {\n        super(props);\n        this.createDays(props);\n\n        this.today = new Date();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const {\n            year,\n            month,\n            value,\n        } = this.props;\n\n        if (year !== nextProps.year\n            || month !== nextProps.month\n            || value !== nextProps.value\n        ) {\n            this.createDays(nextProps);\n        }\n    }\n\n    getDayClassName = (dayKey) => {\n        const { year, month } = this.props;\n\n        const highlight = (\n            this.today.getFullYear() === year\n            && this.today.getMonth() + 1 === month\n            && this.today.getDate() === dayKey\n        );\n\n        const classNames = [styles.day];\n        if (this.selectedId === dayKey) {\n            classNames.push('selected');\n            classNames.push(styles.selected);\n        }\n        if (highlight) {\n            classNames.push('highlighted');\n            classNames.push(styles.highlighted);\n        }\n        return classNames.join(' ');\n    }\n\n    handleDayChange = (value) => {\n        if (!value) {\n            return;\n        }\n\n        const { year, month, onChange } = this.props;\n        const newValue = new Date(year, month - 1, value);\n\n        if (onChange) {\n            const oldTimestamp = new Date(value).getTime();\n            const newTimestamp = newValue.getTime();\n            onChange(newTimestamp, oldTimestamp !== newTimestamp);\n        }\n    }\n\n    handlePrevious = () => {\n        const { year, month, onYearMonthChange } = this.props;\n        if (onYearMonthChange) {\n            const date = new Date(year, month - 2, 1);\n            if (date.getFullYear() >= 1990) {\n                onYearMonthChange(date.getFullYear(), date.getMonth() + 1);\n            }\n        }\n    }\n\n    handleNext = () => {\n        const { year, month, onYearMonthChange } = this.props;\n        if (onYearMonthChange) {\n            const date = new Date(year, month, 1);\n            onYearMonthChange(date.getFullYear(), date.getMonth() + 1);\n        }\n    }\n\n    createDays({ year, month, value }) {\n        const firstDate = new Date(year, month - 1, 1);\n        const lastDate = new Date(year, month, 0);\n        const selected = value && new Date(value);\n\n        const numDays = (lastDate.getDate() - firstDate.getDate()) + 1;\n        const firstDay = firstDate.getDay();\n        const totalDays = numDays + firstDay;\n        const lastDay = lastDate.getDay();\n\n        this.selectedId = -1;\n        if (selected && selected.getFullYear() === year && selected.getMonth() + 1 === month) {\n            this.selectedId = (firstDay + selected.getDate());\n        }\n\n        const weeks = [];\n        for (let i = 0; i < totalDays / 7; i += 1) {\n            const days = [];\n            if (i === 0) {\n                for (let j = 0; j < firstDay; j += 1) {\n                    days.push({ key: j, value: undefined });\n                }\n                for (let j = firstDay; j < 7; j += 1) {\n                    days.push({ key: j + 1, value: (j - firstDay) + 1 });\n                }\n            } else if (i === parseInt(totalDays / 7, 10)) {\n                const initial = (i * 7) + 1;\n                for (let j = 0; j <= lastDay; j += 1) {\n                    days.push({ key: initial + j, value: initial + (j - firstDay) });\n                }\n            } else {\n                const initial = (i * 7) + 1;\n                for (let j = 0; j < 7; j += 1) {\n                    days.push({ key: initial + j, value: initial + (j - firstDay) });\n                }\n            }\n\n            weeks.push({\n                week: i,\n                days,\n            });\n        }\n        this.weeks = weeks;\n    }\n\n\n    renderDay = day => (\n        <div\n            key={day.key}\n            className={this.getDayClassName(day.key)}\n        >\n            {\n                day.value && (\n                    <Button\n                        onClick={() => this.handleDayChange(day.value)}\n                        transparent\n                    >\n                        {day.value}\n                    </Button>\n                )\n            }\n        </div>\n    )\n\n    renderWeek = week => (\n        <div\n            key={week.week}\n            className={styles.week}\n        >\n            { week.days.map(this.renderDay) }\n        </div>\n    )\n\n    render() {\n        const {\n            className,\n            month,\n            year,\n            onMonthClick,\n        } = this.props;\n        const monthName = DayPicker.monthNames[month - 1];\n\n        const classNames = [\n            className,\n            'day-picker',\n            styles.dayPicker,\n        ];\n\n        return (\n            <div className={classNames.join(' ')}>\n                <header className={styles.header}>\n                    <Button\n                        className={styles.left}\n                        onClick={this.handlePrevious}\n                        transparent\n                        iconName=\"chevronLeft\"\n                    />\n                    <Button\n                        className={styles.month}\n                        onClick={onMonthClick}\n                        transparent\n                    >\n                        {`${monthName} ${year}`}\n                    </Button>\n                    <Button\n                        className={styles.right}\n                        onClick={this.handleNext}\n                        transparent\n                        iconName=\"chevronRight\"\n                    />\n                    <DaysHeader className={styles.days} />\n                </header>\n                <div className={styles.weeks}>\n                    { this.weeks.map(this.renderWeek) }\n                </div>\n            </div>\n        );\n    }\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styles from './styles.scss';\n\nimport Button from '../../../Action/Button';\n\nconst propTypes = {\n    className: PropTypes.string,\n    year: PropTypes.number.isRequired,\n    month: PropTypes.number.isRequired,\n    value: PropTypes.number,\n    onYearMonthChange: PropTypes.func,\n    onYearClick: PropTypes.func,\n};\n\nconst defaultProps = {\n    className: '',\n    value: undefined,\n    onYearMonthChange: undefined,\n    onYearClick: undefined,\n};\n\n\nexport default class MonthPicker extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    static monthNames = [\n        'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',\n        'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec',\n    ];\n\n    getMonthClassName = (monthIndex) => {\n        const { year, value } = this.props;\n        const classNames = [styles.month];\n\n        const selected = value && new Date(value);\n        if (selected && monthIndex === selected.getMonth() && year === selected.getFullYear()) {\n            classNames.push(styles.selected);\n        }\n        return classNames.join(' ');\n    }\n\n    handlePrevYearClick = () => {\n        const { year, month, onYearMonthChange } = this.props;\n        if (year > 1990 && onYearMonthChange) {\n            onYearMonthChange(year - 1, month);\n        }\n    }\n\n    handleNextYearClick = () => {\n        const { year, month, onYearMonthChange } = this.props;\n        if (onYearMonthChange) {\n            onYearMonthChange(year + 1, month);\n        }\n    }\n\n    handleMonthChange = (monthIndex) => {\n        const { year, onYearMonthChange } = this.props;\n        if (onYearMonthChange) {\n            onYearMonthChange(year, monthIndex + 1, 'day');\n        }\n    }\n\n    render() {\n        const {\n            className,\n            year,\n            onYearClick,\n        } = this.props;\n\n        return (\n            <div className={`${className} ${styles.monthPicker}`}>\n                <header className={styles.header}>\n                    <Button\n                        className={styles.left}\n                        onClick={this.handlePrevYearClick}\n                        transparent\n                        iconName=\"chevronLeft\"\n                    />\n                    <Button\n                        className={styles.year}\n                        onClick={onYearClick}\n                        transparent\n                    >\n                        { year }\n                    </Button>\n                    <Button\n                        className={styles.right}\n                        onClick={this.handleNextYearClick}\n                        transparent\n                        iconName=\"chevronRight\"\n                    />\n                </header>\n\n                <div className={styles.months}>\n                    {MonthPicker.monthNames.map((monthName, monthIndex) => (\n                        <Button\n                            key={monthName}\n                            className={this.getMonthClassName(monthIndex)}\n                            onClick={() => this.handleMonthChange(monthIndex)}\n                            transparent\n                        >\n                            { monthName }\n                        </Button>\n                    ))}\n                </div>\n            </div>\n        );\n    }\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styles from './styles.scss';\n\nimport Button from '../../../Action/Button';\n\nconst propTypes = {\n    className: PropTypes.string,\n    year: PropTypes.number.isRequired,\n    month: PropTypes.number.isRequired,\n    value: PropTypes.number,\n    onYearMonthChange: PropTypes.func,\n};\n\nconst defaultProps = {\n    className: '',\n    value: undefined,\n    onYearMonthChange: undefined,\n};\n\n\nconst YEARS_PER_PAGE = 12;\n\nexport default class YearPicker extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n        const { year } = props;\n        this.state = {\n            startYear: Math.round(year / YEARS_PER_PAGE) * YEARS_PER_PAGE,\n        };\n    }\n\n    getYearClassName = (year) => {\n        const { value } = this.props;\n        const classNames = [styles.year];\n\n        const selected = value ? new Date(value).getFullYear() : -1;\n        if (selected === year) {\n            classNames.push(styles.selected);\n        }\n        return classNames.join(' ');\n    }\n\n    handleYearChange = (year) => {\n        const { month, onYearMonthChange } = this.props;\n        if (year >= 1990 && onYearMonthChange) {\n            onYearMonthChange(year, month, 'month');\n        }\n    }\n\n    handlePrevious = () => {\n        this.setState(oldState => ({\n            startYear: oldState.startYear - YEARS_PER_PAGE,\n        }));\n    }\n\n    handleNext = () => {\n        this.setState(oldState => ({\n            startYear: oldState.startYear + YEARS_PER_PAGE,\n        }));\n    }\n\n    render() {\n        const { startYear } = this.state;\n        const { className } = this.props;\n\n        const years = [];\n        for (let i = 0; i < YEARS_PER_PAGE; i += 1) {\n            years.push(startYear + i);\n        }\n        const endYear = (startYear + YEARS_PER_PAGE) - 1;\n\n        return (\n            <div className={`${className} ${styles.yearPicker}`}>\n                <header className={styles.header}>\n                    <Button\n                        className={styles.left}\n                        onClick={this.handlePrevious}\n                        transparent\n                        iconName=\"chevronLeft\"\n                    />\n                    <Button\n                        className={styles.title}\n                        transparent\n                    >\n                        {`${startYear} - ${endYear}`}\n                    </Button>\n                    <Button\n                        className={styles.right}\n                        onClick={this.handleNext}\n                        transparent\n                        iconName=\"chevronRight\"\n                    />\n                </header>\n                <div className={styles.years}>\n                    {years.map(year => (\n                        <Button\n                            key={year}\n                            className={this.getYearClassName(year)}\n                            onClick={() => this.handleYearChange(year)}\n                            transparent\n                        >\n                            { year }\n                        </Button>\n                    ))}\n                </div>\n            </div>\n        );\n    }\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { FaramInputElement } from '@togglecorp/faram';\n\nimport DayPicker from './DayPicker';\nimport MonthPicker from './MonthPicker';\nimport YearPicker from './YearPicker';\n\nimport styles from './styles.scss';\n\n\nconst propTypes = {\n    className: PropTypes.string,\n    value: PropTypes.number,\n    onChange: PropTypes.func,\n};\n\nconst defaultProps = {\n    className: '',\n    value: undefined,\n    onChange: undefined,\n};\n\n\nclass DatePicker extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n\n        const initialDate = props.value ? new Date(props.value) : new Date();\n        this.state = {\n            year: initialDate.getFullYear(),\n            month: initialDate.getMonth() + 1,\n\n            picker: 'day',\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const { value } = this.props;\n        if (nextProps.value !== value && nextProps.value) {\n            const date = new Date(nextProps.value);\n            this.setState({\n                year: date.getFullYear(),\n                month: date.getMonth() + 1,\n            });\n        }\n    }\n\n    getClassName = () => {\n        const { className } = this.props;\n\n        const classNames = [\n            className,\n            styles.datePicker,\n            'date-picker',\n        ];\n\n        return classNames.join(' ');\n    }\n\n    setMonthPicker = () => {\n        this.setState({ picker: 'month' });\n    }\n\n    setYearPicker = () => {\n        this.setState({ picker: 'year' });\n    }\n\n    handleYearMonthChange = (year, month, picker = undefined) => {\n        this.setState(oldState => ({\n            year,\n            month,\n            picker: picker || oldState.picker,\n        }));\n    }\n\n    renderPicker = () => {\n        const {\n            value,\n            onChange,\n        } = this.props;\n\n        const {\n            year,\n            month,\n            picker,\n        } = this.state;\n\n\n        switch (picker) {\n            case 'day':\n                return (\n                    <DayPicker\n                        year={year}\n                        month={month}\n                        value={value}\n                        onChange={onChange}\n                        onMonthClick={this.setMonthPicker}\n                        onYearMonthChange={this.handleYearMonthChange}\n                    />\n                );\n            case 'month':\n                return (\n                    <MonthPicker\n                        year={year}\n                        month={month}\n                        value={value}\n                        onYearClick={this.setYearPicker}\n                        onYearMonthChange={this.handleYearMonthChange}\n                    />\n                );\n            case 'year':\n                return (\n                    <YearPicker\n                        year={year}\n                        month={month}\n                        value={value}\n                        onYearMonthChange={this.handleYearMonthChange}\n                    />\n                );\n            default:\n                return null;\n        }\n    }\n\n    render() {\n        const className = this.getClassName();\n        const Picker = this.renderPicker;\n\n        return (\n            <div className={className}>\n                <Picker />\n            </div>\n        );\n    }\n}\n\nexport default FaramInputElement(DatePicker);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport {\n    padStart,\n    isFalsy,\n    _cs,\n} from '@togglecorp/fujs';\n\nimport RawInput from '../RawInput';\n\n\nimport styles from './styles.scss';\n\nconst propTypes = {\n    onChange: PropTypes.func,\n    value: PropTypes.string,\n    padLength: PropTypes.number,\n    className: PropTypes.string,\n};\nconst defaultProps = {\n    value: '',\n    onChange: undefined,\n    padLength: 2,\n    className: '',\n};\n\nexport default class DigitalInput extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    static padAndTrim = (value, padLength) => {\n        if (isFalsy(value, [''])) {\n            return '';\n        }\n        return padStart(+value % (10 ** padLength), padLength, '0');\n    }\n\n    static getNewValue = (newValue, oldValue, padLength) => {\n        // NOTE: to identify a backspace, we look at the length of\n        // old value and new value. (New value will be shorter than old value)\n        // However, when value is changed from arrows in number input,\n        // this algorithm cannot differentiate between the two.\n        if (\n            isFalsy(newValue, [''])\n            || (\n                oldValue !== undefined\n                && oldValue.length > newValue.length\n                && newValue.match(/^0+$/)\n            )\n        ) {\n            return '';\n        }\n        const newerValue = DigitalInput.padAndTrim(newValue, padLength);\n        return newerValue;\n    }\n\n    handleChange = (event) => {\n        const { value } = event.target;\n        const {\n            value: valueFromProps,\n            padLength,\n            onChange,\n        } = this.props;\n\n        if (onChange) {\n            const newValue = DigitalInput.getNewValue(value, valueFromProps, padLength);\n            onChange(newValue);\n        }\n    }\n\n    render() {\n        const {\n            className: classNameFromProps,\n            onChange, // eslint-disable-line no-unused-vars, @typescript-eslint/no-unused-vars\n            padLength, // eslint-disable-line no-unused-vars, @typescript-eslint/no-unused-vars\n            ...otherProps\n        } = this.props;\n\n        const className = _cs(\n            classNameFromProps,\n            'digital-input',\n            styles.digitalInput,\n        );\n\n        return (\n            <RawInput\n                className={className}\n                type=\"number\"\n                onChange={this.handleChange}\n                {...otherProps}\n            />\n        );\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport FloatingContainer from '../../../View/FloatingContainer';\nimport Icon from '../../../General/Icon';\n\nimport styles from './styles.scss';\n\nconst ActionButtons = ({\n    disabled,\n    readOnly,\n    onClearButtonClick,\n    onTodayButtonClick,\n    onCalendarButtonClick,\n    className,\n    onInvalidate,\n}) => {\n    const classNames = [\n        className,\n        'action-buttons',\n    ];\n\n    const clearButtonClassName = [\n        'button',\n        styles.button,\n        'clear',\n        styles.clear,\n    ].join(' ');\n\n    return (\n        <FloatingContainer\n            className={classNames.join(' ')}\n            onInvalidate={onInvalidate}\n        >\n            <button\n                className={clearButtonClassName}\n                type=\"button\"\n                onClick={onClearButtonClick}\n                title=\"Clear date\"\n                tabIndex=\"-1\"\n                disabled={disabled || readOnly}\n            >\n                <Icon name=\"closeRound\" />\n            </button>\n            <button\n                onClick={onTodayButtonClick}\n                className={styles.button}\n                type=\"button\"\n                title=\"Set date to today\"\n                tabIndex=\"-1\"\n                disabled={disabled || readOnly}\n            >\n                <Icon name=\"clock\" />\n            </button>\n            <button\n                onClick={onCalendarButtonClick}\n                className={styles.button}\n                type=\"button\"\n                title=\"Open date picker\"\n                tabIndex=\"-1\"\n                disabled={disabled || readOnly}\n            >\n                <Icon name=\"calendar\" />\n            </button>\n        </FloatingContainer>\n    );\n};\n\nActionButtons.propTypes = {\n    onClearButtonClick: PropTypes.func.isRequired,\n    onTodayButtonClick: PropTypes.func.isRequired,\n    onCalendarButtonClick: PropTypes.func.isRequired,\n    disabled: PropTypes.bool,\n    readOnly: PropTypes.bool,\n    className: PropTypes.string,\n    onInvalidate: PropTypes.func.isRequired,\n};\n\nActionButtons.defaultProps = {\n    disabled: false,\n    readOnly: false,\n    className: '',\n};\n\nexport default ActionButtons;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport {\n    padStart,\n    getErrorForDateValues,\n    getNumDaysInMonthX,\n    isFalsy,\n    decodeDate as decodeAsDate,\n} from '@togglecorp/fujs';\nimport { FaramInputElement } from '@togglecorp/faram';\n\nimport FloatingContainer from '../../View/FloatingContainer';\nimport Delay from '../../General/Delay';\nimport DatePicker from '../DatePicker';\n\nimport HintAndError from '../HintAndError';\nimport Label from '../Label';\nimport DigitalInput from '../DigitalInput';\n\nimport {\n    calcFloatPositionInMainWindow,\n    defaultOffset,\n    defaultLimit,\n} from '../../../utils/bounds';\n\nimport ActionButtons from './ActionButtons';\nimport styles from './styles.scss';\n\nconst propTypes = {\n    className: PropTypes.string,\n    disabled: PropTypes.bool,\n    readOnly: PropTypes.bool,\n    hint: PropTypes.string,\n    error: PropTypes.string,\n    label: PropTypes.string,\n    onChange: PropTypes.func,\n    showLabel: PropTypes.bool,\n    showHintAndError: PropTypes.bool,\n    value: PropTypes.string,\n    title: PropTypes.string,\n    separator: PropTypes.string,\n};\n\nconst defaultProps = {\n    className: '',\n    disabled: false,\n    error: '',\n    hint: '',\n    label: '',\n    onChange: () => {},\n    showLabel: true,\n    separator: '-',\n    readOnly: false,\n    value: undefined,\n    showHintAndError: true,\n    title: undefined,\n};\n\nconst MIN_YEAR = 1900;\nconst MAX_YEAR = 9999;\nconst MIN_MONTH = 1;\nconst MAX_MONTH = 12;\nconst MIN_DAY = 1;\nconst STEP = 1;\n\nconst createDate = (y, m, d) => {\n    if (getErrorForDateValues({ yearValue: y, monthValue: m, dayValue: d })) {\n        return undefined;\n    }\n    return new Date(y, m - 1, d);\n};\n\n\n// y, m, d is string\nconst encodeDate = ({ y = '', m = '', d = '' }, separator = '-') => {\n    if (isFalsy(y, [0, '']) && isFalsy(m, [0, '']) && isFalsy(d, [0, ''])) {\n        return undefined;\n    }\n    return `${y}${separator}${m}${separator}${d}`;\n};\n\n// value is string\nconst decodeDate = (value, separator = '-') => {\n    if (!value) {\n        return {};\n    }\n    const values = value.split(separator);\n    return {\n        y: values[0],\n        m: values[1],\n        d: values[2],\n    };\n};\n\n// value is string\nexport const isValidDateString = (value, separator = '-') => {\n    if (value === '' || value === undefined) {\n        return true;\n    }\n    const { y, m, d } = decodeDate(value, separator);\n\n    return !getErrorForDateValues({ yearValue: +y, monthValue: +m, dayValue: +d });\n};\n\nclass DateInput extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            yearInputFocused: false,\n            monthInputFocused: false,\n            dayInputFocused: false,\n            showDatePicker: false,\n            containerHover: false,\n        };\n\n        this.containerRef = React.createRef();\n        this.boundingClientRect = {};\n    }\n\n    componentDidMount() {\n        const { current: container } = this.containerRef;\n        if (container) {\n            this.boundingClientRect = container.getBoundingClientRect();\n        }\n    }\n\n    getClassName = () => {\n        const {\n            disabled,\n            className,\n            value,\n            error,\n            separator,\n            readOnly,\n        } = this.props;\n\n        const {\n            yearInputFocused,\n            monthInputFocused,\n            dayInputFocused,\n        } = this.state;\n\n        const classNames = [\n            className,\n            'date-input',\n            styles.dateInput,\n        ];\n\n        if (yearInputFocused || monthInputFocused || dayInputFocused) {\n            classNames.push(styles.focused);\n            classNames.push('input-focused');\n            classNames.push('input-in-focus');\n        }\n\n        if (disabled) {\n            classNames.push(styles.disabled);\n            classNames.push('disabled');\n        }\n\n        const isInvalid = !isValidDateString(value, separator);\n        if (isInvalid) {\n            classNames.push(styles.invalid);\n            classNames.push('invalid');\n        }\n\n        if (error) {\n            classNames.push(styles.error);\n            classNames.push('error');\n        }\n\n        if (readOnly) {\n            classNames.push('read-only');\n            classNames.push(styles.readOnly);\n        }\n\n        return classNames.join(' ');\n    }\n\n    handleYearInputFocus = () => {\n        this.setState({ yearInputFocused: true });\n    }\n\n    handleYearInputBlur = () => {\n        this.setState({ yearInputFocused: false });\n    }\n\n    handleMonthInputFocus = () => {\n        this.setState({ monthInputFocused: true });\n    }\n\n    handleMonthInputBlur = () => {\n        this.setState({ monthInputFocused: false });\n    }\n\n    handleDayInputFocus = () => {\n        this.setState({ dayInputFocused: true });\n    }\n\n    handleDayInputBlur = () => {\n        this.setState({ dayInputFocused: false });\n    }\n\n    handleYearInputChange = (y) => {\n        this.handleChange({ y });\n    }\n\n    handleMonthInputChange = (m) => {\n        this.handleChange({ m });\n    }\n\n    handleDayInputChange = (d) => {\n        this.handleChange({ d });\n    }\n\n    handleClearButtonClick = () => {\n        this.handleChange({\n            y: undefined,\n            m: undefined,\n            d: undefined,\n        });\n    }\n\n    handleTodayButtonClick = () => {\n        const date = new Date();\n        this.handleChange({\n            y: padStart(String(date.getFullYear()), 4).slice(-4),\n            m: padStart(String(date.getMonth() + 1), 2).slice(-2),\n            d: padStart(String(date.getDate()), 2).slice(-2),\n        });\n    }\n\n    handleCalendarButtonClick = () => {\n        const { current: container } = this.containerRef;\n        this.boundingClientRect = container.getBoundingClientRect();\n        this.setState({ showDatePicker: true });\n    }\n\n    handleDatePickerBlur = () => {\n        this.setState({ showDatePicker: false });\n    }\n\n    handleDatePickerInvalidate = (datePickerContainer) => {\n        const contentRect = datePickerContainer.getBoundingClientRect();\n\n        const { current: container } = this.containerRef;\n        const parentRect = container\n            ? container.getBoundingClientRect()\n            : this.boundingClientRect;\n\n        const { showHintAndError } = this.props;\n        const offset = { ...defaultOffset };\n        if (showHintAndError) {\n            offset.top = 12;\n        }\n\n        const optionsContainerPosition = calcFloatPositionInMainWindow({\n            parentRect,\n            contentRect,\n            offset,\n            limit: {\n                ...defaultLimit,\n                minW: parentRect.width,\n            },\n        });\n\n        return optionsContainerPosition;\n    }\n\n    handleDatePickerDatePick = (timestamp) => {\n        const newDate = decodeAsDate(timestamp);\n        this.setState(\n            { showDatePicker: false },\n            () => {\n                this.handleChange({\n                    y: padStart(String(newDate.getFullYear()), 4).slice(-4),\n                    m: padStart(String(newDate.getMonth() + 1), 2).slice(-2),\n                    d: padStart(String(newDate.getDate()), 2).slice(-2),\n                });\n            },\n        );\n    }\n\n    handleChange = (valueToOverride) => {\n        const {\n            onChange,\n            value: valueFromProps,\n            separator,\n        } = this.props;\n\n        const oldValue = decodeDate(valueFromProps, separator);\n        const { y, m, d } = {\n            ...oldValue,\n            ...valueToOverride,\n        };\n\n        const newValue = encodeDate({ y, m, d }, separator);\n        if (newValue !== valueFromProps) {\n            onChange(newValue);\n        }\n    }\n\n    handleActionButtonsInvalidate = (actionButtonsContainer) => {\n        const { current: container } = this.containerRef;\n        const parentRect = container\n            ? container.getBoundingClientRect()\n            : this.boundingClientRect;\n\n        const contentRect = actionButtonsContainer.getBoundingClientRect();\n\n        const { showHintAndError } = this.props;\n\n        const actionButtonsContainerPosition = {\n            left: `${(parentRect.left + parentRect.width) - contentRect.width}px`,\n            top: `${(parentRect.top + parentRect.height) - (showHintAndError ? 12 : 0)}px`,\n        };\n\n        return actionButtonsContainerPosition;\n    }\n\n    handleContainerHover = () => {\n        this.setState({ containerHover: true });\n    }\n\n    handleContainerLeave = () => {\n        this.setState({ containerHover: false });\n    }\n\n    renderDatePicker = ({ y, m, d }) => {\n        const date = createDate(+y, +m, +d);\n        const datetime = date && date.getTime();\n\n        return (\n            <FloatingContainer\n                className={styles.datePickerContainer}\n                parent={this.container}\n                onBlur={this.handleDatePickerBlur}\n                onInvalidate={this.handleDatePickerInvalidate}\n            >\n                <DatePicker\n                    value={datetime}\n                    onChange={this.handleDatePickerDatePick}\n                />\n            </FloatingContainer>\n        );\n    }\n\n    render() {\n        const {\n            error,\n            hint,\n            label,\n            showLabel,\n            showHintAndError,\n            title,\n            disabled,\n            value,\n            readOnly,\n            separator,\n        } = this.props;\n        const {\n            showDatePicker,\n            containerHover,\n        } = this.state;\n\n        const className = this.getClassName();\n        const yearPlaceholder = 'yyyy';\n        const monthPlaceholder = 'mm';\n        const dayPlaceholder = 'dd';\n\n        const {\n            y: yearValue = '',\n            m: monthValue = '',\n            d: dayValue = '',\n        } = decodeDate(value, separator);\n\n        const FloatingDatePicker = this.renderDatePicker;\n        const inputAndActionsClassName = `\n            ${styles.input}\n            input-and-actions\n        `;\n\n        return (\n            // eslint-disable-next-line jsx-a11y/mouse-events-have-key-events\n            <div\n                ref={this.containerRef}\n                title={title}\n                className={className}\n                onMouseOver={this.handleContainerHover}\n                onMouseLeave={this.handleContainerLeave}\n            >\n                <Label\n                    className={styles.label}\n                    show={showLabel}\n                    text={label}\n                />\n                <div className={inputAndActionsClassName}>\n                    <div className={styles.units}>\n                        <DigitalInput\n                            onFocus={this.handleDayInputFocus}\n                            onBlur={this.handleDayInputBlur}\n                            className={styles.dayUnit}\n                            padLength={2}\n                            min={MIN_DAY}\n                            max={getNumDaysInMonthX(+yearValue, +monthValue)}\n                            step={STEP}\n                            placeholder={dayPlaceholder}\n                            disabled={disabled || readOnly}\n                            value={dayValue}\n                            onChange={this.handleDayInputChange}\n                        />\n                        <DigitalInput\n                            onFocus={this.handleMonthInputFocus}\n                            onBlur={this.handleMonthInputBlur}\n                            className={styles.monthUnit}\n                            padLength={2}\n                            min={MIN_MONTH}\n                            max={MAX_MONTH}\n                            step={STEP}\n                            placeholder={monthPlaceholder}\n                            disabled={disabled || readOnly}\n                            value={monthValue}\n                            onChange={this.handleMonthInputChange}\n                        />\n                        <DigitalInput\n                            onFocus={this.handleYearInputFocus}\n                            onBlur={this.handleYearInputBlur}\n                            className={styles.yearUnit}\n                            padLength={4}\n                            min={MIN_YEAR}\n                            max={MAX_YEAR}\n                            step={STEP}\n                            placeholder={yearPlaceholder}\n                            disabled={disabled || readOnly}\n                            value={yearValue}\n                            onChange={this.handleYearInputChange}\n                        />\n                    </div>\n                    { containerHover && (\n                        <ActionButtons\n                            className={styles.actionButtons}\n                            disabled={disabled}\n                            readOnly={readOnly}\n                            onClearButtonClick={this.handleClearButtonClick}\n                            onTodayButtonClick={this.handleTodayButtonClick}\n                            onCalendarButtonClick={this.handleCalendarButtonClick}\n                            onInvalidate={this.handleActionButtonsInvalidate}\n                        />\n                    )}\n                </div>\n                <HintAndError\n                    show={showHintAndError}\n                    hint={hint}\n                    error={error}\n                />\n                { showDatePicker && (\n                    <FloatingDatePicker\n                        y={yearValue}\n                        m={monthValue}\n                        d={dayValue}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nexport default FaramInputElement(Delay(DateInput));\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport memoize from 'memoize-one';\nimport {\n    formatDateToString,\n    encodeDate,\n    decodeDate,\n} from '@togglecorp/fujs';\nimport { FaramInputElement, requiredCondition } from '@togglecorp/faram';\n\nimport ApplyModal from '../../View/ApplyModal';\n\n\nimport SelectInput from '../SelectInput';\nimport DateInput from '../DateInput';\n\nimport styles from './styles.scss';\n\nconst noOp = () => {};\n\nconst propTypes = {\n    className: PropTypes.string,\n    value: PropTypes.shape({\n        startDate: PropTypes.string,\n        endDate: PropTypes.string,\n    }),\n    onChange: PropTypes.func,\n};\n\nconst defaultProps = {\n    className: '',\n    value: {},\n    onChange: noOp,\n};\n\nconst presets = {\n    today: () => {\n        const today = new Date();\n        today.setHours(0, 0, 0, 0);\n        const startDate = encodeDate(today);\n        const endDate = encodeDate(today);\n\n        return { startDate, endDate };\n    },\n    yesterday: () => {\n        const yesterday = new Date();\n        yesterday.setHours(0, 0, 0, 0);\n        yesterday.setDate(yesterday.getDate() - 1);\n        const startDate = encodeDate(yesterday);\n        const endDate = encodeDate(yesterday);\n\n        return { startDate, endDate };\n    },\n    currentWeek: () => {\n        const min = new Date();\n        min.setHours(0, 0, 0, 0);\n        min.setDate(min.getDate() - min.getDay());\n        const startDate = encodeDate(min);\n\n        const max = min;\n        max.setHours(0, 0, 0, 0);\n        max.setDate(min.getDate() + 7);\n        const endDate = encodeDate(max);\n        return { startDate, endDate };\n    },\n    lastSevenDays: () => {\n        const min = new Date();\n        min.setHours(0, 0, 0, 0);\n        min.setDate(min.getDate() - 7);\n        const startDate = encodeDate(min);\n\n        const max = new Date();\n        max.setHours(0, 0, 0, 0);\n        const endDate = encodeDate(max);\n\n        return { startDate, endDate };\n    },\n    currentMonth: () => {\n        const min = new Date();\n        min.setHours(0, 0, 0, 0);\n        min.setDate(1);\n        const startDate = encodeDate(min);\n\n        const max = new Date();\n        max.setHours(0, 0, 0, 0);\n        max.setMonth(min.getMonth() + 1);\n        max.setDate(0);\n        const endDate = encodeDate(max);\n\n        return { startDate, endDate };\n    },\n    lastThirtyDays: () => {\n        const min = new Date();\n        min.setHours(0, 0, 0, 0);\n        min.setDate(min.getDate() - 30);\n        const startDate = encodeDate(min);\n\n        const max = new Date();\n        max.setHours(0, 0, 0, 0);\n        const endDate = encodeDate(max);\n\n        return { startDate, endDate };\n    },\n};\n\nclass DateFilter extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    static defaultOptions = [\n        { key: 'today', label: 'Today' },\n        { key: 'yesterday', label: 'Yesterday' },\n        { key: 'currentWeek', label: 'This week' },\n        { key: 'lastSevenDays', label: 'Last 7 days' },\n        { key: 'currentMonth', label: 'This month' },\n        { key: 'lastThirtyDays', label: 'Last 30 days' },\n        { key: 'customExact', label: 'Select an exact date' },\n        { key: 'customRange', label: 'Select a date range' },\n    ];\n\n    static exactModalSchema = {\n        fields: {\n            date: [requiredCondition],\n        },\n    };\n\n    // FIXME: add startDate smaller than endDate condition\n    static rangeModalSchema = {\n        fields: {\n            startDate: [requiredCondition],\n            endDate: [requiredCondition],\n        },\n    };\n\n    static formatDate = date => formatDateToString(decodeDate(date), 'dd-MM-yyyy');\n\n    static calculateOptionsAndValue = memoize((value) => {\n        const options = DateFilter.defaultOptions;\n        const { startDate, endDate } = value;\n\n        if (!startDate || !endDate) {\n            return { options, value: undefined };\n        }\n\n        const preset = Object.keys(presets).find((key) => {\n            const test = presets[key]();\n            return test.startDate === startDate && test.endDate === endDate;\n        });\n\n        if (preset) {\n            return {\n                options,\n                value: preset,\n            };\n        }\n\n        if (startDate === endDate) {\n            return {\n                options: [\n                    ...options,\n                    { key: 'selectedExact', label: startDate },\n                ],\n                value: 'selectedExact',\n            };\n        }\n\n        return {\n            options: [\n                ...options,\n                {\n                    key: 'selectedRange',\n                    label: `${DateFilter.formatDate(startDate)} - ${DateFilter.formatDate(endDate)}`,\n                },\n            ],\n            value: 'selectedRange',\n        };\n    });\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showRangeModal: false,\n            showExactModal: false,\n        };\n    }\n\n    getClassName = () => {\n        const { className } = this.props;\n        const classNames = [\n            className,\n            'date-filter',\n        ];\n\n        return classNames.join(' ');\n    }\n\n    setNewDate = ({ startDate, endDate } = {}) => {\n        if (!startDate || !endDate) {\n            this.props.onChange(undefined);\n            return;\n        }\n\n        this.props.onChange({\n            startDate,\n            endDate,\n        });\n    }\n\n    handleSelectInputChange = (value) => {\n        switch (value) {\n            case 'customExact':\n                this.setState({\n                    showExactModal: true,\n                });\n                break;\n            case 'customRange':\n                this.setState({\n                    showRangeModal: true,\n                });\n                break;\n            default:\n                this.setNewDate(value && presets[value]());\n        }\n    }\n\n    closeRangeModal = () => {\n        this.setState({\n            showRangeModal: false,\n        });\n    }\n\n    applyRangeDate = ({ startDate, endDate }) => {\n        this.setState({\n            showRangeModal: false,\n        }, () => {\n            this.setNewDate({\n                startDate,\n                endDate,\n            });\n        });\n    }\n\n    closeExactModal = () => {\n        this.setState({\n            showExactModal: false,\n        });\n    }\n\n    applyExactDate = ({ date }) => {\n        this.setState({\n            showExactModal: false,\n        }, () => {\n            this.setNewDate({\n                startDate: date,\n                endDate: date,\n            });\n        });\n    }\n\n    renderExactModal = () => {\n        const { showExactModal } = this.state;\n\n        if (!showExactModal) {\n            return null;\n        }\n\n        return (\n            <ApplyModal\n                className={styles.dateFilterModal}\n                onClose={this.closeExactModal}\n                onApply={this.applyExactDate}\n                title=\"Select a date\"\n                schema={DateFilter.exactModalSchema}\n            >\n                <DateInput faramElementName=\"date\" />\n            </ApplyModal>\n        );\n    }\n\n    renderRangeModal = () => {\n        const { showRangeModal } = this.state;\n\n        if (!showRangeModal) {\n            return null;\n        }\n\n        return (\n            <ApplyModal\n                className={styles.dateFilterModal}\n                onClose={this.closeRangeModal}\n                onApply={this.applyRangeDate}\n                title=\"Select a date range\"\n                schema={DateFilter.rangeModalSchema}\n            >\n                <DateInput faramElementName=\"startDate\" />\n                <DateInput faramElementName=\"endDate\" />\n            </ApplyModal>\n        );\n    }\n\n    render() {\n        const {\n            value,\n            onChange, // eslint-disable-line no-unused-vars, @typescript-eslint/no-unused-vars\n            ...otherProps\n        } = this.props;\n\n        const className = this.getClassName();\n\n        const {\n            options: selectInputOptions,\n            value: selectInputValue,\n        } = DateFilter.calculateOptionsAndValue(value);\n\n        const CustomExactModal = this.renderExactModal;\n        const CustomRangeModal = this.renderRangeModal;\n\n        return (\n            <React.Fragment>\n                <SelectInput\n                    className={className}\n                    onChange={this.handleSelectInputChange}\n                    options={selectInputOptions}\n                    value={selectInputValue}\n                    {...otherProps}\n                />\n                <CustomExactModal />\n                <CustomRangeModal />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default FaramInputElement(DateFilter);\n","import React from 'react';\nimport Button from './index.js';\n\nconst AccentButton = props => (\n    <Button buttonType=\"button-accent\" {...props} />\n);\nexport default AccentButton;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { randomString, isFalsy } from '@togglecorp/fujs';\nimport { FaramInputElement } from '@togglecorp/faram';\n\nimport Delay from '../../General/Delay';\nimport Label from '../Label';\nimport HintAndError from '../HintAndError';\n\nimport styles from './styles.scss';\n\nconst propTypes = {\n    /**\n     * required for style override\n     */\n    className: PropTypes.string,\n\n    /**\n     * Is input disabled?\n     */\n    disabled: PropTypes.bool,\n\n    /**\n     * String to show in case of error\n     */\n    error: PropTypes.string,\n\n    /**\n     * Hint text\n     */\n    hint: PropTypes.string,\n\n    /**\n     * Input label\n     */\n    label: PropTypes.string,\n\n    /**\n     * A callback for when the input loses focus\n     */\n    onBlur: PropTypes.func,\n\n    /**\n     * A callback for when the input changes its content\n     */\n    onChange: PropTypes.func,\n\n    /**\n     * A callback for when the input gets focus\n     */\n    onFocus: PropTypes.func,\n\n    /**\n     * Is a required element for form\n     */\n    required: PropTypes.bool,\n\n    showLabel: PropTypes.bool,\n\n    showHintAndError: PropTypes.bool,\n\n    value: PropTypes.string,\n    resize: PropTypes.string,\n\n    selectOnFocus: PropTypes.bool,\n};\n\nconst defaultProps = {\n    className: '',\n    resize: 'none',\n    disabled: false,\n    error: '',\n    hint: '',\n    label: '',\n    onBlur: undefined,\n    onChange: undefined,\n    onFocus: undefined,\n    required: false,\n    showLabel: true,\n    showHintAndError: true,\n    value: '',\n    selectOnFocus: false,\n};\n\nexport class NormalTextArea extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n\n        this.state = { isFocused: false };\n        this.inputId = randomString();\n    }\n\n    getClassName() {\n        const classNames = [];\n\n        const {\n            disabled,\n            error,\n            required,\n        } = this.props;\n\n        const {\n            isFocused,\n        } = this.state;\n\n        classNames.push('text-area');\n        classNames.push(styles.textArea);\n\n        if (disabled) {\n            classNames.push(styles.disabled);\n            classNames.push('disabled');\n        }\n\n        if (isFocused) {\n            classNames.push(styles.focused);\n            classNames.push('focused');\n        }\n\n        if (!isFalsy(error, [''])) {\n            classNames.push(styles.error);\n            classNames.push('error');\n        }\n\n        if (required) {\n            classNames.push(styles.required);\n            classNames.push('required');\n        }\n\n        return classNames.join(' ');\n    }\n\n    handleChange = (event) => {\n        const { value } = event.target;\n        const { onChange } = this.props;\n\n        if (onChange) {\n            onChange(value);\n        }\n    }\n\n    handleFocus = () => {\n        const { selectOnFocus, onFocus } = this.props;\n        if (selectOnFocus) {\n            // eslint-disable-next-line no-restricted-globals\n            event.target.select();\n        }\n\n        this.setState({\n            isFocused: true,\n        });\n\n        if (onFocus) {\n            onFocus();\n        }\n    }\n\n    handleBlur = () => {\n        const {\n            onBlur,\n        } = this.props;\n\n        this.setState({\n            isFocused: false,\n        });\n\n        if (onBlur) {\n            onBlur();\n        }\n    }\n\n    render() {\n        const {\n            // skip prop injection\n            onBlur, // eslint-disable-line\n            onChange, // eslint-disable-line\n            onFocus, // eslint-disable-line\n            selectOnFocus, // eslint-disable-line\n            className,\n\n            error,\n            hint,\n            label,\n            showLabel,\n            showHintAndError,\n            disabled,\n            resize,\n            ...otherProps\n        } = this.props;\n\n        const classNames = this.getClassName();\n        const { isFocused } = this.state;\n\n        return (\n            <div className={`${classNames} ${className}`}>\n                <Label\n                    show={showLabel}\n                    text={label}\n                    error={!!error}\n                    active={isFocused}\n                    disabled={disabled}\n                />\n                <textarea\n                    className={`${styles.input} input`}\n                    id={this.inputId}\n                    onBlur={this.handleBlur}\n                    onChange={this.handleChange}\n                    onFocus={this.handleFocus}\n                    style={{ resize }}\n                    {...otherProps}\n                />\n                <HintAndError\n                    show={showHintAndError}\n                    hint={hint}\n                    error={error}\n                />\n            </div>\n        );\n    }\n}\n\nexport default FaramInputElement(Delay(NormalTextArea));\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport memoize from 'memoize-one';\nimport { formatPdfText } from '@togglecorp/fujs';\nimport { FaramInputElement } from '@togglecorp/faram';\n\nimport AccentButton from '../../Action/Button/AccentButton.js';\nimport Delay from '../../General/Delay';\nimport { NormalTextArea as TextArea } from '../TextArea';\n\nimport styles from './styles.scss';\n\nconst propTypes = {\n    disabled: PropTypes.bool,\n    className: PropTypes.string,\n    onChange: PropTypes.func,\n    required: PropTypes.bool,\n    readOnly: PropTypes.bool,\n    showFormatButton: PropTypes.bool,\n    value: PropTypes.string,\n};\n\nconst defaultProps = {\n    disabled: false,\n    className: '',\n    readOnly: false,\n    onChange: undefined,\n    required: false,\n    showFormatButton: true,\n    value: undefined,\n};\n\n\nclass FormattedTextArea extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    handleFormatText = () => {\n        const {\n            onChange,\n            value,\n        } = this.props;\n\n        const formattedText = formatPdfText(value);\n        onChange(formattedText);\n    }\n\n    shouldDisableFormat = memoize(excerpt => !excerpt || excerpt === formatPdfText(excerpt))\n\n    render() {\n        const {\n            disabled,\n            readOnly,\n            className,\n            showFormatButton,\n            value,\n            ...otherProps\n        } = this.props;\n\n        return (\n            <div className={`${className} ${styles.formattedText}`}>\n                <TextArea\n                    {...otherProps}\n                    disabled={disabled}\n                    readOnly={readOnly}\n                    className={styles.area}\n                    value={value}\n                />\n                { showFormatButton && (\n                    <AccentButton\n                        tabIndex=\"-1\"\n                        className={styles.formatButton}\n                        iconName=\"textFormat\"\n                        onClick={this.handleFormatText}\n                        title=\"Click here to format the text\"\n                        smallVerticalPadding\n                        smallHorizontalPadding\n                        transparent\n                        disabled={disabled || readOnly || this.shouldDisableFormat(value)}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nexport default FaramInputElement(Delay(FormattedTextArea));\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport memoize from 'memoize-one';\nimport {\n    _cs,\n    isFalsyString,\n    caseInsensitiveSubmatch,\n    compareStringSearch,\n} from '@togglecorp/fujs';\nimport { FaramInputElement } from '@togglecorp/faram';\n\nimport ListView from '../../View/List/ListView';\nimport Checkbox from '../Checkbox';\n\nimport Label from '../Label';\nimport HintAndError from '../HintAndError';\n\nimport styles from './styles.scss';\n\nconst propTypes = {\n    className: PropTypes.string,\n    listClassName: PropTypes.string,\n    value: PropTypes.arrayOf(PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ])),\n    options: PropTypes.arrayOf(PropTypes.object),\n    onChange: PropTypes.func.isRequired,\n    keySelector: PropTypes.func,\n    labelSelector: PropTypes.func,\n    tooltipSelector: PropTypes.func,\n    searchText: PropTypes.string,\n\n    label: PropTypes.string,\n    disabled: PropTypes.bool,\n    readOnly: PropTypes.bool,\n    error: PropTypes.string,\n    hint: PropTypes.string,\n    showLabel: PropTypes.bool,\n    showHintAndError: PropTypes.bool,\n    segment: PropTypes.bool,\n};\n\nconst defaultProps = {\n    className: '',\n    listClassName: '',\n    value: [],\n    options: [],\n    keySelector: item => item.key,\n    tooltipSelector: item => item.label,\n    labelSelector: item => item.label,\n    searchText: undefined,\n\n    label: '',\n    disabled: false,\n    readOnly: false,\n    error: '',\n    hint: '',\n    showLabel: true,\n    showHintAndError: true,\n    segment: false,\n};\n\n\nexport class NormalListSelection extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    getClassName = () => {\n        const {\n            className: classNameFromProps,\n            disabled,\n            error,\n            segment,\n        } = this.props;\n\n        const className = _cs(\n            classNameFromProps,\n            styles.listSelection,\n            'list-selection',\n            segment ? styles.multiSegment : styles.singleSegment,\n            segment ? 'multi-segment' : 'single-segment',\n            disabled && styles.disabled,\n            disabled && 'disabled',\n            error && styles.error,\n            error && 'error',\n        );\n\n        return className;\n    }\n\n    getFilteredOptions = memoize((searchText, options) => {\n        const {\n            labelSelector,\n        } = this.props;\n\n        if (isFalsyString(searchText)) {\n            return options;\n        }\n\n        const newOptions = options\n            .filter(option => caseInsensitiveSubmatch(labelSelector(option), searchText))\n            .sort((a, b) => compareStringSearch(\n                labelSelector(a),\n                labelSelector(b),\n                searchText,\n            ));\n        return newOptions;\n    });\n\n    handleItemChange = (key, isSelected) => {\n        const { value, onChange } = this.props;\n\n        const newValue = [...value];\n        if (!isSelected) {\n            const index = newValue.indexOf(key);\n            newValue.splice(index, 1);\n        } else {\n            newValue.push(key);\n        }\n\n        onChange(newValue);\n    }\n\n    renderParams = (key, itemData) => {\n        const {\n            labelSelector,\n            tooltipSelector,\n            value,\n            disabled,\n            readOnly,\n            segment,\n        } = this.props;\n\n        const selected = value.indexOf(key) >= 0;\n        /*\n        const className = _cs(\n            styles.item,\n            isDefined(selected) && styles.checked,\n        );\n        */\n\n        return {\n            // className,\n            className: styles.item,\n            label: labelSelector(itemData),\n            tooltip: tooltipSelector(itemData),\n            value: selected,\n            onChange: val => this.handleItemChange(key, val),\n            checkboxType: segment ? 'check' : 'checkbox',\n            disabled,\n            readOnly,\n        };\n    }\n\n    renderInput = () => {\n        const {\n            options,\n            keySelector,\n            listClassName,\n            searchText,\n        } = this.props;\n\n        const filteredOptions = this.getFilteredOptions(searchText, options);\n\n        return (\n            <ListView\n                className={_cs(\n                    styles.options,\n                    'list-selection-options',\n                    listClassName,\n                )}\n                data={filteredOptions}\n                renderer={Checkbox}\n                keySelector={keySelector}\n                rendererParams={this.renderParams}\n            />\n        );\n    }\n\n    render() {\n        const {\n            label,\n            hint,\n            error,\n            showHintAndError,\n            showLabel,\n            disabled,\n        } = this.props;\n\n        const className = this.getClassName();\n        const Input = this.renderInput;\n\n        return (\n            <div className={className}>\n                <Label\n                    show={showLabel}\n                    text={label}\n                    disabled={disabled}\n                    error={!!error}\n                />\n                <Input />\n                <HintAndError\n                    show={showHintAndError}\n                    hint={hint}\n                    error={error}\n                />\n            </div>\n        );\n    }\n}\n\nexport default FaramInputElement(NormalListSelection);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { _cs } from '@togglecorp/fujs';\n\nimport Icon from '../../../General/Icon';\n\nimport styles from './styles.scss';\n\nconst Checkbox = ({ active }) => {\n    const className = _cs(\n        'checkbox',\n        styles.checkbox,\n    );\n\n    return (\n        <Icon\n            className={className}\n            name={active ? 'checkbox' : 'checkboxOutlineBlank'}\n        />\n    );\n};\n\nCheckbox.propTypes = {\n    active: PropTypes.bool.isRequired,\n};\n\nexport default Checkbox;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Checkbox from '../Checkbox';\nimport styles from './styles.scss';\n\nconst propTypes = {\n    active: PropTypes.bool.isRequired,\n    focused: PropTypes.bool.isRequired,\n    className: PropTypes.string,\n    onClick: PropTypes.func.isRequired,\n    optionKey: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]).isRequired,\n    onFocus: PropTypes.func.isRequired,\n    optionLabel: PropTypes.string,\n};\n\nconst defaultProps = {\n    className: '',\n    optionLabel: '',\n};\n\nexport default class Option extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n        this.ref = React.createRef();\n        this.focusedByMouse = undefined;\n    }\n\n    componentDidMount() {\n        const { focused } = this.props;\n        if (focused) {\n            this.scrollToFocus();\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const { focused } = this.props;\n\n        if (!focused && nextProps.focused) {\n            this.scrollToFocus();\n        } else {\n            this.focusedByMouse = false;\n        }\n    }\n\n    getClassName = () => {\n        const {\n            active,\n            focused,\n            className,\n        } = this.props;\n\n        const classNames = [\n            className,\n            'option',\n            styles.option,\n        ];\n\n        if (active) {\n            classNames.push('active');\n        }\n\n        if (focused) {\n            classNames.push(styles.focused);\n            classNames.push('focused');\n        }\n\n        return classNames.join(' ');\n    }\n\n    handleClick = () => {\n        const {\n            onClick,\n            optionKey,\n        } = this.props;\n\n        onClick(optionKey);\n    }\n\n    handleMouseMove = () => {\n        const {\n            optionKey,\n            onFocus,\n        } = this.props;\n\n        this.focusedByMouse = true;\n        onFocus(optionKey);\n    }\n\n    handleMouseLeave = () => {\n        this.focusedByMouse = false;\n    }\n\n    scrollToFocus = () => {\n        if (!this.focusedByMouse) {\n            this.ref.current.scrollIntoView({\n                block: 'nearest',\n            });\n        }\n    }\n\n    render() {\n        const {\n            optionLabel,\n            active,\n        } = this.props;\n\n        const className = this.getClassName();\n\n        return (\n            <button\n                ref={this.ref}\n                className={className}\n                onClick={this.handleClick}\n                onMouseMove={this.handleMouseMove}\n                onMouseLeave={this.handleMouseLeave}\n                type=\"button\"\n            >\n                <Checkbox active={active} />\n                { optionLabel }\n            </button>\n        );\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { listToMap, isListEqual } from '@togglecorp/fujs';\n\nimport FloatingContainer from '../../../View/FloatingContainer';\nimport List from '../../../View/List';\nimport Option from '../Option';\n\nimport styles from './styles.scss';\n\nconst propTypes = {\n    activeKeys: PropTypes.array.isRequired, // eslint-disable-line react/forbid-prop-types\n    className: PropTypes.string,\n    data: PropTypes.array.isRequired, // eslint-disable-line react/forbid-prop-types\n    keySelector: PropTypes.func.isRequired,\n    labelSelector: PropTypes.func.isRequired,\n    optionLabelSelector: PropTypes.func,\n    onBlur: PropTypes.func.isRequired,\n    onInvalidate: PropTypes.func.isRequired,\n    onOptionClick: PropTypes.func.isRequired,\n    onOptionFocus: PropTypes.func.isRequired,\n    parentContainer: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n    renderEmpty: PropTypes.func,\n    show: PropTypes.bool.isRequired,\n    focusedKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nconst defaultProps = {\n    className: '',\n    renderEmpty: () => 'No option available',\n    parentContainer: undefined,\n    focusedKey: undefined,\n    optionLabelSelector: undefined,\n};\n\nexport default class Options extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n        this.generateActiveMap(props);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const { activeKeys: oldActiveKeys } = this.props;\n        const { activeKeys: newActiveKeys } = nextProps;\n\n        if (!isListEqual(oldActiveKeys, newActiveKeys)) {\n            this.generateActiveMap(nextProps);\n        }\n    }\n\n    getClassName = () => {\n        const { className } = this.props;\n\n        const classNames = [\n            className,\n            styles.options,\n        ];\n\n        return classNames.join(' ');\n    }\n\n    generateActiveMap = (props) => {\n        const { activeKeys } = props;\n\n        this.activeKeysMap = listToMap(\n            activeKeys,\n            optionKey => optionKey,\n            () => true,\n        );\n    }\n\n    renderOption = (k, data) => {\n        const {\n            keySelector,\n            labelSelector,\n            onOptionClick,\n            onOptionFocus,\n            optionLabelSelector,\n            focusedKey,\n        } = this.props;\n\n        const key = keySelector(data);\n        const label = optionLabelSelector ? (\n            optionLabelSelector(data)\n        ) : (\n            labelSelector(data)\n        );\n        const isActive = !!this.activeKeysMap[key];\n        const isFocused = key === focusedKey;\n\n        return (\n            <Option\n                key={key}\n                optionKey={key}\n                optionLabel={label}\n                onClick={onOptionClick}\n                onFocus={onOptionFocus}\n                active={isActive}\n                focused={isFocused}\n            />\n        );\n    }\n\n    renderEmpty = () => {\n        const {\n            renderEmpty: EmptyComponent,\n            data,\n        } = this.props;\n\n        if (data.length > 0) {\n            return null;\n        }\n\n        const className = `empty ${styles.empty}`;\n        return (\n            <div className={className}>\n                <EmptyComponent />\n            </div>\n        );\n    }\n\n    render() {\n        const {\n            onBlur,\n            onInvalidate,\n            parentContainer,\n            data,\n            show,\n        } = this.props;\n\n        const className = this.getClassName();\n        const Empty = this.renderEmpty;\n\n        if (!show) {\n            return null;\n        }\n\n        return (\n            <FloatingContainer\n                onBlur={onBlur}\n                onInvalidate={onInvalidate}\n                parent={parentContainer}\n                className={className}\n            >\n                <List\n                    data={data}\n                    modifier={this.renderOption}\n                />\n                <Empty />\n            </FloatingContainer>\n        );\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport memoize from 'memoize-one';\nimport {\n    listToMap,\n    caseInsensitiveSubmatch,\n    compareStringSearch,\n    isDefined,\n    _cs,\n} from '@togglecorp/fujs';\nimport { FaramInputElement } from '@togglecorp/faram';\n\nimport Button from '../../Action/Button';\nimport DangerButton from '../../Action/Button/DangerButton';\nimport handleKeyboard from '../../General/HandleKeyboard';\nimport HintAndError from '../HintAndError';\nimport Label from '../Label';\nimport RawInput from '../RawInput';\n\nimport {\n    calcFloatPositionInMainWindow,\n    defaultOffset,\n    defaultLimit,\n} from '../../../utils/bounds';\n\nimport Options from './Options';\nimport styles from './styles.scss';\n\nconst RawKeyInput = handleKeyboard(RawInput);\nconst emptyList = [];\n\n// NOTE: labelSelector must return string\n// NOTE: optionLabelSelector may return renderable node\nexport const propTypes = {\n    autoFocus: PropTypes.bool,\n    disabled: PropTypes.bool,\n    hideClearButton: PropTypes.bool,\n    hideSelectAllButton: PropTypes.bool,\n    readOnly: PropTypes.bool,\n    showHintAndError: PropTypes.bool,\n    showLabel: PropTypes.bool,\n\n    className: PropTypes.string,\n    error: PropTypes.string,\n    hint: PropTypes.string,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    optionsClassName: PropTypes.string,\n    placeholder: PropTypes.string,\n    title: PropTypes.string,\n\n    options: PropTypes.arrayOf(PropTypes.object),\n    // eslint-disable-next-line react/forbid-prop-types\n    value: PropTypes.array,\n    onChange: PropTypes.func.isRequired,\n\n    keySelector: PropTypes.func,\n    labelSelector: PropTypes.func,\n    optionLabelSelector: PropTypes.func,\n\n    renderEmpty: PropTypes.func,\n};\n\nexport const defaultProps = {\n    autoFocus: undefined,\n    className: '',\n    disabled: false,\n    error: undefined,\n    hideClearButton: false,\n    hideSelectAllButton: false,\n    hint: undefined,\n    keySelector: d => d.key,\n    label: '',\n    labelSelector: d => d.label,\n    optionLabelSelector: undefined,\n    options: emptyList,\n    optionsClassName: '',\n    placeholder: 'Select option(s)',\n    readOnly: false,\n    renderEmpty: undefined,\n    showHintAndError: true,\n    showLabel: true,\n    title: undefined,\n    value: emptyList,\n};\n\nexport class NormalMultiSelectInput extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            // FIXME: this may break\n            inputInFocus: props.autoFocus,\n            focusedKey: undefined,\n\n            showOptionsPopup: false,\n            searchValue: undefined,\n        };\n\n        this.containerRef = React.createRef();\n        this.inputRef = React.createRef();\n    }\n\n    componentDidMount() {\n        const { current: container } = this.containerRef;\n        if (container) {\n            this.boundingClientRect = container.getBoundingClientRect();\n        }\n    }\n\n    findPlaceholderValue = memoize((\n        options,\n        labelSelector,\n        keySelector,\n        value = [],\n    ) => {\n        const optionsMap = listToMap(\n            options,\n            keySelector,\n            element => element,\n        );\n        const selectedOptions = value\n            .map(k => optionsMap[k])\n            .filter(isDefined)\n            .map(v => labelSelector(v));\n        return selectedOptions.join(', ');\n    })\n\n    filterOptions = memoize((\n        options,\n        labelSelector,\n        value,\n    ) => {\n        const newOptions = options\n            .filter(\n                option => (\n                    value === undefined || caseInsensitiveSubmatch(labelSelector(option), value)\n                ),\n            )\n            .sort((a, b) => compareStringSearch(\n                labelSelector(a),\n                labelSelector(b),\n                value,\n            ));\n        return newOptions;\n    })\n\n    // Helper\n\n    handleShowOptionsPopup = () => {\n        const { current: input } = this.inputRef;\n        if (input) {\n            input.select();\n        }\n\n        // NOTE: this may not be required\n        const { current: container } = this.containerRef;\n        if (container) {\n            this.boundingClientRect = container.getBoundingClientRect();\n        }\n\n        this.setState({\n            showOptionsPopup: true,\n            searchValue: undefined,\n        });\n    }\n\n    handleHideOptionsPopup = () => {\n        this.setState({\n            showOptionsPopup: false,\n            searchValue: undefined,\n        });\n    }\n\n    // Input\n\n    handleInputFocus = () => {\n        this.setState({ inputInFocus: true });\n    }\n\n    handleInputBlur = () => {\n        this.setState({ inputInFocus: false });\n    }\n\n    handleInputChange = (e) => {\n        const { value } = e.target;\n\n        // NOTE: this may not be required\n        const { current: container } = this.containerRef;\n        if (container) {\n            this.boundingClientRect = container.getBoundingClientRect();\n        }\n\n        this.setState({\n            showOptionsPopup: true,\n            searchValue: value,\n        });\n    }\n\n    // Options\n\n    handleOptionsInvalidate = (optionsContainer) => {\n        const contentRect = optionsContainer.getBoundingClientRect();\n        let parentRect = this.boundingClientRect;\n        const { current: container } = this.containerRef;\n\n        if (container) {\n            parentRect = container.getBoundingClientRect();\n        }\n\n        const { showHintAndError } = this.props;\n\n        const offset = { ...defaultOffset };\n        if (showHintAndError) {\n            offset.top = 12;\n        }\n\n        const limit = {\n            ...defaultLimit,\n            minW: parentRect.width,\n            maxW: parentRect.width,\n        };\n\n        const optionsContainerPosition = (\n            calcFloatPositionInMainWindow({\n                parentRect,\n                contentRect,\n                offset,\n                limit,\n            })\n        );\n\n        return optionsContainerPosition;\n    };\n\n    handleOptionSelect = (key) => {\n        const {\n            value,\n            onChange,\n        } = this.props;\n\n        const newValue = [...value];\n        const optionIndex = newValue.findIndex(d => d === key);\n        if (optionIndex === -1) {\n            newValue.push(key);\n        } else {\n            newValue.splice(optionIndex, 1);\n        }\n\n        // No need to close modal or reset sort\n        // No need to check if same option was clicked\n        onChange(newValue);\n    }\n\n    handleClearButtonClick = () => {\n        const { onChange } = this.props;\n        onChange(emptyList);\n    }\n\n    handleSelectAllButtonClick = () => {\n        const {\n            options,\n            keySelector,\n            onChange,\n        } = this.props;\n\n        const newValue = options.map(d => keySelector(d));\n        onChange(newValue);\n    }\n\n    handleFocusChange = (focusedKey) => {\n        this.setState({ focusedKey });\n    }\n\n    render() {\n        const {\n            error,\n            hint,\n            keySelector,\n            label,\n            labelSelector,\n            optionsClassName,\n            renderEmpty,\n            showHintAndError,\n            showLabel,\n            title,\n            value,\n            disabled,\n            className: classNameFromProps,\n            options,\n            hideClearButton,\n            hideSelectAllButton,\n            readOnly,\n            autoFocus,\n            placeholder,\n            optionLabelSelector,\n        } = this.props;\n\n        const {\n            showOptionsPopup,\n            focusedKey,\n            inputInFocus,\n            searchValue,\n        } = this.state;\n\n\n        const isFilled = value && value.length !== 0;\n        const isAllFilled = value && value.length === options.length;\n\n        const showClearButton = isFilled && !(hideClearButton || disabled || readOnly);\n        const showSelectAllButton = !isAllFilled && !(hideSelectAllButton || disabled || readOnly);\n\n        const { current: container } = this.containerRef;\n\n        const inputTitle = this.findPlaceholderValue(options, labelSelector, keySelector, value);\n        const finalPlaceholder = (\n            inputTitle\n            || placeholder\n        );\n\n        const finalSearchValue = searchValue || '';\n\n        const filteredOptions = this.filterOptions(\n            options,\n            labelSelector,\n            searchValue,\n        );\n\n        const className = _cs(\n            classNameFromProps,\n            'multi-select-input',\n            styles.multiSelectInput,\n            showOptionsPopup && styles.showOptions,\n            showOptionsPopup && 'show-options',\n            disabled && 'disabled',\n            disabled && styles.disabled,\n            inputInFocus && styles.inputInFocus,\n            inputInFocus && 'input-in-focus',\n            error && styles.error,\n            error && 'error',\n            hideClearButton && styles.hideClearButton,\n            hideClearButton && 'hide-clear-button',\n            hideSelectAllButton && styles.hideSelectAllButton,\n            hideSelectAllButton && 'hide-select-all-button',\n            value.length !== 0 && styles.filled,\n            value.length !== 0 && 'filled',\n            value.length === options.length && styles.completelyFilled,\n            value.length === options.length && 'completely-filled',\n        );\n\n        const inputAndActionClassName = `\n            input-and-actions\n            ${styles.inputAndActions}\n        `;\n\n        const actionsClassName = `\n            actions\n            ${styles.actions}\n        `;\n        const dropdownButtonClassName = `\n            dropdown-button\n            ${styles.dropdownButton}\n        `;\n\n        const clearButtonClassName = `\n            clear-button\n            ${styles.clearButton}\n        `;\n\n        const selectAllButtonClassName = `\n            select-all-button\n            ${styles.selectAllButton}\n        `;\n\n        return (\n            <div\n                className={className}\n                ref={this.containerRef}\n                title={title}\n            >\n                { showLabel && (\n                    <Label\n                        text={label}\n                        error={!!error}\n                        disabled={disabled}\n                        active={inputInFocus || showOptionsPopup}\n                    />\n                )}\n                <div className={inputAndActionClassName}>\n                    <RawKeyInput\n                        className={styles.input}\n                        type=\"text\"\n                        elementRef={this.inputRef}\n                        onBlur={this.handleInputBlur}\n                        onFocus={this.handleInputFocus}\n                        onClick={this.handleShowOptionsPopup}\n                        onChange={this.handleInputChange}\n                        value={finalSearchValue}\n                        autoFocus={autoFocus}\n                        title={inputTitle}\n                        placeholder={finalPlaceholder}\n                        disabled={disabled || readOnly}\n\n                        focusedKey={focusedKey}\n                        options={filteredOptions}\n                        keySelector={keySelector}\n                        isOptionsShown={showOptionsPopup}\n                        onFocusChange={this.handleFocusChange}\n                        onHideOptions={this.handleHideOptionsPopup}\n                        onShowOptions={this.handleShowOptionsPopup}\n                        onOptionSelect={this.handleOptionSelect}\n                    />\n                    <div className={actionsClassName}>\n                        { showSelectAllButton && (\n                            <Button\n                                transparent\n                                tabIndex=\"-1\"\n                                className={selectAllButtonClassName}\n                                onClick={this.handleSelectAllButtonClick}\n                                title=\"Select all options\"\n                                disabled={disabled || readOnly}\n                                type=\"button\"\n                                iconName=\"checkAll\"\n                            />\n                        )}\n                        { showClearButton && (\n                            <DangerButton\n                                transparent\n                                tabIndex=\"-1\"\n                                className={clearButtonClassName}\n                                onClick={this.handleClearButtonClick}\n                                title=\"Clear selected option(s)\"\n                                disabled={disabled || readOnly}\n                                iconName=\"close\"\n                            />\n                        )}\n                        <Button\n                            tabIndex=\"-1\"\n                            iconName=\"arrowDropdown\"\n                            className={dropdownButtonClassName}\n                            onClick={this.handleShowOptionsPopup}\n                            transparent\n                            disabled={disabled || readOnly}\n                        />\n                    </div>\n                </div>\n                { showHintAndError && (\n                    <HintAndError\n                        error={error}\n                        hint={hint}\n                    />\n                )}\n                <Options\n                    activeKeys={value}\n                    data={filteredOptions}\n                    keySelector={keySelector}\n                    labelSelector={labelSelector}\n                    optionLabelSelector={optionLabelSelector}\n                    onBlur={this.handleHideOptionsPopup}\n                    onInvalidate={this.handleOptionsInvalidate}\n                    onOptionClick={this.handleOptionSelect}\n                    onOptionFocus={this.handleFocusChange}\n                    className={optionsClassName}\n                    parentContainer={container}\n                    renderEmpty={renderEmpty}\n                    show={showOptionsPopup}\n                    focusedKey={focusedKey}\n                />\n            </div>\n        );\n    }\n}\n\nexport default FaramInputElement(NormalMultiSelectInput);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport memoize from 'memoize-one';\nimport {\n    isTruthy,\n    addSeparator,\n} from '@togglecorp/fujs';\nimport { FaramInputElement } from '@togglecorp/faram';\n\nimport Delay from '../../General/Delay';\n\nimport HintAndError from '../HintAndError';\nimport Label from '../Label';\nimport styles from './styles.scss';\n\nconst propTypes = {\n    /**\n     * required for style override\n     */\n    className: PropTypes.string,\n\n    /**\n     * Is input disabled?\n     */\n    disabled: PropTypes.bool,\n\n    /**\n     * String to show in case of error\n     */\n    error: PropTypes.string,\n\n    /**\n     * Hint text\n     */\n    hint: PropTypes.string,\n\n    /**\n     * Input label\n     */\n    label: PropTypes.string,\n\n    /**\n     * A callback for when the input loses focus\n     */\n    onBlur: PropTypes.func,\n\n    /**\n     * A callback for when the input changes its content\n     */\n    onChange: PropTypes.func,\n\n    /**\n     * A callback for when the input gets focus\n     */\n    onFocus: PropTypes.func,\n\n    /**\n     * Is a required element for form\n     */\n    required: PropTypes.bool,\n    showLabel: PropTypes.bool,\n    showHintAndError: PropTypes.bool,\n    value: PropTypes.number,\n    separator: PropTypes.string,\n    selectOnFocus: PropTypes.bool,\n    title: PropTypes.string,\n};\n\nconst defaultProps = {\n    className: '',\n    disabled: false,\n    error: '',\n    hint: '',\n    label: '',\n    onBlur: undefined,\n    onChange: undefined,\n    onFocus: undefined,\n    required: false,\n    showLabel: true,\n    showHintAndError: true,\n    value: undefined,\n    separator: ',',\n    selectOnFocus: false,\n    title: undefined,\n};\n\nconst INT_LIMIT = 9007199254740992;\n\nconst sanitizeNumber = (value = '') => {\n    if (value === '') {\n        return value;\n    }\n\n    const newValue = value.replace(/[^0-9]/g, '');\n    if (newValue === '') {\n        return newValue;\n    }\n\n    const realValue = +newValue;\n    // NOTE: Limit integer value to MAX_LIMIT\n    return (\n        isTruthy(realValue)\n            ? String(Math.min(INT_LIMIT, realValue))\n            : newValue\n    );\n};\n\nconst isSign = value => value === '-';\n\nconst getNumberAndSign = (value = '') => {\n    if (Number.isNaN(value)) {\n        return { sign: '-' };\n    }\n\n    const stringValue = value.toString();\n    const firstCharacter = stringValue.charAt(0);\n\n    if (isSign(firstCharacter)) {\n        return {\n            sign: '-',\n            number: sanitizeNumber(stringValue.substring(1)),\n        };\n    }\n\n    return { number: sanitizeNumber(stringValue) };\n};\n\nexport class NormalNumberInput extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n        this.state = { isFocused: false };\n    }\n\n    getDisplayValue = memoize((value, separator) => {\n        const {\n            sign = '',\n            number = '',\n        } = getNumberAndSign(value);\n        const numberWithSeparator = addSeparator(number, separator);\n        return `${sign}${numberWithSeparator}`;\n    })\n\n    getClassName() {\n        const {\n            disabled,\n            error,\n            required,\n            className,\n        } = this.props;\n\n        const {\n            isFocused,\n        } = this.state;\n\n        const classNames = [\n            className,\n            'number-input',\n            styles.numberInput,\n        ];\n\n        if (disabled) {\n            classNames.push(styles.disabled);\n            classNames.push('disabled');\n        }\n\n        if (isFocused) {\n            classNames.push(styles.focused);\n            classNames.push('focused');\n        }\n\n        if (error) {\n            classNames.push(styles.error);\n            classNames.push('error');\n        }\n\n        if (required) {\n            classNames.push(styles.required);\n            classNames.push('required');\n        }\n\n        return classNames.join(' ');\n    }\n\n    handleChange = (event) => {\n        const { value } = event.target;\n        const { onChange } = this.props;\n        if (onChange) {\n            const {\n                number = '',\n                sign = '',\n            } = getNumberAndSign(value);\n\n            let realValue;\n            if (number === '' && sign !== '') {\n                realValue = NaN;\n            } else if (number === '' && sign === '') {\n                realValue = undefined;\n            } else {\n                realValue = +`${sign}${number}`;\n            }\n            onChange(realValue);\n        }\n    }\n\n    handleFocus = () => {\n        const { selectOnFocus, onFocus } = this.props;\n        if (selectOnFocus) {\n            // eslint-disable-next-line no-restricted-globals\n            event.target.select();\n        }\n\n        this.setState({ isFocused: true });\n        if (onFocus) {\n            onFocus();\n        }\n    }\n\n    handleBlur = () => {\n        const { onBlur } = this.props;\n        this.setState({ isFocused: false });\n        if (onBlur) {\n            onBlur();\n        }\n    }\n\n    render() {\n        const {\n            // skip prop injection\n            // eslint-disable-next-line no-unused-vars, @typescript-eslint/no-unused-vars\n            value: propValue,\n            onBlur, // eslint-disable-line no-unused-vars, @typescript-eslint/no-unused-vars\n            onChange, // eslint-disable-line no-unused-vars, @typescript-eslint/no-unused-vars\n            onFocus, // eslint-disable-line no-unused-vars, @typescript-eslint/no-unused-vars\n            selectOnFocus, // eslint-disable-line no-unused-vars, @typescript-eslint/no-unused-vars\n            // eslint-disable-next-line no-unused-vars, @typescript-eslint/no-unused-vars\n            className: propClassName,\n\n            error,\n            hint,\n            label,\n            showLabel,\n            showHintAndError,\n            value,\n            title,\n            separator,\n            ...otherProps\n        } = this.props;\n\n        const className = this.getClassName();\n\n        return (\n            <div\n                className={className}\n                title={title}\n            >\n                <Label\n                    className={styles.label}\n                    show={showLabel}\n                    text={label}\n                />\n                <input\n                    className={`${styles.input} input`}\n                    onBlur={this.handleBlur}\n                    onChange={this.handleChange}\n                    onFocus={this.handleFocus}\n                    value={this.getDisplayValue(value, separator)}\n                    {...otherProps}\n                />\n                <HintAndError\n                    show={showHintAndError}\n                    hint={hint}\n                    error={error}\n                />\n            </div>\n        );\n    }\n}\n\nexport default FaramInputElement(Delay(NormalNumberInput));\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { _cs, randomString } from '@togglecorp/fujs';\n\nimport Icon from '../../../General/Icon';\n\nimport styles from './styles.scss';\n\nconst propTypes = {\n    checked: PropTypes.bool,\n    className: PropTypes.string,\n    label: PropTypes.string.isRequired,\n    disabled: PropTypes.bool,\n    readOnly: PropTypes.bool,\n};\n\nconst defaultProps = {\n    checked: false,\n    className: '',\n    disabled: false,\n    readOnly: false,\n};\n\n\nexport default class Option extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n\n        this.inputId = randomString();\n    }\n\n    render() {\n        const {\n            className: classNameFromProps,\n            checked,\n            label,\n            disabled,\n            readOnly,\n            ...otherProps\n        } = this.props;\n\n        const className = _cs(\n            styles.option,\n            'radio-option',\n            classNameFromProps,\n            disabled && styles.disabled,\n            readOnly && styles.readOnly,\n            checked && styles.checked,\n            checked && 'checked',\n        );\n\n        const radioClassName = _cs(\n            styles.radio,\n            'radio',\n        );\n\n        return (\n            <label\n                htmlFor={this.inputId}\n                className={className}\n            >\n                <input\n                    className={`${styles.input} input`}\n                    defaultChecked={checked}\n                    id={this.inputId}\n                    type=\"radio\"\n                    disabled={disabled || readOnly}\n                    {...otherProps}\n                />\n                <Icon\n                    className={radioClassName}\n                    name={checked ? 'radioOn' : 'radioOff'}\n                />\n                <span className={`${styles.label} label`}>\n                    { label }\n                </span>\n            </label>\n        );\n    }\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { FaramInputElement } from '@togglecorp/faram';\n\nimport ListView from '../../View/List/ListView';\n\nimport Option from './Option';\nimport styles from './styles.scss';\n\nconst propTypes = {\n    /**\n     * required for style override\n     */\n    className: PropTypes.string,\n\n    /**\n     * unique name for the radio input\n     */\n    name: PropTypes.string.isRequired,\n\n    /**\n     * Is input disabled?\n     */\n    disabled: PropTypes.bool,\n\n    /**\n     * list of options\n     */\n    options: PropTypes.arrayOf(\n        PropTypes.shape({\n            key: PropTypes.string,\n            label: PropTypes.string,\n        }),\n    ).isRequired,\n\n    onChange: PropTypes.func,\n\n    readOnly: PropTypes.bool,\n\n    /**\n     * key for selected option\n     */\n    value: PropTypes.string,\n};\n\nconst defaultProps = {\n    className: '',\n    onChange: undefined,\n    value: undefined,\n    disabled: false,\n    readOnly: false,\n};\n\nclass RadioInput extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    // XXX: use isTruthy\n    static getSelectedOption = (options, value) => (\n        value && options.find(d => d.key === value)\n    )\n\n    static optionKeyExtractor = option => option.key;\n\n    constructor(props) {\n        super(props);\n\n        const {\n            options,\n            value,\n        } = this.props;\n\n        const selectedOption = RadioInput.getSelectedOption(options, value);\n        this.state = { selectedOption };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const {\n            options,\n            value,\n        } = this.props;\n\n        if (value !== nextProps.value || options !== nextProps.options) {\n            const selectedOption = RadioInput.getSelectedOption(\n                nextProps.options,\n                nextProps.value,\n            );\n            this.setState({ selectedOption });\n        }\n    }\n\n    handleOptionClick = (key) => {\n        const option = this.props.options.find(d => d.key === key);\n\n        this.setState(\n            { selectedOption: option },\n            () => {\n                if (this.props.onChange) {\n                    this.props.onChange(key);\n                }\n            },\n        );\n    }\n\n    renderOption = (key, option) => (\n        <Option\n            key={key}\n            name={this.props.name}\n            label={option.label}\n            checked={this.state.selectedOption && key === this.state.selectedOption.key}\n            onClick={() => this.handleOptionClick(key)}\n            {...this.props}\n        />\n    )\n\n    render() {\n        const {\n            className,\n            options,\n        } = this.props;\n\n        return (\n            <ListView\n                className={`radio-input ${className} ${styles.radioInput}`}\n                data={options}\n                keySelector={RadioInput.optionKeyExtractor}\n                modifier={this.renderOption}\n            />\n        );\n    }\n}\n\nexport default FaramInputElement(RadioInput);\n","import PropTypes from 'prop-types';\nimport React, { Fragment } from 'react';\nimport { FaramInputElement } from '@togglecorp/faram';\n\nimport SelectInput from '../SelectInput';\n\nconst propTypes = {\n    label: PropTypes.string,\n    onChange: PropTypes.func.isRequired,\n    value: PropTypes.arrayOf(PropTypes.string),\n    options: PropTypes.arrayOf(PropTypes.shape({\n        key: PropTypes.string,\n        label: PropTypes.string,\n    })),\n};\n\nconst defaultProps = {\n    label: '',\n    value: undefined,\n    options: [],\n};\n\n\nclass RangeFilter extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n        this.updateFromProps(props);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const { options } = this.props;\n        // Checking this.value instead of this.props.value is intentional\n        if (this.value !== nextProps.value || options !== nextProps.options) {\n            this.updateFromProps(nextProps);\n        }\n    }\n\n    updateFromProps({ value }) {\n        this.value = value;\n        this.startValue = value && value[0];\n        this.endValue = value && value[value.length - 1];\n    }\n\n    handleStartValueChange = (startValue) => {\n        this.startValue = startValue;\n        this.handleUpdate();\n    }\n\n    handleEndValueChange = (endValue) => {\n        this.endValue = endValue;\n        this.handleUpdate();\n    }\n\n    handleUpdate() {\n        const { options, onChange } = this.props;\n        const startIndex = this.startValue\n            ? options.findIndex(o => o.key === this.startValue) : 0;\n        const endIndex = this.endValue\n            ? options.findIndex(o => o.key === this.endValue) : options.length - 1;\n\n        this.value = options.slice(startIndex, endIndex + 1).map(o => o.key);\n        onChange(this.value);\n    }\n\n    render() {\n        const {\n            label,\n            value, // eslint-disable-line no-unused-vars, @typescript-eslint/no-unused-vars\n            onChange, // eslint-disable-line no-unused-vars, @typescript-eslint/no-unused-vars\n            ...otherProps\n        } = this.props;\n\n        return (\n            <Fragment>\n                <SelectInput\n                    onChange={this.handleStartValueChange}\n                    value={this.startValue}\n                    label={`${label} from`}\n                    {...otherProps}\n                />\n                <SelectInput\n                    onChange={this.handleEndValueChange}\n                    value={this.endValue}\n                    label={`${label} to`}\n                    {...otherProps}\n                />\n            </Fragment>\n\n        );\n    }\n}\n\nexport default FaramInputElement(RangeFilter);\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { randomString } from '@togglecorp/fujs';\nimport { FaramInputElement } from '@togglecorp/faram';\nimport HintAndError from '../HintAndError';\nimport styles from './styles.scss';\n\nconst propTypes = {\n    /**\n     * Show file status? (eg: File name, 'No file selected')\n     */\n    showStatus: PropTypes.bool,\n\n    /**\n     * String to show in case of error\n     */\n    error: PropTypes.string,\n\n    value: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.arrayOf(PropTypes.object),\n    ]),\n\n    hint: PropTypes.string,\n    multiple: PropTypes.bool,\n\n    className: PropTypes.string,\n\n    showHintAndError: PropTypes.bool,\n\n    children: PropTypes.oneOfType([\n        PropTypes.node,\n        PropTypes.arrayOf(\n            PropTypes.node,\n        ),\n    ]).isRequired,\n\n    accept: PropTypes.string,\n\n    onChange: PropTypes.func,\n\n    changeDelay: PropTypes.number,\n\n    disabled: PropTypes.bool,\n    readOnly: PropTypes.bool,\n};\n\nconst defaultProps = {\n    className: '',\n    error: '',\n    hint: '',\n    onChange: undefined,\n    showStatus: true,\n    showHintAndError: true,\n    accept: undefined,\n    multiple: false,\n    value: undefined,\n    disabled: false,\n    readOnly: false,\n    changeDelay: undefined,\n};\n\nclass RawFileInput extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    static isValidFile = (name, mimeType, acceptString) => {\n        // if there is no accept string, anything is valid\n        if (!acceptString) {\n            return true;\n        }\n        const extensionMatch = /\\.\\w+$/.exec(name);\n        const mimeMatch = /^.+\\//.exec(mimeType);\n\n        const acceptList = acceptString.split(/,\\s+/);\n        return acceptList.some((accept) => {\n            // check mimeType such as image/png or image/*\n            if (mimeType === accept || (!!mimeMatch && `${mimeMatch[0]}*` === accept)) {\n                return true;\n            }\n            return !!extensionMatch && extensionMatch[0].toLowerCase() === accept.toLowerCase();\n        });\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.inputId = randomString();\n    }\n\n    getFileStatus = (value) => {\n        if (Array.isArray(value) && value.length > 0) {\n            return `Selected: ${value.map(file => file.name).join(', ')}`;\n        }\n        if (value) {\n            return `Selected: ${value.name}`;\n        }\n        return 'No file chosen';\n    }\n\n    handleChange = () => {\n        const {\n            accept,\n            onChange,\n            multiple,\n        } = this.props;\n        const filesFromInput = Array.from(this.fileInput.files);\n        const files = filesFromInput.filter(\n            file => RawFileInput.isValidFile(file.name, file.type, accept),\n        );\n        const invalidFiles = filesFromInput.length - files.length;\n\n        if (onChange) {\n            onChange(multiple ? files : files[0], { invalidFiles });\n        }\n    }\n\n\n    render() {\n        const {\n            showStatus,\n            className,\n            children,\n            error,\n            hint,\n            showHintAndError,\n            value,\n            changeDelay, // eslint-disable-line no-unused-vars, @typescript-eslint/no-unused-vars\n            onChange, // eslint-disable-line no-unused-vars, @typescript-eslint/no-unused-vars\n            ...otherProps\n        } = this.props;\n\n        return (\n            <div className={`file-input ${className} ${styles.fileInputWrapper}`}>\n                <label\n                    className={`label ${styles.label}`}\n                    htmlFor={this.inputId}\n                >\n                    { children }\n                </label>\n                <input\n                    className={`input ${styles.input}`}\n                    id={this.inputId}\n                    onChange={this.handleChange}\n                    // FIXME: ref may not be needed\n                    ref={(el) => { this.fileInput = el; }}\n                    type=\"file\"\n                    {...otherProps}\n                />\n                {\n                    showStatus && (\n                        <p className={styles.status}>\n                            {this.getFileStatus(value)}\n                        </p>\n                    )\n                }\n                <HintAndError\n                    show={showHintAndError}\n                    hint={hint}\n                    error={error}\n                />\n            </div>\n        );\n    }\n}\n\nexport default FaramInputElement(RawFileInput);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { isFalsy } from '@togglecorp/fujs';\nimport { FaramInputElement } from '@togglecorp/faram';\n\nimport List from '../../View/List';\n\nimport styles from './styles.scss';\n\nconst propTypes = {\n    className: PropTypes.string,\n    // eslint-disable-next-line react/forbid-prop-types\n    options: PropTypes.array,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    onChange: PropTypes.func,\n    disabled: PropTypes.bool,\n    readOnly: PropTypes.bool,\n    keySelector: PropTypes.func,\n    labelSelector: PropTypes.func,\n    colorSelector: PropTypes.func,\n    isDefaultSelector: PropTypes.func,\n};\nconst defaultProps = {\n    className: '',\n    options: [],\n    value: undefined,\n    onChange: () => {},\n    disabled: false,\n    readOnly: false,\n\n    keySelector: option => option.key,\n    labelSelector: option => option.label,\n    colorSelector: option => option.color,\n    isDefaultSelector: option => !!option.default,\n};\n\nclass ScaleInput extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n        // FIXME: this kind of actions should be moved to Faram:computeSchema\n        this.checkAndSetDefaultValue(props.options, props.value);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const {\n            options,\n            disabled,\n            readOnly,\n        } = this.props;\n\n        if (\n            nextProps.options !== options\n            || (!nextProps.disabled && nextProps.disabled !== disabled)\n            || (!nextProps.readOnly && nextProps.readOnly !== readOnly)\n        ) {\n            this.checkAndSetDefaultValue(nextProps.options, nextProps.value);\n        }\n    }\n\n    getClassName = () => {\n        const {\n            className,\n            disabled,\n            readOnly,\n        } = this.props;\n\n        const classNames = [\n            className,\n            'scale-input',\n            styles.scaleInput,\n        ];\n\n        if (disabled) {\n            classNames.push('disabled');\n            classNames.push(styles.disabled);\n        }\n\n        if (readOnly) {\n            classNames.push('read-only');\n            classNames.push(styles.readOnly);\n        }\n\n        return classNames.join(' ');\n    }\n\n    getOptionClassName = (key) => {\n        const { value } = this.props;\n\n        const classNames = [\n            styles.value,\n        ];\n\n        // FIXME: there shouldn't be need for cast to string\n        const isActive = String(key) === String(value);\n\n        if (isActive) {\n            classNames.push(styles.active);\n        }\n\n        return classNames.join(' ');\n    }\n\n    checkAndSetDefaultValue = (options, value) => {\n        const {\n            onChange,\n            isDefaultSelector,\n            keySelector,\n            disabled,\n            readOnly,\n        } = this.props;\n\n        if (disabled || readOnly) {\n            return;\n        }\n\n        const defaultOption = options.find(option => isDefaultSelector(option));\n        if (isFalsy(value, ['']) && !isFalsy(defaultOption, [''])) {\n            onChange(keySelector(defaultOption));\n        }\n    }\n\n    handleOptionClick = (key) => {\n        const {\n            value,\n            onChange,\n        } = this.props;\n\n        if (value !== key) {\n            onChange(key);\n        }\n    }\n\n    renderOption = (k, option) => {\n        const {\n            disabled,\n            readOnly,\n            colorSelector,\n            keySelector,\n            labelSelector,\n        } = this.props;\n\n        const key = keySelector(option);\n        const color = colorSelector(option);\n        const label = labelSelector(option);\n\n        const style = {\n            backgroundColor: color,\n        };\n\n        const className = this.getOptionClassName(key);\n\n        return (\n            <button\n                onClick={() => { this.handleOptionClick(key); }}\n                type=\"button\"\n                key={key}\n                className={className}\n                title={label}\n                disabled={disabled || readOnly}\n                style={style}\n            />\n        );\n    }\n\n    render() {\n        const { options } = this.props;\n        const className = this.getClassName();\n\n        return (\n            <div className={className}>\n                <List\n                    data={options}\n                    modifier={this.renderOption}\n                />\n            </div>\n        );\n    }\n}\n\nexport default FaramInputElement(ScaleInput);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { _cs } from '@togglecorp/fujs';\nimport { FaramInputElement } from '@togglecorp/faram';\n\nimport Delay from '../../General/Delay';\n\nimport RawInput from '../RawInput';\nimport HintAndError from '../HintAndError';\nimport Label from '../Label';\n\nimport styles from './styles.scss';\n\nconst propTypes = {\n    className: PropTypes.string,\n    disabled: PropTypes.bool,\n    error: PropTypes.string,\n    hint: PropTypes.string,\n    label: PropTypes.string,\n    onBlur: PropTypes.func,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    required: PropTypes.bool,\n    showLabel: PropTypes.bool,\n    showHintAndError: PropTypes.bool,\n    value: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    selectOnFocus: PropTypes.bool,\n    title: PropTypes.string,\n};\n\nconst defaultProps = {\n    className: '',\n    disabled: false,\n    error: '',\n    hint: '',\n    label: '',\n    onBlur: undefined,\n    onChange: undefined,\n    onFocus: undefined,\n    required: false,\n    showLabel: true,\n    showHintAndError: true,\n    value: '',\n    selectOnFocus: false,\n    title: undefined,\n};\n\nclass TextInput extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n\n        this.state = { isFocused: false };\n    }\n\n    getClassName = () => {\n        const {\n            className: classNameFromProps,\n            disabled,\n            error,\n            required,\n        } = this.props;\n\n        const { isFocused } = this.state;\n\n        const className = _cs(\n            classNameFromProps,\n            styles.textInput,\n            'text-input',\n            disabled && styles.disabled,\n            disabled && 'disabled',\n            isFocused && styles.focused,\n            isFocused && 'focused',\n            error && styles.error,\n            error && 'error',\n            required && styles.required,\n            required && 'required',\n        );\n\n        return className;\n    }\n\n    handleChange = (event) => {\n        const { value } = event.target;\n        const { onChange } = this.props;\n\n        if (onChange) {\n            onChange(value);\n        }\n    }\n\n    handleFocus = (event) => {\n        const {\n            selectOnFocus,\n            onFocus,\n        } = this.props;\n\n        if (selectOnFocus) {\n            event.target.select();\n        }\n\n        this.setState({ isFocused: true });\n\n        if (onFocus) {\n            onFocus();\n        }\n    }\n\n    handleBlur = () => {\n        const { onBlur } = this.props;\n\n        this.setState({ isFocused: false });\n        if (onBlur) {\n            onBlur();\n        }\n    }\n\n    render() {\n        const {\n            // skip prop injection\n            onBlur, // eslint-disable-line no-unused-vars, @typescript-eslint/no-unused-vars\n            onChange, // eslint-disable-line no-unused-vars, @typescript-eslint/no-unused-vars\n            onFocus, // eslint-disable-line no-unused-vars, @typescript-eslint/no-unused-vars\n            selectOnFocus, // eslint-disable-line no-unused-vars, @typescript-eslint/no-unused-vars\n            // eslint-disable-next-line no-unused-vars, @typescript-eslint/no-unused-vars\n            className: classNameFromProps,\n\n            error,\n            hint,\n            label,\n            showLabel,\n            showHintAndError,\n            disabled,\n            title,\n            ...otherProps\n        } = this.props;\n\n        const { isFocused } = this.state;\n\n        const className = this.getClassName();\n\n        return (\n            <div\n                className={className}\n                title={title}\n            >\n                <Label\n                    show={showLabel}\n                    text={label}\n                    error={!!error}\n                    active={isFocused}\n                    disabled={disabled}\n                />\n                <RawInput\n                    className={styles.input}\n                    onBlur={this.handleBlur}\n                    onChange={this.handleChange}\n                    onFocus={this.handleFocus}\n                    disabled={disabled}\n                    type=\"text\"\n                    {...otherProps}\n                />\n                <HintAndError\n                    show={showHintAndError}\n                    hint={hint}\n                    error={error}\n                />\n            </div>\n        );\n    }\n}\n\nexport default FaramInputElement(Delay(TextInput));\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { FaramInputElement } from '@togglecorp/faram';\nimport { _cs } from '@togglecorp/fujs';\n\nimport Icon from '../../General/Icon';\nimport Delay from '../../General/Delay';\n\nimport TextInput from '../TextInput';\n\nimport styles from './styles.scss';\n\nconst propTypes = {\n    className: PropTypes.string,\n    disabled: PropTypes.bool,\n};\n\nconst defaultProps = {\n    className: '',\n    disabled: false,\n};\n\nclass SearchInput extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    render() {\n        const {\n            className: classNameFromProps,\n            disabled,\n            ...otherProps\n        } = this.props;\n\n        const className = _cs(\n            classNameFromProps,\n            'search-input',\n            styles.searchInput,\n            disabled && 'disabled',\n            disabled && styles.disabled,\n        );\n\n        const iconClassName = _cs(\n            'icon',\n            styles.icon,\n        );\n\n        return (\n            <div className={className}>\n                <Icon\n                    className={iconClassName}\n                    name=\"search\"\n                />\n                <TextInput\n                    className={styles.textInput}\n                    type=\"search\"\n                    disabled={disabled}\n                    {...otherProps}\n                />\n            </div>\n        );\n    }\n}\n\nexport default FaramInputElement(Delay(SearchInput));\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { _cs } from '@togglecorp/fujs';\n\nimport Icon from '../../../General/Icon';\n\nimport styles from './styles.scss';\n\nconst Checkbox = ({ active }) => {\n    const className = _cs(\n        'checkbox',\n        styles.checkbox,\n    );\n\n    return (\n        <Icon\n            className={className}\n            name={active ? 'checkbox' : 'checkboxOutlineBlank'}\n        />\n    );\n};\n\nCheckbox.propTypes = {\n    active: PropTypes.bool.isRequired,\n};\n\nexport default Checkbox;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Checkbox from '../Checkbox';\nimport styles from './styles.scss';\n\nconst propTypes = {\n    active: PropTypes.bool.isRequired,\n    focused: PropTypes.bool.isRequired,\n    className: PropTypes.string,\n    onClick: PropTypes.func.isRequired,\n    optionKey: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]).isRequired,\n    onFocus: PropTypes.func.isRequired,\n    optionLabel: PropTypes.string,\n};\n\nconst defaultProps = {\n    className: '',\n    optionLabel: '',\n};\n\nexport default class Option extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n        this.ref = React.createRef();\n        this.focusedByMouse = undefined;\n    }\n\n    componentDidMount() {\n        const { focused } = this.props;\n        if (focused) {\n            this.scrollToFocus();\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const { focused } = this.props;\n        if (!focused && nextProps.focused) {\n            this.scrollToFocus();\n        } else {\n            this.focusedByMouse = false;\n        }\n    }\n\n    getClassName = () => {\n        const {\n            active,\n            focused,\n            className,\n        } = this.props;\n\n        const classNames = [\n            className,\n            'option',\n            styles.option,\n        ];\n\n        if (active) {\n            classNames.push('active');\n        }\n\n        if (focused) {\n            classNames.push(styles.focused);\n            classNames.push('focused');\n        }\n\n        return classNames.join(' ');\n    }\n\n    handleClick = () => {\n        const {\n            onClick,\n            optionKey,\n        } = this.props;\n\n        onClick(optionKey);\n    }\n\n    handleMouseMove = () => {\n        const {\n            optionKey,\n            onFocus,\n        } = this.props;\n\n        this.focusedByMouse = true;\n        onFocus(optionKey);\n    }\n\n    handleMouseLeave = () => {\n        this.focusedByMouse = false;\n    }\n\n    scrollToFocus = () => {\n        if (!this.focusedByMouse) {\n            this.ref.current.scrollIntoView({\n                block: 'nearest',\n            });\n        }\n    }\n\n    render() {\n        const {\n            optionLabel,\n            active,\n        } = this.props;\n\n        const className = this.getClassName();\n\n        return (\n            <button\n                ref={this.ref}\n                className={className}\n                onClick={this.handleClick}\n                onMouseMove={this.handleMouseMove}\n                onMouseLeave={this.handleMouseLeave}\n                type=\"button\"\n            >\n                <Checkbox active={active} />\n                { optionLabel }\n            </button>\n        );\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { listToMap, isListEqual } from '@togglecorp/fujs';\n\nimport FloatingContainer from '../../../View/FloatingContainer';\nimport List from '../../../View/List';\nimport Option from '../Option';\n\nimport styles from './styles.scss';\n\nconst propTypes = {\n    activeKeys: PropTypes.array.isRequired, // eslint-disable-line react/forbid-prop-types\n    className: PropTypes.string,\n    data: PropTypes.array.isRequired, // eslint-disable-line react/forbid-prop-types\n    keySelector: PropTypes.func.isRequired,\n    labelSelector: PropTypes.func.isRequired,\n    optionLabelSelector: PropTypes.func,\n    onBlur: PropTypes.func.isRequired,\n    onInvalidate: PropTypes.func.isRequired,\n    onOptionClick: PropTypes.func.isRequired,\n    onOptionFocus: PropTypes.func.isRequired,\n    parentContainer: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n    renderEmpty: PropTypes.func,\n    show: PropTypes.bool.isRequired,\n    focusedKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nconst defaultProps = {\n    className: '',\n    renderEmpty: () => 'No option available',\n    parentContainer: undefined,\n    focusedKey: undefined,\n    optionLabelSelector: undefined,\n};\n\nexport default class Options extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n        this.generateActiveMap(props);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const { activeKeys: oldActiveKeys } = this.props;\n        const { activeKeys: newActiveKeys } = nextProps;\n\n        if (!isListEqual(oldActiveKeys, newActiveKeys)) {\n            this.generateActiveMap(nextProps);\n        }\n    }\n\n    getClassName = () => {\n        const { className } = this.props;\n\n        const classNames = [\n            className,\n            styles.options,\n        ];\n\n        return classNames.join(' ');\n    }\n\n    generateActiveMap = (props) => {\n        const { activeKeys } = props;\n\n        this.activeKeysMap = listToMap(\n            activeKeys,\n            optionKey => optionKey,\n            () => true,\n        );\n    }\n\n    renderOption = (k, data) => {\n        const {\n            keySelector,\n            labelSelector,\n            onOptionClick,\n            onOptionFocus,\n            optionLabelSelector,\n            focusedKey,\n        } = this.props;\n\n        const key = keySelector(data);\n        const label = optionLabelSelector ? (\n            optionLabelSelector(data)\n        ) : (\n            labelSelector(data)\n        );\n        const isActive = !!this.activeKeysMap[key];\n        const isFocused = key === focusedKey;\n\n        return (\n            <Option\n                key={key}\n                optionKey={key}\n                optionLabel={label}\n                onClick={onOptionClick}\n                onFocus={onOptionFocus}\n                active={isActive}\n                focused={isFocused}\n            />\n        );\n    }\n\n    renderEmpty = () => {\n        const {\n            renderEmpty: EmptyComponent,\n            data,\n        } = this.props;\n\n        if (data.length > 0) {\n            return null;\n        }\n\n        const className = `empty ${styles.empty}`;\n        return (\n            <div className={className}>\n                <EmptyComponent />\n            </div>\n        );\n    }\n\n    render() {\n        const {\n            onBlur,\n            onInvalidate,\n            parentContainer,\n            data,\n            show,\n        } = this.props;\n\n        const className = this.getClassName();\n        const Empty = this.renderEmpty;\n\n        if (!show) {\n            return null;\n        }\n\n        return (\n            <FloatingContainer\n                onBlur={onBlur}\n                onInvalidate={onInvalidate}\n                parent={parentContainer}\n                className={className}\n            >\n                <List\n                    data={data}\n                    modifier={this.renderOption}\n                />\n                <Empty />\n            </FloatingContainer>\n        );\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport memoize from 'memoize-one';\nimport {\n    listToMap,\n    caseInsensitiveSubmatch,\n    compareStringSearch,\n    isDefined,\n    _cs,\n} from '@togglecorp/fujs';\nimport { FaramInputElement } from '@togglecorp/faram';\n\nimport Button from '../../Action/Button';\nimport DangerButton from '../../Action/Button/DangerButton';\nimport handleKeyboard from '../../General/HandleKeyboard';\nimport HintAndError from '../HintAndError';\nimport Label from '../Label';\nimport RawInput from '../RawInput';\n\nimport {\n    calcFloatPositionInMainWindow,\n    defaultOffset,\n    defaultLimit,\n} from '../../../utils/bounds';\n\nimport Options from './Options';\nimport styles from './styles.scss';\n\nconst RawKeyInput = handleKeyboard(RawInput);\nconst emptyList = [];\n\nconst typeToSearch = () => 'Type to search';\nconst noMatchingResults = () => 'No matching results';\nconst noOptionsAvailable = () => 'No options available';\n\n// NOTE: labelSelector must return string\n// NOTE: optionLabelSelector may return renderable node\nexport const propTypes = {\n    autoFocus: PropTypes.bool,\n    disabled: PropTypes.bool,\n    hideClearButton: PropTypes.bool,\n    hideSelectAllButton: PropTypes.bool,\n    readOnly: PropTypes.bool,\n    showHintAndError: PropTypes.bool,\n    showLabel: PropTypes.bool,\n\n    className: PropTypes.string,\n    error: PropTypes.string,\n    hint: PropTypes.string,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    optionsClassName: PropTypes.string,\n    placeholder: PropTypes.string,\n    title: PropTypes.string,\n\n    options: PropTypes.arrayOf(PropTypes.object),\n    // eslint-disable-next-line react/forbid-prop-types\n    value: PropTypes.array,\n    onChange: PropTypes.func.isRequired,\n\n    keySelector: PropTypes.func,\n    labelSelector: PropTypes.func,\n    optionLabelSelector: PropTypes.func,\n\n    renderEmpty: PropTypes.func,\n    maxDisplayOptions: PropTypes.number,\n};\n\nexport const defaultProps = {\n    autoFocus: undefined,\n    className: '',\n    disabled: false,\n    error: undefined,\n    hideClearButton: false,\n    hideSelectAllButton: false,\n    hint: undefined,\n    keySelector: d => d.key,\n    label: '',\n    labelSelector: d => d.label,\n    optionLabelSelector: undefined,\n    options: emptyList,\n    optionsClassName: '',\n    placeholder: 'Select option(s)',\n    readOnly: false,\n    renderEmpty: undefined,\n    showHintAndError: true,\n    showLabel: true,\n    title: undefined,\n    value: emptyList,\n    maxDisplayOptions: 100,\n};\n\nclass SearchMultiSelectInput extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            // FIXME: this may break\n            inputInFocus: props.autoFocus,\n            focusedKey: undefined,\n\n            showOptionsPopup: false,\n            searchValue: undefined,\n        };\n\n        this.containerRef = React.createRef();\n        this.inputRef = React.createRef();\n    }\n\n    componentDidMount() {\n        const { current: container } = this.containerRef;\n        if (container) {\n            this.boundingClientRect = container.getBoundingClientRect();\n        }\n    }\n\n    findPlaceholderValue = memoize((\n        options,\n        labelSelector,\n        keySelector,\n        value = [],\n    ) => {\n        const optionsMap = listToMap(\n            options,\n            keySelector,\n            element => element,\n        );\n        const selectedOptions = value\n            .map(k => optionsMap[k])\n            .filter(isDefined)\n            .map(v => labelSelector(v));\n        return selectedOptions.join(', ');\n    })\n\n    filterOptions = memoize((\n        options,\n        labelSelector,\n        value,\n        maxDisplayOptions,\n    ) => {\n        if (!value || value.length === 0) {\n            return [];\n        }\n\n        const newOptions = options\n            .filter(\n                option => (\n                    value === undefined || caseInsensitiveSubmatch(labelSelector(option), value)\n                ),\n            )\n            .sort((a, b) => compareStringSearch(\n                labelSelector(a),\n                labelSelector(b),\n                value,\n            ))\n            .slice(0, maxDisplayOptions);\n        return newOptions;\n    })\n\n    // Helper\n\n    handleShowOptionsPopup = () => {\n        const { current: input } = this.inputRef;\n        if (input) {\n            input.select();\n        }\n\n        // NOTE: this may not be required\n        const { current: container } = this.containerRef;\n        if (container) {\n            this.boundingClientRect = container.getBoundingClientRect();\n        }\n\n        this.setState({\n            showOptionsPopup: true,\n            searchValue: undefined,\n        });\n    }\n\n    handleHideOptionsPopup = () => {\n        this.setState({\n            showOptionsPopup: false,\n            searchValue: undefined,\n        });\n    }\n\n    // Input\n\n    handleInputFocus = () => {\n        this.setState({ inputInFocus: true });\n    }\n\n    handleInputBlur = () => {\n        this.setState({ inputInFocus: false });\n    }\n\n    handleInputChange = (e) => {\n        const { value } = e.target;\n\n        // NOTE: this may not be required\n        const { current: container } = this.containerRef;\n        if (container) {\n            this.boundingClientRect = container.getBoundingClientRect();\n        }\n\n        this.setState({\n            showOptionsPopup: true,\n            searchValue: value,\n        });\n    }\n\n    // Options\n\n    handleOptionsInvalidate = (optionsContainer) => {\n        const contentRect = optionsContainer.getBoundingClientRect();\n        let parentRect = this.boundingClientRect;\n        const { current: container } = this.containerRef;\n\n        if (container) {\n            parentRect = container.getBoundingClientRect();\n        }\n\n        const { showHintAndError } = this.props;\n\n        const offset = { ...defaultOffset };\n        if (showHintAndError) {\n            offset.top = 12;\n        }\n\n        const limit = {\n            ...defaultLimit,\n            minW: parentRect.width,\n            maxW: parentRect.width,\n        };\n\n        const optionsContainerPosition = (\n            calcFloatPositionInMainWindow({\n                parentRect,\n                contentRect,\n                offset,\n                limit,\n            })\n        );\n\n        return optionsContainerPosition;\n    };\n\n    handleOptionSelect = (key) => {\n        const {\n            value,\n            onChange,\n        } = this.props;\n\n        const newValue = [...value];\n        const optionIndex = newValue.findIndex(d => d === key);\n        if (optionIndex === -1) {\n            newValue.push(key);\n        } else {\n            newValue.splice(optionIndex, 1);\n        }\n\n        // No need to close modal or reset sort\n        // No need to check if same option was clicked\n        onChange(newValue);\n    }\n\n    handleClearButtonClick = () => {\n        const { onChange } = this.props;\n        onChange(emptyList);\n    }\n\n    handleSelectAllButtonClick = () => {\n        const {\n            options,\n            keySelector,\n            onChange,\n        } = this.props;\n\n        const newValue = options.map(d => keySelector(d));\n        onChange(newValue);\n    }\n\n    handleFocusChange = (focusedKey) => {\n        this.setState({ focusedKey });\n    }\n\n    render() {\n        const {\n            error,\n            hint,\n            keySelector,\n            label,\n            labelSelector,\n            optionsClassName,\n            renderEmpty: renderEmptyFromProps,\n            showHintAndError,\n            showLabel,\n            title,\n            value,\n            disabled,\n            className: classNameFromProps,\n            options,\n            hideClearButton,\n            hideSelectAllButton,\n            readOnly,\n            autoFocus,\n            placeholder,\n            optionLabelSelector,\n            maxDisplayOptions,\n        } = this.props;\n\n        const {\n            showOptionsPopup,\n            focusedKey,\n            inputInFocus,\n            searchValue,\n        } = this.state;\n\n\n        let renderEmpty = renderEmptyFromProps;\n\n        if (!renderEmptyFromProps) {\n            renderEmpty = !searchValue ? typeToSearch : noMatchingResults;\n        }\n\n        if (!renderEmptyFromProps && options.length === 0) {\n            renderEmpty = noOptionsAvailable;\n        }\n\n        const isFilled = value && value.length !== 0;\n        const isAllFilled = value && value.length === options.length;\n\n        const showClearButton = isFilled && !(hideClearButton || disabled || readOnly);\n        const showSelectAllButton = !isAllFilled && !(hideSelectAllButton || disabled || readOnly);\n\n        const { current: container } = this.containerRef;\n\n        const inputTitle = this.findPlaceholderValue(options, labelSelector, keySelector, value);\n        const finalPlaceholder = (\n            inputTitle\n            || placeholder\n        );\n\n        const finalSearchValue = searchValue || '';\n\n        const filteredOptions = this.filterOptions(\n            options,\n            labelSelector,\n            searchValue,\n            maxDisplayOptions,\n        );\n\n        const className = _cs(\n            classNameFromProps,\n            'multi-select-input',\n            styles.multiSelectInput,\n            showOptionsPopup && styles.showOptions,\n            showOptionsPopup && 'show-options',\n            disabled && 'disabled',\n            disabled && styles.disabled,\n            inputInFocus && styles.inputInFocus,\n            inputInFocus && 'input-in-focus',\n            error && styles.error,\n            error && 'error',\n            hideClearButton && styles.hideClearButton,\n            hideClearButton && 'hide-clear-button',\n            hideSelectAllButton && styles.hideSelectAllButton,\n            hideSelectAllButton && 'hide-select-all-button',\n            value.length !== 0 && styles.filled,\n            value.length !== 0 && 'filled',\n            value.length === options.length && styles.completelyFilled,\n            value.length === options.length && 'completely-filled',\n        );\n\n        const inputAndActionClassName = `\n            input-and-actions\n            ${styles.inputAndActions}\n        `;\n\n        const actionsClassName = `\n            actions\n            ${styles.actions}\n        `;\n\n        const clearButtonClassName = `\n            clear-button\n            ${styles.clearButton}\n        `;\n\n        const selectAllButtonClassName = `\n            select-all-button\n            ${styles.selectAllButton}\n        `;\n\n        return (\n            <div\n                className={className}\n                ref={this.containerRef}\n                title={title}\n            >\n                { showLabel && (\n                    <Label\n                        text={label}\n                        error={!!error}\n                        disabled={disabled}\n                        active={inputInFocus || showOptionsPopup}\n                    />\n                )}\n                <div className={inputAndActionClassName}>\n                    <RawKeyInput\n                        className={styles.input}\n                        type=\"text\"\n                        elementRef={this.inputRef}\n                        onBlur={this.handleInputBlur}\n                        onFocus={this.handleInputFocus}\n                        onClick={this.handleShowOptionsPopup}\n                        onChange={this.handleInputChange}\n                        value={finalSearchValue}\n                        autoFocus={autoFocus}\n                        title={inputTitle}\n                        placeholder={finalPlaceholder}\n                        disabled={disabled || readOnly}\n\n                        focusedKey={focusedKey}\n                        options={filteredOptions}\n                        keySelector={keySelector}\n                        isOptionsShown={showOptionsPopup}\n                        onFocusChange={this.handleFocusChange}\n                        onHideOptions={this.handleHideOptionsPopup}\n                        onShowOptions={this.handleShowOptionsPopup}\n                        onOptionSelect={this.handleOptionSelect}\n                    />\n                    <div className={actionsClassName}>\n                        { showSelectAllButton && (\n                            <Button\n                                transparent\n                                tabIndex=\"-1\"\n                                className={selectAllButtonClassName}\n                                onClick={this.handleSelectAllButtonClick}\n                                title=\"Select all options\"\n                                disabled={disabled || readOnly}\n                                type=\"button\"\n                                iconName=\"checkAll\"\n                            />\n                        )}\n                        { showClearButton && (\n                            <DangerButton\n                                transparent\n                                tabIndex=\"-1\"\n                                className={clearButtonClassName}\n                                onClick={this.handleClearButtonClick}\n                                title=\"Clear selected option(s)\"\n                                disabled={disabled || readOnly}\n                                iconName=\"close\"\n                            />\n                        )}\n                    </div>\n                </div>\n                { showHintAndError && (\n                    <HintAndError\n                        error={error}\n                        hint={hint}\n                    />\n                )}\n                <Options\n                    activeKeys={value}\n                    data={filteredOptions}\n                    keySelector={keySelector}\n                    labelSelector={labelSelector}\n                    optionLabelSelector={optionLabelSelector}\n                    onBlur={this.handleHideOptionsPopup}\n                    onInvalidate={this.handleOptionsInvalidate}\n                    onOptionClick={this.handleOptionSelect}\n                    onOptionFocus={this.handleFocusChange}\n                    className={optionsClassName}\n                    parentContainer={container}\n                    renderEmpty={renderEmpty}\n                    show={showOptionsPopup}\n                    focusedKey={focusedKey}\n                />\n            </div>\n        );\n    }\n}\n\nexport default FaramInputElement(SearchMultiSelectInput);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './styles.scss';\n\nconst propTypes = {\n    className: PropTypes.string,\n    optionKey: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]).isRequired,\n    onClick: PropTypes.func.isRequired,\n    onFocus: PropTypes.func.isRequired,\n    children: PropTypes.node,\n    isActive: PropTypes.bool,\n    isFocused: PropTypes.bool,\n};\n\nconst defaultProps = {\n    isActive: false,\n    isFocused: false,\n    className: '',\n    children: undefined,\n};\n\nexport default class Option extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n        this.ref = React.createRef();\n        this.focusedByMouse = undefined;\n    }\n\n    componentDidMount() {\n        const { isFocused } = this.props;\n\n        if (isFocused) {\n            this.scrollToFocus();\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const { isFocused } = this.props;\n\n        if (!isFocused && nextProps.isFocused) {\n            this.scrollToFocus();\n        } else {\n            this.focusedByMouse = false;\n        }\n    }\n\n    getClassName = () => {\n        const {\n            className,\n            isActive,\n            isFocused,\n        } = this.props;\n\n        const classNames = [\n            className,\n            styles.option,\n            'option',\n        ];\n\n        if (isActive) {\n            classNames.push(styles.active);\n            classNames.push('active');\n        }\n\n        if (isFocused) {\n            classNames.push(styles.focused);\n            classNames.push('focused');\n        }\n\n        return classNames.join(' ');\n    }\n\n    handleClick = () => {\n        const {\n            optionKey,\n            onClick,\n        } = this.props;\n\n        onClick(optionKey);\n    }\n\n    handleMouseMove = () => {\n        const {\n            optionKey,\n            onFocus,\n        } = this.props;\n\n        this.focusedByMouse = true;\n        onFocus(optionKey);\n    }\n\n    handleMouseLeave = () => {\n        this.focusedByMouse = false;\n    }\n\n    scrollToFocus = () => {\n        if (!this.focusedByMouse) {\n            this.ref.current.scrollIntoView({\n                block: 'nearest',\n            });\n        }\n    }\n\n    render() {\n        const { children } = this.props;\n        const className = this.getClassName();\n\n        return (\n            <button\n                ref={this.ref}\n                className={className}\n                onClick={this.handleClick}\n                onMouseMove={this.handleMouseMove}\n                onMouseLeave={this.handleMouseLeave}\n                type=\"button\"\n            >\n                { children }\n            </button>\n        );\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport FloatingContainer from '../../../View/FloatingContainer';\nimport List from '../../../View/List';\n\nimport Option from './Option';\n\nimport styles from './styles.scss';\n\nconst propTypes = {\n    className: PropTypes.string,\n    show: PropTypes.bool,\n    data: PropTypes.arrayOf(PropTypes.object),\n    keySelector: PropTypes.func.isRequired,\n    labelSelector: PropTypes.func.isRequired,\n    optionLabelSelector: PropTypes.func,\n    renderEmpty: PropTypes.func,\n    onOptionClick: PropTypes.func.isRequired,\n    onOptionFocus: PropTypes.func.isRequired,\n    value: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    focusedKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    onBlur: PropTypes.func.isRequired,\n    onInvalidate: PropTypes.func.isRequired,\n\n    // eslint-disable-next-line react/forbid-prop-types\n    parentContainer: PropTypes.object,\n};\n\nconst defaultProps = {\n    className: '',\n    show: false,\n    data: [],\n    focusedKey: undefined,\n    optionLabelSelector: undefined,\n    renderEmpty: () => 'No option available',\n    value: undefined,\n    parentContainer: undefined,\n};\n\nexport default class Options extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    renderOption = (_, option) => {\n        const {\n            keySelector,\n            labelSelector,\n            optionLabelSelector,\n            onOptionClick,\n            onOptionFocus,\n            value,\n            focusedKey,\n        } = this.props;\n\n        const key = keySelector(option);\n        const label = optionLabelSelector ? (\n            optionLabelSelector(option)\n        ) : (\n            labelSelector(option)\n        );\n\n        const isActive = key === value;\n        const isFocused = key === focusedKey;\n\n        return (\n            <Option\n                key={key}\n                optionKey={key}\n                onClick={onOptionClick}\n                onFocus={onOptionFocus}\n                isActive={isActive}\n                isFocused={isFocused}\n            >\n                { label }\n            </Option>\n        );\n    }\n\n    renderEmpty = () => {\n        const {\n            data,\n            renderEmpty: EmptyComponent,\n        } = this.props;\n\n        if (data.length !== 0) {\n            return null;\n        }\n\n        const className = `\n            empty\n            ${styles.empty}\n        `;\n\n        return (\n            <div className={className}>\n                <EmptyComponent />\n            </div>\n        );\n    }\n\n    render() {\n        const {\n            className: classNameFromProps,\n            show,\n            data,\n            onBlur,\n            onInvalidate,\n            parentContainer,\n        } = this.props;\n\n        if (!show) {\n            return null;\n        }\n\n        const className = `\n            ${classNameFromProps}\n            ${styles.options}\n            options\n        `;\n\n        const Empty = this.renderEmpty;\n\n        return (\n            <FloatingContainer\n                onBlur={onBlur}\n                onInvalidate={onInvalidate}\n                parent={parentContainer}\n                className={className}\n            >\n                <List\n                    data={data}\n                    modifier={this.renderOption}\n                />\n                <Empty />\n            </FloatingContainer>\n        );\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport memoize from 'memoize-one';\nimport {\n    caseInsensitiveSubmatch,\n    compareStringSearch,\n    _cs,\n} from '@togglecorp/fujs';\nimport { FaramInputElement } from '@togglecorp/faram';\n\nimport DangerButton from '../../Action/Button/DangerButton';\nimport handleKeyboard from '../../General/HandleKeyboard';\nimport HintAndError from '../HintAndError';\nimport Label from '../Label';\nimport RawInput from '../RawInput';\n\nimport {\n    calcFloatPositionInMainWindow,\n    defaultOffset,\n    defaultLimit,\n} from '../../../utils/bounds';\n\nimport Options from './Options';\nimport styles from './styles.scss';\n\nconst propTypeKey = PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n]);\n\nconst RawKeyInput = handleKeyboard(RawInput);\nconst emptyList = [];\n\n// NOTE: labelSelector must return string\n// NOTE: optionLabelSelector may return renderable node\nconst propTypes = {\n    autoFocus: PropTypes.bool,\n    disabled: PropTypes.bool,\n    hideClearButton: PropTypes.bool,\n    readOnly: PropTypes.bool,\n    showHintAndError: PropTypes.bool,\n    showLabel: PropTypes.bool,\n\n    className: PropTypes.string,\n    error: PropTypes.string,\n    hint: PropTypes.string,\n    label: PropTypes.string,\n    optionsClassName: PropTypes.string,\n    placeholder: PropTypes.string,\n    title: PropTypes.string,\n\n    options: PropTypes.arrayOf(PropTypes.object),\n    value: propTypeKey,\n    onChange: PropTypes.func.isRequired,\n\n    keySelector: PropTypes.func,\n    labelSelector: PropTypes.func,\n    optionLabelSelector: PropTypes.func,\n\n    renderEmpty: PropTypes.func,\n    maxDisplayOptions: PropTypes.number,\n};\n\nconst defaultProps = {\n    autoFocus: undefined,\n    className: '',\n    disabled: false,\n    error: undefined,\n    hideClearButton: false,\n    hint: undefined,\n    keySelector: d => d.key,\n    label: '',\n    labelSelector: d => d.label,\n    optionLabelSelector: undefined,\n    options: emptyList,\n    optionsClassName: '',\n    placeholder: 'Search for an option',\n    readOnly: false,\n    renderEmpty: undefined,\n    showHintAndError: true,\n    showLabel: true,\n    title: undefined,\n    value: undefined,\n    maxDisplayOptions: 100,\n};\n\nclass SearchSelectInput extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            // FIXME: this may break\n            inputInFocus: props.autoFocus,\n            focusedKey: undefined,\n\n            showOptionsPopup: false,\n            searchValue: undefined,\n        };\n\n        this.containerRef = React.createRef();\n        this.inputRef = React.createRef();\n    }\n\n    componentDidMount() {\n        const { current: container } = this.containerRef;\n        if (container) {\n            this.boundingClientRect = container.getBoundingClientRect();\n        }\n    }\n\n    filterOptions = memoize((\n        options,\n        labelSelector,\n        value,\n        maxDisplayOptions,\n    ) => {\n        if (!value || value.length === 0) {\n            return [];\n        }\n\n        const newOptions = options\n            .filter(\n                option => (\n                    value === undefined || caseInsensitiveSubmatch(labelSelector(option), value)\n                ),\n            )\n            .sort((a, b) => compareStringSearch(\n                labelSelector(a),\n                labelSelector(b),\n                value,\n            ))\n            .slice(0, maxDisplayOptions);\n\n        return newOptions;\n    });\n\n    findDefaultSearchValue = memoize((\n        options,\n        labelSelector,\n        keySelector,\n        value,\n    ) => {\n        const activeOption = options.find(\n            d => keySelector(d) === value,\n        );\n\n        if (activeOption === undefined) {\n            return '';\n        }\n\n        return labelSelector(activeOption);\n    });\n\n    // Helper\n\n    handleShowOptionsPopup = () => {\n        const { current: input } = this.inputRef;\n        if (input) {\n            input.select();\n        }\n\n        /*\n        // NOTE: this may not be required\n        const { current: container } = this.containerRef;\n        if (container) {\n            this.boundingClientRect = container.getBoundingClientRect();\n        }\n        */\n\n        this.setState({\n            // showOptionsPopup: true,\n            searchValue: undefined,\n        });\n    }\n\n    handleHideOptionsPopup = () => {\n        this.setState({\n            showOptionsPopup: false,\n            searchValue: undefined,\n        });\n    }\n\n    // Input\n\n    handleInputFocus = () => {\n        this.setState({ inputInFocus: true });\n    }\n\n    handleInputBlur = () => {\n        this.setState({ inputInFocus: false });\n    }\n\n    handleInputChange = (e) => {\n        const { value } = e.target;\n\n        /*\n        // NOTE: this may not be required\n        const { current: container } = this.containerRef;\n        if (container) {\n            this.boundingClientRect = container.getBoundingClientRect();\n        }\n        */\n\n        this.setState({\n            showOptionsPopup: true,\n            searchValue: value,\n        });\n    }\n\n    // Options\n\n    handleOptionsInvalidate = (optionsContainer) => {\n        const contentRect = optionsContainer.getBoundingClientRect();\n        let parentRect = this.boundingClientRect;\n        const { current: container } = this.containerRef;\n\n        if (container) {\n            parentRect = container.getBoundingClientRect();\n        }\n\n        const { showHintAndError } = this.props;\n\n        const offset = { ...defaultOffset };\n        if (showHintAndError) {\n            offset.top = 12;\n        }\n\n        const limit = {\n            ...defaultLimit,\n            minW: parentRect.width,\n            maxW: parentRect.width,\n        };\n\n        const optionsContainerPosition = (\n            calcFloatPositionInMainWindow({\n                parentRect,\n                contentRect,\n                offset,\n                limit,\n            })\n        );\n\n        return optionsContainerPosition;\n    };\n\n    handleOptionSelect = (optionKey) => {\n        const {\n            value,\n            onChange,\n        } = this.props;\n\n        this.setState({\n            showOptionsPopup: false,\n            searchValue: undefined,\n        });\n\n        if (optionKey !== value) {\n            onChange(optionKey);\n        }\n    }\n\n    handleClearButtonClick = () => {\n        const {\n            onChange,\n            value,\n        } = this.props;\n\n        if (value !== undefined) {\n            onChange(undefined);\n        }\n    }\n\n    handleFocusChange = (focusedKey) => {\n        this.setState({ focusedKey });\n    }\n\n    render() {\n        const {\n            error,\n            hint,\n            keySelector,\n            label,\n            labelSelector,\n            optionLabelSelector,\n            optionsClassName,\n            renderEmpty,\n            showHintAndError,\n            showLabel,\n            title,\n            value,\n            disabled,\n            readOnly,\n            placeholder,\n            autoFocus,\n            hideClearButton,\n            className: classNameFromProps,\n            options,\n            maxDisplayOptions,\n        } = this.props;\n\n        const {\n            showOptionsPopup,\n            focusedKey,\n            inputInFocus,\n            searchValue,\n        } = this.state;\n\n        // NOTE: finalSearchValue shouldn't be undefined\n        const finalSearchValue = searchValue === undefined\n            ? this.findDefaultSearchValue(options, labelSelector, keySelector, value)\n            : searchValue;\n\n        const isFilled = finalSearchValue && finalSearchValue.length !== 0;\n        const showClearButton = isFilled && !(hideClearButton || disabled || readOnly);\n\n        const { current: container } = this.containerRef;\n\n        const filteredOptions = this.filterOptions(\n            options,\n            labelSelector,\n            // NOTE: Using value instead of finalSearchValue\n            // this will display all options at first\n            searchValue,\n            maxDisplayOptions,\n        );\n\n        const className = _cs(\n            classNameFromProps,\n            'select-input',\n            styles.selectInput,\n            showOptionsPopup && styles.showOptions,\n            showOptionsPopup && 'show-options',\n            disabled && styles.disabled,\n            disabled && 'disabled',\n            error && styles.error,\n            error && 'error',\n            inputInFocus && styles.inputInFocus,\n            inputInFocus && 'input-in-focus',\n            hideClearButton && styles.hideClearButton,\n            hideClearButton && 'hide-clear-button',\n            isFilled && styles.filled,\n            isFilled && 'filled',\n        );\n\n        const inputClassName = _cs(\n            styles.inputAndActions,\n            'input-and-actions',\n        );\n\n        const actionsClassName = `\n            actions\n            ${styles.actions}\n        `;\n\n        const clearClassName = `\n            clear-button\n            ${styles.clearButton}\n        `;\n\n        return (\n            <div\n                className={className}\n                ref={this.containerRef}\n                title={title}\n            >\n                { showLabel && (\n                    <Label\n                        text={label}\n                        error={!!error}\n                        disabled={disabled}\n                        active={inputInFocus || showOptionsPopup}\n                    />\n                )}\n                <div className={inputClassName}>\n                    <RawKeyInput\n                        className={styles.input}\n                        type=\"text\"\n                        elementRef={this.inputRef}\n                        onBlur={this.handleInputBlur}\n                        onFocus={this.handleInputFocus}\n                        onClick={this.handleShowOptionsPopup}\n                        onChange={this.handleInputChange}\n                        value={finalSearchValue}\n                        autoFocus={autoFocus}\n                        placeholder={placeholder}\n                        disabled={disabled || readOnly}\n\n                        focusedKey={focusedKey}\n                        options={filteredOptions}\n                        keySelector={keySelector}\n                        isOptionsShown={showOptionsPopup}\n                        onFocusChange={this.handleFocusChange}\n                        onHideOptions={this.handleHideOptionsPopup}\n                        onShowOptions={this.handleShowOptionsPopup}\n                        onOptionSelect={this.handleOptionSelect}\n                    />\n                    <div className={actionsClassName}>\n                        { showClearButton && (\n                            <DangerButton\n                                tabIndex=\"-1\"\n                                iconName=\"close\"\n                                className={clearClassName}\n                                onClick={this.handleClearButtonClick}\n                                transparent\n                            />\n                        )}\n                    </div>\n                </div>\n                { showHintAndError && (\n                    <HintAndError\n                        error={error}\n                        hint={hint}\n                    />\n                )}\n                <Options\n                    className={optionsClassName}\n                    labelSelector={labelSelector}\n                    onBlur={this.handleHideOptionsPopup}\n                    onInvalidate={this.handleOptionsInvalidate}\n                    onOptionClick={this.handleOptionSelect}\n                    optionLabelSelector={optionLabelSelector}\n                    parentContainer={container}\n                    renderEmpty={renderEmpty}\n                    value={value}\n\n                    show={showOptionsPopup}\n                    keySelector={keySelector}\n                    data={filteredOptions}\n                    onOptionFocus={this.handleFocusChange}\n                    focusedKey={focusedKey}\n                />\n            </div>\n        );\n    }\n}\n\nexport default FaramInputElement(SearchSelectInput);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { randomString, isFalsy } from '@togglecorp/fujs';\n\nimport styles from './styles.scss';\n\nconst propTypes = {\n    id: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]).isRequired,\n    onChange: PropTypes.func.isRequired,\n    checked: PropTypes.bool.isRequired,\n    label: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    error: PropTypes.string,\n    disabled: PropTypes.bool,\n    readOnly: PropTypes.bool,\n};\n\nconst defaultProps = {\n    error: '',\n    disabled: false,\n    readOnly: false,\n};\n\nexport default class SegmentOption extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n\n        this.inputId = randomString();\n    }\n\n    getClassName = () => {\n        const {\n            disabled,\n            error,\n            readOnly,\n            checked,\n        } = this.props;\n\n        const classNames = [\n            'segment-option',\n            styles.segmentOption,\n        ];\n\n        if (checked) {\n            classNames.push('checked');\n            classNames.push(styles.checked);\n        }\n        if (readOnly) {\n            classNames.push('read-only');\n            classNames.push(styles.readOnly);\n        }\n        if (disabled) {\n            classNames.push('disabled');\n            classNames.push(styles.disabled);\n        }\n        if (!isFalsy(error, [''])) {\n            classNames.push('error');\n            classNames.push(styles.error);\n        }\n        return classNames.join(' ');\n    }\n\n    render() {\n        const {\n            id,\n            onChange,\n            checked,\n            label,\n            name,\n        } = this.props;\n\n        const classNames = this.getClassName();\n\n        return (\n            <label\n                htmlFor={this.inputId}\n                className={classNames}\n            >\n                <input\n                    className={`${styles.segmentButtonInput} segment-option-input`}\n                    type=\"radio\"\n                    onChange={onChange}\n                    checked={checked}\n                    id={this.inputId}\n                    value={id}\n                    name={name}\n                />\n                {label}\n            </label>\n        );\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { isFalsy } from '@togglecorp/fujs';\nimport { FaramInputElement } from '@togglecorp/faram';\n\nimport ListView from '../../View/List/ListView';\nimport HintAndError from '../HintAndError';\nimport Label from '../Label';\n\nimport Option from './Option';\nimport styles from './styles.scss';\n\nconst propTypes = {\n    /**\n     * required for style override\n     */\n    className: PropTypes.string,\n\n    /**\n     * Is input disabled?\n     */\n    disabled: PropTypes.bool,\n\n    /**\n     * String to show in case of error\n     */\n    error: PropTypes.string,\n\n    /**\n     * Hint text\n     */\n    hint: PropTypes.string,\n\n    /**\n     * Input label\n     */\n    label: PropTypes.string,\n\n    /**\n     * A callback for when the input changes its content\n     */\n    onChange: PropTypes.func,\n    required: PropTypes.bool,\n\n    showLabel: PropTypes.bool,\n\n    showHintAndError: PropTypes.bool,\n\n    options: PropTypes.arrayOf(PropTypes.object),\n\n    labelSelector: PropTypes.func,\n    keySelector: PropTypes.func,\n    readOnly: PropTypes.bool,\n\n    value: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n        PropTypes.bool,\n    ]),\n\n    name: PropTypes.string,\n};\n\nconst defaultProps = {\n    className: '',\n    disabled: false,\n    readOnly: false,\n    error: '',\n    hint: '',\n    label: '',\n    onChange: undefined,\n    required: false,\n    showLabel: true,\n    keySelector: d => d.key,\n    labelSelector: d => d.label,\n    showHintAndError: true,\n    value: '',\n    name: '',\n    options: [],\n};\n\nclass SegmentInput extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    getClassName = () => {\n        const {\n            className,\n            disabled,\n            error,\n            required,\n        } = this.props;\n\n        const classNames = [\n            className,\n            'segment-input',\n            styles.segmentInput,\n        ];\n\n        if (disabled) {\n            classNames.push('disabled');\n            classNames.push(styles.disabled);\n        }\n        if (!isFalsy(error, [''])) {\n            classNames.push('error');\n            classNames.push(styles.error);\n        }\n        if (required) {\n            classNames.push('required');\n            classNames.push(styles.required);\n        }\n        return classNames.join(' ');\n    }\n\n    handleInputChange = (changeEvent) => {\n        const {\n            onChange,\n            disabled,\n            options,\n            keySelector,\n            readOnly,\n        } = this.props;\n        const { value } = changeEvent.target;\n\n        const finalValue = options\n            .map(val => keySelector(val))\n            .find(val => String(val) === value);\n\n        if (onChange && !disabled && !readOnly) {\n            onChange(finalValue);\n        }\n    }\n\n    rendererParams = (key, data) => ({\n        label: this.props.labelSelector(data),\n        id: String(this.props.keySelector(data)),\n        onChange: this.handleInputChange,\n        name: this.props.name,\n        checked: String(this.props.value) === String(key),\n        error: this.props.error,\n        readOnly: this.props.readOnly,\n        disabled: this.props.disabled,\n    });\n\n    render() {\n        const {\n            error,\n            hint,\n            label,\n            showLabel,\n            showHintAndError,\n            options,\n            keySelector,\n            disabled,\n        } = this.props;\n\n        const classNames = this.getClassName();\n\n        return (\n            <div className={classNames}>\n                <Label\n                    className={styles.label}\n                    show={showLabel}\n                    text={label}\n                    disabled={disabled}\n                    error={!!error}\n                />\n                <ListView\n                    className={styles.segmentContainer}\n                    data={options}\n                    renderer={Option}\n                    rendererParams={this.rendererParams}\n                    keySelector={keySelector}\n                />\n                <HintAndError\n                    show={showHintAndError}\n                    hint={hint}\n                    error={error}\n                />\n            </div>\n        );\n    }\n}\n\nexport default FaramInputElement(SegmentInput);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './styles.scss';\n\nconst propTypes = {\n    className: PropTypes.string,\n    value: PropTypes.string.isRequired,\n    marker: PropTypes.string,\n};\n\nconst defaultProps = {\n    className: '',\n    marker: '•',\n};\n\nexport default class ListItem extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    render() {\n        const {\n            value,\n            marker,\n            className: classNameFromProps,\n        } = this.props;\n\n        const className = `\n            ${classNameFromProps}\n            ${styles.listItem}\n        `;\n\n        return (\n            <div className={className}>\n                <div className={styles.marker}>\n                    { marker }\n                </div>\n                <div className={styles.label}>\n                    { value }\n                </div>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '../../View/ListItem';\nimport DangerButton from '../Button/DangerButton';\n\nimport styles from './styles.scss';\n\nconst propTypes = {\n    className: PropTypes.string,\n    onDismiss: PropTypes.func.isRequired,\n    itemKey: PropTypes.string,\n    disabled: PropTypes.bool,\n};\n\nconst defaultProps = {\n    className: '',\n    itemKey: undefined,\n    disabled: false,\n};\n\nexport default class DismissableListItem extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    handleDismissButtonClick = () => {\n        const {\n            onDismiss,\n            itemKey,\n        } = this.props;\n\n        onDismiss(itemKey);\n    }\n\n    render() {\n        const {\n            className: classNameFromProps,\n            onDismiss, // eslint-disable-line no-unused-vars, @typescript-eslint/no-unused-vars\n            disabled,\n\n            ...otherProps\n        } = this.props;\n\n        const className = `\n            ${classNameFromProps}\n            ${styles.dismissableListItem}\n        `;\n\n        return (\n            <div className={className}>\n                <ListItem\n                    className={styles.listItem}\n                    {...otherProps}\n                />\n                <DangerButton\n                    disabled={disabled}\n                    className={styles.dismissButton}\n                    onClick={this.handleDismissButtonClick}\n                    transparent\n                    iconName=\"close\"\n                    smallVerticalPadding\n                    smallHorizontalPadding\n                />\n            </div>\n        );\n    }\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { isFalsy } from '@togglecorp/fujs';\nimport { FaramInputElement } from '@togglecorp/faram';\n\nimport MultiSelectInput from '../MultiSelectInput';\nimport SearchMultiSelectInput from '../SearchMultiSelectInput';\nimport DismissableListItem from '../../Action/DismissableListItem';\nimport ListItem from '../../View/ListItem';\nimport ListView from '../../View/List/ListView';\n\nimport styles from './styles.scss';\n\nconst propTypes = {\n    keySelector: PropTypes.func,\n    labelSelector: PropTypes.func,\n    disabled: PropTypes.bool,\n    readOnly: PropTypes.bool,\n    onChange: PropTypes.func,\n\n    label: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n\n    value: PropTypes.arrayOf(PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ])),\n\n    hideRemoveFromListButton: PropTypes.bool,\n\n    className: PropTypes.string,\n    listClassName: PropTypes.string,\n    selectClassName: PropTypes.string,\n\n    // eslint-disable-next-line react/forbid-prop-types\n    listProps: PropTypes.object,\n\n    options: PropTypes.arrayOf(\n        PropTypes.shape({\n            key: PropTypes.oneOfType([\n                PropTypes.string,\n                PropTypes.number,\n            ]),\n            label: PropTypes.string,\n        }),\n    ),\n    topRightChild: PropTypes.func,\n\n    emptyComponent: PropTypes.func,\n    maxDisplayOptions: PropTypes.number,\n};\n\nconst defaultProps = {\n    className: '',\n    listClassName: '',\n    selectClassName: '',\n    listProps: {},\n    keySelector: (d = {}) => d.key,\n    labelSelector: (d = {}) => d.label,\n    onChange: undefined,\n    options: [],\n    value: [],\n    label: '',\n    hideRemoveFromListButton: false,\n    topRightChild: undefined,\n    disabled: false,\n    readOnly: false,\n    emptyComponent: undefined,\n    maxDisplayOptions: undefined,\n};\n\nconst emptyList = [];\n\nclass SelectInputWithList extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n        const {\n            options,\n            value,\n        } = this.props;\n\n        const objectValues = this.getObjectFromValue(options, value);\n\n        this.state = { objectValues };\n    }\n\n    componentWillReceiveProps(newProps) {\n        const {\n            value: newValue,\n            options,\n        } = newProps;\n\n        const { value: oldValue } = this.props;\n\n        if (newValue !== oldValue) {\n            const objectValues = this.getObjectFromValue(options, newValue);\n            this.setState({ objectValues });\n        }\n    }\n\n    getObjectFromValue = (options = emptyList, value) => {\n        const { keySelector } = this.props;\n        return options.filter(d => (\n            value.indexOf(keySelector(d)) !== -1\n        ));\n    }\n\n    getClassName = () => {\n        const {\n            className,\n            disabled,\n        } = this.props;\n        const { error } = this.state;\n\n        const classNames = [\n            className,\n            styles.selectInputWithList,\n            'select-input-with-list',\n        ];\n\n        if (!isFalsy(error, [''])) {\n            classNames.push(styles.error);\n            classNames.push('error');\n        }\n\n        if (disabled) {\n            classNames.push(styles.disabled);\n        }\n\n        return classNames.join(' ');\n    }\n\n    getListItemParams = (key, datum) => {\n        const {\n            labelSelector,\n        } = this.props;\n\n        return {\n            value: labelSelector(datum),\n            itemKey: key,\n            onDismiss: this.handleItemDismiss,\n            className: styles.listItem,\n        };\n    }\n\n    handleItemDismiss = (key) => {\n        const {\n            onChange,\n            value,\n        } = this.props;\n\n        const index = value.indexOf(key);\n        const newValue = [...value];\n\n        if (index !== -1) {\n            newValue.splice(index, 1);\n        }\n        if (onChange) {\n            onChange(newValue);\n        }\n    }\n\n    handleSelectInputChange = (values) => {\n        const {\n            onChange,\n            options,\n        } = this.props;\n\n        const objectValues = this.getObjectFromValue(options, values);\n        this.setState({ objectValues });\n\n        if (onChange) {\n            onChange(values);\n        }\n    }\n\n    render() {\n        const {\n            className, // eslint-disable-line no-unused-vars, @typescript-eslint/no-unused-vars\n            disabled,\n            keySelector,\n            label,\n            labelSelector,\n            onChange, // eslint-disable-line no-unused-vars, @typescript-eslint/no-unused-vars\n            readOnly,\n            options,\n            value,\n            selectClassName,\n            listProps,\n            emptyComponent,\n            listClassName,\n            topRightChild: TopRightChild,\n            hideRemoveFromListButton,\n            maxDisplayOptions,\n\n            ...otherProps\n        } = this.props;\n\n        const { objectValues } = this.state;\n\n        const listClassNames = [\n            listClassName,\n            styles.list,\n            'list',\n        ];\n\n        const selectClassNames = [\n            selectClassName,\n            styles.input,\n            'select',\n        ];\n\n        if (TopRightChild) {\n            selectClassNames.push(styles.hasTopRightChild);\n        }\n\n        const Item = (\n            hideRemoveFromListButton\n            || readOnly\n            || disabled\n        ) ? ListItem : DismissableListItem;\n\n        return (\n            <div className={this.getClassName()}>\n                <div className={styles.headerContainer}>\n                    { maxDisplayOptions === undefined ? (\n                        <MultiSelectInput\n                            className={selectClassNames.join(' ')}\n                            disabled={disabled}\n                            readOnly={readOnly}\n                            keySelector={keySelector}\n                            label={label}\n                            labelSelector={labelSelector}\n                            onChange={this.handleSelectInputChange}\n                            options={options}\n                            value={value}\n                            {...otherProps}\n                        />\n                    ) : (\n                        <SearchMultiSelectInput\n                            className={selectClassNames.join(' ')}\n                            disabled={disabled}\n                            readOnly={readOnly}\n                            keySelector={keySelector}\n                            label={label}\n                            labelSelector={labelSelector}\n                            onChange={this.handleSelectInputChange}\n                            options={options}\n                            value={value}\n                            maxDisplayOptions={maxDisplayOptions}\n                            {...otherProps}\n                        />\n                    )}\n                    {TopRightChild && <TopRightChild />}\n                </div>\n                <ListView\n                    className={listClassNames.join(' ')}\n                    data={objectValues}\n                    renderer={Item}\n                    rendererParams={this.getListItemParams}\n                    keySelector={keySelector}\n                    emptyComponent={emptyComponent}\n                    {...listProps}\n                />\n            </div>\n        );\n    }\n}\n\nexport default FaramInputElement(SelectInputWithList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Icon from '../../../General/Icon';\n\nimport styles from './styles.scss';\n\nconst ActionButtons = ({\n    disabled,\n    readOnly,\n    onClearButtonClick,\n    onTodayButtonClick,\n    // onCalendarButtonClick,\n    className,\n}) => {\n    const classNames = [\n        className,\n        'action-buttons',\n    ];\n\n    const clearButtonClassName = [\n        'button',\n        styles.button,\n        'clear',\n        styles.clear,\n    ].join(' ');\n\n    return (\n        <div className={classNames.join(' ')}>\n            <button\n                className={clearButtonClassName}\n                type=\"button\"\n                onClick={onClearButtonClick}\n                title=\"Clear time\"\n                tabIndex=\"-1\"\n                disabled={disabled || readOnly}\n            >\n                <Icon name=\"closeRound\" />\n            </button>\n            <button\n                onClick={onTodayButtonClick}\n                className={styles.button}\n                type=\"button\"\n                title=\"Set time to now\"\n                tabIndex=\"-1\"\n                disabled={disabled || readOnly}\n            >\n                <Icon name=\"clock\" />\n            </button>\n            {/*\n            <button\n                onClick={onCalendarButtonClick}\n                className={styles.button}\n                type=\"button\"\n                title=\"Open date picker\"\n                tabIndex=\"-1\"\n                disabled={disabled}\n            >\n                <Icon name=\"calendar\" />\n            </button>\n            */}\n        </div>\n    );\n};\n\nActionButtons.propTypes = {\n    onClearButtonClick: PropTypes.func.isRequired,\n    onTodayButtonClick: PropTypes.func.isRequired,\n    // onCalendarButtonClick: PropTypes.func.isRequired,\n    disabled: PropTypes.bool,\n    readOnly: PropTypes.bool,\n    className: PropTypes.string,\n};\n\nActionButtons.defaultProps = {\n    disabled: false,\n    readOnly: false,\n    className: '',\n};\n\nexport default ActionButtons;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { padStart, isFalsy } from '@togglecorp/fujs';\nimport { FaramInputElement } from '@togglecorp/faram';\n\nimport Delay from '../../General/Delay';\n\nimport HintAndError from '../HintAndError';\nimport Label from '../Label';\nimport DigitalInput from '../DigitalInput';\n\nimport ActionButtons from './ActionButtons';\nimport styles from './styles.scss';\n\nconst propTypes = {\n    className: PropTypes.string,\n    disabled: PropTypes.bool,\n    readOnly: PropTypes.bool,\n    error: PropTypes.string,\n    hint: PropTypes.string,\n    label: PropTypes.string,\n    onChange: PropTypes.func,\n    showLabel: PropTypes.bool,\n    showHintAndError: PropTypes.bool,\n    value: PropTypes.string,\n    title: PropTypes.string,\n    separator: PropTypes.string,\n};\n\nconst defaultProps = {\n    className: '',\n    disabled: false,\n    readOnly: false,\n    error: '',\n    hint: '',\n    label: '',\n    onChange: () => {},\n    showLabel: true,\n    separator: ':',\n    showHintAndError: true,\n    value: undefined,\n    title: undefined,\n};\n\nconst MIN_HOUR = 0;\nconst MAX_HOUR = 23;\nconst MIN_MINUTE = 0;\nconst MAX_MINUTE = 59;\nconst STEP = 1;\n\n// h, m is string\nconst encodeTime = ({ h = '', m = '' }, separator) => {\n    if (isFalsy(h, [0, '']) && isFalsy(m, [0, ''])) {\n        return undefined;\n    }\n    // NOTE: added default value '00' for second\n    return `${h}${separator}${m}${separator}00`;\n};\n\n// value is string\nconst decodeTime = (value, separator) => {\n    if (!value) {\n        return {};\n    }\n    const values = value.split(separator);\n    return {\n        h: values[0],\n        m: values[1],\n    };\n};\n\n// value is string\nconst isValidTimeString = (value, separator) => {\n    if (value === '' || value === undefined) {\n        return true;\n    }\n    const { h, m } = decodeTime(value, separator);\n\n    if (isFalsy(h, ['']) || isFalsy(m, [''])) {\n        return false;\n    }\n    return !(\n        (+h < MIN_HOUR || +h > MAX_HOUR)\n        || (+m < MIN_MINUTE || +m > MAX_MINUTE)\n    );\n};\n\nclass TimeInput extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            hourInputFocused: false,\n            minuteInputFocused: false,\n        };\n    }\n\n    getClassName = () => {\n        const {\n            disabled,\n            readOnly,\n            className,\n            value,\n            error,\n            separator,\n        } = this.props;\n\n        const {\n            hourInputFocused,\n            minuteInputFocused,\n        } = this.state;\n\n        const classNames = [\n            className,\n            'time-input',\n            styles.timeInput,\n        ];\n\n        if (hourInputFocused || minuteInputFocused) {\n            classNames.push(styles.focused);\n            classNames.push('input-focused');\n        }\n\n        if (disabled) {\n            classNames.push(styles.disabled);\n            classNames.push('disabled');\n        }\n\n        if (readOnly) {\n            classNames.push(styles.readOnly);\n            classNames.push('read-only');\n        }\n\n        const isInvalid = !isValidTimeString(value, separator);\n        if (isInvalid) {\n            classNames.push(styles.invalid);\n            classNames.push('invalid');\n        }\n\n        if (!isFalsy(error, [''])) {\n            classNames.push(styles.error);\n            classNames.push('error');\n        }\n\n        return classNames.join(' ');\n    }\n\n    handleHourInputFocus = () => {\n        this.setState({ hourInputFocused: true });\n    }\n\n    handleHourInputBlur = () => {\n        this.setState({ hourInputFocused: false });\n    }\n\n    handleMinuteInputFocus = () => {\n        this.setState({ minuteInputFocused: true });\n    }\n\n    handleMinuteInputBlur = () => {\n        this.setState({ minuteInputFocused: false });\n    }\n\n    handleHourInputChange = (h) => {\n        this.handleChange({ h });\n    }\n\n    handleMinuteInputChange = (m) => {\n        this.handleChange({ m });\n    }\n\n    handleClearButtonClick = () => {\n        this.handleChange({\n            h: undefined,\n            m: undefined,\n        });\n    }\n\n    handleTodayButtonClick = () => {\n        const date = new Date();\n        this.handleChange({\n            h: padStart(String(date.getHours()), 2).slice(-2),\n            m: padStart(String(date.getMinutes()), 2).slice(-2),\n        });\n    }\n\n    handleChange = (valueToOverride) => {\n        const {\n            onChange,\n            value: valueFromProps,\n            separator,\n        } = this.props;\n\n        const oldValue = decodeTime(valueFromProps, separator);\n\n        const { h, m } = {\n            ...oldValue,\n            ...valueToOverride,\n        };\n\n        const newValue = encodeTime({ h, m }, separator);\n\n        if (newValue !== valueFromProps) {\n            onChange(newValue);\n        }\n    }\n\n    render() {\n        const {\n            error,\n            hint,\n            label,\n            showLabel,\n            showHintAndError,\n            title,\n            disabled,\n            value,\n            separator,\n            readOnly,\n        } = this.props;\n\n        const className = this.getClassName();\n        const hourPlaceholder = 'hh';\n        const minutePlaceholder = 'mm';\n\n        const {\n            h: hourValue = '',\n            m: minuteValue = '',\n        } = decodeTime(value, separator);\n\n        return (\n            <div\n                title={title}\n                className={className}\n            >\n                <Label\n                    className={styles.label}\n                    show={showLabel}\n                    text={label}\n                />\n                <div className={styles.input}>\n                    <div className={styles.units}>\n                        <DigitalInput\n                            padLength={2}\n                            onFocus={this.handleHourInputFocus}\n                            onBlur={this.handleHourInputBlur}\n                            className={styles.unit}\n                            min={MIN_HOUR}\n                            max={MAX_HOUR}\n                            step={STEP}\n                            placeholder={hourPlaceholder}\n                            disabled={disabled || readOnly}\n                            value={hourValue}\n                            onChange={this.handleHourInputChange}\n                        />\n                        <div className={styles.separator}>\n                            {separator}\n                        </div>\n                        <DigitalInput\n                            padLength={2}\n                            onFocus={this.handleMinuteInputFocus}\n                            onBlur={this.handleMinuteInputBlur}\n                            className={styles.unit}\n                            min={MIN_MINUTE}\n                            max={MAX_MINUTE}\n                            step={STEP}\n                            placeholder={minutePlaceholder}\n                            disabled={disabled || readOnly}\n                            value={minuteValue}\n                            onChange={this.handleMinuteInputChange}\n                        />\n                    </div>\n                    <ActionButtons\n                        className={styles.actionButtons}\n                        disabled={disabled}\n                        readOnly={readOnly}\n                        onClearButtonClick={this.handleClearButtonClick}\n                        onTodayButtonClick={this.handleTodayButtonClick}\n                    />\n                </div>\n                <HintAndError\n                    show={showHintAndError}\n                    hint={hint}\n                    error={error}\n                />\n            </div>\n        );\n    }\n}\n\nexport default FaramInputElement(Delay(TimeInput));\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport memoize from 'memoize-one';\nimport { requiredCondition, FaramInputElement } from '@togglecorp/faram';\n\nimport ApplyModal from '../../View/ApplyModal';\n\nimport SelectInput from '../SelectInput';\nimport TimeInput from '../TimeInput';\n\nimport styles from './styles.scss';\n\nconst noOp = () => {};\n\nconst propTypes = {\n    className: PropTypes.string,\n    value: PropTypes.shape({\n        startTime: PropTypes.string,\n        endTime: PropTypes.string,\n    }),\n    onChange: PropTypes.func,\n};\n\nconst defaultProps = {\n    className: '',\n    value: {},\n    onChange: noOp,\n};\n\nclass TimeFilter extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    static defaultOptions = [\n        { key: 'customExact', label: 'Select an exact time' },\n        { key: 'customRange', label: 'Select a time range' },\n    ];\n\n    static exactModalSchema = {\n        fields: {\n            time: [requiredCondition],\n        },\n    };\n\n    // FIXME: add startDate smaller than endDate condition\n    static rangeModalSchema = {\n        fields: {\n            startTime: [requiredCondition],\n            endTime: [requiredCondition],\n        },\n    };\n\n    static calculateOptionsAndValue = memoize((value) => {\n        const options = TimeFilter.defaultOptions;\n        const { startTime, endTime } = value;\n\n        if (!startTime || !endTime) {\n            return { options, value: undefined };\n        }\n\n        if (startTime === endTime) {\n            return {\n                options: [\n                    ...options,\n                    { key: 'selectedExact', label: startTime },\n                ],\n                value: 'selectedExact',\n            };\n        }\n\n        return {\n            options: [\n                ...options,\n                { key: 'selectedRange', label: `${startTime} - ${endTime}` },\n            ],\n            value: 'selectedRange',\n        };\n    });\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showRangeModal: false,\n            showExactModal: false,\n        };\n    }\n\n    getClassName = () => {\n        const { className } = this.props;\n        const classNames = [\n            className,\n            'time-filter',\n        ];\n\n        return classNames.join(' ');\n    }\n\n    handleSelectInputChange = (value) => {\n        switch (value) {\n            case 'customExact':\n                this.setState({\n                    showExactModal: true,\n                });\n                break;\n            case 'customRange':\n                this.setState({\n                    showRangeModal: true,\n                });\n                break;\n            case undefined:\n                this.props.onChange(undefined);\n                break;\n            default:\n        }\n    }\n\n    closeRangeModal = () => {\n        this.setState({\n            showRangeModal: false,\n        });\n    }\n\n    applyRangeTime = ({ startTime, endTime }) => {\n        this.setState({\n            showRangeModal: false,\n        }, () => {\n            this.props.onChange({\n                startTime,\n                endTime,\n            });\n        });\n    }\n\n    closeExactModal = () => {\n        this.setState({\n            showExactModal: false,\n        });\n    }\n\n    applyExactTime = ({ time }) => {\n        this.setState({\n            showExactModal: false,\n        }, () => {\n            this.props.onChange({\n                startTime: time,\n                endTime: time,\n            });\n        });\n    }\n\n    renderExactModal = () => {\n        const { showExactModal } = this.state;\n\n        if (!showExactModal) {\n            return null;\n        }\n\n        return (\n            <ApplyModal\n                className={styles.timeFilterModal}\n                onClose={this.closeExactModal}\n                onApply={this.applyExactTime}\n                title=\"Select a time\"\n                schema={TimeFilter.exactModalSchema}\n            >\n                <TimeInput faramElementName=\"time\" />\n            </ApplyModal>\n        );\n    }\n\n    renderRangeModal = () => {\n        const { showRangeModal } = this.state;\n\n        if (!showRangeModal) {\n            return null;\n        }\n\n        return (\n            <ApplyModal\n                className={styles.timeFilterModal}\n                onClose={this.closeRangeModal}\n                onApply={this.applyRangeTime}\n                title=\"Select a time range\"\n                schema={TimeFilter.rangeModalSchema}\n            >\n                <TimeInput faramElementName=\"startTime\" />\n                <TimeInput faramElementName=\"endTime\" />\n            </ApplyModal>\n        );\n    }\n\n    render() {\n        const {\n            value,\n            onChange, // eslint-disable-line no-unused-vars, @typescript-eslint/no-unused-vars\n            ...otherProps\n        } = this.props;\n\n        const className = this.getClassName();\n\n        const {\n            options: selectInputOptions,\n            value: selectInputValue,\n        } = TimeFilter.calculateOptionsAndValue(value);\n\n        const CustomExactModal = this.renderExactModal;\n        const CustomRangeModal = this.renderRangeModal;\n\n        return (\n            <React.Fragment>\n                <SelectInput\n                    className={className}\n                    onChange={this.handleSelectInputChange}\n                    options={selectInputOptions}\n                    value={selectInputValue}\n                    {...otherProps}\n                />\n                <CustomExactModal />\n                <CustomRangeModal />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default FaramInputElement(TimeFilter);\n","import React from 'react';\n\nimport Checkbox from '#rsci/Checkbox';\nimport ColorInput from '#rsci/ColorInput';\nimport DateFilter from '#rsci/DateFilter';\nimport DateInput from '#rsci/DateInput';\nimport DatePicker from '#rsci/DatePicker';\nimport FormattedTextArea from '#rsci/FormattedTextArea';\nimport ListSelection from '#rsci/ListSelection';\nimport MultiSelectInput from '#rsci/MultiSelectInput';\nimport NumberInput from '#rsci/NumberInput';\nimport RadioInput from '#rsci/RadioInput';\nimport RangeFilter from '#rsci/RangeFilter';\nimport RawFileInput from '#rsci/RawFileInput';\nimport ScaleInput from '#rsci/ScaleInput';\nimport SearchInput from '#rsci/SearchInput';\nimport SearchMultiSelectInput from '#rsci/SearchMultiSelectInput';\nimport SearchSelectInput from '#rsci/SearchSelectInput';\nimport SegmentInput from '#rsci/SegmentInput';\nimport SelectInput from '#rsci/SelectInput';\nimport SelectInputWithList from '#rsci/SelectInputWithList';\nimport TextArea from '#rsci/TextArea';\nimport TextInput from '#rsci/TextInput';\nimport TimeFilter from '#rsci/TimeFilter';\nimport TimeInput from '#rsci/TimeInput';\n\nexport interface InputElement {\n    key: string;\n    title: React.ReactNode;\n    description: React.ReactNode;\n    component: React.ElementType;\n    usage?: React.ReactNode;\n    props: {\n        faramElementName: string;\n        [key: string]: unknown;\n    };\n    groupKey: string;\n}\n\ninterface Option {\n    key: string;\n    label: string;\n    color?: string;\n}\n\nconst options: Option[] = [\n    { key: '1', label: 'Option 1', color: '#ef9a9a' },\n    { key: '2', label: 'Option 2', color: '#ef5350' },\n    { key: '3', label: 'Option 3', color: '#e53935' },\n    { key: '4', label: 'Option 4', color: '#c62828' },\n    { key: '5', label: 'Option 5', color: '#7f0000' },\n];\n\nconst fruits: Option[] = [\n    { key: '1', label: 'Apricot' },\n    { key: '2', label: 'Apple' },\n    { key: '3', label: 'Mango' },\n    { key: '4', label: 'Banana' },\n    { key: '5', label: 'Pineapple' },\n    { key: '6', label: 'Orange' },\n    { key: '7', label: 'Coconut' },\n    { key: '8', label: 'Lime' },\n    { key: '9', label: 'Papaya' },\n    { key: '10', label: 'Grape' },\n    { key: '11', label: 'Watermelon' },\n    { key: '12', label: 'Plum' },\n    { key: '13', label: 'Pear' },\n    { key: '14', label: 'Peach' },\n    { key: '15', label: 'Lemon' },\n    { key: '16', label: 'Avocado' },\n];\n\nconst vegetables: Option[] = [\n    { key: '1', label: 'Asparagus' },\n    { key: '2', label: 'Black Beans' },\n    { key: '3', label: 'Chick Peas' },\n    { key: '4', label: 'Kidney Beans' },\n    { key: '5', label: 'Broccoli' },\n    { key: '6', label: 'Cabbage' },\n    { key: '7', label: 'Cauliflower' },\n    { key: '8', label: 'Spinach' },\n    { key: '9', label: 'Lettuce' },\n    { key: '10', label: 'Mushroom' },\n    { key: '11', label: 'Nettle' },\n    { key: '12', label: 'Okra' },\n    { key: '13', label: 'Carrot' },\n    { key: '14', label: 'Radish' },\n    { key: '15', label: 'Turnip' },\n    { key: '16', label: 'Cucumber' },\n    { key: '17', label: 'Squash' },\n    { key: '18', label: 'Pumpkin' },\n    { key: '19', label: 'Gourd' },\n    { key: '20', label: 'Tomato' },\n    { key: '21', label: 'Potato' },\n];\n\nconst inputList: InputElement[] = [\n    // Text inputs\n    {\n        key: 'textInput',\n        title: 'Text Input',\n        description: 'Used to enter short length text',\n        component: TextInput,\n        props: {\n            label: 'Name',\n            faramElementName: 'textInput',\n        },\n        groupKey: 'Common',\n    },\n    {\n        key: 'searchInput',\n        title: 'Search Input',\n        description: 'Similar to Text Input but used for search.',\n        component: SearchInput,\n        props: {\n            label: 'Search User',\n            faramElementName: 'searchInput',\n            showHintAndError: false,\n        },\n        groupKey: 'Common',\n    },\n    {\n        key: 'textArea',\n        title: 'Text Area',\n        description: 'Used to enter long length text',\n        component: TextArea,\n        props: {\n            label: 'Remarks',\n            faramElementName: 'textArea',\n            rows: 7,\n        },\n        groupKey: 'Common',\n    },\n    {\n        key: 'formattedTextArea',\n        title: 'Formatted Text Area',\n        description: 'Similar to Text Area but with an additional format button',\n        component: FormattedTextArea,\n        props: {\n            label: 'Remarks',\n            faramElementName: 'formattedTextArea',\n            rows: 7,\n        },\n        groupKey: 'Common',\n    },\n    {\n        key: 'numberInput',\n        title: 'Number Input',\n        description: 'Useful to enter number',\n        component: NumberInput,\n        props: {\n            label: 'Age',\n            faramElementName: 'numberInput',\n        },\n        groupKey: 'Common',\n    },\n    {\n        key: 'checkbox',\n        title: 'Checkbox',\n        description: 'Used to select/deselect an item',\n        component: Checkbox,\n        props: {\n            label: 'I agree with the terms and condition.',\n            faramElementName: 'checkbox',\n        },\n        groupKey: 'Common',\n    },\n    {\n        key: 'colorInput',\n        title: 'Color Input',\n        description: 'Used to select a color with a helper popup with different color modes.',\n        component: ColorInput,\n        props: {\n            label: 'Color',\n            faramElementName: 'colorInput',\n        },\n        groupKey: 'Common',\n    },\n\n    // Date inputs\n    {\n        key: 'dateInput',\n        title: 'Date Input',\n        description: 'Used to select a date from either manual entry or through a popup.',\n        component: DateInput,\n        props: {\n            label: 'Published Date',\n            faramElementName: 'dateInput',\n        },\n        groupKey: 'Date',\n    },\n    {\n        key: 'dateFilter',\n        title: 'Date Filter',\n        description: 'Used to select a range of date along with some predefined ranges.',\n        component: DateFilter,\n        props: {\n            label: 'Date Range',\n            faramElementName: 'dateFilter',\n        },\n        groupKey: 'Date',\n    },\n    {\n        key: 'datePicker',\n        title: 'Date Picker',\n        description: 'Used to select date from calendar',\n        component: DatePicker,\n        props: {\n            label: 'Birthday',\n            faramElementName: 'datePicker',\n        },\n        groupKey: 'Date',\n    },\n\n    // Time inputs\n    {\n        key: 'timeInput',\n        title: 'Time Input',\n        description: 'Used to select time',\n        component: TimeInput,\n        props: {\n            label: 'Check-in time',\n            faramElementName: 'timeInput',\n        },\n        groupKey: 'Time',\n    },\n    {\n        key: 'timeFilter',\n        title: 'Time Filter',\n        description: 'Used to select exact time or a range of time',\n        component: TimeFilter,\n        props: {\n            label: 'Tea break',\n            faramElementName: 'timeFilter',\n        },\n        groupKey: 'Time',\n    },\n\n\n    // Single select\n    {\n        key: 'scaleInput',\n        title: 'Scale Input',\n        description: 'Used to select items depicted in color scale',\n        component: ScaleInput,\n        props: {\n            label: 'Severity',\n            faramElementName: 'scaleInput',\n            options,\n        },\n        groupKey: 'Selection',\n    },\n    {\n        key: 'radioInput',\n        title: 'Radio Input',\n        description: 'Used to select one and only one item from a set.',\n        component: RadioInput,\n        props: {\n            faramElementName: 'radioInput',\n            name: 'Fruit', // unique name\n            // label: 'Fruit',\n            options: fruits.slice(0, 5),\n        },\n        groupKey: 'Selection',\n    },\n    {\n        key: 'segmentInput',\n        title: 'Segment Input',\n        description: 'Similar to Radio Input but only visually different',\n        component: SegmentInput,\n        props: {\n            label: 'Fruit',\n            faramElementName: 'segmentInput',\n            options: fruits.slice(0, 5),\n        },\n        groupKey: 'Selection',\n    },\n    {\n        key: 'selectInput',\n        title: 'Select Input',\n        description: 'Used to select an item from list of items',\n        component: SelectInput,\n        props: {\n            label: 'Fruit',\n            faramElementName: 'selectInput',\n            options: fruits,\n        },\n        groupKey: 'Selection',\n    },\n    {\n        key: 'searchSelectInput',\n        title: 'Search Select Input',\n        description: 'Similar to Select Input but list is only populated after search',\n        component: SearchSelectInput,\n        props: {\n            label: 'Fruit',\n            faramElementName: 'searchSelectInput',\n            options: fruits,\n        },\n        groupKey: 'Selection',\n    },\n\n    // Multi select\n    {\n        key: 'listSelection',\n        title: 'List Selection',\n        description: 'Used to select one or more items from a set.',\n        component: ListSelection,\n        props: {\n            label: 'Vegetables',\n            faramElementName: 'listSelection',\n            options: vegetables.slice(0, 5),\n        },\n        groupKey: 'Multi Selection',\n    },\n    {\n        key: 'multiSelectInput',\n        title: 'Multi Select Input',\n        description: 'Used to select one or more item from list of items',\n        component: MultiSelectInput,\n        props: {\n            label: 'Vegetables',\n            faramElementName: 'multiSelectInput',\n            options: vegetables,\n        },\n        groupKey: 'Multi Selection',\n    },\n    {\n        key: 'searchMultiSelectInput',\n        title: 'Search multi select input',\n        description: 'Similar to Multi Select Input but list is only populated after search',\n        component: SearchMultiSelectInput,\n        props: {\n            label: 'Vegetables',\n            faramElementName: 'searchMultiSelectInput',\n            options: vegetables,\n        },\n        groupKey: 'Multi Selection',\n    },\n    {\n        key: 'selectInputWithList',\n        title: 'Select input with list',\n        description: 'Similar to Multi Select Input and additionally, selected items are listed separately',\n        component: SelectInputWithList,\n        props: {\n            label: 'Vegetables',\n            faramElementName: 'selectInputWithList',\n            options: vegetables,\n        },\n        groupKey: 'Multi Selection',\n    },\n\n    // Misc inputs\n    {\n        key: 'rangeFilter',\n        title: 'Range filter',\n        description: 'Used to select start and end of range',\n        component: RangeFilter,\n        props: {\n            label: 'Range',\n            faramElementName: 'rangeFilter',\n            options,\n        },\n        groupKey: 'Misc',\n    },\n\n    {\n        key: 'rawFileInput',\n        title: 'Raw File Input',\n        description: 'Used to upload file',\n        component: RawFileInput,\n        props: {\n            faramElementName: 'rawFileInput',\n            children: 'Select a file',\n        },\n        groupKey: 'Misc',\n    },\n\n];\n\nexport default inputList;\n","import React from 'react';\nimport { _cs } from '@togglecorp/fujs';\n\nimport styles from './styles.scss';\n\ninterface Props {\n    className?: string;\n    component: React.ElementType;\n    title: string | React.ReactNode;\n    description?: string | React.ReactNode;\n    usage?: string | React.ElementType;\n    componentProps: {};\n}\n\nexport default class InputDetails extends React.PureComponent<Props> {\n    public render() {\n        const {\n            className,\n            component: Component,\n            title,\n            description,\n            usage,\n            componentProps,\n        } = this.props;\n\n        return (\n            <div className={_cs(styles.inputDetails, className)}>\n                <div className={styles.left}>\n                    <header className={styles.header}>\n                        <h3 className={styles.heading}>\n                            { title }\n                        </h3>\n                        <div className={styles.description}>\n                            { description }\n                        </div>\n                    </header>\n                    <div className={styles.content}>\n                        <Component\n                            {...componentProps}\n                        />\n                        <div className={styles.usage}>\n                            { usage }\n                        </div>\n                    </div>\n                </div>\n                <div className={styles.right}>\n                    <header className={styles.header}>\n                        <h4 className={styles.heading}>\n                            Properties\n                        </h4>\n                    </header>\n                </div>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport {\n    _cs,\n    listToMap,\n} from '@togglecorp/fujs';\n\nimport Faram from '@togglecorp/faram';\n\nimport VerticalTabs from '#rscv/VerticalTabs';\nimport MultiViewContainer from '#rscv/MultiViewContainer';\n\nimport inputList from './inputList';\nimport InputDetails from './InputDetails';\nimport styles from './styles.scss';\n\ninterface Props {\n    className?: string;\n}\n\ninterface State {\n    faramValues: unknown;\n}\n\ninterface FaramSchema {\n    fields: {\n        [key: string]: [];\n    };\n}\n\nexport default class Inputs extends React.PureComponent<Props, State> {\n    private static inputGroupKeySelector = (item: string) => {\n        const myInput = inputList.find(input => input.key === item);\n        if (!myInput) {\n            return undefined;\n        }\n        return myInput.groupKey;\n    };\n\n    private static inputGroupRendererParams = (groupKey: string) => ({\n        children: groupKey,\n    })\n\n    private static inputGroupComparator = () => 0;\n\n    public constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            faramValues: {\n                textInput: 'Hari Prasad',\n                searchInput: 'Hari',\n                textArea: 'The epic, traditionally ascribed to the Rishi Valmiki, narrates the life of Rama, the legendary prince of the Kosala Kingdom.\\n It follows his fourteen-year exile to the forest by his father King Dasharatha, on request of his step-mother Kaikeyi.',\n                formattedTextArea: 'The epic, traditionally ascribed\\n to the Rishi Valmiki, narrates the life of Rama, the legendary prince of the Kosala Kingdom.\\n\\n It follows his fourteen-year\\n exile to the forest by his father King Dasharatha, on request of his step-mother Kaikeyi.',\n                numberInput: 42,\n                listSelection: ['1', '3'],\n                radioInput: '3',\n                segmentInput: '3',\n                scaleInput: '3',\n                selectInput: '3',\n                searchSelectInput: '3',\n                multiSelectInput: ['1', '3'],\n                searchMultiSelectInput: ['1', '3'],\n                selectInputWithList: ['1', '3'],\n            },\n        };\n\n        this.faramSchema = {\n            fields: listToMap(inputList, d => d.key, () => []),\n        };\n\n        this.views = listToMap(\n            inputList,\n            d => d.key,\n            d => ({\n                component: InputDetails,\n                rendererParams: () => ({\n                    title: d.title,\n                    component: d.component,\n                    description: d.description,\n                    componentProps: d.props,\n                    className: styles.inputDetails,\n                }),\n            }),\n        );\n\n        this.tabs = listToMap(\n            inputList,\n            d => d.key,\n            d => d.title,\n        );\n    }\n\n    private faramSchema: any;\n\n    private views: {\n        [key: string]: {\n            component: React.ReactType;\n            rendererParams: () => {\n                title: React.ReactNode;\n                component: React.ReactType;\n                description: React.ReactNode;\n                componentProps: any;\n                className: string;\n            };\n        };\n    };\n\n    private tabs: {\n        [key: string]: React.ReactNode;\n    };\n\n    private handleFaramChange = (faramValues: unknown) => {\n        this.setState({ faramValues });\n    }\n\n    public render() {\n        const { className } = this.props;\n        const {\n            faramValues,\n        } = this.state;\n\n        return (\n            <div className={_cs(className, styles.inputs)}>\n                <header className={styles.header}>\n                    <h2 className={styles.heading}>\n                        Input components\n                    </h2>\n                </header>\n                <div className={styles.content}>\n                    <VerticalTabs\n                        className={styles.tabs}\n                        tabs={this.tabs}\n                        useHash\n                        groupKeySelector={Inputs.inputGroupKeySelector}\n                        groupRendererParams={Inputs.inputGroupRendererParams}\n                        groupComparator={Inputs.inputGroupComparator}\n                    />\n                    <Faram\n                        className={styles.faram}\n                        value={faramValues}\n                        schema={this.faramSchema}\n                        onChange={this.handleFaramChange}\n                    >\n                        <MultiViewContainer\n                            views={this.views}\n                            useHash\n                        />\n                    </Faram>\n                </div>\n            </div>\n        );\n    }\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"option\":\"styles_option_2Ch32rzAFzQQiGmwtqmFJT\",\"focused\":\"styles_focused_2nn9v_AkOsXvkQMC6Cdp9f\",\"active\":\"styles_active_2x6y6VUHq4hvlaDuM4dpxa\",\"spin\":\"styles_spin_364PBJERMd8cGtepj0qNXA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"time-input\":\"styles_time-input_2LsTAL9fnCSvnM6gVbnIiG\",\"timeInput\":\"styles_time-input_2LsTAL9fnCSvnM6gVbnIiG\",\"input\":\"styles_input_3-0ov8Eck7OGcNXPpcsoh1\",\"units\":\"styles_units_2kz0R2NJ1lhwnd2DwwW6Hk\",\"unit\":\"styles_unit_g0Tw8tE4TPR5o2wnt_Dpt\",\"separator\":\"styles_separator_VGrJeMQyCejGkFUMD2Hi3\",\"action-buttons\":\"styles_action-buttons_IzK1V6PA_wiRw8INZupsr\",\"actionButtons\":\"styles_action-buttons_IzK1V6PA_wiRw8INZupsr\",\"disabled\":\"styles_disabled_3JCd16_7Q-pgf6J0GZH1LI\",\"focused\":\"styles_focused_2kidoi_OgM8Ivb4vQdDNiL\",\"invalid\":\"styles_invalid_14jQEcDaXsFrGAmI4pls-i\",\"error\":\"styles_error_3cCLY5EE2air75fZZhl1AB\",\"readOnly\":\"styles_readOnly_3sgVKUmq_SVURFcH15KGwg\",\"label\":\"styles_label_1ym8T8HCj3nKSM-DPhkvE4\",\"spin\":\"styles_spin_2M42C7ZkDkCYwfGPfARaK1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formatted-text\":\"styles_formatted-text_3JarxqvLrJOH57ze6P3dvs\",\"formattedText\":\"styles_formatted-text_3JarxqvLrJOH57ze6P3dvs\",\"area\":\"styles_area_3BpCwg9UYmmJVG8FMzDbQe\",\"format-button\":\"styles_format-button_12L8Qlq7Jq74U5uU2v2G\",\"formatButton\":\"styles_format-button_12L8Qlq7Jq74U5uU2v2G\",\"spin\":\"styles_spin_2MlKkMfGFn3zJv_Qj_rl6z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"color-input\":\"styles_color-input_6Oo1Rvo-ghCAg7xz06lQ0\",\"colorInput\":\"styles_color-input_6Oo1Rvo-ghCAg7xz06lQ0\",\"label\":\"styles_label_25-ALCuu_VnyfqyxvBNRCc\",\"color-box\":\"styles_color-box_3UfHqWNRW8HYP0jxOSuwIL\",\"colorBox\":\"styles_color-box_3UfHqWNRW8HYP0jxOSuwIL\",\"color\":\"styles_color_1R4_kIvnXbXGPoM7KQGY07\",\"disabled\":\"styles_disabled_2GRrPSLzdl0EtGBwJsUYj7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"multi-select-input\":\"styles_multi-select-input_3t6wxSjgQnDZbUq8wXiKsG\",\"multiSelectInput\":\"styles_multi-select-input_3t6wxSjgQnDZbUq8wXiKsG\",\"input-and-actions\":\"styles_input-and-actions_GzFCNtQKdZTP_L-0EDytW\",\"inputAndActions\":\"styles_input-and-actions_GzFCNtQKdZTP_L-0EDytW\",\"input\":\"styles_input_1sVSchpjrkzUP6scP1btUJ\",\"actions\":\"styles_actions_3cNpIhGjcZq5wtS_7SLQ-6\",\"clear-button\":\"styles_clear-button_3Gc9JeBVPTmmP_eKlPXwAh\",\"clearButton\":\"styles_clear-button_3Gc9JeBVPTmmP_eKlPXwAh\",\"select-all-button\":\"styles_select-all-button_1mPb3jMsHxZMT2hzj3oIBe\",\"selectAllButton\":\"styles_select-all-button_1mPb3jMsHxZMT2hzj3oIBe\",\"disabled\":\"styles_disabled_1rcdyeLhyPLiMoTHIkLbNE\",\"filled\":\"styles_filled_1WiX25xrsSYpttVQv9f43S\",\"input-in-focus\":\"styles_input-in-focus_ntGgSWo9q29AM8Ljd9vKp\",\"inputInFocus\":\"styles_input-in-focus_ntGgSWo9q29AM8Ljd9vKp\",\"hide-clear-button\":\"styles_hide-clear-button_3EhnCq2aq80ro33C_5-qR-\",\"hideClearButton\":\"styles_hide-clear-button_3EhnCq2aq80ro33C_5-qR-\",\"completely-filled\":\"styles_completely-filled_2zI7hEpGTYd1FYsmpnhY4J\",\"completelyFilled\":\"styles_completely-filled_2zI7hEpGTYd1FYsmpnhY4J\",\"hide-select-all-button\":\"styles_hide-select-all-button_2IAeWYtI-mB_SqqQ78zJ1G\",\"hideSelectAllButton\":\"styles_hide-select-all-button_2IAeWYtI-mB_SqqQ78zJ1G\",\"show-options\":\"styles_show-options_1mREK3xDAmrLYgkV824u0J\",\"showOptions\":\"styles_show-options_1mREK3xDAmrLYgkV824u0J\",\"error\":\"styles_error_lP9hsAJ0wnImC-O6xvav\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"styles_footer_257aA5n6e3ECWnvdqkSd4I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search-input\":\"styles_search-input_2Ts76x_cjIfqtZAVe7Al8O\",\"searchInput\":\"styles_search-input_2Ts76x_cjIfqtZAVe7Al8O\",\"icon\":\"styles_icon_3sETzw5azRUassdrFVahXJ\",\"disabled\":\"styles_disabled_n8QicmPdbHIzNxu3IRpbZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dismissable-list-item\":\"styles_dismissable-list-item_HNRsPVbUVFMCQFbh1am5u\",\"dismissableListItem\":\"styles_dismissable-list-item_HNRsPVbUVFMCQFbh1am5u\",\"list-item\":\"styles_list-item_16B668zVsDM3pzasy1lbXu\",\"listItem\":\"styles_list-item_16B668zVsDM3pzasy1lbXu\",\"dismiss-button\":\"styles_dismiss-button_--b6YtoZlBfORAjnijlB4\",\"dismissButton\":\"styles_dismiss-button_--b6YtoZlBfORAjnijlB4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"option\":\"styles_option_2xLyL5SHbFmU1v5NvVI-gL\",\"focused\":\"styles_focused_25XaQ9I6utPhTSvJZQxqNq\",\"active\":\"styles_active_3m9Pd76FHxGQ01dQHBjuHc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"day-picker\":\"styles_day-picker_2kG2b5cc0z-K__Op9dkeRw\",\"dayPicker\":\"styles_day-picker_2kG2b5cc0z-K__Op9dkeRw\",\"header\":\"styles_header_jc_e7AU10-5NhFn0_j32l\",\"left\":\"styles_left_128zjmXtEe8RvRSTjC8Bu\",\"right\":\"styles_right_tEKoKDiMHyMXU6TCndfpu\",\"month\":\"styles_month_cuUOb34vCAel8M__OIXZU\",\"days\":\"styles_days_1X2opYCu6pxJWOIANJaiK-\",\"weeks\":\"styles_weeks_2uGXUaxYAyJjeIvQKiyHg9\",\"week\":\"styles_week_HcmoyMWQ4pj1TkR67X7EX\",\"day\":\"styles_day_3NnOq43EYxX0OyJ2OJ-1-v\",\"highlighted\":\"styles_highlighted_4rzgQF1yAtntQb6sOS8Mf\",\"selected\":\"styles_selected_10-MTSPYRFqtVtxdZ_2Igh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"options\":\"styles_options_3uw6GU7OBP_dXc4U-8rq-J\",\"empty\":\"styles_empty_3bTuzytlvNbeN3R-_oEHXI\",\"spin\":\"styles_spin_24-rc8iY1uVK8o8-zXmAeF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"digital-input\":\"styles_digital-input_1n_rD0eB-3b4Fm9OzWjWFj\",\"digitalInput\":\"styles_digital-input_1n_rD0eB-3b4Fm9OzWjWFj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text-input\":\"styles_text-input_2RvdfqyL5-abAwsiCFXrx1\",\"textInput\":\"styles_text-input_2RvdfqyL5-abAwsiCFXrx1\",\"input\":\"styles_input_2YLApquGOuItTZkuuopeyz\",\"error\":\"styles_error_1OsrKHLuXOr9AE9FP5kFse\",\"disabled\":\"styles_disabled_2sgLgCd000ly37mQci3VUC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select-input\":\"styles_select-input_1PPwmc84GE4mTvNBqGuIAL\",\"selectInput\":\"styles_select-input_1PPwmc84GE4mTvNBqGuIAL\",\"input-and-actions\":\"styles_input-and-actions_29g5cVWp5ybSjdi4SxTWJM\",\"inputAndActions\":\"styles_input-and-actions_29g5cVWp5ybSjdi4SxTWJM\",\"input\":\"styles_input_2WXvmHHNr2t7DPMwODCvPu\",\"actions\":\"styles_actions_2Ch_s6a8Izo5KNSaPnTIeL\",\"clear-button\":\"styles_clear-button_1dwg2pDbX9TD_utkr34N0v\",\"clearButton\":\"styles_clear-button_1dwg2pDbX9TD_utkr34N0v\",\"dropdown-button\":\"styles_dropdown-button_1Cytvj7OX11XxISKLanC4G\",\"dropdownButton\":\"styles_dropdown-button_1Cytvj7OX11XxISKLanC4G\",\"disabled\":\"styles_disabled_m_63jAQtY2u9puFXZty3Z\",\"show-options\":\"styles_show-options_1ZWgTFoIvt0LTcaH0AL3Y4\",\"showOptions\":\"styles_show-options_1ZWgTFoIvt0LTcaH0AL3Y4\",\"input-in-focus\":\"styles_input-in-focus_1SwL-hSGF-Yrwdu-qvKBes\",\"inputInFocus\":\"styles_input-in-focus_1SwL-hSGF-Yrwdu-qvKBes\",\"error\":\"styles_error_2HLet-0kqDylepI1DxIGbp\",\"hide-clear-button\":\"styles_hide-clear-button_1R2JVb4CSo7oFLSuDGdCP0\",\"hideClearButton\":\"styles_hide-clear-button_1R2JVb4CSo7oFLSuDGdCP0\",\"filled\":\"styles_filled_1-LG85STKUiWy5oc5D36p2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"option\":\"styles_option_2LP97VMjqO543E-gNWWS06\",\"focused\":\"styles_focused_3jy-9asvMZnjhPKK9d43_H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"time-filter-modal\":\"styles_time-filter-modal_2QuPY0t6xu-BAb6bQO69Lu\",\"timeFilterModal\":\"styles_time-filter-modal_2QuPY0t6xu-BAb6bQO69Lu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"styles_checkbox_3QZqG2lHVb0YsfZHasmFCz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"segment-button-input\":\"styles_segment-button-input_2SZXb3vHXvPAYCqZVnayC\",\"segmentButtonInput\":\"styles_segment-button-input_2SZXb3vHXvPAYCqZVnayC\",\"segment-option\":\"styles_segment-option_ARDR8BzDlzL5qGoRFGhK0\",\"segmentOption\":\"styles_segment-option_ARDR8BzDlzL5qGoRFGhK0\",\"checked\":\"styles_checked_3B_IKvoyO-P3VlJktm-Xa4\",\"error\":\"styles_error_2EN0AKFNq66CeQJaTOh-j\",\"disabled\":\"styles_disabled_2EYdOBC3izMPXlnXl4Nypj\",\"read-only\":\"styles_read-only_1nwBBJaEaz_TijfjrtOwKL\",\"readOnly\":\"styles_read-only_1nwBBJaEaz_TijfjrtOwKL\",\"spin\":\"styles_spin_36K4cCJs4un1o0aQX89GMi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"year-picker\":\"styles_year-picker_1f47jvqmznUTQhZeWoknN9\",\"yearPicker\":\"styles_year-picker_1f47jvqmznUTQhZeWoknN9\",\"header\":\"styles_header_37SslQltFaZ2roQYaPQHoC\",\"left\":\"styles_left_4s9yPQJQa1Vv4a7cE0NDN\",\"right\":\"styles_right_3VRE4vdSuSOewFBkxd6pyj\",\"title\":\"styles_title_CPf2s4ufEjFXkz4XGsy_9\",\"years\":\"styles_years_1B0mFgF5ueYeV63X2EXcCR\",\"year\":\"styles_year_1zIDfv_UQLQN9AcnBAKlSK\",\"selected\":\"styles_selected_2BlczImzz8Eff9tOaEQZrt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputs\":\"styles_inputs_1y9Z0vMXzFKfL3v7mRSFhK\",\"header\":\"styles_header_31kN3DV0bMy_x9wUYK_HTw\",\"content\":\"styles_content_SiCcGanwQ5REf1abVjT_C\",\"tabs\":\"styles_tabs_3Lf1OnZH7NNuY9TOCWgRS8\",\"faram\":\"styles_faram_1QoL3sssfpIM3d7xZtYWr7\",\"input-details\":\"styles_input-details_2JoYa-1ZqLQqbMNMWg3gM6\",\"inputDetails\":\"styles_input-details_2JoYa-1ZqLQqbMNMWg3gM6\"};","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport styles from './styles.scss';\n\nconst propTypes = {\n    className: PropTypes.string,\n\n    /**\n     * component to render on right side of header\n     */\n    rightComponent: PropTypes.element,\n\n    /**\n     * title text for modal\n     */\n    title: PropTypes.string.isRequired,\n};\n\nconst defaultProps = {\n    className: '',\n    rightComponent: undefined,\n};\n\n\nexport default class Header extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    render() {\n        const {\n            className,\n            rightComponent,\n            title,\n        } = this.props;\n\n        const classNames = [\n            'modal-header',\n            className,\n            styles.header,\n        ];\n        const headerClassNames = [\n            'heading',\n            styles.heading,\n        ];\n        return (\n            <header className={classNames.join(' ')}>\n                <h2 className={headerClassNames.join(' ')}>\n                    { title }\n                </h2>\n                { rightComponent }\n            </header>\n        );\n    }\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"option\":\"styles_option_1bGflrFaG8DKOyPwa1a2yl\",\"focused\":\"styles_focused_3aq3w0Ge53eniYDkbTd8FN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select-input\":\"styles_select-input_8Y4jhEADvoJE5GwGMRLfb\",\"selectInput\":\"styles_select-input_8Y4jhEADvoJE5GwGMRLfb\",\"input-and-actions\":\"styles_input-and-actions_h2IjxznY4zFtahbIJiA4R\",\"inputAndActions\":\"styles_input-and-actions_h2IjxznY4zFtahbIJiA4R\",\"input\":\"styles_input_3Tbp5EYT81GYXYdpFKO6v\",\"actions\":\"styles_actions_3Kk83Zx-AbK8U9yS1bQn41\",\"clear-button\":\"styles_clear-button_2VeehI_8IGIiNfDqDnCPPm\",\"clearButton\":\"styles_clear-button_2VeehI_8IGIiNfDqDnCPPm\",\"disabled\":\"styles_disabled_173VE2k85MTzpTvMqzpFEQ\",\"show-options\":\"styles_show-options_Wm3Cw4bG3WVAZfgXO_p62\",\"showOptions\":\"styles_show-options_Wm3Cw4bG3WVAZfgXO_p62\",\"input-in-focus\":\"styles_input-in-focus_2h2G00FWx_Izl-vgjGduvK\",\"inputInFocus\":\"styles_input-in-focus_2h2G00FWx_Izl-vgjGduvK\",\"error\":\"styles_error_ev35wVRE_gy-iOgQOyDpd\",\"hide-clear-button\":\"styles_hide-clear-button_16pAHo-i7loPxYxCL004H4\",\"hideClearButton\":\"styles_hide-clear-button_16pAHo-i7loPxYxCL004H4\",\"filled\":\"styles_filled_fppmvguOTG2DGSLzMehwa\"};","import FocusTrap from 'react-focus-trap';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { _cs } from '@togglecorp/fujs';\n\nimport Haze from '../Haze';\nimport Portal from '../Portal';\nimport styles from './styles.scss';\n\nconst ESCAPE_KEY = 27;\n\nconst noop = () => {};\n\nconst propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.element),\n        PropTypes.element,\n    ]).isRequired,\n    className: PropTypes.string,\n    closeOnEscape: PropTypes.bool,\n    closeOnOutsideClick: PropTypes.bool,\n    onClose: PropTypes.func,\n};\n\nconst defaultProps = {\n    className: '',\n    closeOnEscape: false,\n    closeOnOutsideClick: false,\n    onClose: noop,\n};\n\n// eslint-disable-next-line react/no-multi-comp\nexport default class Modal extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n        this.wrapperRef = React.createRef();\n    }\n\n    componentDidMount() {\n        document.addEventListener('keydown', this.handleKeyPressed);\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.handleKeyPressed);\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    handleClickOutside = (event) => {\n        const {\n            closeOnOutsideClick,\n            onClose,\n        } = this.props;\n\n        const { current: wrapper } = this.wrapperRef;\n\n        if (closeOnOutsideClick && !wrapper.contains(event.target)) {\n            onClose({ outsideClick: true });\n        }\n    }\n\n    handleKeyPressed = (event) => {\n        const {\n            closeOnEscape,\n            onClose,\n        } = this.props;\n\n        if (closeOnEscape && event.keyCode === ESCAPE_KEY) {\n            onClose({ escape: true });\n        }\n    }\n\n    render() {\n        const {\n            children,\n            className: classNameFromProps,\n        } = this.props;\n\n        const className = _cs(\n            classNameFromProps,\n            styles.modal,\n            'modal',\n        );\n\n        return (\n            <Portal>\n                <FocusTrap>\n                    <Haze>\n                        <div\n                            ref={this.wrapperRef}\n                            className={className}\n                        >\n                            { children }\n                        </div>\n                    </Haze>\n                </FocusTrap>\n            </Portal>\n        );\n    }\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"options\":\"styles_options_vY4uidVT2oiTPxthp132c\",\"empty\":\"styles_empty_N522hIB5M6TIFWb8ZbSdk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"styles_button_3qCqk1oxfcBP22JJRXVPOn\",\"clear\":\"styles_clear_VPvL6w38atObGi83XJvAB\"};","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport styles from './styles.scss';\n\nconst propTypes = {\n    /**\n     * child elements\n     */\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node,\n    ]),\n\n    className: PropTypes.string,\n};\n\nconst defaultProps = {\n    className: '',\n    children: null,\n};\n\n\nexport default class Body extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    render() {\n        const {\n            children,\n            className,\n        } = this.props;\n\n        const classNames = [\n            'modal-body',\n            styles.body,\n            className,\n        ];\n        return (\n            <div className={classNames.join(' ')}>\n                { children }\n            </div>\n        );\n    }\n}\n"],"sourceRoot":""}