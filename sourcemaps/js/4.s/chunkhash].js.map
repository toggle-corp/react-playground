{"version":3,"sources":["webpack:///./src/vendor/react-store/components/Input/RawFileInput/styles.scss","webpack:///./src/vendor/react-store/v2/Input/HintAndError/styles.scss","webpack:///./src/vendor/react-store/components/Input/DateInput/ActionButtons/styles.scss","webpack:///./src/vendor/react-store/v2/Input/RawInput/styles.scss","webpack:///./src/vendor/react-store/components/Input/ListSelection/styles.scss","webpack:///./src/vendor/react-store/v2/Action/Button/styles.scss","webpack:///./src/vendor/react-store/components/Input/MultiSelectInput/styles.scss","webpack:///./src/vendor/react-store/v2/View/ListView/styles.scss","webpack:///./src/vendor/react-store/components/Input/TextArea/styles.scss","webpack:///./src/vendor/react-store/components/Input/DateInput/styles.scss","webpack:///./src/vendor/react-store/v2/View/FloatingContainer/styles.scss","webpack:///./src/vendor/react-store/components/Input/NumberInput/styles.scss","webpack:///./src/vendor/react-store/components/Input/HintAndError/styles.scss","webpack:///./src/vendor/react-store/v2/View/Message/styles.scss","webpack:///./src/vendor/react-store/components/Input/DatePicker/MonthPicker/styles.scss","webpack:///./src/vendor/react-store/components/Input/SelectInputWithList/styles.scss","webpack:///./src/views/Inputs/InputDetails/styles.scss","webpack:///./src/vendor/react-store/v2/Input/SelectInputBase/Options/Option/styles.scss","webpack:///./src/vendor/react-store/components/View/Modal/Body/styles.scss","webpack:///./src/vendor/react-store/components/View/Modal/styles.scss","webpack:///./src/vendor/react-store/components/Input/RawInput/styles.scss","webpack:///./src/vendor/react-store/components/View/Modal/Footer/index.js","webpack:///./src/vendor/react-store/components/Input/ScaleInput/styles.scss","webpack:///./src/vendor/react-store/components/Input/SegmentInput/styles.scss","webpack:///./src/vendor/react-store/components/Input/RadioInput/styles.scss","webpack:///./src/vendor/react-store/components/Input/DateFilter/styles.scss","webpack:///./src/vendor/react-store/components/Input/DatePicker/styles.scss","webpack:///./src/vendor/react-store/components/View/Modal/Header/styles.scss","webpack:///./src/vendor/react-store/components/Input/Label/styles.scss","webpack:///./src/vendor/react-store/components/Input/RadioInput/Option/styles.scss","webpack:///./src/vendor/react-store/components/Input/Checkbox/styles.scss","webpack:///./src/vendor/react-store/components/View/ListItem/styles.scss","webpack:///./src/vendor/react-store/components/Input/MultiSelectInput/Options/styles.scss","webpack:///./src/vendor/react-store/components/Input/SearchMultiSelectInput/Options/styles.scss","webpack:///./src/vendor/react-store/v2/Input/Label/styles.scss","webpack:///./src/vendor/react-store/components/Action/Button/PrimaryButton.js","webpack:///./src/vendor/react-store/components/Input/SearchMultiSelectInput/Checkbox/styles.scss","webpack:///./src/vendor/react-store/utils/bounds.ts","webpack:///./src/vendor/react-store/v2/Action/Button/index.tsx","webpack:///./src/vendor/react-store/v2/types.ts","webpack:///./src/vendor/react-store/v2/General/useKeyboard.ts","webpack:///./src/vendor/react-store/v2/Input/RawInput/index.tsx","webpack:///./src/vendor/react-store/v2/Input/HintAndError/index.tsx","webpack:///./src/vendor/react-store/v2/Input/Label/index.tsx","webpack:///./src/vendor/react-store/v2/View/Portal.tsx","webpack:///./src/vendor/react-store/v2/View/Float.tsx","webpack:///./src/vendor/react-store/v2/General/useHaze.ts","webpack:///./src/vendor/react-store/v2/View/FloatingContainer/index.tsx","webpack:///./src/vendor/react-store/v2/View/List/index.tsx","webpack:///./src/vendor/react-store/v2/General/useResizeObserver.ts","webpack:///./src/vendor/react-store/v2/View/Message/index.tsx","webpack:///./src/vendor/react-store/v2/View/ListView/EmptyComponent/index.tsx","webpack:///./src/vendor/react-store/v2/View/ListView/index.tsx","webpack:///./src/vendor/react-store/v2/Input/SelectInputBase/Options/Option/index.tsx","webpack:///./src/vendor/react-store/v2/Input/SelectInputBase/Options/index.tsx","webpack:///./src/vendor/react-store/v2/Input/SelectInputBase/index.tsx","webpack:///./src/vendor/react-store/v2/Input/SelectInput/index.tsx","webpack:///./src/vendor/react-store/components/Input/Checkbox/index.js","webpack:///./src/vendor/react-store/components/Input/HintAndError/index.js","webpack:///./src/vendor/react-store/components/Input/Label/index.js","webpack:///./src/vendor/react-store/components/Input/ColorInput/index.js","webpack:///./src/vendor/react-store/components/View/ApplyModal/index.js","webpack:///./src/vendor/react-store/components/General/HandleKeyboard.js","webpack:///./src/vendor/react-store/components/Input/RawInput/index.js","webpack:///./src/vendor/react-store/components/Input/SelectInput/Options/Option/index.js","webpack:///./src/vendor/react-store/components/Input/SelectInput/Options/index.js","webpack:///./src/vendor/react-store/components/Input/SelectInput/index.js","webpack:///./src/vendor/react-store/components/General/Delay.js","webpack:///./src/vendor/react-store/components/Input/DatePicker/DayPicker/DaysHeader.js","webpack:///./src/vendor/react-store/components/Input/DatePicker/DayPicker/index.js","webpack:///./src/vendor/react-store/components/Input/DatePicker/MonthPicker/index.js","webpack:///./src/vendor/react-store/components/Input/DatePicker/YearPicker/index.js","webpack:///./src/vendor/react-store/components/Input/DatePicker/index.js","webpack:///./src/vendor/react-store/components/Input/DigitalInput/index.js","webpack:///./src/vendor/react-store/components/Input/DateInput/ActionButtons/index.js","webpack:///./src/vendor/react-store/components/Input/DateInput/index.js","webpack:///./src/vendor/react-store/components/Input/DateFilter/index.js","webpack:///./src/vendor/react-store/components/Action/Button/AccentButton.js","webpack:///./src/vendor/react-store/components/Input/TextArea/index.js","webpack:///./src/vendor/react-store/components/Input/FormattedTextArea/index.js","webpack:///./src/vendor/react-store/components/Input/ListSelection/index.js","webpack:///./src/vendor/react-store/components/Input/MultiSelectInput/Checkbox/index.js","webpack:///./src/vendor/react-store/components/Input/MultiSelectInput/Option/index.js","webpack:///./src/vendor/react-store/components/Input/MultiSelectInput/Options/index.js","webpack:///./src/vendor/react-store/components/Input/MultiSelectInput/index.js","webpack:///./src/vendor/react-store/components/Input/NumberInput/index.js","webpack:///./src/vendor/react-store/components/Input/RadioInput/Option/index.js","webpack:///./src/vendor/react-store/components/Input/RadioInput/index.js","webpack:///./src/vendor/react-store/components/Input/RangeFilter/index.js","webpack:///./src/vendor/react-store/components/Input/RawFileInput/index.js","webpack:///./src/vendor/react-store/components/Input/ScaleInput/index.js","webpack:///./src/vendor/react-store/components/Input/TextInput/index.js","webpack:///./src/vendor/react-store/components/Input/SearchInput/index.js","webpack:///./src/vendor/react-store/components/Input/SearchMultiSelectInput/Checkbox/index.js","webpack:///./src/vendor/react-store/components/Input/SearchMultiSelectInput/Option/index.js","webpack:///./src/vendor/react-store/components/Input/SearchMultiSelectInput/Options/index.js","webpack:///./src/vendor/react-store/components/Input/SearchMultiSelectInput/index.js","webpack:///./src/vendor/react-store/components/Input/SearchSelectInput/Options/Option/index.js","webpack:///./src/vendor/react-store/components/Input/SearchSelectInput/Options/index.js","webpack:///./src/vendor/react-store/components/Input/SearchSelectInput/index.js","webpack:///./src/vendor/react-store/components/Input/SegmentInput/Option/index.js","webpack:///./src/vendor/react-store/components/Input/SegmentInput/index.js","webpack:///./src/vendor/react-store/components/View/ListItem/index.js","webpack:///./src/vendor/react-store/components/Action/DismissableListItem/index.js","webpack:///./src/vendor/react-store/components/Input/SelectInputWithList/index.js","webpack:///./src/vendor/react-store/components/Input/TimeInput/ActionButtons/index.js","webpack:///./src/vendor/react-store/components/Input/TimeInput/index.js","webpack:///./src/vendor/react-store/components/Input/TimeFilter/index.js","webpack:///./src/views/Inputs/inputList.tsx","webpack:///./src/views/Inputs/InputDetails/index.tsx","webpack:///./src/views/Inputs/index.tsx","webpack:///./src/vendor/react-store/components/Input/SearchSelectInput/Options/Option/styles.scss","webpack:///./src/vendor/react-store/components/Input/TimeInput/styles.scss","webpack:///./src/vendor/react-store/components/Input/FormattedTextArea/styles.scss","webpack:///./src/vendor/react-store/components/Input/ColorInput/styles.scss","webpack:///./src/vendor/react-store/components/Input/SearchMultiSelectInput/styles.scss","webpack:///./src/vendor/react-store/components/View/Modal/Footer/styles.scss","webpack:///./src/vendor/react-store/components/Input/SearchInput/styles.scss","webpack:///./src/vendor/react-store/components/Action/DismissableListItem/styles.scss","webpack:///./src/vendor/react-store/components/Input/SelectInput/Options/Option/styles.scss","webpack:///./src/vendor/react-store/components/Input/DatePicker/DayPicker/styles.scss","webpack:///./src/vendor/react-store/components/Input/SearchSelectInput/Options/styles.scss","webpack:///./src/vendor/react-store/v2/Input/SelectInputBase/Options/styles.scss","webpack:///./src/vendor/react-store/components/Input/DigitalInput/styles.scss","webpack:///./src/vendor/react-store/components/Input/TextInput/styles.scss","webpack:///./src/vendor/react-store/components/Input/SelectInput/styles.scss","webpack:///./src/vendor/react-store/components/Input/MultiSelectInput/Option/styles.scss","webpack:///./src/vendor/react-store/components/Input/TimeFilter/styles.scss","webpack:///./src/vendor/react-store/components/Input/MultiSelectInput/Checkbox/styles.scss","webpack:///./src/vendor/react-store/components/Input/SegmentInput/Option/styles.scss","webpack:///./src/vendor/react-store/components/Input/DatePicker/YearPicker/styles.scss","webpack:///./src/views/Inputs/styles.scss","webpack:///./src/vendor/react-store/components/View/Modal/Header/index.js","webpack:///./src/vendor/react-store/components/Input/SearchMultiSelectInput/Option/styles.scss","webpack:///./src/vendor/react-store/components/Input/SearchSelectInput/styles.scss","webpack:///./src/vendor/react-store/components/View/Modal/index.js","webpack:///./src/vendor/react-store/components/Input/SelectInput/Options/styles.scss","webpack:///./src/vendor/react-store/components/Input/TimeInput/ActionButtons/styles.scss","webpack:///./src/vendor/react-store/components/View/Modal/Body/index.js","webpack:///./src/vendor/react-store/v2/Input/SelectInputBase/styles.scss"],"names":["module","exports","propTypes","className","PropTypes","string","children","oneOfType","arrayOf","element","node","isRequired","Footer","this","props","classNames","styles","footer","join","React","PureComponent","PrimaryButton","buttonType","defaultRect","top","left","width","height","defaultOffset","right","bottom","defaultLimit","minW","maxW","Infinity","minH","maxH","defaultParams","contentRect","parentRect","boundingRect","offset","limit","calcFloatRectInMainWindow","p","params","newWidth","Math","max","min","newContentRect","containerOffsetY","containerOffsetX","calcFloatRect","window","scrollY","scrollX","innerWidth","innerHeight","calcFloatPositionInMainWindow","floatRect","Button","classNameFromProps","disabled","iconName","pending","smallHorizontalPadding","smallVerticalPadding","transparent","type","onClick","onClickParams","otherProps","handleClick","useCallback","e","event","buttonClassName","_cs","button","withIconAndChildren","iconClassName","icon","pendingIcon","Icon","name","defaultProps","Keys","specialKeys","Up","Down","Enter","getOptionIndex","key","options","keySelector","findIndex","o","getNewKey","oldKey","increment","length","oldIndex","modulo","useKeyboard","focusedKey","selectedKey","isOptionsShown","onFocusChange","onHideOptions","onShowOptions","onOptionSelect","handleKeyDown","keyCode","Tab","Esc","includes","stopPropagation","preventDefault","isDefined","newFocusedKey","useEffect","undefined","forwardRef","ref","rawInput","HintAndError","error","hint","inputHintAndError","inputError","inputHint","empty","message","title","Label","active","rightComponent","rightComponentClassName","inputLabel","Portal","ReactDOM","createPortal","document","body","Float","focusTrap","onInvalidate","handleInvalidate","useLayoutEffect","addEventListener","removeEventListener","portalChildQuery","portalChildClassName","portalChildShownClassName","refreshLastModalStatus","modals","forEach","modal","i","dataset","lastModal","useHaze","enabled","uniqueId","useMemo","randomString","classNameToAdd","classNameList","split","push","querySelectorAll","classNameToRemove","index","d","splice","removeClassName","Array","from","filter","n","id","FloatingContainer","closeOnEscape","onBlur","onClose","onMouseDown","parentRef","showHaze","containerRef","useRef","handleContainerInvalidate","container","current","containerStyles","Object","assign","style","console","handleMouseDown","parent","isTargetOrContainsTarget","target","contains","isTargetParentOrContainedInParent","handleKeyPressed","escape","myClassName","floatingContainer","containerId","GroupedList","groupKeySelector","groupComparator","Renderer","renderer","GroupRenderer","groupRenderer","groupRendererClassName","groupRendererParams","data","rendererParams","rendererClassName","renderListItem","datum","extraProps","groups","listToGroupList","sortedGroupKeys","keys","sort","groupKey","renderGroup","map","List","isNotDefined","grouped","hasGroup","useResizeObserver","onObserve","onResize","resizeObserver","containerToObserve","parentElement","ResizeObserver","observe","warn","containerToUnobserve","unobserve","calculateRelativeValue","minFontSize","maxFontSize","factor","sqrt","calculateDimensionCost","Message","maxPaddingSize","minPaddingSize","resizeFactor","useState","isChildrenShown","setIsChildrenShown","showChildren","handleResize","fontSize","padding","EmptyComponent","ListView","emptyComponent","EmptyWhenFilterComponent","emptyWhenFilterComponent","filtered","content","isEmpty","listView","listViewEmpty","LoadingAnimation","DefaultEmptyComponent","DefaultEmptyWhenFilterComponent","Option","divRef","focusedByMouse","isActive","isFocused","onFocus","optionKey","scrollIntoView","behavior","block","handleMouseMove","handleMouseLeave","option","focused","onMouseMove","onMouseLeave","Options","labelSelector","onOptionClick","onOptionFocus","optionLabelSelector","value","list","SelectInputBase","autoFocus","label","labelClassName","labelRightComponent","labelRightComponentClassName","onChange","onShowPopupChange","onSearchValueChange","optionsClassName","placeholder","readOnly","searchOptions","searchOptionsPending","searchOptionsFiltered","searchValue","showClearButtonFromProps","showClearButton","showDropdownArrowButton","showHintAndError","showLabel","showPopup","inputRef","boundingClientRect","inputInFocus","setInputInFocus","setFocusKey","getBoundingClientRect","handleShowOptionsPopup","input","select","handleToggleOptionsPopup","handleHideOptionsPopup","handleInputFocus","handleInputBlur","handleInputChange","val","currentTarget","handleOptionsInvalidate","optionsContainer","handleOptionSelect","handleClearButtonClick","handleFocusChange","selectedValueLabel","activeOption","find","String","inputText","isFilled","isTruthyString","myPlaceholder","selectInputBase","showOptions","hideClearButton","filled","inputAndActions","onKeyDown","actions","tabIndex","clearButton","dropdownButton","filterAndSearch","caseInsensitiveSubmatch","a","b","compareStringSearch","SelectInput","maxDisplayOptions","setSearchValue","setShowPopup","isFalsyString","slice","defaultPlaceholder","item","bool","func","tooltip","checkboxType","changeDelay","number","Checkbox","checked","inputId","checkbox","spanClassName","checkmark","inputClassName","htmlFor","FaramInputElement","show","InputHintAndError","text","InputLabel","ColorInput","colorPickerContainer","containerRect","calcFloatingPositionInMainWindow","setState","showColorPicker","newColor","hex","state","buttonClassNames","colorBox","colorInput","el","handleColorBoxClick","color","backgroundColor","handleColorPickerBlur","handleColorPickerInvalidate","handleColorChange","noOp","onApply","schema","object","ApplyModal","values","faramErrors","faramValues","getClassName","Modal","handleFaramChange","onValidationFailure","handleFaramFailure","onValidationSuccess","handleFaramSuccess","DangerButton","array","TAB","ESC","ENTER","DOWN","UP","newIndex","WrappedComponent","ListenerComponent","nextProps","oldIsOptionsShown","oldOptions","oldKeySelector","newIsOptionsShown","newOptions","newKeySelector","handleInputKeyDown","hoistNonReactStatics","TextInput","elementRef","createRef","scrollToFocus","renderEmpty","parentContainer","_","Empty","modifier","renderOption","propTypeKey","RawKeyInput","handleKeyboard","RawInput","memoize","showOptionsPopup","finalSearchValue","findDefaultSearchValue","filteredOptions","filterOptions","selectInput","actionsClassName","dropdownButtonClassName","clearClassName","any","DelayedComponent","info","changeTimeout","clearTimeout","pendingChange","setTimeout","lastValue","stateValue","handleChange","DaysHeader","dayNames","year","month","onYearMonthChange","onMonthClick","DayPicker","dayKey","highlight","today","getFullYear","getMonth","getDate","day","selectedId","selected","highlighted","newValue","Date","oldTimestamp","getTime","newTimestamp","date","getDayClassName","handleDayChange","week","days","renderDay","createDays","firstDate","lastDate","numDays","firstDay","getDay","totalDays","lastDay","weeks","j","parseInt","initial","monthName","monthNames","dayPicker","header","handlePrevious","handleNext","renderWeek","onYearClick","MonthPicker","monthIndex","monthPicker","handlePrevYearClick","handleNextYearClick","months","getMonthClassName","handleMonthChange","YEARS_PER_PAGE","YearPicker","oldState","startYear","round","years","endYear","yearPicker","getYearClassName","handleYearChange","DatePicker","datePicker","picker","setMonthPicker","handleYearMonthChange","setYearPicker","initialDate","Picker","renderPicker","padLength","DigitalInput","valueFromProps","getNewValue","digitalInput","isFalsy","padStart","oldValue","match","padAndTrim","ActionButtons","onClearButtonClick","onTodayButtonClick","onCalendarButtonClick","clearButtonClassName","clear","separator","createDate","y","m","getErrorForDateValues","yearValue","monthValue","dayValue","encodeDate","decodeDate","isValidDateString","DateInput","yearInputFocused","monthInputFocused","dayInputFocused","dateInput","invalid","showDatePicker","datePickerContainer","timestamp","newDate","decodeAsDate","valueToOverride","actionButtonsContainer","containerHover","datetime","handleDatePickerBlur","handleDatePickerInvalidate","handleDatePickerDatePick","FloatingDatePicker","renderDatePicker","inputAndActionsClassName","onMouseOver","handleContainerHover","handleContainerLeave","units","handleDayInputFocus","handleDayInputBlur","dayUnit","getNumDaysInMonthX","step","handleDayInputChange","handleMonthInputFocus","handleMonthInputBlur","monthUnit","handleMonthInputChange","handleYearInputFocus","handleYearInputBlur","yearUnit","handleYearInputChange","actionButtons","handleTodayButtonClick","handleCalendarButtonClick","handleActionButtonsInvalidate","Delay","shape","startDate","endDate","presets","setHours","yesterday","setDate","currentWeek","lastSevenDays","currentMonth","setMonth","lastThirtyDays","DateFilter","showExactModal","showRangeModal","setNewDate","dateFilterModal","closeExactModal","applyExactDate","exactModalSchema","faramElementName","closeRangeModal","applyRangeDate","rangeModalSchema","calculateOptionsAndValue","selectInputOptions","selectInputValue","CustomExactModal","renderExactModal","CustomRangeModal","renderRangeModal","Fragment","handleSelectInputChange","fields","requiredCondition","formatDateToString","defaultOptions","preset","test","formatDate","AccentButton","required","resize","selectOnFocus","NormalTextArea","textArea","handleBlur","handleFocus","showFormatButton","FormattedTextArea","formatPdfText","excerpt","formattedText","area","formatButton","handleFormatText","shouldDisableFormat","listClassName","tooltipSelector","searchText","segment","NormalListSelection","listSelection","multiSegment","singleSegment","isSelected","indexOf","itemData","handleItemChange","getFilteredOptions","renderParams","Input","renderInput","optionLabel","activeKeys","activeKeysMap","listToMap","k","generateActiveMap","oldActiveKeys","newActiveKeys","isListEqual","emptyList","hideSelectAllButton","NormalMultiSelectInput","optionsMap","selectedOptions","v","optionIndex","showSelectAllButton","inputTitle","findPlaceholderValue","finalPlaceholder","multiSelectInput","completelyFilled","inputAndActionClassName","selectAllButtonClassName","selectAllButton","handleSelectAllButtonClick","sanitizeNumber","replace","realValue","isTruthy","isSign","getNumberAndSign","Number","isNaN","sign","stringValue","toString","firstCharacter","charAt","substring","NormalNumberInput","numberWithSeparator","addSeparator","NaN","numberInput","getDisplayValue","radioClassName","radio","defaultChecked","RadioInput","selectedOption","handleOptionClick","getSelectedOption","radioInput","optionKeyExtractor","RangeFilter","startValue","handleUpdate","endValue","updateFromProps","startIndex","endIndex","handleStartValueChange","handleEndValueChange","showStatus","multiple","accept","RawFileInput","isArray","file","filesFromInput","fileInput","files","isValidFile","invalidFiles","fileInputWrapper","status","getFileStatus","mimeType","acceptString","extensionMatch","exec","mimeMatch","some","toLowerCase","colorSelector","isDefaultSelector","default","ScaleInput","scaleInput","defaultOption","getOptionClassName","checkAndSetDefaultValue","textInput","SearchInput","searchInput","typeToSearch","noMatchingResults","noOptionsAvailable","SearchMultiSelectInput","renderEmptyFromProps","SearchSelectInput","SegmentOption","segmentOption","segmentButtonInput","SegmentInput","segmentInput","changeEvent","finalValue","segmentContainer","marker","ListItem","listItem","onDismiss","itemKey","DismissableListItem","dismissableListItem","dismissButton","handleDismissButtonClick","hideRemoveFromListButton","selectClassName","listProps","topRightChild","SelectInputWithList","selectInputWithList","handleItemDismiss","objectValues","getObjectFromValue","newProps","TopRightChild","listClassNames","selectClassNames","hasTopRightChild","Item","headerContainer","MultiSelectInput","getListItemParams","encodeTime","h","decodeTime","isValidTimeString","TimeInput","hourInputFocused","minuteInputFocused","timeInput","getHours","getMinutes","hourValue","minuteValue","handleHourInputFocus","handleHourInputBlur","unit","handleHourInputChange","handleMinuteInputFocus","handleMinuteInputBlur","handleMinuteInputChange","startTime","endTime","TimeFilter","time","timeFilterModal","applyExactTime","applyRangeTime","NewSelectInput","NewRawSelectInput","fruits","vegetables","inputList","description","component","TextArea","rows","NumberInput","ListSelection","InputDetails","Component","usage","componentProps","inputDetails","heading","Inputs","formattedTextArea","searchSelectInput","searchMultiSelectInput","faramSchema","views","tabs","inputs","VerticalTabs","useHash","inputGroupKeySelector","inputGroupRendererParams","inputGroupComparator","faram","MultiViewContainer","myInput","headingClassName","Header","ESCAPE_KEY","closeOnOutsideClick","wrapper","wrapperRef","outsideClick","handleClickOutside","Body"],"mappings":"gFACAA,EAAOC,QAAU,CAAC,qBAAqB,kDAAkD,iBAAmB,kDAAkD,MAAQ,qCAAqC,MAAQ,sCAAsC,OAAS,yC,uBCAlQD,EAAOC,QAAU,CAAC,uBAAuB,oDAAoD,kBAAoB,oDAAoD,aAAa,2CAA2C,UAAY,2CAA2C,cAAc,4CAA4C,WAAa,4CAA4C,MAAQ,uC,uBCA/YD,EAAOC,QAAU,CAAC,OAAS,uCAAuC,MAAQ,wC,uBCA1ED,EAAOC,QAAU,CAAC,YAAY,0CAA0C,SAAW,4C,uBCAnFD,EAAOC,QAAU,CAAC,iBAAiB,+CAA+C,cAAgB,+CAA+C,QAAU,wCAAwC,KAAO,sC,qBCA1MD,EAAOC,QAAU,CAAC,OAAS,uCAAuC,eAAe,6CAA6C,YAAc,6CAA6C,KAAO,qCAAqC,YAAc,2CAA2C,iBAAiB,+CAA+C,cAAgB,+CAA+C,gBAAgB,6CAA6C,aAAe,6CAA6C,iBAAiB,+CAA+C,cAAgB,+CAA+C,gBAAgB,8CAA8C,aAAe,8CAA8C,iBAAiB,+CAA+C,cAAgB,+CAA+C,iBAAiB,8CAA8C,cAAgB,8CAA8C,yBAAyB,uDAAuD,oBAAsB,uDAAuD,KAAO,qCAAqC,2BAA2B,yDAAyD,uBAAyB,yDAAyD,yBAAyB,uDAAuD,qBAAuB,yD,uBCAl+CD,EAAOC,QAAU,CAAC,qBAAqB,kDAAkD,iBAAmB,kDAAkD,oBAAoB,kDAAkD,gBAAkB,kDAAkD,MAAQ,sCAAsC,QAAU,wCAAwC,eAAe,6CAA6C,YAAc,6CAA6C,oBAAoB,kDAAkD,gBAAkB,kDAAkD,kBAAkB,+CAA+C,eAAiB,+CAA+C,SAAW,yCAAyC,OAAS,uCAAuC,iBAAiB,+CAA+C,aAAe,+CAA+C,oBAAoB,kDAAkD,gBAAkB,kDAAkD,oBAAoB,kDAAkD,iBAAmB,kDAAkD,yBAAyB,uDAAuD,oBAAsB,uDAAuD,eAAe,6CAA6C,YAAc,6CAA6C,MAAQ,wC,uBCA7hDD,EAAOC,QAAU,CAAC,YAAY,0CAA0C,SAAW,0CAA0C,kBAAkB,gDAAgD,cAAgB,gDAAgD,MAAQ,qCAAqC,QAAU,0C,uBCAtTD,EAAOC,QAAU,CAAC,YAAY,0CAA0C,SAAW,0CAA0C,MAAQ,sCAAsC,QAAU,wCAAwC,MAAQ,qCAAqC,MAAQ,sCAAsC,SAAW,yCAAyC,SAAW,2C,uBCAvXD,EAAOC,QAAU,CAAC,aAAa,2CAA2C,UAAY,2CAA2C,SAAW,wCAAwC,MAAQ,sCAAsC,wBAAwB,sDAAsD,oBAAsB,sDAAsD,MAAQ,qCAAqC,WAAW,yCAAyC,QAAU,yCAAyC,aAAa,2CAA2C,UAAY,2CAA2C,YAAY,0CAA0C,SAAW,0CAA0C,iBAAiB,8CAA8C,cAAgB,8CAA8C,QAAU,uCAAuC,QAAU,wCAAwC,MAAQ,sCAAsC,SAAW,yCAAyC,MAAQ,qCAAqC,KAAO,uC,uBCAhmCD,EAAOC,QAAU,CAAC,qBAAqB,mDAAmD,kBAAoB,mDAAmD,KAAO,uC,qBCAxKD,EAAOC,QAAU,CAAC,eAAe,4CAA4C,YAAc,4CAA4C,MAAQ,sCAAsC,QAAU,wCAAwC,MAAQ,sCAAsC,MAAQ,sCAAsC,SAAW,yCAAyC,SAAW,2C,qBCAlYD,EAAOC,QAAU,CAAC,uBAAuB,qDAAqD,kBAAoB,qDAAqD,aAAa,2CAA2C,UAAY,2CAA2C,cAAc,4CAA4C,WAAa,4CAA4C,MAAQ,wC,qBCAjZD,EAAOC,QAAU,CAAC,QAAU,wCAAwC,KAAO,uC,qBCA3ED,EAAOC,QAAU,CAAC,eAAe,4CAA4C,YAAc,4CAA4C,OAAS,uCAAuC,KAAO,qCAAqC,MAAQ,qCAAqC,KAAO,oCAAoC,OAAS,uCAAuC,MAAQ,sCAAsC,SAAW,2C,qBCApaD,EAAOC,QAAU,CAAC,yBAAyB,sDAAsD,oBAAsB,sDAAsD,mBAAmB,gDAAgD,gBAAkB,gDAAgD,MAAQ,sCAAsC,KAAO,oCAAoC,YAAY,yCAAyC,SAAW,yCAAyC,MAAQ,sCAAsC,SAAW,0C,qBCA7iBD,EAAOC,QAAU,CAAC,gBAAgB,8CAA8C,aAAe,8CAA8C,KAAO,qCAAqC,OAAS,uCAAuC,QAAU,wCAAwC,YAAc,4CAA4C,QAAU,wCAAwC,MAAQ,wC,qBCA/YD,EAAOC,QAAU,CAAC,OAAS,uCAAuC,QAAU,wCAAwC,OAAS,yC,qBCA7HD,EAAOC,QAAU,CAAC,KAAO,qC,qBCAzBD,EAAOC,QAAU,CAAC,MAAQ,sCAAsC,mBAAmB,iDAAiD,cAAgB,mD,qBCApJD,EAAOC,QAAU,CAAC,YAAY,0CAA0C,SAAW,4C,6QCI7EC,EAAY,CACdC,UAAWC,IAAUC,OAKrBC,SAAUF,IAAUG,UAAU,CAC1BH,IAAUI,QAAQJ,IAAUK,SAC5BL,IAAUK,QACVL,IAAUM,OACXC,YAQcC,E,yIAKR,MAIDC,KAAKC,MAFLR,EAFC,EAEDA,SAIES,EAAa,CACf,eAPC,EAGDZ,UAMAa,IAAOC,QAEX,OACI,4BAAQd,UAAWY,EAAWG,KAAK,MAC7BZ,O,GAlBkBa,IAAMC,e,IAArBR,E,YACEV,G,IADFU,E,eALA,CACjBT,UAAW,M,qBClBfH,EAAOC,QAAU,CAAC,cAAc,4CAA4C,WAAa,4CAA4C,MAAQ,sCAAsC,OAAS,uCAAuC,SAAW,yCAAyC,YAAY,0CAA0C,SAAW,0CAA0C,KAAO,uC,qBCAzYD,EAAOC,QAAU,CAAC,gBAAgB,8CAA8C,aAAe,8CAA8C,oBAAoB,kDAAkD,iBAAmB,kDAAkD,MAAQ,uC,qBCAhSD,EAAOC,QAAU,CAAC,cAAc,4CAA4C,WAAa,8C,uBCAzFD,EAAOC,QAAU,CAAC,oBAAoB,kDAAkD,gBAAkB,oD,qBCA1GD,EAAOC,QAAU,CAAC,cAAc,2CAA2C,WAAa,6C,qBCAxFD,EAAOC,QAAU,CAAC,OAAS,sCAAsC,QAAU,0C,qBCA3ED,EAAOC,QAAU,CAAC,cAAc,4CAA4C,WAAa,4CAA4C,MAAQ,sCAAsC,OAAS,uCAAuC,MAAQ,sCAAsC,SAAW,2C,uBCA5RD,EAAOC,QAAU,CAAC,OAAS,uCAAuC,MAAQ,sCAAsC,MAAQ,sCAAsC,MAAQ,qCAAqC,QAAU,wCAAwC,SAAW,yCAAyC,YAAY,0CAA0C,SAAW,4C,qBCAlXD,EAAOC,QAAU,CAAC,SAAW,yCAAyC,UAAY,yCAAyC,MAAQ,sCAAsC,MAAQ,sCAAsC,QAAU,wCAAwC,SAAW,wCAAwC,YAAY,0CAA0C,SAAW,4C,qBCA7XD,EAAOC,QAAU,CAAC,YAAY,yCAAyC,SAAW,yCAAyC,OAAS,uCAAuC,MAAQ,uC,qBCAnLD,EAAOC,QAAU,CAAC,QAAU,wCAAwC,MAAQ,wC,qBCA5ED,EAAOC,QAAU,CAAC,QAAU,uCAAuC,MAAQ,qCAAqC,KAAO,sC,qBCAvHD,EAAOC,QAAU,CAAC,cAAc,4CAA4C,WAAa,4CAA4C,KAAO,qCAAqC,MAAQ,sCAAsC,MAAQ,sCAAsC,OAAS,uCAAuC,MAAQ,sCAAsC,SAAW,2C,4FCKvWoB,IAHO,SAAAP,GAAK,OACvB,kBAAC,IAAD,KAAQQ,WAAW,kBAAqBR,M,qBCH5Cd,EAAOC,QAAU,CAAC,SAAW,2C,28BCoBtB,IAAMsB,EAAoB,CAC7BC,IAAK,EACLC,KAAM,EACNC,MAAO,EACPC,OAAQ,GAGCC,EAAwB,CACjCJ,IAAK,EACLC,KAAM,EACNI,MAAO,EACPC,OAAQ,GAGCC,EAAsB,CAC/BC,KAAM,EACNC,KAAMC,IACNC,KAAM,EACNC,KAAMF,KAWJG,EAAwB,CAC1BC,YAAa,EAAF,GAAOf,GAClBgB,WAAY,EAAF,GAAOhB,GACjBiB,aAAc,EAAF,GAAOjB,GACnBkB,OAAQ,EAAF,GAAOb,GACbc,MAAO,EAAF,GAAOX,IA+CT,SAASY,EAA0BC,GACtC,OA7CG,SAAuBA,GAC1B,IAAMC,EAAS,EAAH,GACLR,EADK,GAELO,GAIHN,EAKAO,EALAP,YACAC,EAIAM,EAJAN,WACAC,EAGAK,EAHAL,aACAC,EAEAI,EAFAJ,OACAC,EACAG,EADAH,MAGEI,EAAWC,KAAKC,IAClBD,KAAKE,IACDX,EAAYZ,MACZgB,EAAMT,MAEVS,EAAMV,MAGJkB,EAAiB,CACnB1B,IAAMe,EAAWf,IAAMe,EAAWZ,OAAUc,EAAOjB,IACnDC,KAAMc,EAAWd,KAAOgB,EAAOhB,KAC/BC,MAAOoB,GAILK,EAAmBZ,EAAWf,IAAMe,EAAWZ,OAASW,EAAYX,OACtEa,EAAab,OAASwB,IACtBD,EAAe1B,IAAOe,EAAWf,IAAMgB,EAAahB,KAC7Cc,EAAYX,OAASc,EAAOX,SAGvC,IAAMsB,EAAmBb,EAAWd,KAAOqB,EAM3C,OALIN,EAAad,MAAQ0B,IACrBF,EAAezB,KAAQe,EAAaf,KAAOc,EAAWd,KAAOc,EAAWb,OACjEwB,EAAexB,MAAQe,EAAOZ,QAGlCqB,EAIAG,CAAc,EAAD,GACbT,EADa,CAEhBJ,aAAc,CACVhB,IAAK8B,OAAOC,QACZ9B,KAAM6B,OAAOE,QACb9B,MAAO4B,OAAOG,WACd9B,OAAQ2B,OAAOI,gBAKpB,SAASC,EAA8Bf,GAC1C,IAAMgB,EAAYjB,EAA0BC,GAC5C,MAAO,CACHpB,IAAK,GAAF,OAAKoC,EAAUpC,IAAf,MACHC,KAAM,GAAF,OAAKmC,EAAUnC,KAAf,MACJC,MAAO,GAAF,OAAKkC,EAAUlC,MAAf,O,qCCtEb,SAASmC,EAAU/C,GAAiB,IAE5BQ,EAaAR,EAbAQ,WACAhB,EAYAQ,EAZAR,SACWwD,EAWXhD,EAXAX,UACA4D,EAUAjD,EAVAiD,SACAC,EASAlD,EATAkD,SACAC,EAQAnD,EARAmD,QACAC,EAOApD,EAPAoD,uBACAC,EAMArD,EANAqD,qBACAC,EAKAtD,EALAsD,YACAC,EAIAvD,EAJAuD,KACAC,EAGAxD,EAHAwD,QACAC,EAEAzD,EAFAyD,cACGC,EAdyB,IAe5B1D,EAf4B,sKAiB1B2D,EAAcC,sBAChB,SAACC,GACGL,EAAQ,CACJM,MAAOD,EACP9B,OAAQ0B,KAGhB,CACID,EACAC,IAIFM,EAAkBC,YACpBhB,EACA,SACA9C,IAAO+D,OACPzD,EACAA,GAAcN,IAAOM,GACrB0C,KAAc1D,GAAY,yBAC1B0D,KAAc1D,GAAYU,IAAOgE,oBACjCd,GAA0B,2BAC1BA,GAA0BlD,IAAOkD,uBACjCC,GAAwB,yBACxBA,GAAwBnD,IAAOmD,qBAC/BC,GAAe,cACfA,GAAepD,IAAOoD,aAGpBa,EAAgBH,YAClB,OACA9D,IAAOkE,KACPjB,GAAWjD,IAAOmE,aAGtB,OAEI,gCACIhF,UAAW0E,EACXd,SAAUA,GAAYE,EACtBK,QAASG,EACTJ,KAAMA,GACFG,GAEJ,kBAACY,EAAA,EAAD,CACIC,KAAMpB,EAAU,UAAYD,EAC5B7D,UAAW8E,IAEb3E,GAIduD,EAAOyB,aAAe,CAClBhE,WAAY,iBACZyC,UAAU,EACVE,SAAS,EACTC,wBAAwB,EACxBC,sBAAsB,EACtBC,aAAa,EACbC,KAAM,UAGKR,IC7HH0B,ED6HG1B,I,wCC7HH0B,O,aAAAA,I,cAAAA,I,kBAAAA,I,gBAAAA,I,aAAAA,M,KCUZ,IAAMC,EAAc,CAACD,EAAKE,GAAIF,EAAKG,KAAMH,EAAKI,OAE9C,SAASC,EACLC,EACAC,EACAC,GAEA,OAAOD,EAAQE,UAAU,SAAAC,GAAC,OAAIF,EAAYE,KAAOJ,IAGrD,SAASK,EACLC,EACAC,EACAN,EACAC,GAEA,KAAID,EAAQO,QAAU,GAAtB,CAIA,IAGIC,EAHUV,EAAeO,EAAQL,EAASC,GAU9C,OANkB,IAAdO,IACAA,EAAWF,EAAY,GAAK,EAAI,GAK7BL,EAAYD,EAFFS,YAAOD,EAAWF,EAAWN,EAAQO,WAqG3CG,MAhGf,SACIC,EACAC,EACAX,EACAD,EACAa,EAEAC,EACAC,EACAC,EACAC,GAEA,IAAMC,EAAgBtC,sBAClB,SAACC,GAA6C,IAElCsC,EAAYtC,EAAZsC,QACR,IAAIN,GAAmBM,IAAY1B,EAAK2B,KAAOD,IAAY1B,EAAK4B,KAIzD,IAAKR,GAAkBnB,EAAY4B,SAASH,GAG/CtC,EAAE0C,kBACF1C,EAAE2C,iBACFR,SACG,GAAIG,IAAY1B,EAAKI,MACpB4B,YAAUd,KACV9B,EAAE0C,kBACF1C,EAAE2C,iBACFP,EAAeN,SAEhB,GAAIQ,IAAY1B,EAAKE,GAAI,CAC5Bd,EAAE0C,kBACF1C,EAAE2C,iBACF,IAAME,EAAgBtB,EAAUO,EAAY,EAAGX,EAASC,GACxDa,EAAcY,QACX,GAAIP,IAAY1B,EAAKG,KAAM,CAC9Bf,EAAE0C,kBACF1C,EAAE2C,iBACF,IAAME,EAAgBtB,EAAUO,GAAa,EAAGX,EAASC,GACzDa,EAAcY,SAtBdX,KAyBR,CACIJ,EACAE,EACAZ,EACAa,EACAC,EACAE,EACAD,EACAhB,IAyCR,OApCA2B,oBACI,WACI,GAAKd,EAOL,QACoBe,IAAhBhB,IAC0D,IAAvDd,EAAec,EAAaZ,EAASC,GAExCa,EAAcF,OACX,CACH,IAAMc,EAAgBtB,OAAUwB,EAAW,EAAG5B,EAASC,GACvDa,EAAcY,aAbKE,IAAfjB,GACAG,OAAcc,IAe1B,CAACf,IAILc,oBACI,WACI,GAAId,EAAgB,CAChB,IAAMa,EAAgBtB,OAAUwB,EAAW,EAAG5B,EAASC,GACvDa,EAAcY,KAGtB,CACIzB,EACAD,IAIDkB,G,qBCxGIW,2BArBf,SAAkB7G,EAAc8G,GAAkC,IAE/C9D,EAEXhD,EAFAX,UACGqE,EAHuD,IAI1D1D,EAJ0D,eAMxDX,EAAY2E,YACdhB,EACA9C,IAAO6G,SACP,aAGJ,OACI,+BACID,IAAKA,EACLzH,UAAWA,GACPqE,M,qBCSDsD,MA7Bf,SAAsBhH,GAAc,IAE5BiH,EAEAjH,EAFAiH,MACAC,EACAlH,EADAkH,KAGE7H,EAAY2E,YACd9D,IAAOiH,kBACP,uBACAF,GAAS/G,IAAOkH,WAChBH,GAAS,cACTC,GAAQhH,IAAOmH,UACfH,GAAQ,eACNA,GAAQD,IAAU/G,IAAOoH,QACzBJ,GAAQD,IAAU,SAGlBM,EAAUN,GAASC,EAEzB,OACI,yBACI7H,UAAWA,EACXmI,MAAOD,GAELA,GAAW,M,sBClBzB,SAASE,GAAMzH,GAAc,IAErB0H,EASA1H,EATA0H,OACAlI,EAQAQ,EARAR,SACWwD,EAOXhD,EAPAX,UACA4D,EAMAjD,EANAiD,SACAgE,EAKAjH,EALAiH,MACAO,EAIAxH,EAJAwH,MACAG,EAGA3H,EAHA2H,eACAC,EAEA5H,EAFA4H,wBACGlE,EAVkB,IAWrB1D,EAXqB,yGAanBX,EAAY2E,YACdhB,EACA,cACA9C,KAAO2H,YACNrI,GAAY,SACZA,GAAYU,KAAOoH,MACpBL,GAAS/G,KAAO+G,MAChBA,GAAS,QACTS,GAAUxH,KAAOwH,OACjBA,GAAU,SACVzE,GAAY/C,KAAO+C,SACnBA,GAAY,YAGhB,OACI,6BACI5D,UAAWA,EACXmI,MAAOA,GACH9D,GAEJ,yBAAKrE,UAAWa,KAAOS,MAClBnB,GAEHmI,GACE,yBAAKtI,UAAW2E,YAAI4D,EAAyB1H,KAAOa,QAC9C4G,IAOtBF,GAAMjD,aAAe,CACjBkD,QAAQ,EACRzE,UAAU,EACVgE,OAAO,GAGIQ,U,4DClDAK,OAVf,SAAgB9H,GAAc,IAClBR,EAAaQ,EAAbR,SACR,OACIuI,KAASC,aACLxI,EACAyI,SAASC,OCKrB,SAASC,GAAMnI,GAAc,IAErBR,EAGAQ,EAHAR,SACA4I,EAEApI,EAFAoI,UACAC,EACArI,EADAqI,aAGEC,EAAmB1E,sBACrB,WACQyE,GACAA,KAGR,CAACA,IA4BL,OAzBAE,0BACID,EACA,IAGJ3B,oBACI,WAEI,OADAnE,OAAOgG,iBAAiB,SAAUF,GAC3B,WACH9F,OAAOiG,oBAAoB,SAAUH,KAG7C,CAACA,IAGL3B,oBACI,WAEI,OADAnE,OAAOgG,iBAAiB,SAAUF,GAC3B,WACH9F,OAAOiG,oBAAoB,SAAUH,KAG7C,CAACA,IAGDF,EAEI,kBAAC,GAAD,KACI,kBAAC,KAAD,KACM5I,IAOd,kBAAC,GAAD,KACMA,GAId2I,GAAM3D,aAAe,CACjB4D,WAAW,GAGAD,UC3ETO,I,kDAAmB,iBACnBC,GAAuB,eACvBC,GAA4B,qBAsBlC,SAASC,GAAuBC,GAC5BA,EAAOC,QAAQ,SAACC,EAAgBC,GACxBA,IAAMH,EAAOvD,OAAS,EAErByD,EAAsBE,QAAQC,UAAY,OAG1CH,EAAsBE,QAAQC,UAAY,UAkDxCC,OA7Cf,SAAiB/J,EAAoBgK,GACjC,IAAMC,EAAWC,kBACb,kBAAMC,eACN,IAgCJ,OA7BA7C,oBACI,WAlCR,IAAsB1G,EAAoBwJ,EAChCC,EAkCE,GAAKL,EAYL,OARApB,SAASC,KAAK7I,WAvCJY,EAwCNgI,SAASC,KAAK7I,UAxCYoK,EAyC1Bb,IAxCNc,EAAgBzJ,EAAW0J,MAAM,MACzBC,KAAKH,GACZC,EAActJ,KAAK,MA0ClByI,GADeZ,SAAS4B,iBAAiBnB,KAGlC,WACHT,SAASC,KAAK7I,UA1C9B,SAAyBY,EAAoB6J,GACzC,IAAMJ,EAAgBzJ,EAAW0J,MAAM,KACjCI,EAAQL,EAAcxE,UAAU,SAAA8E,GAAC,OAAIA,IAAMF,IAIjD,OAHe,IAAXC,GACAL,EAAcO,OAAOF,EAAO,GAEzBL,EAActJ,KAAK,KAoCY8J,CACtBjC,SAASC,KAAK7I,UACduJ,IAMJC,GAH0BsB,MAAMC,KAC5BnC,SAAS4B,iBAAiBnB,KAC5B2B,OAAO,SAAAC,GAAC,OAAIA,EAAEC,KAAOjB,OAI/B,CAACD,EAASC,IAGTD,EAIE,CACHC,EACAtF,YAAI3E,EAAWsJ,KALR,MAAC/B,EAAWvH,I,wBCzC3B,SAASmL,GAAkBxK,GAAc,IAEjCR,EAUAQ,EAVAR,SACWwD,EASXhD,EATAX,UACAoL,EAQAzK,EARAyK,cACArC,EAOApI,EAPAoI,UACAsC,EAMA1K,EANA0K,OACAC,EAKA3K,EALA2K,QACAtC,EAIArI,EAJAqI,aACAuC,EAGA5K,EAHA4K,YACAC,EAEA7K,EAFA6K,UACAC,EACA9K,EADA8K,SAGEC,EAAeC,iBAAuB,MAEtCC,EAA4BrH,sBAC9B,WAAM,IACesH,EAAcH,EAAvBI,QACR,GAAID,GAAa7C,EAAc,CAC3B,IAAM+C,EAAkB/C,EAAa6C,GACjCE,EACAC,OAAOC,OAAOJ,EAAUK,MAAOH,GAE/BI,QAAQvE,MAAM,wDAI1B,CACI8D,EACA1C,IAIFoD,EAAkB7H,sBACpB,SAACC,GAAkB,IACEqH,EAAcH,EAAvBI,QACSO,EAAWb,EAApBM,QAEFQ,EAA2BT,IAC7BA,IAAcrH,EAAE+H,QAAUV,EAAUW,SAAShI,EAAE+H,SAG7CE,EAAoCJ,IACtCA,IAAW7H,EAAE+H,QAAUF,EAAOG,SAAShI,EAAE+H,SAGvBD,GAA4BG,EAMvClB,GACPA,EAAY/G,GAJR6G,GACAA,KAMZ,CACIA,EACAE,EACAC,EACAE,IAIFgB,EAAmBnI,sBACrB,SAACE,GAAyB,IACLoH,EAAcH,EAAvBI,QACYD,GAA6C,SAAhCA,EAAUhC,QAAQC,WAChCwB,GAAWF,GAAiB3G,EAAMqC,UAAY1B,EAAK4B,KAClEsE,EAAQ,CAAEqB,QAAQ,KAG1B,CACIvB,EACAE,EACAI,IAIRpE,oBACI,WAEI,OADAnE,OAAOgG,iBAAiB,YAAaiD,GAC9B,WACHjJ,OAAOiG,oBAAoB,YAAagD,KAGhD,CAACA,IAGL9E,oBACI,WAEI,OADAsB,SAASO,iBAAiB,UAAWuD,GAC9B,WACH9D,SAASQ,oBAAoB,UAAWsD,KAGhD,CAACA,IAGL,IAAME,EAAcjI,YAChBhB,EACA9C,KAAOgM,kBACP,sBAvGiC,EA0GJ9C,GAAQ6C,EAAanB,GA1GjB,WA0G9BqB,EA1G8B,KA0GjB9M,EA1GiB,KA4GrC,OACI,kBAAC,GAAD,CACIgJ,aAAc4C,EACd7C,UAAWA,GAEX,yBACImC,GAAI4B,EACJ9M,UAAWA,EACXyH,IAAKiE,GAEHvL,IAKlBgL,GAAkBhG,aAAe,CAC7BiG,eAAe,EACfrC,WAAW,EACX0C,UAAU,GAECN,U,8DChHf,SAAS4B,GACLpM,GACF,IAEMqM,EAUArM,EAVAqM,iBACAC,EASAtM,EATAsM,gBACUC,EAQVvM,EARAwM,SACeC,EAOfzM,EAPA0M,cACAC,EAMA3M,EANA2M,uBACAC,EAKA5M,EALA4M,oBACAC,EAIA7M,EAJA6M,KACA5H,EAGAjF,EAHAiF,YACA6H,EAEA9M,EAFA8M,eACAC,EACA/M,EADA+M,kBAGEC,EAAiB,SAACC,EAAUhE,GAC9B,IAAMlE,EAAME,EAAYgI,EAAOhE,GACzBiE,EAAaJ,EAAe/H,EAAKkI,EAAOhE,EAAG4D,GAEjD,OACI,kBAACN,EAAD,KACIxH,IAAKA,EACL1F,UAAW0N,GACPG,KAgBVC,EAAS5D,kBACX,kBAAM6D,YAAgBP,EAAMR,IAC5B,CAACQ,EAAMR,IAGLgB,EAAkB9D,kBACpB,WAEI,OADa8B,OAAOiC,KAAKH,GACbI,KAAKjB,IAErB,CAACa,EAAQb,IAGP9M,EAA8B,GAMpC,OALA6N,EAAgBtE,QAAQ,SAACyE,EAAUvE,GAC/BzJ,EAASoK,KA3BO,SAAC4D,EAAczD,GAC/B,IAAMmD,EAAaN,EAAoBY,EAAUzD,EAAO8C,GAExD,OACI,kBAACJ,EAAD,KACI1H,IAAKyI,EACLnO,UAAWsN,GACPO,IAoBEO,CAAYD,EAAUvE,IACpCzJ,EAASoK,KAAT,MAAApK,EAAQ,KAAS2N,EAAOK,GAAUE,IAAIV,OAItC,kBAAC,WAAD,KACKxN,GAKb,SAASmO,GACL3N,GACF,IAEM6M,EAKA7M,EALA6M,KACA5H,EAIAjF,EAJAiF,YACUsH,EAGVvM,EAHAwM,SACAO,EAEA/M,EAFA+M,kBACAD,EACA9M,EADA8M,eAGJ,GAAIc,YAAaf,GACb,OAAO,KAgBX,OApGJ,SACI7M,GAEA,QAAUA,EAA6D6N,QAiGlEC,CAAS9N,GASV,kBAACoM,GACOpM,GARJ,kBAAC,WAAD,KACK6M,EAAKa,IAhBK,SAACT,EAAUhE,GAC9B,IAAMlE,EAAME,EAAYgI,EAAOhE,GACzBiE,EAAaJ,EAAe/H,EAAKkI,EAAOhE,EAAG4D,GAEjD,OACI,kBAACN,EAAD,KACIxH,IAAKA,EACL1F,UAAW0N,GACPG,OAoBpBS,GAAKnJ,aAAe,CAChBqI,KAAM,IAGKc,U,aCzHAI,OAvCf,SACIhD,EACAiD,EACAC,GAEA,IAAMC,EAAiBlD,mBAEvBrE,oBACI,WAAM,IACewH,EAAuBpD,EAAhCI,QASR,OARKgD,GAAuBA,EAAmBC,eAG3CF,EAAe/C,QAAU,IAAIkD,KAAeJ,GAC5CC,EAAe/C,QAAQmD,QAAQH,EAAmBC,eAClDJ,KAJAxC,QAAQ+C,KAAK,sDAOV,WAAM,IACQC,EAAyBzD,EAAlCI,QAEHqD,GAAyBA,EAAqBJ,cAK/CF,EAAe/C,SACf+C,EAAe/C,QAAQsD,UAAUD,EAAqBJ,eALtD5C,QAAQ+C,KAAK,2DASzB,CACIP,EACAC,EACAlD,EAAaI,W,wBC1BzB,SAASuD,GACLC,EACAC,EACAhO,EACAC,EACAgO,GAEA,OAAO5M,KAAKE,IACRyM,EACAD,GAAgBC,EAAcD,GAbtC,SAAgC/N,EAAeC,EAAgBgO,GAC3D,OAAOjO,EAAQqB,KAAK6M,KAAKjO,GAAUgO,EAYcE,CAAuBnO,EAAOC,EAAQgO,IAkB3F,SAASG,GAAQhP,GAAc,IAEvB4O,EAKA5O,EALA4O,YACAK,EAIAjP,EAJAiP,eACAN,EAGA3O,EAHA2O,YACAO,EAEAlP,EAFAkP,eACAC,EACAnP,EADAmP,aANuB,EASmBC,oBAAS,GAT5B,WASpBC,EAToB,KASHC,EATG,KAWrBvE,EAAeC,iBAAuB,MAEtCuE,EAAe3L,sBACjB,WACI0L,GAAmB,IAEvB,IAGEE,EAAe5L,sBACjB,SAACC,GAA6B,MAQtBA,EANA,GACIrC,YACIZ,EAJc,EAIdA,MACAC,EALc,EAKdA,OAKKqK,EAAcH,EAAvBI,QAEFsE,EAAWf,GACbC,EAAaC,EAAahO,EAAOC,EAAQsO,GAEvCO,EAAUhB,GACZQ,EAAgBD,EAAgBrO,EAAOC,EAAQsO,GAG/CjE,IACAA,EAAUK,MAAM3K,MAAhB,UAA2BA,EAA3B,MACAsK,EAAUK,MAAM1K,OAAhB,UAA4BA,EAA5B,MACAqK,EAAUK,MAAMkE,SAAhB,UAA8BA,EAA9B,MACAvE,EAAUK,MAAMmE,QAAhB,UAA6BA,EAA7B,QAGR,CACId,EACAK,EACAN,EACAO,EACAC,EACApE,IAIRgD,GACIhD,EACAwE,EACAC,GA5DuB,IAgEZxM,EAEXhD,EAFAX,UACAG,EACAQ,EADAR,SAGEH,EAAY2E,YACdhB,EACA9C,KAAOqH,SAGX,OACI,yBACIT,IAAKiE,EACL1L,UAAWA,GAETgQ,GAAmB7P,GAIjCwP,GAAQxK,aAAe,CACnBoK,YAAa,GACbK,eAAgB,GAChBN,YAAa,EACbO,eAAgB,EAChBC,aAAc,MAGHH,UCpGAW,OAnBf,SAAwB3P,GAAc,IAEnBgD,EACXhD,EADAX,UAGEA,EAAY2E,YACd,QACAhB,GAGJ,OACI,yBAAK3D,UAAWA,GACZ,kBAAC,GAAD,2B,wBCCZ,SAASuQ,GAIP5P,GAAuC,IAEjCuK,EASAvK,EATAuK,GACWvH,EAQXhD,EARAX,UAEgBsQ,EAMhB3P,EANA6P,eAC0BC,EAK1B9P,EALA+P,yBACAC,EAIAhQ,EAJAgQ,SACA7M,EAGAnD,EAHAmD,QAEGO,EAV8B,IAWjC1D,EAXiC,qFAajCiQ,EAAU,KAERC,EAAUxM,EAAWmJ,KAAKtH,QAAU,EAIlC0K,EAFJC,EACIF,EACW7M,EAEL,KADA,kBAAC2M,EAAD,CAA0BzQ,UAAWa,KAAOoH,QAGxCqI,IAAmBxM,EACvB,kBAACwM,EAAD,CAAgBtQ,UAAWa,KAAOoH,QAClC,KAIN,kBAAC,GACO5D,GAKhB,IAAMrE,EAAY2E,YACdhB,EACA9C,KAAOiQ,SACP,YACAhN,GAAWjD,KAAOiD,QAClB+M,GAAW,kBACXA,GAAWhQ,KAAOkQ,eAGtB,OACI,yBACI7F,GAAIA,EACJlL,UAAWA,GAET8D,GAAW,kBAACkN,GAAA,EAAD,MACZJ,GAKbL,GAASpL,aAAe,CACpBqI,KAAM,GACNgD,eAAgBS,GAChBP,yBAA0BQ,KAC1BP,UAAU,EACV7M,SAAS,GAGEyM,U,wBCtEf,SAASY,GAA4BxQ,GACjC,IAAMyQ,EAASzF,iBAA0B,MACnC0F,EAAiB1F,kBAAO,GAG1BxL,EAOAQ,EAPAR,SACWwD,EAMXhD,EANAX,UACAsR,EAKA3Q,EALA2Q,SACAC,EAIA5Q,EAJA4Q,UACApN,EAGAxD,EAHAwD,QACAqN,EAEA7Q,EAFA6Q,QACAC,EACA9Q,EADA8Q,UAGJnK,oBACI,WACQiK,IAAcF,EAAevF,SAAWsF,EAAOtF,SAC/CsF,EAAOtF,QAAQ4F,eAAe,CAC1BC,SAAU,SACVC,MAAO,YAInB,CACIR,EAAOtF,QACPuF,EACAE,IAIR,IAAMjN,EAAcC,sBAChB,WACIJ,EAAQsN,IAEZ,CACItN,EACAsN,IAIFI,EAAkBtN,sBACpB,WACI8M,EAAevF,SAAU,EACzB0F,EAAQC,IAEZ,CACID,EACAC,IAIFK,EAAmBvN,sBACrB,WACI8M,EAAevF,SAAU,GAE7B,IAGE9L,EAAY2E,YACdhB,EACA9C,KAAOkR,OACP,SACAT,GAAYzQ,KAAOwH,OACnBiJ,GAAY,SACZC,GAAa1Q,KAAOmR,QACpBT,GAAa,WAGjB,OACI,4BACI9J,IAAK2J,EACLpR,UAAWA,EACXmE,QAASG,EACT2N,YAAaJ,EACbK,aAAcJ,EACd5N,KAAK,UAEH/D,GAIdgR,GAAOhM,aAAe,CAClBmM,UAAU,EACVC,WAAW,GAKAJ,U,wBC5Ef,SAASgB,GAAgCxR,GAAoB,IAE1CgD,EAgBXhD,EAhBAX,UACAwN,EAeA7M,EAfA6M,KACAlH,EAcA3F,EAdA2F,WACAV,EAaAjF,EAbAiF,YACAwM,EAYAzR,EAZAyR,cACA/G,EAWA1K,EAXA0K,OACArC,EAUArI,EAVAqI,aACAqJ,EASA1R,EATA0R,cACAC,EAQA3R,EARA2R,cACAC,EAOA5R,EAPA4R,oBACA/G,EAMA7K,EANA6K,UACgB8E,EAKhB3P,EALA6P,eAC0BC,EAI1B9P,EAJA+P,yBACA8B,EAGA7R,EAHA6R,MACA7B,EAEAhQ,EAFAgQ,SACA7M,EACAnD,EADAmD,QAGE2J,EAAiBlJ,sBACnB,SAACmB,EAAQqM,GAQL,MAAO,CACH5R,SARUoS,EACRA,EAAoBR,GACpBK,EAAcL,GAOhBT,SALa5L,IAAQ8M,EAMrBjB,UALc7L,IAAQY,EAMtBnC,QAASkO,EACTb,QAASc,EACTb,UAAW/L,IAGnB,CACIY,EACA8L,EACAC,EACAC,EACAC,EACAC,IAIFxS,EAAY2E,YACdhB,EACA9C,KAAO8E,QACP,WAGJ,OACI,kBAAC,GAAD,CACI0F,OAAQA,EACRrC,aAAcA,EACdwC,UAAWA,EACXxL,UAAWA,GAEX,kBAAC,GAAD,CACIwN,KAAMA,EACN5H,YAAaA,EACb6H,eAAgBA,EAChBN,SAAUgE,GACVX,eAAgBF,EAChBI,yBAA0BD,EAC1BE,SAAUA,EACV7M,QAASA,EACT9D,UAAWa,KAAO4R,QAMlCN,GAAQhN,aAAe,CACnBqI,KAAM,GACNmD,UAAU,EACV7M,SAAS,GAGEqO,U,ukBChDf,SAASO,GAAiD/R,GAAmC,IAErFgS,EAgCAhS,EAhCAgS,UACWhP,EA+BXhD,EA/BAX,UACA4D,EA8BAjD,EA9BAiD,SACAgE,EA6BAjH,EA7BAiH,MACAC,EA4BAlH,EA5BAkH,KACAjC,EA2BAjF,EA3BAiF,YACAgN,EA0BAjS,EA1BAiS,MACAC,EAyBAlS,EAzBAkS,eACAC,EAwBAnS,EAxBAmS,oBACAC,EAuBApS,EAvBAoS,6BACAX,EAsBAzR,EAtBAyR,cACAY,EAqBArS,EArBAqS,SAEAC,GAmBAtS,EApBAuS,oBAoBAvS,EAnBAsS,mBACAV,EAkBA5R,EAlBA4R,oBACA5M,EAiBAhF,EAjBAgF,QACAwN,EAgBAxS,EAhBAwS,iBACAC,EAeAzS,EAfAyS,YACAC,EAcA1S,EAdA0S,SACA7C,EAaA7P,EAbA6P,eACAE,EAYA/P,EAZA+P,yBACA4C,EAWA3S,EAXA2S,cACAC,EAUA5S,EAVA4S,qBACAC,EASA7S,EATA6S,sBACAC,EAQA9S,EARA8S,YACiBC,EAOjB/S,EAPAgT,gBACAC,EAMAjT,EANAiT,wBACAC,EAKAlT,EALAkT,iBACAC,EAIAnT,EAJAmT,UACAC,EAGApT,EAHAoT,UACA5L,EAEAxH,EAFAwH,MACAqK,EACA7R,EADA6R,MAGE9G,EAAeC,iBAAuB,MACtCqI,EAAWrI,iBAAyB,MACpCsI,EAAqBtI,mBAtC8D,EAwCjDoE,oBAAS,GAxCwC,WAwClFmE,EAxCkF,KAwCpEC,EAxCoE,OAyCvDpE,qBAzCuD,WAyClFzJ,EAzCkF,KAyCtE8N,EAzCsE,KA2CzF9M,oBACI,WAAM,IACeuE,EAAcH,EAAvBI,QACJD,IACAoI,EAAmBnI,QAAUD,EAAUwI,0BAG/C,CAAC3I,IAGL,IAAM4I,GAAyB/P,sBAC3B,WAAM,IACegQ,EAAUP,EAAnBlI,QACJyI,GACAA,EAAMC,SAILT,GACDd,GAAkB,IAI1B,CAACe,EAAUD,EAAWd,IAGpBwB,GAA2BlQ,sBAC7B,WAAM,IACegQ,EAAUP,EAAnBlI,QACJyI,GACAA,EAAMC,SAONvB,GAJCc,IAOT,CAACC,EAAUD,EAAWd,IAGpByB,GAAyBnQ,sBAC3B,WACI0O,GAAkB,IAEtB,CAACA,IAGC0B,GAAmBpQ,sBACrB,WACI4P,GAAgB,IAEpB,IAGES,GAAkBrQ,sBACpB,WACI4P,GAAgB,IAEpB,IAGEU,GAAoBtQ,sBACtB,SAACC,GAAyC,IACvBsQ,EAAQtQ,EAAEuQ,cAAjBvC,MACRS,GAAkB,EAAM6B,IAG5B,CAAC7B,IAGC+B,GAA0BzQ,sBAC5B,SAAC0Q,GACG,IAAM9S,EAAc8S,EAAiBZ,wBAEpBxI,EAAcH,EAAvBI,QACF1J,EAAayJ,EACbA,EAAUwI,wBACVJ,EAAmBnI,QAEnBxJ,EAAS,MAAKb,GAEdc,EAAQ,MAAKX,GAanB,OAZIQ,IACAG,EAAMV,KAAOO,EAAWb,MACxBgB,EAAMT,KAAOM,EAAWb,OAGKiC,EAA8B,CAC3DpB,aACAD,cACAG,SACAC,WAKR,CAACmJ,EAAcuI,IAGbiB,GAAqB3Q,sBACvB,SAACkN,GACGwB,GAAkB,GACdxB,IAAce,GACdQ,EAASvB,IAGjB,CAACe,EAAOQ,EAAUC,IAGhBkC,GAAyB5Q,sBAC3B,gBACkBgD,IAAViL,GACAQ,OAASzL,IAGjB,CAACiL,EAAOQ,IAGNoC,GAAoB7Q,sBACtB,SAACmB,GACG0O,EAAY1O,IAEhB,IAGE2P,GAAqBnL,kBACvB,WACI,IAAMoL,EAAe3P,EAAQ4P,KACzB,SAAA5K,GAAC,OAAI/E,EAAY+E,KAAO6H,IAE5B,YAAqBjL,IAAjB+N,EACO,GAEJE,OAAOpD,EAAckD,KAEhC,CAAC3P,EAASyM,EAAexM,EAAa4M,IAGpCiD,GAAiC1B,EAEjCN,EADA4B,GAGAK,GAAWC,YAAeF,IAE1BG,GAAgB7B,GAAa4B,YAAeN,IAC5CA,GACAjC,EAEAO,GAAkBD,IAChB9P,IACAyP,GACDqC,GAED7O,GAAgBR,EAClBC,EACAkM,EACA5M,EACA0N,EACAS,EAEAqB,GACAV,GACAJ,GACAY,IAGElV,GAAY2E,YACdhB,EACA,oBACA9C,KAAOgV,gBACP9B,GAAalT,KAAOiV,YACpB/B,GAAa,eACbnQ,GAAY/C,KAAO+C,SACnBA,GAAY,WACZgE,GAAS/G,KAAO+G,MAChBA,GAAS,QACTsM,GAAgBrT,KAAOqT,aACvBA,GAAgB,kBACfP,IAAmB9S,KAAOkV,iBAC1BpC,IAAmB,oBACpB+B,IAAY7U,KAAOmV,OACnBN,IAAY,UAGhB,OACI,yBACI1V,UAAWA,GACXmI,MAAOA,GAEL2L,GACE,kBAAC,GAAD,CACI9T,UAAW6S,EACXxK,OAAQ6L,GAAgBH,EACxBnQ,SAAUA,EACVgE,QAASA,EACTO,MAAOyK,EACPtK,eAAgBwK,EAChBvK,wBAAyBwK,GAEvBH,GAGV,yBACInL,IAAKiE,EACL1L,UAAW2E,YAAI9D,KAAOoV,gBAAiB,sBAEvC,kBAAC,EAAD,CACIxO,IAAKuM,EACLhU,UAAWa,KAAO0T,MAClBrQ,KAAK,OACLmH,OAAQuJ,GACRpD,QAASmD,GACTxQ,QAASmQ,GACTtB,SAAU6B,GACVrC,MAAOiD,IAAa,GACpB9C,UAAWA,EACXS,YAAawC,GACbhS,SAAUA,GAAYyP,EAEtB6C,UAAWrP,KAEf,yBAAK7G,UAAW2E,YAAI,UAAW9D,KAAOsV,UAChCxC,IACE,kBAAC,EAAD,CACIxS,WAAW,gBACXiV,UAAW,EACXvS,SAAS,QACT7D,UAAW2E,YAAI,eAAgB9D,KAAOwV,aACtClS,QAASgR,GACTlR,aAAW,KAIrB2P,GACE,kBAAC,EAAD,CACIwC,UAAW,EACXvS,SACIkQ,EAAY,cAAgB,gBAEhC/T,UAAW2E,YAAI,kBAAmB9D,KAAOyV,gBACzCnS,QAASsQ,GACT7Q,SAAUA,GAAYyP,EACtBpP,aAAW,KAIrB4P,GACE,kBAAC,EAAD,CACIjM,MAAOA,EACPC,KAAMA,IAGZkM,GACE,kBAAC,GAAD,CACI/T,UAAWmT,EACXf,cAAeA,EACf/G,OAAQqJ,GACR1L,aAAcgM,GACd3C,cAAe6C,GACf3C,oBAAqBA,EACrB/G,UAAWE,EACX8E,eAAgBA,EAChBE,yBAA0BA,EAC1B8B,MAAOA,EAEP5M,YAAaA,EACb4H,KAAM8F,EACNhB,cAAe8C,GACf9O,WAAYA,EACZqK,SAAU6C,EACV1P,QAASyP,KAM7Bb,GAAgBvN,aAAe,CAC3BvB,UAAU,EACVyP,UAAU,EACVM,iBAAiB,EACjBC,yBAAyB,EACzBC,kBAAkB,EAClBC,WAAW,GAGApB,UC7Vf,SAAS6D,GACL5Q,EACAyM,EACAqB,GAEA,OAAO9N,EACFqF,OAAO,SAAA+G,GAAM,OAAIyE,YAAwBpE,EAAcL,GAAS0B,KAChEvF,KAAK,SAACuI,EAAGC,GAAJ,OAAUC,YACZnB,OAAOpD,EAAcqE,IACrBjB,OAAOpD,EAAcsE,IACrBlB,OAAO/B,MAInB,SAASmD,GAA2DjW,GAAoB,IAEhFkW,EAGAlW,EAHAkW,kBACAzD,EAEAzS,EAFAyS,YACG/O,EAJ6E,IAKhF1D,EALgF,qCAQhFgF,EAEAtB,EAFAsB,QACAyM,EACA/N,EADA+N,cATgF,EAY9CrC,wBAA6BxI,GAZiB,WAY7EkM,EAZ6E,KAYhEqD,EAZgE,OAalD/G,oBAAS,GAbyC,WAa7EgE,EAb6E,KAalEgD,EAbkE,KAe9EzD,EAAgBpJ,kBAClB,WACI,YAA0B3C,IAAtBsP,EACIG,YAAcvD,GACP9N,EAEJ4Q,GAAgB5Q,EAASyM,EAAeqB,GAG/CuD,YAAcvD,GACP,GAGJ8C,GAAgB5Q,EAASyM,EAAeqB,GAC1CwD,MAAM,EAAGJ,IAElB,CAAClR,EAASyM,EAAeyE,EAAmBpD,IAG1CyD,OAA2C3P,IAAtBsP,GAAoC9C,EAEzD,uBADA,mBAGN,OACI,kBAAC,GAAD,KACIP,sBAAuBmC,YAAelC,GACtCA,YAAaA,EACbP,oBAAqB4D,EACrBxD,cAAeA,EAEfS,UAAWA,EACXd,kBAAmB8D,EAEnB3D,YAAaA,GAAe8D,GACxB7S,IAIhBuS,GAAYzR,aAAe,CACvBS,YAAa,SAACuR,GAAD,OAAuBA,EAAKzR,KACzC0M,cAAe,SAAC+E,GAAD,OAAuBA,EAAKvE,OAC3CjN,QAAS,IAGEiR,U,gDC5GT7W,GAAY,CAIdC,UAAWC,KAAUC,OAKrB0D,SAAU3D,KAAUmX,KAEpB5E,MAAOvS,KAAUmX,KAKjBpE,SAAU/S,KAAUoX,KAAK7W,WAKzBoS,MAAO3S,KAAUM,KAAKC,WAEtB8W,QAASrX,KAAUC,OAEnBmT,SAAUpT,KAAUmX,KAEpBG,aAActX,KAAUC,OAGxBsX,YAAavX,KAAUwX,QAGrBtS,GAAe,CACjBnF,UAAW,GACX4D,UAAU,EACV2T,aAAc,WACdD,QAAS,GACTjE,UAAU,EACVb,OAAO,EACPgF,iBAAajQ,GAGXmQ,G,YAKF,WAAY/W,GAAO,yBACf,4BAAMA,IADS,+BAMC,SAAC6D,GACjB,IAAMgO,EAAQhO,EAAE+H,OAAOoL,QACvB,EAAKhX,MAAMqS,SAASR,KALpB,EAAKoF,QAAUzN,cAHA,E,sDAWV,MAYDzJ,KAAKC,MAVLiS,EAFC,EAEDA,MACA0E,EAHC,EAGDA,QACW3T,EAJV,EAID3D,UACAwS,EALC,EAKDA,MACA5O,EANC,EAMDA,SACAyP,EAPC,EAODA,SACAkE,EARC,EAQDA,aAGGlT,GAXF,EASD2O,SATC,EAUDwE,YAVC,8GAcCxX,EAAY2E,YACd9D,KAAOgX,SACP,WACAlU,EACA6O,GAAS3R,KAAO8W,QAChBnF,GAAS,UACT5O,GAAY/C,KAAO+C,SACnBA,GAAY,WACZyP,GAAYxS,KAAOwS,SACnBA,GAAY,aAGVyE,EAAgBnT,YAClB9D,KAAOkX,UACP,aAGEC,EAAiBrT,YACnB,QACA9D,KAAO0T,OAGL1B,EAAiBlO,YACnB,QACA9D,KAAO+R,OAGX,OACI,2BACIqF,QAASvX,KAAKkX,QACd5X,UAAWA,EACXmI,MAAOmP,GAEP,kBAACrS,EAAA,EAAD,CACIC,KAAMsN,EAAQ+E,EAAe,uBAC7BvX,UAAW8X,IAEf,+BACI5M,GAAIxK,KAAKkX,QACT5E,SAAUtS,KAAKmU,kBACf7U,UAAWgY,EACX9T,KAAK,WACLyT,QAASnF,EACT5O,SAAUA,GAAYyP,GAClBhP,IAER,yBAAKrE,UAAW6S,GACVD,Q,GA7EC5R,IAAMC,e,IAAvByW,G,YACiB3X,I,IADjB2X,G,eAGoBvS,IAiFX+S,mBAAkBR,I,+DCrI3B3X,GAAY,CACdoY,KAAMlY,KAAUmX,KAChBxP,MAAO3H,KAAUC,OACjB2H,KAAM5H,KAAUC,QAGdiF,GAAe,CACjBgT,MAAM,EACNvQ,WAAOL,EACPM,UAAMN,GAKW6Q,G,yIAKR,MAKD1X,KAAKC,MAHLwX,EAFC,EAEDA,KACAvQ,EAHC,EAGDA,MACAC,EAJC,EAIDA,KAGJ,IAAKsQ,EACD,OAAO,KAGX,IAAMnY,EAAY2E,YACd9D,KAAOiH,kBACP,uBACAF,GAAS/G,KAAOkH,WAChBH,GAAS,cACTC,GAAQhH,KAAOmH,UACfH,GAAQ,eACNA,GAAQD,IAAU/G,KAAOoH,QACzBJ,GAAQD,IAAU,SAGxB,OACI,yBACI5H,UAAWA,EACXmI,MAAOP,GAASC,GAEdD,GAASC,GAlCT,S,GAE6B7G,IAAMC,e,IAAhCmX,G,YACErY,I,IADFqY,G,eAGKjT,I,4BCjBpBpF,GAAY,CACdC,UAAWC,KAAUC,OACrB0H,MAAO3H,KAAUmX,KACjBe,KAAMlY,KAAUmX,KAChB/O,OAAQpI,KAAUmX,KAClBxT,SAAU3D,KAAUmX,KACpBiB,KAAMpY,KAAUC,QAcCoY,G,yIAKR,MASD5X,KAAKC,MAPLwX,EAFC,EAEDA,KACAE,EAHC,EAGDA,KACAzQ,EAJC,EAIDA,MACWjE,EALV,EAKD3D,UACAqI,EANC,EAMDA,OACAzE,EAPC,EAODA,SACGS,EARF,+DAWL,IAAK8T,EACD,OAAO,KAGX,IAAMnY,EAAY2E,YACdhB,EACA,cACA9C,KAAO2H,YACN6P,GAAQ,SACRA,GAAQxX,KAAOoH,MAChBL,GAAS/G,KAAO+G,MAChBA,GAAS,QACTS,GAAUxH,KAAOwH,OACjBA,GAAU,SACVzE,GAAY/C,KAAO+C,SACnBA,GAAY,YAGhB,OACI,6BACI5D,UAAWA,EACXmI,MAAOkQ,GACHhU,GAEFgU,GA1CA,S,GAEsBrX,IAAMC,e,IAAzBqX,G,YACEvY,I,IADFuY,G,eAXA,CACjBtY,UAAW,GACX4H,OAAO,EACPuQ,MAAM,EACNE,KAAM,GACNhQ,QAAQ,EACRzE,UAAU,I,4BCNR7D,GAAY,CAIdC,UAAWC,KAAUC,OAErBsS,MAAOvS,KAAUG,UAAU,CACvBH,KAAUC,OACVD,KAAUwX,SAMd7P,MAAO3H,KAAUC,OAKjB2H,KAAM5H,KAAUC,OAKhB8S,SAAU/S,KAAUoX,KAAK7W,WAKzBoS,MAAO3S,KAAUM,KAAKC,WAEtBsT,UAAW7T,KAAUmX,KAErBvD,iBAAkB5T,KAAUmX,KAE5BxT,SAAU3D,KAAUmX,KACpB/D,SAAUpT,KAAUmX,MAGlBjS,GAAe,CACjBnF,UAAW,GACX8T,WAAW,EACXtB,WAAOjL,EACPK,MAAO,GACPC,KAAM,GACNgM,kBAAkB,EAClBjQ,UAAU,EACVyP,UAAU,GAGRkF,G,YAKF,WAAY5X,GAAO,yBACf,4BAAMA,IADS,yCAUW,SAAC6X,GAC3B,IAAMC,EAAgBD,EAAqBnE,wBACvCjS,EAAa,EAAK6R,mBAClB,EAAKpI,YACLzJ,EAAa,EAAKyJ,UAAUwI,yBAGhC,IAAM/R,EAAS,CACXjB,IAAK,EACLK,MAAO,EACPC,OAAQ,EACRL,KAAM,GASV,OAPI,EAAKX,MAAMkT,mBACXvR,EAAOjB,IAAM,IAIbqX,aAAiCtW,EAAYqW,EAAenW,KA5BjD,+BAiCC,SAACkC,GACjB,IAAMgO,EAAQhO,EAAE+H,OAAOoL,QACvB,EAAKhX,MAAMqS,SAASR,KAnCL,iCAsCG,WAClB,EAAKyB,mBAAqB,EAAKpI,UAAUwI,wBACzC,EAAKsE,SAAS,CAAEC,iBAAiB,MAxClB,yCA2CW,WAC1B,EAAKD,SAAS,CAAEC,iBAAiB,MA5ClB,+BA+CC,SAACC,GACb,EAAKlY,MAAMqS,UACX,EAAKrS,MAAMqS,SAAS6F,EAASC,OAjDlB,mCAqDK,WACpB,EAAKH,SAAS,CAAEC,iBAAiB,MApDjC,EAAKG,MAAQ,CACTH,iBAAiB,GAGrB,EAAKhB,QAAUzN,cACf,EAAK8J,mBAAqB,GAPX,E,sDAyDV,aAWDvT,KAAKC,MATLiS,EAFC,EAEDA,MACA5S,EAHC,EAGDA,UACAwS,EAJC,EAIDA,MACAsB,EALC,EAKDA,UACAD,EANC,EAMDA,iBACAjM,EAPC,EAODA,MACAC,EARC,EAQDA,KACAjE,EATC,EASDA,SACAyP,EAVC,EAUDA,SAGIuF,EAAoBlY,KAAKqY,MAAzBH,gBACFI,EAAmB,CACrBnY,KAAOoY,SACP,aAGErY,EAAa,CACfC,KAAOqY,WACPlZ,GAQJ,OALI4D,IACAoV,EAAiBzO,KAAK1J,KAAO+C,UAC7BhD,EAAW2J,KAAK1J,KAAO+C,WAIvB,yBACI5D,UAAWY,EAAWG,KAAK,KAC3B0G,IAAK,SAAC0R,GAAS,EAAKtN,UAAYsN,IAEhC,kBAAC,GAAD,CACInZ,UAAWa,KAAO+R,MAClBuF,KAAMrE,EACNuE,KAAMzF,IAEV,4BACI1O,KAAK,SACLlE,UAAWgZ,EAAiBjY,KAAK,KACjCoD,QAASzD,KAAK0Y,oBACdxV,SAAUA,GAAYyP,GAEtB,0BACIrT,UAAS,UAAKa,KAAOwY,MAAZ,UACTnN,MAAO,CAAEoN,gBAAiB9G,MAGlC,kBAAC,GAAD,CACI2F,KAAMtE,EACNhM,KAAMA,EACND,MAAOA,IAGPgR,GACI,kBAAC,KAAD,CACIvM,OAAQ3L,KAAKmL,UACbR,OAAQ3K,KAAK6Y,sBACbvQ,aAActI,KAAK8Y,6BAEnB,kBAAC,gBAAD,CACIH,MAAO7G,EACPQ,SAAUtS,KAAK+Y,0B,GA9HtBzY,IAAMC,e,IAAzBsX,G,YACiBxY,I,IADjBwY,G,eAGoBpT,IAqIX+S,mBAAkBK,I,uGC7L3BmB,GAAO,aAEP3Z,GAAY,CACdC,UAAWC,KAAUC,OACrBC,SAAUF,KAAUM,KAAKC,WACzB2H,MAAOlI,KAAUC,OAAOM,WACxB8K,QAASrL,KAAUoX,KACnBsC,QAAS1Z,KAAUoX,KACnBuC,OAAQ3Z,KAAU4Z,OAAOrZ,YAGvB2E,GAAe,CACjBnF,UAAW,GACXsL,QAASoO,GACTC,QAASD,IAKQI,G,YAKjB,WAAYnZ,GAAO,yBACf,4BAAMA,IADS,0BASJ,WAOX,MALmB,CADG,EAAKA,MAAnBX,UAGJ,eAGce,KAAK,OAhBR,gCAmBE,SAACgZ,GAAW,IACrBJ,EAAY,EAAKhZ,MAAjBgZ,QACJA,GACAA,EAAQI,KAtBG,gCA0BE,SAACC,GAClB,EAAKrB,SAAS,CAAEqB,kBA3BD,+BA8BC,SAACC,EAAaD,GAC9B,EAAKrB,SAAS,CACVsB,cACAD,kBA9BJ,EAAKjB,MAAQ,CACTkB,YAAa,GACbD,YAAa,IALF,E,sDAsCf,IAAMha,EAAYU,KAAKwZ,eADlB,EAODxZ,KAAKC,MAJL2K,EAHC,EAGDA,QACAnD,EAJC,EAIDA,MACAhI,EALC,EAKDA,SACAyZ,EANC,EAMDA,OANC,EAYDlZ,KAAKqY,MAFLkB,EAVC,EAUDA,YACAD,EAXC,EAWDA,YAGJ,OACI,kBAACG,GAAA,EAAD,CACIna,UAAWA,EACXoL,eAAa,EACbE,QAASA,GAET,kBAAC,IAAD,CACI0H,SAAUtS,KAAK0Z,kBACfC,oBAAqB3Z,KAAK4Z,mBAC1BC,oBAAqB7Z,KAAK8Z,mBAC1BZ,OAAQA,EACRpH,MAAOyH,EACPrS,MAAOoS,GAEP,kBAAC,KAAD,CAAa7R,MAAOA,IACpB,kBAAC,KAAD,KACKhI,GAEL,kBAAC,KAAD,KACI,kBAACsa,GAAA,EAAD,CACItW,QAASmH,EACTqH,WAAS,GAFb,SAMA,kBAACzR,GAAA,EAAD,CAAegD,KAAK,UAApB,gB,GAjFgBlD,IAAMC,e,IAAzB6Y,G,YACE/Z,I,IADF+Z,G,eAGK3U,I,yCC7BpBpF,GAAY,CACduG,WAAYrG,KAAUG,UAAU,CAACH,KAAUC,OAAQD,KAAUwX,SAE7D9R,QAAS1F,KAAUya,MACnB9U,YAAa3F,KAAUoX,KAAK7W,WAC5BgG,eAAgBvG,KAAUmX,KAE1B3Q,cAAexG,KAAUoX,KAAK7W,WAC9BkG,cAAezG,KAAUoX,KAAK7W,WAC9BmG,cAAe1G,KAAUoX,KAAK7W,WAC9BoG,eAAgB3G,KAAUoX,KAAK7W,YAG7B2E,GAAe,CACjBmB,gBAAYiB,EACZ5B,QAAS,GACTa,gBAAgB,GAGdmU,GAAM,EACNC,GAAM,GACNC,GAAQ,GACRC,GAAO,GACPC,GAAK,GACL1V,GAAc,CAAC0V,GAAID,GAAMD,IAEzB9U,GAAY,SAACC,EAAQC,EAAWN,EAASC,GAC3C,KAAID,EAAQO,QAAU,GAAtB,CAIA,IAGIC,EAHUR,EAAQE,UAAU,SAAAC,GAAC,OAAIF,EAAYE,KAAOE,KAItC,IAAdG,IACAA,EAAWF,EAAY,GAAK,EAAI,GAGpC,IAAM+U,EAAW5U,YAAOD,EAAWF,EAAWN,EAAQO,QAEtD,OAAON,EAAYD,EAAQqV,MAGhB,YAACC,GAAqB,QAC3BC,GAAiB,sNAgCE,SAAC1W,GAAM,MAWpB,EAAK7D,MATL2F,EAFoB,EAEpBA,WACAX,EAHoB,EAGpBA,QACAC,EAJoB,EAIpBA,YACAY,EALoB,EAKpBA,eAEAE,EAPoB,EAOpBA,cACAC,EARoB,EAQpBA,cACAC,EAToB,EASpBA,eACAH,EAVoB,EAUpBA,cAEIK,EAAYtC,EAAZsC,QAER,IAAIN,GAAmBM,IAAY6T,IAAO7T,IAAY8T,IAI/C,IAAKpU,GAAkBnB,GAAY4B,SAASH,GAG/CtC,EAAE0C,kBACF1C,EAAE2C,iBACFR,SACG,GAAIG,IAAY+T,GACfvU,IACA9B,EAAE0C,kBACF1C,EAAE2C,iBACFP,EAAeN,SAEhB,GAAIQ,IAAYiU,GAAI,CACvBvW,EAAE0C,kBACF1C,EAAE2C,iBAEFV,EADsBV,GAAUO,EAAY,EAAGX,EAASC,SAErD,GAAIkB,IAAYgU,GAAM,CACzBtW,EAAE0C,kBACF1C,EAAE2C,iBAEFV,EADsBV,GAAUO,GAAa,EAAGX,EAASC,UArBzDc,MAjDW,yEAKOyU,GAAW,MAK7Bza,KAAKC,MAHWya,EAFa,EAE7B5U,eACS6U,EAHoB,EAG7B1V,QACa2V,EAJgB,EAI7B1V,YAGgB2V,EAGhBJ,EAHA3U,eACSgV,EAETL,EAFAxV,QACa8V,EACbN,EADAvV,YAGJ,IACMwV,GAAqBG,GACnBD,IAAmBG,GACnBJ,IAAeG,EACrB,CACE,IAAMnU,EAAgBtB,QAClBwB,EACA,EACAiU,EACAC,GAEJN,EAAU1U,cAAcY,MA5Bb,+BA2EV,MAiBD3G,KAAKC,MADF0D,GAhBF,EAEDiC,WAFC,EAGDX,QAHC,EAKDC,YALC,EAODY,eAPC,EASDC,cATC,EAWDC,cAXC,EAaDC,cAbC,EAeDC,eAfC,iIAmBL,OACI,kBAACqU,EAAD,KACI/E,UAAWxV,KAAKgb,oBACZrX,QAjGG,GAAiBrD,IAAMC,eAAvB,kBACAlB,IADA,qBAGGoF,IAHH,GAuGvB,OAAOwW,KAAqBT,EAAmBD,I,wBCnJ7Clb,GAAY,CACdC,UAAWC,KAAUC,QAOJ0b,G,yIAKR,MAQDlb,KAAKC,MAHLX,EALC,EAKDA,UACA6b,EANC,EAMDA,WACGxX,EAPF,kCAUL,OACI,+BACIoD,IAAKoU,EACL7b,UAAW2E,YACP3E,EACAa,KAAO6G,SACP,cAEArD,Q,GAvBmBrD,IAAMC,e,IAAxB2a,G,YACE7b,I,IADF6b,G,eAJA,CACjB5b,UAAW,K,yCCPTD,GAAY,CACdC,UAAWC,KAAUC,OACrBuR,UAAWxR,KAAUG,UAAU,CAC3BH,KAAUC,OACVD,KAAUwX,SACXjX,WACH2D,QAASlE,KAAUoX,KAAK7W,WACxBgR,QAASvR,KAAUoX,KAAK7W,WACxBL,SAAUF,KAAUM,KACpB+Q,SAAUrR,KAAUmX,KACpB7F,UAAWtR,KAAUmX,MAGnBjS,GAAe,CACjBmM,UAAU,EACVC,WAAW,EACXvR,UAAW,GACXG,cAAUoH,GAGO4J,G,YAKjB,WAAYxQ,GAAO,yBACf,4BAAMA,IADS,0BAwBJ,WAAM,MAKb,EAAKA,MAHLX,EAFa,EAEbA,UACAsR,EAHa,EAGbA,SACAC,EAJa,EAIbA,UAGE3Q,EAAa,CACfZ,EACAa,KAAOkR,OACP,UAaJ,OAVIT,IACA1Q,EAAW2J,KAAK1J,KAAOwH,QACvBzH,EAAW2J,KAAK,WAGhBgH,IACA3Q,EAAW2J,KAAK1J,KAAOmR,SACvBpR,EAAW2J,KAAK,YAGb3J,EAAWG,KAAK,OA/CR,yBAkDL,WAAM,MAIZ,EAAKJ,MAFL8Q,EAFY,EAEZA,WAIJtN,EANgB,EAGZA,SAGIsN,KAxDO,6BA2DD,WAAM,MAIhB,EAAK9Q,MAFL8Q,EAFgB,EAEhBA,UACAD,EAHgB,EAGhBA,QAGJ,EAAKH,gBAAiB,EACtBG,EAAQC,KAlEO,8BAqEA,WACf,EAAKJ,gBAAiB,IAtEP,2BAyEH,WACP,EAAKA,gBACN,EAAK5J,IAAIqE,QAAQ4F,eAAe,CAC5BE,MAAO,cA1Ef,EAAKnK,IAAMzG,IAAM8a,YACjB,EAAKzK,oBAAiB9J,EAHP,E,iEAOO7G,KAAKC,MAAnB4Q,WAGJ7Q,KAAKqb,kB,gDAIaZ,IACAza,KAAKC,MAAnB4Q,WAEU4J,EAAU5J,UACxB7Q,KAAKqb,gBAELrb,KAAK2Q,gBAAiB,I,+BA6DrB,IACGlR,EAAaO,KAAKC,MAAlBR,SACFH,EAAYU,KAAKwZ,eAEvB,OACI,4BACIzS,IAAK/G,KAAK+G,IACVzH,UAAWA,EACXmE,QAASzD,KAAK4D,YACd2N,YAAavR,KAAKmR,gBAClBK,aAAcxR,KAAKoR,iBACnB5N,KAAK,UAEH/D,O,GAnGkBa,IAAMC,e,IAArBkQ,G,YACEpR,I,IADFoR,G,eAGKhM,I,4BCjBpBpF,GAAY,CACdC,UAAWC,KAAUC,OACrBiY,KAAMlY,KAAUmX,KAChB5J,KAAMvN,KAAUI,QAAQJ,KAAU4Z,QAClCjU,YAAa3F,KAAUoX,KAAK7W,WAC5B4R,cAAenS,KAAUoX,KAAK7W,WAC9B+R,oBAAqBtS,KAAUoX,KAC/B2E,YAAa/b,KAAUoX,KACvBhF,cAAepS,KAAUoX,KAAK7W,WAC9B8R,cAAerS,KAAUoX,KAAK7W,WAC9BgS,MAAOvS,KAAUG,UAAU,CACvBH,KAAUC,OACVD,KAAUwX,SAEdnR,WAAYrG,KAAUG,UAAU,CAACH,KAAUC,OAAQD,KAAUwX,SAC7DpM,OAAQpL,KAAUoX,KAAK7W,WACvBwI,aAAc/I,KAAUoX,KAAK7W,WAG7Byb,gBAAiBhc,KAAU4Z,QAGzB1U,GAAe,CACjBnF,UAAW,GACXmY,MAAM,EACN3K,KAAM,GACNlH,gBAAYiB,EACZgL,yBAAqBhL,EACrByU,YAAa,iBAAM,uBACnBxJ,WAAOjL,EACP0U,qBAAiB1U,GAGA4K,G,4MAKF,SAAC+J,EAAGnK,GAAW,MAStB,EAAKpR,MAPLiF,EAFsB,EAEtBA,YACAwM,EAHsB,EAGtBA,cACAG,EAJsB,EAItBA,oBACAF,EALsB,EAKtBA,cACAC,EANsB,EAMtBA,cACAE,EAPsB,EAOtBA,MACAlM,EARsB,EAQtBA,WAGEZ,EAAME,EAAYmM,GAClBa,EAAQL,EACVA,EAAoBR,GAEpBK,EAAcL,GAGZT,EAAW5L,IAAQ8M,EACnBjB,EAAY7L,IAAQY,EAE1B,OACI,kBAAC,GAAD,CACIZ,IAAKA,EACL+L,UAAW/L,EACXvB,QAASkO,EACTb,QAASc,EACThB,SAAUA,EACVC,UAAWA,GAETqB,K,yBAKA,WAAM,MAIZ,EAAKjS,MAFL6M,EAFY,EAEZA,KACa8C,EAHD,EAGZ0L,YAGJ,GAAoB,IAAhBxO,EAAKtH,OACL,OAAO,KAGX,IAAMlG,EAAY,oCAAH,OAETa,KAAOoH,MAFE,cAKf,OACI,yBAAKjI,UAAWA,GACZ,kBAACsQ,EAAD,S,wDAKH,MAQD5P,KAAKC,MANMgD,EAFV,EAED3D,UACAmY,EAHC,EAGDA,KACA3K,EAJC,EAIDA,KACAnC,EALC,EAKDA,OACArC,EANC,EAMDA,aACAiT,EAPC,EAODA,gBAGJ,IAAK9D,EACD,OAAO,KAGX,IAAMnY,EAAY,iBAAH,OACT2D,EADS,yBAET9C,KAAO8E,QAFE,mCAMTwW,EAAQzb,KAAKsb,YAEnB,OACI,kBAAC,KAAD,CACI3Q,OAAQA,EACRrC,aAAcA,EACdqD,OAAQ4P,EACRjc,UAAWA,GAEX,kBAAC,KAAD,CACIwN,KAAMA,EACN4O,SAAU1b,KAAK2b,eAEnB,kBAACF,EAAD,W,GA/FqBnb,IAAMC,e,IAAtBkR,G,YACEpS,I,IADFoS,G,eAGKhN,I,2kBCnB1B,IAAMmX,GAAcrc,KAAUG,UAAU,CACpCH,KAAUC,OACVD,KAAUwX,SAGR8E,GAAcC,GAAeC,IAK7B1c,GAAY,CACd4S,UAAW1S,KAAUmX,KACrBxT,SAAU3D,KAAUmX,KACpBrB,gBAAiB9V,KAAUmX,KAC3B/D,SAAUpT,KAAUmX,KACpBvD,iBAAkB5T,KAAUmX,KAC5BtD,UAAW7T,KAAUmX,KAErBpX,UAAWC,KAAUC,OACrB0H,MAAO3H,KAAUC,OACjB2H,KAAM5H,KAAUC,OAChB0S,MAAO3S,KAAUC,OACjBiT,iBAAkBlT,KAAUC,OAC5BkT,YAAanT,KAAUC,OACvBiI,MAAOlI,KAAUC,OAEjByF,QAAS1F,KAAUI,QAAQJ,KAAU4Z,QACrCrH,MAAO8J,GACPtJ,SAAU/S,KAAUoX,KAAK7W,WAEzBoF,YAAa3F,KAAUoX,KACvBjF,cAAenS,KAAUoX,KACzB9E,oBAAqBtS,KAAUoX,KAE/B2E,YAAa/b,KAAUoX,MAGrBlS,GAAe,CACjBwN,eAAWpL,EACXvH,UAAW,GACX4D,UAAU,EACVgE,WAAOL,EACPwO,iBAAiB,EACjBlO,UAAMN,EACN3B,YAAa,SAAA+E,GAAC,OAAIA,EAAEjF,KACpBkN,MAAO,GACPR,cAAe,SAAAzH,GAAC,OAAIA,EAAEiI,OACtBL,yBAAqBhL,EACrB5B,QA1Cc,GA2CdwN,iBAAkB,GAClBC,YAAa,mBACbC,UAAU,EACV2I,iBAAazU,EACbsM,kBAAkB,EAClBC,WAAW,EACX3L,WAAOZ,EACPiL,WAAOjL,GAGLqP,G,YAKF,WAAYjW,GAAO,yBACf,4BAAMA,IADS,2BAuBH+b,aAAQ,SACpB/W,EACAyM,EACAI,GAaA,OAXmB7M,EACdqF,OACG,SAAA+G,GAAM,YACQxK,IAAViL,GAAuBgE,YAAwBpE,EAAcL,GAASS,KAG7EtE,KAAK,SAACuI,EAAGC,GAAJ,OAAUC,YACZvE,EAAcqE,GACdrE,EAAcsE,GACdlE,QArCO,oCA0CMkK,aAAQ,SAC7B/W,EACAyM,EACAxM,EACA4M,GAEA,IAAM8C,EAAe3P,EAAQ4P,KACzB,SAAA5K,GAAC,OAAI/E,EAAY+E,KAAO6H,IAG5B,YAAqBjL,IAAjB+N,EACO,GAGJlD,EAAckD,MAxDN,oCA8DM,WAAM,IACVf,EAAU,EAAKP,SAAxBlI,QACJyI,GACAA,EAAMC,SAWV,EAAKmE,SAAS,CACVgE,kBAAkB,EAClBlJ,iBAAalM,MA9EF,oCAkFM,WACrB,EAAKoR,SAAS,CACVgE,kBAAkB,EAClBlJ,iBAAalM,MArFF,8BA2FA,WACf,EAAKoR,SAAS,CAAEzE,cAAc,MA5Ff,6BA+FD,WACd,EAAKyE,SAAS,CAAEzE,cAAc,MAhGf,+BAmGC,SAAC1P,GAAM,IACfgO,EAAUhO,EAAE+H,OAAZiG,MAUR,EAAKmG,SAAS,CACVgE,kBAAkB,EAClBlJ,YAAajB,MAhHF,qCAsHO,SAACyC,GACvB,IAAM9S,EAAc8S,EAAiBZ,wBACjCjS,EAAa,EAAK6R,mBACLpI,EAAc,EAAKH,aAA5BI,QAEJD,IACAzJ,EAAayJ,EAAUwI,yBANiB,IASpCR,EAAqB,EAAKlT,MAA1BkT,iBAEFvR,EAAS,MAAKb,GAoBpB,OAnBIoS,IACAvR,EAAOjB,IAAM,IAUbmC,EAA8B,CAC1BpB,aACAD,cACAG,SACAC,MAXM,MACPX,EADI,CAEPC,KAAMO,EAAWb,MACjBO,KAAMM,EAAWb,YAzIN,gCAwJE,SAACkQ,GAAc,MAI5B,EAAK9Q,MAFL6R,EAF4B,EAE5BA,MACAQ,EAH4B,EAG5BA,SAGJ,EAAK2F,SAAS,CACVgE,kBAAkB,EAClBlJ,iBAAalM,IAGbkK,IAAce,GACdQ,EAASvB,KApKE,oCAwKM,WAAM,MAIvB,EAAK9Q,MAFLqS,EAFuB,EAEvBA,cAIUzL,IANa,EAGvBiL,OAIAQ,OAASzL,KA/KE,+BAmLC,SAACjB,GACjB,EAAKqS,SAAS,CAAErS,iBAjLhB,EAAKyS,MAAQ,CAET7E,aAAcvT,EAAMgS,UACpBrM,gBAAYiB,EAEZoV,kBAAkB,EAClBlJ,iBAAalM,GAGjB,EAAKmE,aAAe1K,IAAM8a,YAC1B,EAAK9H,SAAWhT,IAAM8a,YAbP,E,iEAgBC,IACCjQ,EAAcnL,KAAKgL,aAA5BI,QACJD,IACAnL,KAAKuT,mBAAqBpI,EAAUwI,2B,+BAoKnC,MAqBD3T,KAAKC,MAnBLiH,EAFC,EAEDA,MACAC,EAHC,EAGDA,KACAjC,EAJC,EAIDA,YACAgN,EALC,EAKDA,MACAR,EANC,EAMDA,cACAG,EAPC,EAODA,oBACAY,EARC,EAQDA,iBACA6I,EATC,EASDA,YACAnI,EAVC,EAUDA,iBACAC,EAXC,EAWDA,UACA3L,EAZC,EAYDA,MACAqK,EAbC,EAaDA,MACA5O,EAdC,EAcDA,SACAyP,EAfC,EAeDA,SACAD,EAhBC,EAgBDA,YACAT,EAjBC,EAiBDA,UACAoD,EAlBC,EAkBDA,gBACWpS,EAnBV,EAmBD3D,UACA2F,EApBC,EAoBDA,QApBC,EA4BDjF,KAAKqY,MAJL4D,EAxBC,EAwBDA,iBACArW,EAzBC,EAyBDA,WACA4N,EA1BC,EA0BDA,aACAT,EA3BC,EA2BDA,YAIEmJ,OAAmCrV,IAAhBkM,EACnB/S,KAAKmc,uBAAuBlX,EAASyM,EAAexM,EAAa4M,GACjEiB,EAEAiC,EAAWkH,GAAgD,IAA5BA,EAAiB1W,OAChDyN,EAAkB+B,KAAcK,GAAmBnS,GAAYyP,GAEpDxH,EAAcnL,KAAKgL,aAA5BI,QAEFgR,EAAkBpc,KAAKqc,cACzBpX,EACAyM,EAGAqB,GAGEzT,EAAY2E,YACdhB,EACA,eACA9C,KAAOmc,YACPL,GAAoB9b,KAAOiV,YAC3B6G,GAAoB,eACpB/Y,GAAY/C,KAAO+C,SACnBA,GAAY,WACZgE,GAAS/G,KAAO+G,MAChBA,GAAS,QACTsM,GAAgBrT,KAAOqT,aACvBA,GAAgB,iBAChB6B,GAAmBlV,KAAOkV,gBAC1BA,GAAmB,oBACnBL,GAAY7U,KAAOmV,OACnBN,GAAY,UAGVsC,EAAiBrT,YACnB9D,KAAOoV,gBACP,qBAGEgH,EAAmB,sCAAH,OAEhBpc,KAAOsV,QAFS,cAKhB+G,EAA0B,8CAAH,OAEvBrc,KAAOyV,eAFgB,cAKvB6G,EAAiB,2CAAH,OAEdtc,KAAOwV,YAFO,cAKpB,OACI,yBACIrW,UAAWA,EACXyH,IAAK/G,KAAKgL,aACVvD,MAAOA,GAEL2L,GACE,kBAAC,GAAD,CACIuE,KAAMzF,EACNhL,QAASA,EACThE,SAAUA,EACVyE,OAAQ6L,GAAgByI,IAGhC,yBAAK3c,UAAWgY,GACZ,kBAACuE,GAAD,CACIvc,UAAWa,KAAO0T,MAClBrQ,KAAK,OACL2X,WAAYnb,KAAKsT,SACjB3I,OAAQ3K,KAAKkU,gBACbpD,QAAS9Q,KAAKiU,iBACdxQ,QAASzD,KAAK4T,uBACdtB,SAAUtS,KAAKmU,kBACfrC,MAAOoK,EACPjK,UAAWA,EACXS,YAAaA,EACbxP,SAAUA,GAAYyP,EAEtB/M,WAAYA,EACZX,QAASmX,EACTlX,YAAaA,EACbY,eAAgBmW,EAChBlW,cAAe/F,KAAK0U,kBACpB1O,cAAehG,KAAKgU,uBACpB/N,cAAejG,KAAK4T,uBACpB1N,eAAgBlG,KAAKwU,qBAEzB,yBAAKlV,UAAWid,GACVtJ,GACE,kBAAC8G,GAAA,EAAD,CACIrE,SAAS,KACTvS,SAAS,QACT7D,UAAWmd,EACXhZ,QAASzD,KAAKyU,uBACdlR,aAAW,IAGnB,kBAAC,KAAD,CACImS,SAAS,KACTvS,SAAS,gBACT7D,UAAWkd,EACX/Y,QAASzD,KAAK4T,uBACd1Q,SAAUA,GAAYyP,EACtBpP,aAAW,MAIrB4P,GACE,kBAAC,GAAD,CACIjM,MAAOA,EACPC,KAAMA,IAGd,kBAAC,GAAD,CACI7H,UAAWmT,EACXf,cAAeA,EACf/G,OAAQ3K,KAAKgU,uBACb1L,aAActI,KAAKsU,wBACnB3C,cAAe3R,KAAKwU,mBACpB3C,oBAAqBA,EACrB0J,gBAAiBpQ,EACjBmQ,YAAaA,EACbxJ,MAAOA,EAEP2F,KAAMwE,EACN/W,YAAaA,EACb4H,KAAMsP,EACNxK,cAAe5R,KAAK0U,kBACpB9O,WAAYA,S,GAhWNtF,IAAMC,e,IAA1B2V,G,YACiB7W,I,IADjB6W,G,eAGoBzR,IAoWX+S,mBAAkBtB,ICzb3B7W,GAAY,CACdyS,MAAOvS,KAAUmd,IACjBpK,SAAU/S,KAAUoX,KACpBG,YAAavX,KAAUwX,QAGrBtS,GAAe,CACjBqN,WAAOjL,EACPyL,SAAU,aACVwE,YAAa,KAGF,YAACyD,GAAqB,QAC3BoC,GAAgB,gBAKlB,WAAY1c,GAAO,kBACf,4BAAMA,IADS,0BA+BJ,SAAC6R,EAAO5K,EAAO0V,GAAS,MAI/B,EAAK3c,MAFLqS,EAF+B,EAE/BA,SACAwE,EAH+B,EAG/BA,YAGA,EAAK+F,eACLC,aAAa,EAAKD,eAGtB,EAAKE,eAAgB,EACrB,EAAK9E,SAAS,CAAEnG,UAEhB,EAAK+K,cAAgBG,WACjB,WACI,EAAKD,eAAgB,EAErBzK,EAASR,EAAO5K,EAAO0V,IAE3B9F,KAlDW,IAEPhF,EAAU7R,EAAV6R,MAFO,OAIf,EAAKiL,eAAgB,EACrB,EAAKE,UAAYnL,EACjB,EAAKuG,MAAQ,CACTvG,SAPW,EALD,uEAgBQ2I,GACJza,KAAKC,MAAf6R,QACM2I,EAAU3I,QACf9R,KAAK+c,cAMNtR,QAAQ+C,KAAK,0DALbxO,KAAKid,UAAYxC,EAAU3I,MAC3B9R,KAAKiY,SAAS,CACVnG,MAAO2I,EAAU3I,YAtBf,6CA+BV9R,KAAK6c,eACLC,aAAa9c,KAAK6c,iBAhCR,+BA2DT,MAOD7c,KAAKC,MADF0D,GANF,EAED2O,SAFC,EAGDR,MAHC,EAKDgF,YALC,2CAQUoG,EAAeld,KAAKqY,MAA3BvG,MAER,OACI,kBAACyI,EAAD,KACIzI,MAAOoL,EACP5K,SAAUtS,KAAKmd,cACXxZ,QAzEE,GAAiBrD,IAAMC,eAAvB,kBACClB,IADD,qBAGIoF,IAHJ,GA+EtB,OAAOwW,KAAqB0B,EAAkBpC,IC7F5Clb,GAAY,CACdC,UAAWC,KAAUC,QAQJ4d,G,yIAeR,IACG9d,EAAcU,KAAKC,MAAnBX,UACR,OACI,yBAAKA,UAAS,sBAAiBA,IAEvB8d,EAAWC,SAAS1P,IAAI,SAAA1D,GAAC,OACrB,0BACI3K,UAAU,MACV0F,IAAKiF,EAAEjF,KAENiF,EAAE6H,c,GAzBSxR,IAAMC,e,IAAzB6c,G,YACE/d,I,IADF+d,G,eALA,CACjB9d,UAAW,K,IAIM8d,G,WAKC,CACd,CAAEpY,IAAK,SAAU8M,MAAO,KACxB,CAAE9M,IAAK,SAAU8M,MAAO,KACxB,CAAE9M,IAAK,UAAW8M,MAAO,KACzB,CAAE9M,IAAK,YAAa8M,MAAO,KAC3B,CAAE9M,IAAK,WAAY8M,MAAO,KAC1B,CAAE9M,IAAK,SAAU8M,MAAO,KACxB,CAAE9M,IAAK,WAAY8M,MAAO,O,4BChB5BzS,GAAY,CACdC,UAAWC,KAAUC,OACrB8d,KAAM/d,KAAUwX,OAAOjX,WACvByd,MAAOhe,KAAUwX,OAAOjX,WACxBgS,MAAOvS,KAAUG,UAAU,CACvBH,KAAUwX,OACVxX,KAAUC,SAEd8S,SAAU/S,KAAUoX,KACpB6G,kBAAmBje,KAAUoX,KAC7B8G,aAAcle,KAAUoX,MAGtBlS,GAAe,CACjBnF,UAAW,GACXwS,WAAOjL,EACPyL,cAAUzL,EACV2W,uBAAmB3W,EACnB4W,kBAAc5W,GAGG6W,G,YAUjB,WAAYzd,GAAO,yBACf,4BAAMA,IADS,6BAsBD,SAAC0d,GAAW,MACF,EAAK1d,MAArBqd,EADkB,EAClBA,KAAMC,EADY,EACZA,MAERK,EACF,EAAKC,MAAMC,gBAAkBR,GAC1B,EAAKO,MAAME,WAAa,IAAMR,GAC9B,EAAKM,MAAMG,YAAcL,EAG1Bzd,EAAa,CAACC,KAAO8d,KAS3B,OARI,EAAKC,aAAeP,IACpBzd,EAAW2J,KAAK,YAChB3J,EAAW2J,KAAK1J,KAAOge,WAEvBP,IACA1d,EAAW2J,KAAK,eAChB3J,EAAW2J,KAAK1J,KAAOie,cAEpBle,EAAWG,KAAK,OAxCR,6BA2CD,SAACyR,GACf,GAAKA,EAAL,CADyB,MAKS,EAAK7R,MAA/Bqd,EALiB,EAKjBA,KAAMC,EALW,EAKXA,MAAOjL,EALI,EAKJA,SACf+L,EAAW,IAAIC,KAAKhB,EAAMC,EAAQ,EAAGzL,GAE3C,GAAIQ,EAAU,CACV,IAAMiM,EAAe,IAAID,KAAKxM,GAAO0M,UAC/BC,EAAeJ,EAASG,UAC9BlM,EAASmM,EAAcF,IAAiBE,OAtD7B,4BA0DF,WAAM,MACwB,EAAKxe,MAAxCqd,EADW,EACXA,KAAMC,EADK,EACLA,MAAOC,EADF,EACEA,kBACrB,GAAIA,EAAmB,CACnB,IAAMkB,EAAO,IAAIJ,KAAKhB,EAAMC,EAAQ,EAAG,GACnCmB,EAAKZ,eAAiB,MACtBN,EAAkBkB,EAAKZ,cAAeY,EAAKX,WAAa,MA/DjD,wBAoEN,WAAM,MAC4B,EAAK9d,MAAxCqd,EADO,EACPA,KAAMC,EADC,EACDA,MAAOC,EADN,EACMA,kBACrB,GAAIA,EAAmB,CACnB,IAAMkB,EAAO,IAAIJ,KAAKhB,EAAMC,EAAO,GACnCC,EAAkBkB,EAAKZ,cAAeY,EAAKX,WAAa,MAxE7C,uBA0HP,SAAAE,GAAG,OACX,yBACIjZ,IAAKiZ,EAAIjZ,IACT1F,UAAW,EAAKqf,gBAAgBV,EAAIjZ,MAGhCiZ,EAAInM,OACA,kBAAC,KAAD,CACIrO,QAAS,kBAAM,EAAKmb,gBAAgBX,EAAInM,QACxCvO,aAAW,GAEV0a,EAAInM,UArIN,wBA4IN,SAAA+M,GAAI,OACb,yBACI7Z,IAAK6Z,EAAKA,KACVvf,UAAWa,KAAO0e,MAEhBA,EAAKC,KAAKnR,IAAI,EAAKoR,cA/IzB,EAAKC,WAAW/e,GAEhB,EAAK4d,MAAQ,IAAIS,KAJF,E,uEAOO7D,GAAW,MAK7Bza,KAAKC,MAHLqd,EAF6B,EAE7BA,KACAC,EAH6B,EAG7BA,MACAzL,EAJ6B,EAI7BA,MAGAwL,IAAS7C,EAAU6C,MAChBC,IAAU9C,EAAU8C,OACpBzL,IAAU2I,EAAU3I,OAEvB9R,KAAKgf,WAAWvE,K,oCA0DW,IAAtB6C,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOzL,EAAS,EAATA,MAChBmN,EAAY,IAAIX,KAAKhB,EAAMC,EAAQ,EAAG,GACtC2B,EAAW,IAAIZ,KAAKhB,EAAMC,EAAO,GACjCY,EAAWrM,GAAS,IAAIwM,KAAKxM,GAE7BqN,EAAWD,EAASlB,UAAYiB,EAAUjB,UAAa,EACvDoB,EAAWH,EAAUI,SACrBC,EAAYH,EAAUC,EACtBG,EAAUL,EAASG,SAEzBrf,KAAKke,YAAc,EACfC,GAAYA,EAASL,gBAAkBR,GAAQa,EAASJ,WAAa,IAAMR,IAC3Evd,KAAKke,WAAckB,EAAWjB,EAASH,WAI3C,IADA,IAAMwB,EAAQ,GACLtW,EAAI,EAAGA,EAAIoW,EAAY,EAAGpW,GAAK,EAAG,CACvC,IAAM4V,EAAO,GACb,GAAU,IAAN5V,EAAS,CACT,IAAK,IAAIuW,EAAI,EAAGA,EAAIL,EAAUK,GAAK,EAC/BX,EAAKjV,KAAK,CAAE7E,IAAKya,EAAG3N,WAAOjL,IAE/B,IAAK,IAAI4Y,EAAIL,EAAUK,EAAI,EAAGA,GAAK,EAC/BX,EAAKjV,KAAK,CAAE7E,IAAKya,EAAI,EAAG3N,MAAQ2N,EAAIL,EAAY,SAEjD,GAAIlW,IAAMwW,SAASJ,EAAY,EAAG,IAErC,IADA,IAAMK,EAAe,EAAJzW,EAAS,EACjBuW,EAAI,EAAGA,GAAKF,EAASE,GAAK,EAC/BX,EAAKjV,KAAK,CAAE7E,IAAK2a,EAAUF,EAAG3N,MAAO6N,GAAWF,EAAIL,UAIxD,IADA,IAAMO,EAAe,EAAJzW,EAAS,EACjBuW,EAAI,EAAGA,EAAI,EAAGA,GAAK,EACxBX,EAAKjV,KAAK,CAAE7E,IAAK2a,EAAUF,EAAG3N,MAAO6N,GAAWF,EAAIL,KAI5DI,EAAM3V,KAAK,CACPgV,KAAM3V,EACN4V,SAGR9e,KAAKwf,MAAQA,I,+BA+BR,MAMDxf,KAAKC,MAJLX,EAFC,EAEDA,UACAie,EAHC,EAGDA,MACAD,EAJC,EAIDA,KACAG,EALC,EAKDA,aAEEmC,EAAYlC,EAAUmC,WAAWtC,EAAQ,GAEzCrd,EAAa,CACfZ,EACA,aACAa,KAAO2f,WAGX,OACI,yBAAKxgB,UAAWY,EAAWG,KAAK,MAC5B,4BAAQf,UAAWa,KAAO4f,QACtB,kBAAC,KAAD,CACIzgB,UAAWa,KAAOS,KAClB6C,QAASzD,KAAKggB,eACdzc,aAAW,EACXJ,SAAS,gBAEb,kBAAC,KAAD,CACI7D,UAAWa,KAAOod,MAClB9Z,QAASga,EACTla,aAAW,GAHf,UAKQqc,EALR,YAKqBtC,IAErB,kBAAC,KAAD,CACIhe,UAAWa,KAAOa,MAClByC,QAASzD,KAAKigB,WACd1c,aAAW,EACXJ,SAAS,iBAEb,kBAAC,GAAD,CAAY7D,UAAWa,KAAO2e,QAElC,yBAAKxf,UAAWa,KAAOqf,OACjBxf,KAAKwf,MAAM7R,IAAI3N,KAAKkgB,kB,GAvMH5f,IAAMC,e,IAAxBmd,G,YACEre,I,IADFqe,G,eAGKjZ,I,IAHLiZ,G,aAKG,CAChB,MAAO,MAAO,MAAO,MAAO,MAAO,MACnC,MAAO,MAAO,OAAQ,MAAO,MAAO,Q,4BC9BtCre,GAAY,CACdC,UAAWC,KAAUC,OACrB8d,KAAM/d,KAAUwX,OAAOjX,WACvByd,MAAOhe,KAAUwX,OAAOjX,WACxBgS,MAAOvS,KAAUwX,OACjByG,kBAAmBje,KAAUoX,KAC7BwJ,YAAa5gB,KAAUoX,MAGrBlS,GAAe,CACjBnF,UAAW,GACXwS,WAAOjL,EACP2W,uBAAmB3W,EACnBsZ,iBAAatZ,GAIIuZ,G,iNAUG,SAACC,GAAe,MACR,EAAKpgB,MAArBqd,EADwB,EACxBA,KAAMxL,EADkB,EAClBA,MACR5R,EAAa,CAACC,KAAOod,OAErBY,EAAWrM,GAAS,IAAIwM,KAAKxM,GAInC,OAHIqM,GAAYkC,IAAelC,EAASJ,YAAcT,IAASa,EAASL,eACpE5d,EAAW2J,KAAK1J,KAAOge,UAEpBje,EAAWG,KAAK,O,iCAGL,WAAM,MACmB,EAAKJ,MAAxCqd,EADgB,EAChBA,KAAMC,EADU,EACVA,MAAOC,EADG,EACHA,kBACjBF,EAAO,MAAQE,GACfA,EAAkBF,EAAO,EAAGC,K,iCAId,WAAM,MACmB,EAAKtd,MAAxCqd,EADgB,EAChBA,KAAMC,EADU,EACVA,MAAOC,EADG,EACHA,kBACjBA,GACAA,EAAkBF,EAAO,EAAGC,K,+BAIhB,SAAC8C,GAAe,MACI,EAAKpgB,MAAjCqd,EADwB,EACxBA,KAAME,EADkB,EAClBA,kBACVA,GACAA,EAAkBF,EAAM+C,EAAa,EAAG,S,wDAIvC,aAKDrgB,KAAKC,MAHLX,EAFC,EAEDA,UACAge,EAHC,EAGDA,KACA6C,EAJC,EAIDA,YAGJ,OACI,yBAAK7gB,UAAS,UAAKA,EAAL,YAAkBa,KAAOmgB,cACnC,4BAAQhhB,UAAWa,KAAO4f,QACtB,kBAAC,KAAD,CACIzgB,UAAWa,KAAOS,KAClB6C,QAASzD,KAAKugB,oBACdhd,aAAW,EACXJ,SAAS,gBAEb,kBAAC,KAAD,CACI7D,UAAWa,KAAOmd,KAClB7Z,QAAS0c,EACT5c,aAAW,GAET+Z,GAEN,kBAAC,KAAD,CACIhe,UAAWa,KAAOa,MAClByC,QAASzD,KAAKwgB,oBACdjd,aAAW,EACXJ,SAAS,kBAIjB,yBAAK7D,UAAWa,KAAOsgB,QAClBL,EAAYP,WAAWlS,IAAI,SAACiS,EAAWS,GAAZ,OACxB,kBAAC,KAAD,CACIrb,IAAK4a,EACLtgB,UAAW,EAAKohB,kBAAkBL,GAClC5c,QAAS,kBAAM,EAAKkd,kBAAkBN,IACtC9c,aAAW,GAETqc,W,GAjFWtf,IAAMC,e,IAA1B6f,G,YACE/gB,I,IADF+gB,G,eAGK3b,I,IAHL2b,G,aAKG,CAChB,MAAO,MAAO,MAAO,MAAO,MAAO,MACnC,MAAO,MAAO,OAAQ,MAAO,MAAO,Q,4BCxBtC/gB,GAAY,CACdC,UAAWC,KAAUC,OACrB8d,KAAM/d,KAAUwX,OAAOjX,WACvByd,MAAOhe,KAAUwX,OAAOjX,WACxBgS,MAAOvS,KAAUwX,OACjByG,kBAAmBje,KAAUoX,MAG3BlS,GAAe,CACjBnF,UAAW,GACXwS,WAAOjL,EACP2W,uBAAmB3W,GAIjB+Z,GAAiB,GAEFC,G,YAKjB,WAAY5gB,GAAO,kBACf,4BAAMA,IADS,8BAQA,SAACqd,GAAS,IACjBxL,EAAU,EAAK7R,MAAf6R,MACF5R,EAAa,CAACC,KAAOmd,MAM3B,OAJiBxL,EAAQ,IAAIwM,KAAKxM,GAAOgM,eAAiB,KACzCR,GACbpd,EAAW2J,KAAK1J,KAAOge,UAEpBje,EAAWG,KAAK,OAhBR,8BAmBA,SAACid,GAAS,MACY,EAAKrd,MAAlCsd,EADiB,EACjBA,MAAOC,EADU,EACVA,kBACXF,GAAQ,MAAQE,GAChBA,EAAkBF,EAAMC,EAAO,WAtBpB,4BA0BF,WACb,EAAKtF,SAAS,SAAA6I,GAAQ,MAAK,CACvBC,UAAWD,EAASC,UAAYH,QA5BrB,wBAgCN,WACT,EAAK3I,SAAS,SAAA6I,GAAQ,MAAK,CACvBC,UAAWD,EAASC,UAAYH,QAlCrB,IAEPtD,EAASrd,EAATqd,KAFO,OAGf,EAAKjF,MAAQ,CACT0I,UAAW7e,KAAK8e,MAAM1D,EAAOsD,IAAkBA,IAJpC,E,sDA2Cf,IALK,WACGG,EAAc/gB,KAAKqY,MAAnB0I,UACAzhB,EAAcU,KAAKC,MAAnBX,UAEF2hB,EAAQ,GACL/X,EAAI,EAAGA,EAAI0X,GAAgB1X,GAAK,EACrC+X,EAAMpX,KAAKkX,EAAY7X,GAE3B,IAAMgY,EAAWH,EAAYH,GAAkB,EAE/C,OACI,yBAAKthB,UAAS,UAAKA,EAAL,YAAkBa,KAAOghB,aACnC,4BAAQ7hB,UAAWa,KAAO4f,QACtB,kBAAC,KAAD,CACIzgB,UAAWa,KAAOS,KAClB6C,QAASzD,KAAKggB,eACdzc,aAAW,EACXJ,SAAS,gBAEb,kBAAC,KAAD,CACI7D,UAAWa,KAAOsH,MAClBlE,aAAW,GAFf,UAIQwd,EAJR,cAIuBG,IAEvB,kBAAC,KAAD,CACI5hB,UAAWa,KAAOa,MAClByC,QAASzD,KAAKigB,WACd1c,aAAW,EACXJ,SAAS,kBAGjB,yBAAK7D,UAAWa,KAAO8gB,OAClBA,EAAMtT,IAAI,SAAA2P,GAAI,OACX,kBAAC,KAAD,CACItY,IAAKsY,EACLhe,UAAW,EAAK8hB,iBAAiB9D,GACjC7Z,QAAS,kBAAM,EAAK4d,iBAAiB/D,IACrC/Z,aAAW,GAET+Z,W,GAnFUhd,IAAMC,e,IAAzBsgB,G,YACExhB,I,IADFwhB,G,eAGKpc,I,4BCfpBpF,GAAY,CACdC,UAAWC,KAAUC,OACrBsS,MAAOvS,KAAUwX,OACjBzE,SAAU/S,KAAUoX,MAGlBlS,GAAe,CACjBnF,UAAW,GACXwS,WAAOjL,EACPyL,cAAUzL,GAIRya,G,YAKF,WAAYrhB,GAAO,kBACf,4BAAMA,IADS,0BAuBJ,WASX,MANmB,CAFG,EAAKA,MAAnBX,UAIJa,KAAOohB,WACP,eAGclhB,KAAK,OAhCR,4BAmCF,WACb,EAAK4X,SAAS,CAAEuJ,OAAQ,YApCT,2BAuCH,WACZ,EAAKvJ,SAAS,CAAEuJ,OAAQ,WAxCT,mCA2CK,SAAClE,EAAMC,GAA8B,IAAvBiE,EAAuB,4DAAd3a,EAC3C,EAAKoR,SAAS,SAAA6I,GAAQ,MAAK,CACvBxD,OACAC,QACAiE,OAAQA,GAAUV,EAASU,YA/ChB,0BAmDJ,WAAM,MAIb,EAAKvhB,MAFL6R,EAFa,EAEbA,MACAQ,EAHa,EAGbA,SAHa,EAUb,EAAK+F,MAHLiF,EAPa,EAObA,KACAC,EARa,EAQbA,MAKJ,OAbiB,EASbiE,QAKA,IAAK,MACD,OACI,kBAAC,GAAD,CACIlE,KAAMA,EACNC,MAAOA,EACPzL,MAAOA,EACPQ,SAAUA,EACVmL,aAAc,EAAKgE,eACnBjE,kBAAmB,EAAKkE,wBAGpC,IAAK,QACD,OACI,kBAAC,GAAD,CACIpE,KAAMA,EACNC,MAAOA,EACPzL,MAAOA,EACPqO,YAAa,EAAKwB,cAClBnE,kBAAmB,EAAKkE,wBAGpC,IAAK,OACD,OACI,kBAAC,GAAD,CACIpE,KAAMA,EACNC,MAAOA,EACPzL,MAAOA,EACP0L,kBAAmB,EAAKkE,wBAGpC,QACI,OAAO,QA7Ff,IAAME,EAAc3hB,EAAM6R,MAAQ,IAAIwM,KAAKre,EAAM6R,OAAS,IAAIwM,KAH/C,OAIf,EAAKjG,MAAQ,CACTiF,KAAMsE,EAAY9D,cAClBP,MAAOqE,EAAY7D,WAAa,EAEhCyD,OAAQ,OARG,E,uEAYO/G,GAAW,IACzB3I,EAAU9R,KAAKC,MAAf6R,MACR,GAAI2I,EAAU3I,QAAUA,GAAS2I,EAAU3I,MAAO,CAC9C,IAAM4M,EAAO,IAAIJ,KAAK7D,EAAU3I,OAChC9R,KAAKiY,SAAS,CACVqF,KAAMoB,EAAKZ,cACXP,MAAOmB,EAAKX,WAAa,O,+BAmFjC,IAAMze,EAAYU,KAAKwZ,eACjBqI,EAAS7hB,KAAK8hB,aAEpB,OACI,yBAAKxiB,UAAWA,GACZ,kBAACuiB,EAAD,W,GA/GSvhB,IAAMC,e,IAAzB+gB,G,YACiBjiB,I,IADjBiiB,G,eAGoB7c,IAkHX+S,mBAAkB8J,I,oCChI3BjiB,GAAY,CACdiT,SAAU/S,KAAUoX,KACpB7E,MAAOvS,KAAUC,OACjBuiB,UAAWxiB,KAAUwX,OACrBzX,UAAWC,KAAUC,QAEnBiF,GAAe,CACjBqN,MAAO,GACPQ,cAAUzL,EACVkb,UAAW,EACXziB,UAAW,IAGM0iB,G,4MA+BF,SAACje,GAAU,IACd+N,EAAU/N,EAAM8H,OAAhBiG,MADc,EAMlB,EAAK7R,MAHEgiB,EAHW,EAGlBnQ,MACAiQ,EAJkB,EAIlBA,UACAzP,EALkB,EAKlBA,SAGAA,GAEAA,EADiB0P,EAAaE,YAAYpQ,EAAOmQ,EAAgBF,M,wDAKhE,MAMD/hB,KAAKC,MAJMgD,EAFV,EAED3D,UAGGqE,GALF,EAGD2O,SAHC,EAIDyP,UAJC,6CAQCziB,EAAY2E,YACdhB,EACA,gBACA9C,KAAOgiB,cAGX,OACI,kBAAC,GAAD,KACI7iB,UAAWA,EACXkE,KAAK,SACL8O,SAAUtS,KAAKmd,cACXxZ,Q,GAhEsBrD,IAAMC,e,IAA3ByhB,G,YACE3iB,I,IADF2iB,G,eAGKvd,I,IAHLud,G,aAKG,SAAClQ,EAAOiQ,GACxB,OAAIK,YAAQtQ,EAAO,CAAC,KACT,GAEJuQ,aAAUvQ,EAAD,SAAU,GAAMiQ,GAAYA,EAAW,O,IAT1CC,G,cAYI,SAAC3D,EAAUiE,EAAUP,GAKtC,OACIK,YAAQ/D,EAAU,CAAC,WAEFxX,IAAbyb,GACGA,EAAS9c,OAAS6Y,EAAS7Y,QAC3B6Y,EAASkE,MAAM,QAGf,GAEQP,GAAaQ,WAAWnE,EAAU0D,K,4BC7CvDU,GAAgB,SAAC,GAQjB,IAPFvf,EAOE,EAPFA,SACAyP,EAME,EANFA,SACA+P,EAKE,EALFA,mBACAC,EAIE,EAJFA,mBACAC,EAGE,EAHFA,sBACAtjB,EAEE,EAFFA,UACAgJ,EACE,EADFA,aAEMpI,EAAa,CACfZ,EACA,kBAGEujB,EAAuB,CACzB,SACA1iB,KAAO+D,OACP,QACA/D,KAAO2iB,OACTziB,KAAK,KAEP,OACI,kBAAC,KAAD,CACIf,UAAWY,EAAWG,KAAK,KAC3BiI,aAAcA,GAEd,4BACIhJ,UAAWujB,EACXrf,KAAK,SACLC,QAASif,EACTjb,MAAM,aACNiO,SAAS,KACTxS,SAAUA,GAAYyP,GAEtB,kBAACpO,EAAA,EAAD,CAAMC,KAAK,gBAEf,4BACIf,QAASkf,EACTrjB,UAAWa,KAAO+D,OAClBV,KAAK,SACLiE,MAAM,oBACNiO,SAAS,KACTxS,SAAUA,GAAYyP,GAEtB,kBAACpO,EAAA,EAAD,CAAMC,KAAK,WAEf,4BACIf,QAASmf,EACTtjB,UAAWa,KAAO+D,OAClBV,KAAK,SACLiE,MAAM,mBACNiO,SAAS,KACTxS,SAAUA,GAAYyP,GAEtB,kBAACpO,EAAA,EAAD,CAAMC,KAAK,gBAM3Bie,GAAcpjB,UAAY,CACtBqjB,mBAAoBnjB,KAAUoX,KAAK7W,WACnC6iB,mBAAoBpjB,KAAUoX,KAAK7W,WACnC8iB,sBAAuBrjB,KAAUoX,KAAK7W,WACtCoD,SAAU3D,KAAUmX,KACpB/D,SAAUpT,KAAUmX,KACpBpX,UAAWC,KAAUC,OACrB8I,aAAc/I,KAAUoX,KAAK7W,YAGjC2iB,GAAche,aAAe,CACzBvB,UAAU,EACVyP,UAAU,EACVrT,UAAW,IAGAmjB,U,ukBCxDf,IAAMpjB,GAAY,CACdC,UAAWC,KAAUC,OACrB0D,SAAU3D,KAAUmX,KACpB/D,SAAUpT,KAAUmX,KACpBvP,KAAM5H,KAAUC,OAChB0H,MAAO3H,KAAUC,OACjB0S,MAAO3S,KAAUC,OACjB8S,SAAU/S,KAAUoX,KACpBvD,UAAW7T,KAAUmX,KACrBvD,iBAAkB5T,KAAUmX,KAC5B5E,MAAOvS,KAAUC,OACjBiI,MAAOlI,KAAUC,OACjBujB,UAAWxjB,KAAUC,QAGnBiF,GAAe,CACjBnF,UAAW,GACX4D,UAAU,EACVgE,MAAO,GACPC,KAAM,GACN+K,MAAO,GACPI,SAAU,aACVc,WAAW,EACX2P,UAAW,IACXpQ,UAAU,EACVb,WAAOjL,EACPsM,kBAAkB,EAClB1L,WAAOZ,GAULmc,GAAa,SAACC,EAAGC,EAAGjZ,GACtB,IAAIkZ,YAAsB,CAAEC,UAAWH,EAAGI,WAAYH,EAAGI,SAAUrZ,IAGnE,OAAO,IAAIqU,KAAK2E,EAAGC,EAAI,EAAGjZ,IAKxBsZ,GAAa,SAAC,GAAgD,QAA9CN,SAA8C,MAA1C,GAA0C,MAAtCC,SAAsC,MAAlC,GAAkC,MAA9BjZ,SAA8B,MAA1B,GAA0B,EAApB8Y,EAAoB,uDAAR,IACxD,KAAIX,YAAQa,EAAG,CAAC,EAAG,MAAQb,YAAQc,EAAG,CAAC,EAAG,MAAQd,YAAQnY,EAAG,CAAC,EAAG,MAGjE,gBAAUgZ,GAAV,OAAcF,GAAd,OAA0BG,GAA1B,OAA8BH,GAA9B,OAA0C9Y,IAIxCuZ,GAAa,SAAC1R,GAA2B,IAApBiR,EAAoB,uDAAR,IACnC,IAAKjR,EACD,MAAO,GAEX,IAAMuH,EAASvH,EAAMlI,MAAMmZ,GAC3B,MAAO,CACHE,EAAG5J,EAAO,GACV6J,EAAG7J,EAAO,GACVpP,EAAGoP,EAAO,KAKLoK,GAAoB,SAAC3R,GAA2B,IAApBiR,EAAoB,uDAAR,IACjD,GAAc,KAAVjR,QAA0BjL,IAAViL,EAChB,OAAO,EAF8C,MAIrC0R,GAAW1R,EAAOiR,GAA9BE,EAJiD,EAIjDA,EAAGC,EAJ8C,EAI9CA,EAAGjZ,EAJ2C,EAI3CA,EAEd,OAAQkZ,YAAsB,CAAEC,WAAYH,EAAGI,YAAaH,EAAGI,UAAWrZ,KAGxEyZ,G,YAKF,WAAYzjB,GAAO,yBACf,4BAAMA,IADS,0BAsBJ,WAAM,MAQb,EAAKA,MANLiD,EAFa,EAEbA,SACA5D,EAHa,EAGbA,UACAwS,EAJa,EAIbA,MACA5K,EALa,EAKbA,MACA6b,EANa,EAMbA,UACApQ,EAPa,EAObA,SAPa,EAcb,EAAK0F,MAHLsL,EAXa,EAWbA,iBACAC,EAZa,EAYbA,kBACAC,EAba,EAabA,gBAGE3jB,EAAa,CACfZ,EACA,aACAa,KAAO2jB,WA8BX,OA3BIH,GAAoBC,GAAqBC,KACzC3jB,EAAW2J,KAAK1J,KAAOmR,SACvBpR,EAAW2J,KAAK,iBAChB3J,EAAW2J,KAAK,mBAGhB3G,IACAhD,EAAW2J,KAAK1J,KAAO+C,UACvBhD,EAAW2J,KAAK,cAGD4Z,GAAkB3R,EAAOiR,KAExC7iB,EAAW2J,KAAK1J,KAAO4jB,SACvB7jB,EAAW2J,KAAK,YAGhB3C,IACAhH,EAAW2J,KAAK1J,KAAO+G,OACvBhH,EAAW2J,KAAK,UAGhB8I,IACAzS,EAAW2J,KAAK,aAChB3J,EAAW2J,KAAK1J,KAAOwS,WAGpBzS,EAAWG,KAAK,OAvER,kCA0EI,WACnB,EAAK4X,SAAS,CAAE0L,kBAAkB,MA3EnB,iCA8EG,WAClB,EAAK1L,SAAS,CAAE0L,kBAAkB,MA/EnB,mCAkFK,WACpB,EAAK1L,SAAS,CAAE2L,mBAAmB,MAnFpB,kCAsFI,WACnB,EAAK3L,SAAS,CAAE2L,mBAAmB,MAvFpB,iCA0FG,WAClB,EAAK3L,SAAS,CAAE4L,iBAAiB,MA3FlB,gCA8FE,WACjB,EAAK5L,SAAS,CAAE4L,iBAAiB,MA/FlB,mCAkGK,SAACZ,GACrB,EAAK9F,aAAa,CAAE8F,QAnGL,oCAsGM,SAACC,GACtB,EAAK/F,aAAa,CAAE+F,QAvGL,kCA0GI,SAACjZ,GACpB,EAAKkT,aAAa,CAAElT,QA3GL,oCA8GM,WACrB,EAAKkT,aAAa,CACd8F,OAAGpc,EACHqc,OAAGrc,EACHoD,OAAGpD,MAlHQ,oCAsHM,WACrB,IAAM6X,EAAO,IAAIJ,KACjB,EAAKnB,aAAa,CACd8F,EAAGZ,YAASvN,OAAO4J,EAAKZ,eAAgB,GAAGvH,OAAO,GAClD2M,EAAGb,YAASvN,OAAO4J,EAAKX,WAAa,GAAI,GAAGxH,OAAO,GACnDtM,EAAGoY,YAASvN,OAAO4J,EAAKV,WAAY,GAAGzH,OAAO,OA3HnC,uCA+HS,WAAM,IACbpL,EAAc,EAAKH,aAA5BI,QACR,EAAKmI,mBAAqBpI,EAAUwI,wBACpC,EAAKsE,SAAS,CAAE+L,gBAAgB,MAlIjB,kCAqII,WACnB,EAAK/L,SAAS,CAAE+L,gBAAgB,MAtIjB,wCAyIU,SAACC,GAC1B,IAAMxiB,EAAcwiB,EAAoBtQ,wBAEvBxI,EAAc,EAAKH,aAA5BI,QACF1J,EAAayJ,EACbA,EAAUwI,wBACV,EAAKJ,mBAEHJ,EAAqB,EAAKlT,MAA1BkT,iBACFvR,EAAS,MAAKb,GAepB,OAdIoS,IACAvR,EAAOjB,IAAM,IAGgBmC,EAA8B,CAC3DpB,aACAD,cACAG,SACAC,MAAO,MACAX,EADF,CAEDC,KAAMO,EAAWb,YA7JV,sCAoKQ,SAACqjB,GACxB,IAAMC,EAAUC,YAAaF,GAC7B,EAAKjM,SACD,CAAE+L,gBAAgB,GAClB,WACI,EAAK7G,aAAa,CACd8F,EAAGZ,YAASvN,OAAOqP,EAAQrG,eAAgB,GAAGvH,OAAO,GACrD2M,EAAGb,YAASvN,OAAOqP,EAAQpG,WAAa,GAAI,GAAGxH,OAAO,GACtDtM,EAAGoY,YAASvN,OAAOqP,EAAQnG,WAAY,GAAGzH,OAAO,SA5K9C,0BAkLJ,SAAC8N,GAAoB,MAK5B,EAAKpkB,MAHLqS,EAF4B,EAE5BA,SACO2P,EAHqB,EAG5BnQ,MACAiR,EAJ4B,EAI5BA,UAJ4B,QAOfS,GAAWvB,EAAgBc,GAPZ,GAUzBsB,GAFCpB,EARwB,EAQxBA,EAAGC,EARqB,EAQrBA,EAAGjZ,EARkB,EAQlBA,EAKRoU,EAAWkF,GAAW,CAAEN,IAAGC,IAAGjZ,KAAK8Y,GACrC1E,IAAa4D,GACb3P,EAAS+L,KAjME,2CAqMa,SAACiG,GAA2B,IACvCnZ,EAAc,EAAKH,aAA5BI,QACF1J,EAAayJ,EACbA,EAAUwI,wBACV,EAAKJ,mBAEL9R,EAAc6iB,EAAuB3Q,wBAEnCR,EAAqB,EAAKlT,MAA1BkT,iBAOR,MALuC,CACnCvS,KAAM,GAAF,OAAMc,EAAWd,KAAOc,EAAWb,MAASY,EAAYZ,MAAxD,MACJF,IAAK,GAAF,OAAMe,EAAWf,IAAMe,EAAWZ,QAAWqS,EAAmB,GAAK,GAArE,SAjNQ,kCAuNI,WACnB,EAAK8E,SAAS,CAAEsM,gBAAgB,MAxNjB,kCA2NI,WACnB,EAAKtM,SAAS,CAAEsM,gBAAgB,MA5NjB,8BA+NA,YAAiB,IAAdtB,EAAc,EAAdA,EAAGC,EAAW,EAAXA,EAAGjZ,EAAQ,EAARA,EAClByU,EAAOsE,IAAYC,GAAIC,GAAIjZ,GAC3Bua,EAAW9F,GAAQA,EAAKF,UAE9B,OACI,kBAAC,KAAD,CACIlf,UAAWa,KAAO8jB,oBAClBtY,OAAQ,EAAKR,UACbR,OAAQ,EAAK8Z,qBACbnc,aAAc,EAAKoc,4BAEnB,kBAAC,GAAD,CACI5S,MAAO0S,EACPlS,SAAU,EAAKqS,8BAzO3B,EAAKtM,MAAQ,CACTsL,kBAAkB,EAClBC,mBAAmB,EACnBC,iBAAiB,EACjBG,gBAAgB,EAChBO,gBAAgB,GAGpB,EAAKvZ,aAAe1K,IAAM8a,YAC1B,EAAK7H,mBAAqB,GAZX,E,iEAeC,IACCpI,EAAcnL,KAAKgL,aAA5BI,QACJD,IACAnL,KAAKuT,mBAAqBpI,EAAUwI,2B,+BAgOnC,MAYD3T,KAAKC,MAVLiH,EAFC,EAEDA,MACAC,EAHC,EAGDA,KACA+K,EAJC,EAIDA,MACAkB,EALC,EAKDA,UACAD,EANC,EAMDA,iBACA1L,EAPC,EAODA,MACAvE,EARC,EAQDA,SACA4O,EATC,EASDA,MACAa,EAVC,EAUDA,SACAoQ,EAXC,EAWDA,UAXC,EAgBD/iB,KAAKqY,MAFL2L,EAdC,EAcDA,eACAO,EAfC,EAeDA,eAGEjlB,EAAYU,KAAKwZ,eAlBlB,EA2BDgK,GAAW1R,EAAOiR,GA3BjB,IAwBDE,EAAGG,OAxBF,MAwBc,GAxBd,MAyBDF,EAAGG,OAzBF,MAyBe,GAzBf,MA0BDpZ,EAAGqZ,OA1BF,MA0Ba,GA1Bb,EA6BCsB,EAAqB5kB,KAAK6kB,iBAC1BC,EAA2B,iBAAH,OACxB3kB,KAAO0T,MADiB,6CAK9B,OAEI,yBACI9M,IAAK/G,KAAKgL,aACVvD,MAAOA,EACPnI,UAAWA,EACXylB,YAAa/kB,KAAKglB,qBAClBxT,aAAcxR,KAAKilB,sBAEnB,kBAAC,GAAD,CACI3lB,UAAWa,KAAO+R,MAClBuF,KAAMrE,EACNuE,KAAMzF,IAEV,yBAAK5S,UAAWwlB,GACZ,yBAAKxlB,UAAWa,KAAO+kB,OACnB,kBAAC,GAAD,CACIpU,QAAS9Q,KAAKmlB,oBACdxa,OAAQ3K,KAAKolB,mBACb9lB,UAAWa,KAAOklB,QAClBtD,UAAW,EACX3f,IAzVZ,EA0VYD,IAAKmjB,aAAoBlC,GAAYC,GACrCkC,KA1Vf,EA2Ve7S,YAtCG,KAuCHxP,SAAUA,GAAYyP,EACtBb,MAAOwR,EACPhR,SAAUtS,KAAKwlB,uBAEnB,kBAAC,GAAD,CACI1U,QAAS9Q,KAAKylB,sBACd9a,OAAQ3K,KAAK0lB,qBACbpmB,UAAWa,KAAOwlB,UAClB5D,UAAW,EACX3f,IAxWV,EAyWUD,IAxWV,GAyWUojB,KAvWf,EAwWe7S,YApDK,KAqDLxP,SAAUA,GAAYyP,EACtBb,MAAOuR,EACP/Q,SAAUtS,KAAK4lB,yBAEnB,kBAAC,GAAD,CACI9U,QAAS9Q,KAAK6lB,qBACdlb,OAAQ3K,KAAK8lB,oBACbxmB,UAAWa,KAAO4lB,SAClBhE,UAAW,EACX3f,IAvXX,KAwXWD,IAvXX,KAwXWojB,KApXf,EAqXe7S,YAlEI,OAmEJxP,SAAUA,GAAYyP,EACtBb,MAAOsR,EACP9Q,SAAUtS,KAAKgmB,yBAGrBzB,GACE,kBAAC,GAAD,CACIjlB,UAAWa,KAAO8lB,cAClB/iB,SAAUA,EACVyP,SAAUA,EACV+P,mBAAoB1iB,KAAKyU,uBACzBkO,mBAAoB3iB,KAAKkmB,uBACzBtD,sBAAuB5iB,KAAKmmB,0BAC5B7d,aAActI,KAAKomB,iCAI/B,kBAAC,GAAD,CACI3O,KAAMtE,EACNhM,KAAMA,EACND,MAAOA,IAET8c,GACE,kBAACY,EAAD,CACI3B,EAAGG,EACHF,EAAGG,EACHpZ,EAAGqZ,S,GAvWHhjB,IAAMC,e,IAAxBmjB,G,YACiBrkB,I,IADjBqkB,G,eAGoBjf,IA4WX+S,mBAAkB6O,GAAM3C,K,wBCncjCrkB,GAAY,CACdC,UAAWC,KAAUC,OACrBsS,MAAOvS,KAAU+mB,MAAM,CACnBC,UAAWhnB,KAAUC,OACrBgnB,QAASjnB,KAAUC,SAEvB8S,SAAU/S,KAAUoX,MAGlBlS,GAAe,CACjBnF,UAAW,GACXwS,MAAO,GACPQ,SAdS,cAiBPmU,GAAU,CACZ5I,MAAO,WACH,IAAMA,EAAQ,IAAIS,KAKlB,OAJAT,EAAM6I,SAAS,EAAG,EAAG,EAAG,GAIjB,CAAEH,UAHShD,YAAW1F,GAGT2I,QAFJjD,YAAW1F,KAI/B8I,UAAW,WACP,IAAMA,EAAY,IAAIrI,KAMtB,OALAqI,EAAUD,SAAS,EAAG,EAAG,EAAG,GAC5BC,EAAUC,QAAQD,EAAU3I,UAAY,GAIjC,CAAEuI,UAHShD,YAAWoD,GAGTH,QAFJjD,YAAWoD,KAI/BE,YAAa,WACT,IAAMzkB,EAAM,IAAIkc,KAChBlc,EAAIskB,SAAS,EAAG,EAAG,EAAG,GACtBtkB,EAAIwkB,QAAQxkB,EAAI4b,UAAY5b,EAAIid,UAChC,IAAMkH,EAAYhD,YAAWnhB,GAEvBD,EAAMC,EAIZ,OAHAD,EAAIukB,SAAS,EAAG,EAAG,EAAG,GACtBvkB,EAAIykB,QAAQxkB,EAAI4b,UAAY,GAErB,CAAEuI,YAAWC,QADJjD,YAAWphB,KAG/B2kB,cAAe,WACX,IAAM1kB,EAAM,IAAIkc,KAChBlc,EAAIskB,SAAS,EAAG,EAAG,EAAG,GACtBtkB,EAAIwkB,QAAQxkB,EAAI4b,UAAY,GAC5B,IAAMuI,EAAYhD,YAAWnhB,GAEvBD,EAAM,IAAImc,KAIhB,OAHAnc,EAAIukB,SAAS,EAAG,EAAG,EAAG,GAGf,CAAEH,YAAWC,QAFJjD,YAAWphB,KAI/B4kB,aAAc,WACV,IAAM3kB,EAAM,IAAIkc,KAChBlc,EAAIskB,SAAS,EAAG,EAAG,EAAG,GACtBtkB,EAAIwkB,QAAQ,GACZ,IAAML,EAAYhD,YAAWnhB,GAEvBD,EAAM,IAAImc,KAMhB,OALAnc,EAAIukB,SAAS,EAAG,EAAG,EAAG,GACtBvkB,EAAI6kB,SAAS5kB,EAAI2b,WAAa,GAC9B5b,EAAIykB,QAAQ,GAGL,CAAEL,YAAWC,QAFJjD,YAAWphB,KAI/B8kB,eAAgB,WACZ,IAAM7kB,EAAM,IAAIkc,KAChBlc,EAAIskB,SAAS,EAAG,EAAG,EAAG,GACtBtkB,EAAIwkB,QAAQxkB,EAAI4b,UAAY,IAC5B,IAAMuI,EAAYhD,YAAWnhB,GAEvBD,EAAM,IAAImc,KAIhB,OAHAnc,EAAIukB,SAAS,EAAG,EAAG,EAAG,GAGf,CAAEH,YAAWC,QAFJjD,YAAWphB,MAM7B+kB,G,YA0EF,WAAYjnB,GAAO,yBACf,4BAAMA,IADS,0BASJ,WAOX,MALmB,CADG,EAAKA,MAAnBX,UAGJ,eAGce,KAAK,OAhBR,wBAmBN,WAAiC,6DAAP,GAAvBkmB,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,QAClBD,GAAcC,EAKnB,EAAKvmB,MAAMqS,SAAS,CAChBiU,YACAC,YANA,EAAKvmB,MAAMqS,cAASzL,KArBT,qCA+BO,SAACiL,GACvB,OAAQA,GACJ,IAAK,cACD,EAAKmG,SAAS,CACVkP,gBAAgB,IAEpB,MACJ,IAAK,cACD,EAAKlP,SAAS,CACVmP,gBAAgB,IAEpB,MACJ,QACI,EAAKC,WAAWvV,GAAS2U,GAAQ3U,SA5C1B,6BAgDD,WACd,EAAKmG,SAAS,CACVmP,gBAAgB,MAlDL,4BAsDF,YAA4B,IAAzBb,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,QAC3B,EAAKvO,SAAS,CACVmP,gBAAgB,GACjB,WACC,EAAKC,WAAW,CACZd,YACAC,gBA5DO,6BAiED,WACd,EAAKvO,SAAS,CACVkP,gBAAgB,MAnEL,4BAuEF,YAAc,IAAXzI,EAAW,EAAXA,KAChB,EAAKzG,SAAS,CACVkP,gBAAgB,GACjB,WACC,EAAKE,WAAW,CACZd,UAAW7H,EACX8H,QAAS9H,QA7EF,8BAkFA,WAGf,OAF2B,EAAKrG,MAAxB8O,eAOJ,kBAAC,GAAD,CACI7nB,UAAWa,KAAOmnB,gBAClB1c,QAAS,EAAK2c,gBACdtO,QAAS,EAAKuO,eACd/f,MAAM,gBACNyR,OAAQgO,EAAWO,kBAEnB,kBAAC,GAAD,CAAWC,iBAAiB,UAXzB,OAtFI,8BAsGA,WAGf,OAF2B,EAAKrP,MAAxB+O,eAOJ,kBAAC,GAAD,CACI9nB,UAAWa,KAAOmnB,gBAClB1c,QAAS,EAAK+c,gBACd1O,QAAS,EAAK2O,eACdngB,MAAM,sBACNyR,OAAQgO,EAAWW,kBAEnB,kBAAC,GAAD,CAAWH,iBAAiB,cAC5B,kBAAC,GAAD,CAAWA,iBAAiB,aAZzB,OAvGX,EAAKrP,MAAQ,CACT+O,gBAAgB,EAChBD,gBAAgB,GALL,E,sDA2HV,MAKDnnB,KAAKC,MAHL6R,EAFC,EAEDA,MAEGnO,GAJF,EAGD2O,SAHC,6BAOChT,EAAYU,KAAKwZ,eAPlB,EAYD0N,EAAWY,yBAAyBhW,GAF3BiW,EAVR,EAUD9iB,QACO+iB,EAXN,EAWDlW,MAGEmW,EAAmBjoB,KAAKkoB,iBACxBC,EAAmBnoB,KAAKooB,iBAE9B,OACI,kBAAC,IAAMC,SAAP,KACI,kBAAC,GAAD,KACI/oB,UAAWA,EACXgT,SAAUtS,KAAKsoB,wBACfrjB,QAAS8iB,EACTjW,MAAOkW,GACHrkB,IAER,kBAACskB,EAAD,MACA,kBAACE,EAAD,W,GAhOS7nB,IAAMC,e,IAAzB2mB,G,YACiB7nB,I,IADjB6nB,G,eAGoBziB,I,IAHpByiB,G,iBAKsB,CACpB,CAAEliB,IAAK,QAASkN,MAAO,SACvB,CAAElN,IAAK,YAAakN,MAAO,aAC3B,CAAElN,IAAK,cAAekN,MAAO,aAC7B,CAAElN,IAAK,gBAAiBkN,MAAO,eAC/B,CAAElN,IAAK,eAAgBkN,MAAO,cAC9B,CAAElN,IAAK,iBAAkBkN,MAAO,gBAChC,CAAElN,IAAK,cAAekN,MAAO,wBAC7B,CAAElN,IAAK,cAAekN,MAAO,yB,IAb/BgV,G,mBAgBwB,CACtBqB,OAAQ,CACJ7J,KAAM,CAAC8J,Q,IAlBbtB,G,mBAuBwB,CACtBqB,OAAQ,CACJhC,UAAW,CAACiC,KACZhC,QAAS,CAACgC,Q,IA1BhBtB,G,aA8BkB,SAAAxI,GAAI,OAAI+J,YAAmBjF,YAAW9E,GAAO,gB,IA9B/DwI,G,2BAgCgClL,aAAQ,SAAClK,GACvC,IAAM7M,EAAUiiB,GAAWwB,eACnBnC,EAAuBzU,EAAvByU,UAAWC,EAAY1U,EAAZ0U,QAEnB,IAAKD,IAAcC,EACf,MAAO,CAAEvhB,UAAS6M,WAAOjL,GAG7B,IAAM8hB,EAASrd,OAAOiC,KAAKkZ,IAAS5R,KAAK,SAAC7P,GACtC,IAAM4jB,EAAOnC,GAAQzhB,KACrB,OAAO4jB,EAAKrC,YAAcA,GAAaqC,EAAKpC,UAAYA,IAG5D,OAAImC,EACO,CACH1jB,UACA6M,MAAO6W,GAIXpC,IAAcC,EACP,CACHvhB,QAAS,GAAF,YACAA,GADA,CAEH,CAAED,IAAK,gBAAiBkN,MAAOqU,KAEnCzU,MAAO,iBAIR,CACH7M,QAAS,GAAF,YACAA,GADA,CAEH,CACID,IAAK,gBACLkN,MAAO,GAAF,OAAKgV,GAAW2B,WAAWtC,GAA3B,cAA2CW,GAAW2B,WAAWrC,OAG9E1U,MAAO,oBAgKJ0F,mBAAkB0P,ICzUlB4B,GAHM,SAAA7oB,GAAK,OACtB,kBAAC,KAAD,KAAQQ,WAAW,iBAAoBR,K,wBCOrCZ,GAAY,CAIdC,UAAWC,KAAUC,OAKrB0D,SAAU3D,KAAUmX,KAKpBxP,MAAO3H,KAAUC,OAKjB2H,KAAM5H,KAAUC,OAKhB0S,MAAO3S,KAAUC,OAKjBmL,OAAQpL,KAAUoX,KAKlBrE,SAAU/S,KAAUoX,KAKpB7F,QAASvR,KAAUoX,KAKnBoS,SAAUxpB,KAAUmX,KAEpBtD,UAAW7T,KAAUmX,KAErBvD,iBAAkB5T,KAAUmX,KAE5B5E,MAAOvS,KAAUC,OACjBwpB,OAAQzpB,KAAUC,OAElBypB,cAAe1pB,KAAUmX,MAGvBjS,GAAe,CACjBnF,UAAW,GACX0pB,OAAQ,OACR9lB,UAAU,EACVgE,MAAO,GACPC,KAAM,GACN+K,MAAO,GACPvH,YAAQ9D,EACRyL,cAAUzL,EACViK,aAASjK,EACTkiB,UAAU,EACV3V,WAAW,EACXD,kBAAkB,EAClBrB,MAAO,GACPmX,eAAe,GAGNC,GAAb,YAKI,WAAYjpB,GAAO,yBACf,4BAAMA,IADS,0BA8CJ,SAAC8D,GAAU,IACd+N,EAAU/N,EAAM8H,OAAhBiG,MACAQ,EAAa,EAAKrS,MAAlBqS,SAEJA,GACAA,EAASR,KAnDE,yBAuDL,WAAM,MACmB,EAAK7R,MAAhCgpB,EADQ,EACRA,cAAenY,EADP,EACOA,QACnBmY,GAEAllB,MAAM8H,OAAOiI,SAGjB,EAAKmE,SAAS,CACVpH,WAAW,IAGXC,GACAA,MAnEW,wBAuEN,WAAM,IAEXnG,EACA,EAAK1K,MADL0K,OAGJ,EAAKsN,SAAS,CACVpH,WAAW,IAGXlG,GACAA,MA9EJ,EAAK0N,MAAQ,CAAExH,WAAW,GAC1B,EAAKqG,QAAUzN,cAJA,EALvB,4DAaQ,IAAMvJ,EAAa,GADR,EAOPF,KAAKC,MAHLiD,EAJO,EAIPA,SACAgE,EALO,EAKPA,MACA6hB,EANO,EAMPA,SAIAlY,EACA7Q,KAAKqY,MADLxH,UA0BJ,OAvBA3Q,EAAW2J,KAAK,aAChB3J,EAAW2J,KAAK1J,KAAOgpB,UAEnBjmB,IACAhD,EAAW2J,KAAK1J,KAAO+C,UACvBhD,EAAW2J,KAAK,aAGhBgH,IACA3Q,EAAW2J,KAAK1J,KAAOmR,SACvBpR,EAAW2J,KAAK,YAGfuY,YAAQlb,EAAO,CAAC,OACjBhH,EAAW2J,KAAK1J,KAAO+G,OACvBhH,EAAW2J,KAAK,UAGhBkf,IACA7oB,EAAW2J,KAAK1J,KAAO4oB,UACvB7oB,EAAW2J,KAAK,aAGb3J,EAAWG,KAAK,OAhD/B,+BA0Fa,MAiBDL,KAAKC,MAVLX,GAPC,EAGDqL,OAHC,EAID2H,SAJC,EAKDxB,QALC,EAMDmY,cANC,EAOD3pB,WAEA4H,EATC,EASDA,MACAC,EAVC,EAUDA,KACA+K,EAXC,EAWDA,MACAkB,EAZC,EAYDA,UACAD,EAbC,EAaDA,iBACAjQ,EAdC,EAcDA,SACA8lB,EAfC,EAeDA,OACGrlB,EAhBF,6IAmBCzD,EAAaF,KAAKwZ,eAChB3I,EAAc7Q,KAAKqY,MAAnBxH,UAER,OACI,yBAAKvR,UAAS,UAAKY,EAAL,YAAmBZ,IAC7B,kBAAC,GAAD,CACImY,KAAMrE,EACNuE,KAAMzF,EACNhL,QAASA,EACTS,OAAQkJ,EACR3N,SAAUA,IAEd,kCACI5D,UAAS,UAAKa,KAAO0T,MAAZ,UACTrJ,GAAIxK,KAAKkX,QACTvM,OAAQ3K,KAAKopB,WACb9W,SAAUtS,KAAKmd,aACfrM,QAAS9Q,KAAKqpB,YACd7d,MAAO,CAAEwd,WACLrlB,IAER,kBAAC,GAAD,CACI8T,KAAMtE,EACNhM,KAAMA,EACND,MAAOA,SArI3B,GAAoC5G,IAAMC,e,IAA7B2oB,G,YACU7pB,I,IADV6pB,G,eAGazkB,IAyIX+S,mBAAkB6O,GAAM6C,K,wBCpNjC7pB,GAAY,CACd6D,SAAU3D,KAAUmX,KACpBpX,UAAWC,KAAUC,OACrB8S,SAAU/S,KAAUoX,KACpBoS,SAAUxpB,KAAUmX,KACpB/D,SAAUpT,KAAUmX,KACpB4S,iBAAkB/pB,KAAUmX,KAC5B5E,MAAOvS,KAAUC,QAGfiF,GAAe,CACjBvB,UAAU,EACV5D,UAAW,GACXqT,UAAU,EACVL,cAAUzL,EACVkiB,UAAU,EACVO,kBAAkB,EAClBxX,WAAOjL,GAIL0iB,G,gNAKiB,WAAM,MAIjB,EAAKtpB,MAFLqS,EAFiB,EAEjBA,SACAR,EAHiB,EAGjBA,MAIJQ,EADsBkX,YAAc1X,M,iCAIlBkK,aAAQ,SAAAyN,GAAO,OAAKA,GAAWA,IAAYD,YAAcC,M,wDAEtE,MAQDzpB,KAAKC,MANLiD,EAFC,EAEDA,SACAyP,EAHC,EAGDA,SACArT,EAJC,EAIDA,UACAgqB,EALC,EAKDA,iBACAxX,EANC,EAMDA,MACGnO,EAPF,sEAUL,OACI,yBAAKrE,UAAS,UAAKA,EAAL,YAAkBa,KAAOupB,gBACnC,kBAAC,GAAD,OACQ/lB,EADR,CAEIT,SAAUA,EACVyP,SAAUA,EACVrT,UAAWa,KAAOwpB,KAClB7X,MAAOA,KAETwX,GACE,kBAAC,GAAD,CACI5T,SAAS,KACTpW,UAAWa,KAAOypB,aAClBzmB,SAAS,aACTM,QAASzD,KAAK6pB,iBACdpiB,MAAM,gCACNnE,sBAAoB,EACpBD,wBAAsB,EACtBE,aAAW,EACXL,SAAUA,GAAYyP,GAAY3S,KAAK8pB,oBAAoBhY,U,GA9CnDxR,IAAMC,e,IAAhCgpB,G,YACiBlqB,I,IADjBkqB,G,eAGoB9kB,IAmDX+S,mBAAkB6O,GAAMkD,K,qCCpEjClqB,GAAY,CACdC,UAAWC,KAAUC,OACrBuqB,cAAexqB,KAAUC,OACzBsS,MAAOvS,KAAUI,QAAQJ,KAAUG,UAAU,CACzCH,KAAUwX,OACVxX,KAAUC,UAEdyF,QAAS1F,KAAUI,QAAQJ,KAAU4Z,QACrC7G,SAAU/S,KAAUoX,KAAK7W,WACzBoF,YAAa3F,KAAUoX,KACvBjF,cAAenS,KAAUoX,KACzBqT,gBAAiBzqB,KAAUoX,KAC3BsT,WAAY1qB,KAAUC,OAEtB0S,MAAO3S,KAAUC,OACjB0D,SAAU3D,KAAUmX,KACpB/D,SAAUpT,KAAUmX,KACpBxP,MAAO3H,KAAUC,OACjB2H,KAAM5H,KAAUC,OAChB4T,UAAW7T,KAAUmX,KACrBvD,iBAAkB5T,KAAUmX,KAC5BwT,QAAS3qB,KAAUmX,MAGjBjS,GAAe,CACjBnF,UAAW,GACXyqB,cAAe,GACfjY,MAAO,GACP7M,QAAS,GACTC,YAAa,SAAAuR,GAAI,OAAIA,EAAKzR,KAC1BglB,gBAAiB,SAAAvT,GAAI,OAAIA,EAAKvE,OAC9BR,cAAe,SAAA+E,GAAI,OAAIA,EAAKvE,OAC5B+X,gBAAYpjB,EAEZqL,MAAO,GACPhP,UAAU,EACVyP,UAAU,EACVzL,MAAO,GACPC,KAAM,GACNiM,WAAW,EACXD,kBAAkB,EAClB+W,SAAS,GAIAC,GAAb,4MAKmB,WAAM,MAMb,EAAKlqB,MAJMgD,EAFE,EAEb3D,UACA4D,EAHa,EAGbA,SACAgE,EAJa,EAIbA,MACAgjB,EALa,EAKbA,QAeJ,OAZkBjmB,YACdhB,EACA9C,KAAOiqB,cACP,iBACAF,EAAU/pB,KAAOkqB,aAAelqB,KAAOmqB,cACvCJ,EAAU,gBAAkB,iBAC5BhnB,GAAY/C,KAAO+C,SACnBA,GAAY,WACZgE,GAAS/G,KAAO+G,MAChBA,GAAS,WAtBrB,gCA4ByB8U,aAAQ,SAACiO,EAAYhlB,GAAY,IAE9CyM,EACA,EAAKzR,MADLyR,cAGJ,OAAI4E,YAAc2T,GACPhlB,EAGQA,EACdqF,OAAO,SAAA+G,GAAM,OAAIyE,YAAwBpE,EAAcL,GAAS4Y,KAChEzc,KAAK,SAACuI,EAAGC,GAAJ,OAAUC,YACZvE,EAAcqE,GACdrE,EAAcsE,GACdiU,QA1ChB,8BA+CuB,SAACjlB,EAAKulB,GAAe,MACR,EAAKtqB,MAAzB6R,EAD4B,EAC5BA,MAAOQ,EADqB,EACrBA,SAET+L,EAAW,KAAIvM,GACrB,GAAKyY,EAIDlM,EAASxU,KAAK7E,OAJD,CACb,IAAMgF,EAAQqU,EAASmM,QAAQxlB,GAC/BqZ,EAASnU,OAAOF,EAAO,GAK3BsI,EAAS+L,KA1DjB,0BA6DmB,SAACrZ,EAAKylB,GAAa,MAQ1B,EAAKxqB,MANLyR,EAF0B,EAE1BA,cACAsY,EAH0B,EAG1BA,gBACAlY,EAJ0B,EAI1BA,MACA5O,EAL0B,EAK1BA,SACAyP,EAN0B,EAM1BA,SACAuX,EAP0B,EAO1BA,QAGE/L,EAAWrM,EAAM0Y,QAAQxlB,IAAQ,EAQvC,MAAO,CAEH1F,UAAWa,KAAOsW,KAClBvE,MAAOR,EAAc+Y,GACrB7T,QAASoT,EAAgBS,GACzB3Y,MAAOqM,EACP7L,SAAU,SAAA8B,GAAG,OAAI,EAAKsW,iBAAiB1lB,EAAKoP,IAC5CyC,aAAcqT,EAAU,QAAU,WAClChnB,WACAyP,cAxFZ,yBA4FkB,WAAM,MAMZ,EAAK1S,MAJLgF,EAFY,EAEZA,QACAC,EAHY,EAGZA,YACA6kB,EAJY,EAIZA,cACAE,EALY,EAKZA,WAGE7N,EAAkB,EAAKuO,mBAAmBV,EAAYhlB,GAE5D,OACI,kBAAC,KAAD,CACI3F,UAAW2E,YACP9D,KAAO8E,QACP,yBACA8kB,GAEJjd,KAAMsP,EACN3P,SAAUuK,GACV9R,YAAaA,EACb6H,eAAgB,EAAK6d,iBAhHrC,wDAqHa,MAQD5qB,KAAKC,MANLiS,EAFC,EAEDA,MACA/K,EAHC,EAGDA,KACAD,EAJC,EAIDA,MACAiM,EALC,EAKDA,iBACAC,EANC,EAMDA,UACAlQ,EAPC,EAODA,SAGE5D,EAAYU,KAAKwZ,eACjBqR,EAAQ7qB,KAAK8qB,YAEnB,OACI,yBAAKxrB,UAAWA,GACZ,kBAAC,GAAD,CACImY,KAAMrE,EACNuE,KAAMzF,EACNhP,SAAUA,EACVgE,QAASA,IAEb,kBAAC2jB,EAAD,MACA,kBAAC,GAAD,CACIpT,KAAMtE,EACNhM,KAAMA,EACND,MAAOA,SA9I3B,GAAyC5G,IAAMC,e,IAAlC4pB,G,YACU9qB,I,IADV8qB,G,eAGa1lB,IAkJX+S,mBAAkB2S,I,wBC7M3BnT,GAAW,SAAC,GAAe,IAAbrP,EAAa,EAAbA,OACVrI,EAAY2E,YACd,WACA9D,KAAOgX,UAGX,OACI,kBAAC5S,EAAA,EAAD,CACIjF,UAAWA,EACXkF,KAAMmD,EAAS,WAAa,0BAKxCqP,GAAS3X,UAAY,CACjBsI,OAAQpI,KAAUmX,KAAK5W,YAGZkX,U,wBCpBT3X,GAAY,CACdsI,OAAQpI,KAAUmX,KAAK5W,WACvBwR,QAAS/R,KAAUmX,KAAK5W,WACxBR,UAAWC,KAAUC,OACrBiE,QAASlE,KAAUoX,KAAK7W,WACxBiR,UAAWxR,KAAUG,UAAU,CAC3BH,KAAUC,OACVD,KAAUwX,SACXjX,WACHgR,QAASvR,KAAUoX,KAAK7W,WACxBirB,YAAaxrB,KAAUC,QAQNiR,G,YAKjB,WAAYxQ,GAAO,yBACf,4BAAMA,IADS,0BAuBJ,WAAM,MAKb,EAAKA,MAHL0H,EAFa,EAEbA,OACA2J,EAHa,EAGbA,QAIEpR,EAAa,CAPF,EAIbZ,UAKA,SACAa,KAAOkR,QAYX,OATI1J,GACAzH,EAAW2J,KAAK,UAGhByH,IACApR,EAAW2J,KAAK1J,KAAOmR,SACvBpR,EAAW2J,KAAK,YAGb3J,EAAWG,KAAK,OA7CR,yBAgDL,WAAM,MAIZ,EAAKJ,OAETwD,EANgB,EAEZA,SAFY,EAGZsN,aAnDW,6BAyDD,WAAM,MAIhB,EAAK9Q,MAFL8Q,EAFgB,EAEhBA,UACAD,EAHgB,EAGhBA,QAGJ,EAAKH,gBAAiB,EACtBG,EAAQC,KAhEO,8BAmEA,WACf,EAAKJ,gBAAiB,IApEP,2BAuEH,WACP,EAAKA,gBACN,EAAK5J,IAAIqE,QAAQ4F,eAAe,CAC5BE,MAAO,cAxEf,EAAKnK,IAAMzG,IAAM8a,YACjB,EAAKzK,oBAAiB9J,EAHP,E,iEAOK7G,KAAKC,MAAjBqR,SAEJtR,KAAKqb,kB,gDAIaZ,IACFza,KAAKC,MAAjBqR,SAEQmJ,EAAUnJ,QACtBtR,KAAKqb,gBAELrb,KAAK2Q,gBAAiB,I,+BA4DrB,MAID3Q,KAAKC,MAFL8qB,EAFC,EAEDA,YACApjB,EAHC,EAGDA,OAGErI,EAAYU,KAAKwZ,eAEvB,OACI,4BACIzS,IAAK/G,KAAK+G,IACVzH,UAAWA,EACXmE,QAASzD,KAAK4D,YACd2N,YAAavR,KAAKmR,gBAClBK,aAAcxR,KAAKoR,iBACnB5N,KAAK,UAEL,kBAAC,GAAD,CAAUmE,OAAQA,IAChBojB,O,GAtGkBzqB,IAAMC,e,IAArBkQ,G,YACEpR,I,IADFoR,G,eALA,CACjBnR,UAAW,GACXyrB,YAAa,K,4BCXX1rB,GAAY,CACd2rB,WAAYzrB,KAAUya,MAAMla,WAC5BR,UAAWC,KAAUC,OACrBsN,KAAMvN,KAAUya,MAAMla,WACtBoF,YAAa3F,KAAUoX,KAAK7W,WAC5B4R,cAAenS,KAAUoX,KAAK7W,WAC9B+R,oBAAqBtS,KAAUoX,KAC/BhM,OAAQpL,KAAUoX,KAAK7W,WACvBwI,aAAc/I,KAAUoX,KAAK7W,WAC7B6R,cAAepS,KAAUoX,KAAK7W,WAC9B8R,cAAerS,KAAUoX,KAAK7W,WAC9Byb,gBAAiBhc,KAAU4Z,OAC3BmC,YAAa/b,KAAUoX,KACvBc,KAAMlY,KAAUmX,KAAK5W,WACrB8F,WAAYrG,KAAUG,UAAU,CAACH,KAAUC,OAAQD,KAAUwX,UAG3DtS,GAAe,CACjBnF,UAAW,GACXgc,YAAa,iBAAM,uBACnBC,qBAAiB1U,EACjBjB,gBAAYiB,EACZgL,yBAAqBhL,GAGJ4K,G,YAKjB,WAAYxR,GAAO,yBACf,4BAAMA,IADS,0BAcJ,WAQX,MALmB,CAFG,EAAKA,MAAnBX,UAIJa,KAAO8E,SAGO5E,KAAK,OAtBR,+BAyBC,SAACJ,GAAU,IACnB+qB,EAAe/qB,EAAf+qB,WAER,EAAKC,cAAgBC,YACjBF,EACA,SAAAja,GAAS,OAAIA,GACb,kBAAM,MA/BK,0BAmCJ,SAACoa,EAAGre,GAAS,MAQpB,EAAK7M,MANLiF,EAFoB,EAEpBA,YACAwM,EAHoB,EAGpBA,cACAC,EAJoB,EAIpBA,cACAC,EALoB,EAKpBA,cACAC,EANoB,EAMpBA,oBACAjM,EAPoB,EAOpBA,WAGEZ,EAAME,EAAY4H,GAClBoF,EAAQL,EACVA,EAAoB/E,GAEpB4E,EAAc5E,GAEZ8D,IAAa,EAAKqa,cAAcjmB,GAChC6L,EAAY7L,IAAQY,EAE1B,OACI,kBAAC,GAAD,CACIZ,IAAKA,EACL+L,UAAW/L,EACX+lB,YAAa7Y,EACbzO,QAASkO,EACTb,QAASc,EACTjK,OAAQiJ,EACRU,QAAST,MA9DF,yBAmEL,WAAM,MAIZ,EAAK5Q,MAFQ2P,EAFD,EAEZ0L,YAIJ,GANgB,EAGZxO,KAGKtH,OAAS,EACd,OAAO,KAGX,IAAMlG,EAAY,SAAH,OAAYa,KAAOoH,OAClC,OACI,yBAAKjI,UAAWA,GACZ,kBAACsQ,EAAD,SA9ER,EAAKwb,kBAAkBnrB,GAFR,E,uEAKOwa,GAAW,IACb4Q,EAAkBrrB,KAAKC,MAAnC+qB,WACYM,EAAkB7Q,EAA9BuQ,WAEHO,YAAYF,EAAeC,IAC5BtrB,KAAKorB,kBAAkB3Q,K,+BA2EtB,MAODza,KAAKC,MALL0K,EAFC,EAEDA,OACArC,EAHC,EAGDA,aACAiT,EAJC,EAIDA,gBACAzO,EALC,EAKDA,KACA2K,EANC,EAMDA,KAGEnY,EAAYU,KAAKwZ,eACjBiC,EAAQzb,KAAKsb,YAEnB,OAAK7D,EAKD,kBAAC,KAAD,CACI9M,OAAQA,EACRrC,aAAcA,EACdqD,OAAQ4P,EACRjc,UAAWA,GAEX,kBAAC,KAAD,CACIwN,KAAMA,EACN4O,SAAU1b,KAAK2b,eAEnB,kBAACF,EAAD,OAdG,S,GAvGkBnb,IAAMC,e,IAAtBkR,G,YACEpS,I,IADFoS,G,eAGKhN,I,2kBCV1B,IAAMoX,GAAcC,GAAeC,IAC7ByP,GAAY,GAILnsB,GAAY,CACrB4S,UAAW1S,KAAUmX,KACrBxT,SAAU3D,KAAUmX,KACpBrB,gBAAiB9V,KAAUmX,KAC3B+U,oBAAqBlsB,KAAUmX,KAC/B/D,SAAUpT,KAAUmX,KACpBvD,iBAAkB5T,KAAUmX,KAC5BtD,UAAW7T,KAAUmX,KAErBpX,UAAWC,KAAUC,OACrB0H,MAAO3H,KAAUC,OACjB2H,KAAM5H,KAAUC,OAChB0S,MAAO3S,KAAUG,UAAU,CAACH,KAAUC,OAAQD,KAAUwX,SACxDtE,iBAAkBlT,KAAUC,OAC5BkT,YAAanT,KAAUC,OACvBiI,MAAOlI,KAAUC,OAEjByF,QAAS1F,KAAUI,QAAQJ,KAAU4Z,QAErCrH,MAAOvS,KAAUya,MACjB1H,SAAU/S,KAAUoX,KAAK7W,WAEzBoF,YAAa3F,KAAUoX,KACvBjF,cAAenS,KAAUoX,KACzB9E,oBAAqBtS,KAAUoX,KAE/B2E,YAAa/b,KAAUoX,MAGdlS,GAAe,CACxBwN,eAAWpL,EACXvH,UAAW,GACX4D,UAAU,EACVgE,WAAOL,EACPwO,iBAAiB,EACjBoW,qBAAqB,EACrBtkB,UAAMN,EACN3B,YAAa,SAAA+E,GAAC,OAAIA,EAAEjF,KACpBkN,MAAO,GACPR,cAAe,SAAAzH,GAAC,OAAIA,EAAEiI,OACtBL,yBAAqBhL,EACrB5B,QAASumB,GACT/Y,iBAAkB,GAClBC,YAAa,mBACbC,UAAU,EACV2I,iBAAazU,EACbsM,kBAAkB,EAClBC,WAAW,EACX3L,WAAOZ,EACPiL,MAAO0Z,IAGEE,GAAb,YAKI,WAAYzrB,GAAO,yBACf,4BAAMA,IADS,kCAuBI+b,aAAQ,SAC3B/W,EACAyM,EACAxM,GAEC,IADD4M,EACC,uDADO,GAEF6Z,EAAaT,YACfjmB,EACAC,EACA,SAAAtF,GAAO,OAAIA,IAETgsB,EAAkB9Z,EACnBnE,IAAI,SAAAwd,GAAC,OAAIQ,EAAWR,KACpB7gB,OAAO5D,KACPiH,IAAI,SAAAke,GAAC,OAAIna,EAAcma,KAC5B,OAAOD,EAAgBvrB,KAAK,SAtCb,2BAyCH2b,aAAQ,SACpB/W,EACAyM,EACAI,GAaA,OAXmB7M,EACdqF,OACG,SAAA+G,GAAM,YACQxK,IAAViL,GAAuBgE,YAAwBpE,EAAcL,GAASS,KAG7EtE,KAAK,SAACuI,EAAGC,GAAJ,OAAUC,YACZvE,EAAcqE,GACdrE,EAAcsE,GACdlE,QAvDO,oCA8DM,WAAM,IACV+B,EAAU,EAAKP,SAAxBlI,QACJyI,GACAA,EAAMC,SAHiB,IAOV3I,EAAc,EAAKH,aAA5BI,QACJD,IACA,EAAKoI,mBAAqBpI,EAAUwI,yBAGxC,EAAKsE,SAAS,CACVgE,kBAAkB,EAClBlJ,iBAAalM,MA5EF,oCAgFM,WACrB,EAAKoR,SAAS,CACVgE,kBAAkB,EAClBlJ,iBAAalM,MAnFF,8BAyFA,WACf,EAAKoR,SAAS,CAAEzE,cAAc,MA1Ff,6BA6FD,WACd,EAAKyE,SAAS,CAAEzE,cAAc,MA9Ff,+BAiGC,SAAC1P,GAAM,IACfgO,EAAUhO,EAAE+H,OAAZiG,MAGS3G,EAAc,EAAKH,aAA5BI,QACJD,IACA,EAAKoI,mBAAqBpI,EAAUwI,yBAGxC,EAAKsE,SAAS,CACVgE,kBAAkB,EAClBlJ,YAAajB,MA5GF,qCAkHO,SAACyC,GACvB,IAAM9S,EAAc8S,EAAiBZ,wBACjCjS,EAAa,EAAK6R,mBACLpI,EAAc,EAAKH,aAA5BI,QAEJD,IACAzJ,EAAayJ,EAAUwI,yBANiB,IASpCR,EAAqB,EAAKlT,MAA1BkT,iBAEFvR,EAAS,MAAKb,GAoBpB,OAnBIoS,IACAvR,EAAOjB,IAAM,IAUbmC,EAA8B,CAC1BpB,aACAD,cACAG,SACAC,MAXM,MACPX,EADI,CAEPC,KAAMO,EAAWb,MACjBO,KAAMM,EAAWb,YArIN,gCAoJE,SAACmE,GAAQ,MAItB,EAAK/E,MAFL6R,EAFsB,EAEtBA,MACAQ,EAHsB,EAGtBA,SAGE+L,EAAW,KAAIvM,GACfga,EAAczN,EAASlZ,UAAU,SAAA8E,GAAC,OAAIA,IAAMjF,KAC7B,IAAjB8mB,EACAzN,EAASxU,KAAK7E,GAEdqZ,EAASnU,OAAO4hB,EAAa,GAKjCxZ,EAAS+L,KApKM,oCAuKM,YAErB/L,EADqB,EAAKrS,MAAlBqS,UACCkZ,MAzKM,wCA4KU,WAAM,MAK3B,EAAKvrB,MAHLgF,EAF2B,EAE3BA,QACAC,EAH2B,EAG3BA,aAKJoN,EAR+B,EAI3BA,UAGarN,EAAQ0I,IAAI,SAAA1D,GAAC,OAAI/E,EAAY+E,QAnL/B,+BAuLC,SAACrE,GACjB,EAAKqS,SAAS,CAAErS,iBArLhB,EAAKyS,MAAQ,CAET7E,aAAcvT,EAAMgS,UACpBrM,gBAAYiB,EAEZoV,kBAAkB,EAClBlJ,iBAAalM,GAGjB,EAAKmE,aAAe1K,IAAM8a,YAC1B,EAAK9H,SAAWhT,IAAM8a,YAbP,EALvB,iEAqBwB,IACCjQ,EAAcnL,KAAKgL,aAA5BI,QACJD,IACAnL,KAAKuT,mBAAqBpI,EAAUwI,2BAxBhD,+BAgMa,MAsBD3T,KAAKC,MApBLiH,EAFC,EAEDA,MACAC,EAHC,EAGDA,KACAjC,EAJC,EAIDA,YACAgN,EALC,EAKDA,MACAR,EANC,EAMDA,cACAe,EAPC,EAODA,iBACA6I,EARC,EAQDA,YACAnI,EATC,EASDA,iBACAC,EAVC,EAUDA,UACA3L,EAXC,EAWDA,MACAqK,EAZC,EAYDA,MACA5O,EAbC,EAaDA,SACWD,EAdV,EAcD3D,UACA2F,EAfC,EAeDA,QACAoQ,EAhBC,EAgBDA,gBACAoW,EAjBC,EAiBDA,oBACA9Y,EAlBC,EAkBDA,SACAV,EAnBC,EAmBDA,UACAS,EApBC,EAoBDA,YACAb,EArBC,EAqBDA,oBArBC,EA6BD7R,KAAKqY,MAJL4D,EAzBC,EAyBDA,iBACArW,EA1BC,EA0BDA,WACA4N,EA3BC,EA2BDA,aACAT,EA5BC,EA4BDA,YAOEE,EAHWnB,GAA0B,IAAjBA,EAAMtM,UAGM6P,GAAmBnS,GAAYyP,GAC/DoZ,IAHcja,GAASA,EAAMtM,SAAWP,EAAQO,WAGRimB,GAAuBvoB,GAAYyP,GAEhExH,EAAcnL,KAAKgL,aAA5BI,QAEF4gB,EAAahsB,KAAKisB,qBAAqBhnB,EAASyM,EAAexM,EAAa4M,GAC5Eoa,EACFF,GACGtZ,EAGDwJ,EAAmBnJ,GAAe,GAElCqJ,EAAkBpc,KAAKqc,cACzBpX,EACAyM,EACAqB,GAGEzT,EAAY2E,YACdhB,EACA,qBACA9C,KAAOgsB,iBACPlQ,GAAoB9b,KAAOiV,YAC3B6G,GAAoB,eACpB/Y,GAAY,WACZA,GAAY/C,KAAO+C,SACnBsQ,GAAgBrT,KAAOqT,aACvBA,GAAgB,iBAChBtM,GAAS/G,KAAO+G,MAChBA,GAAS,QACTmO,GAAmBlV,KAAOkV,gBAC1BA,GAAmB,oBACnBoW,GAAuBtrB,KAAOsrB,oBAC9BA,GAAuB,yBACN,IAAjB3Z,EAAMtM,QAAgBrF,KAAOmV,OACZ,IAAjBxD,EAAMtM,QAAgB,SACtBsM,EAAMtM,SAAWP,EAAQO,QAAUrF,KAAOisB,iBAC1Cta,EAAMtM,SAAWP,EAAQO,QAAU,qBAGjC6mB,EAA0B,gDAAH,OAEvBlsB,KAAOoV,gBAFgB,cAKvBgH,EAAmB,sCAAH,OAEhBpc,KAAOsV,QAFS,cAIhB+G,EAA0B,8CAAH,OAEvBrc,KAAOyV,eAFgB,cAKvBiN,EAAuB,2CAAH,OAEpB1iB,KAAOwV,YAFa,cAKpB2W,EAA2B,gDAAH,OAExBnsB,KAAOosB,gBAFiB,cAK9B,OACI,yBACIjtB,UAAWA,EACXyH,IAAK/G,KAAKgL,aACVvD,MAAOA,GAEL2L,GACE,kBAAC,GAAD,CACIuE,KAAMzF,EACNhL,QAASA,EACThE,SAAUA,EACVyE,OAAQ6L,GAAgByI,IAGhC,yBAAK3c,UAAW+sB,GACZ,kBAAC,GAAD,CACI/sB,UAAWa,KAAO0T,MAClBrQ,KAAK,OACL2X,WAAYnb,KAAKsT,SACjB3I,OAAQ3K,KAAKkU,gBACbpD,QAAS9Q,KAAKiU,iBACdxQ,QAASzD,KAAK4T,uBACdtB,SAAUtS,KAAKmU,kBACfrC,MAAOoK,EACPjK,UAAWA,EACXxK,MAAOukB,EACPtZ,YAAawZ,EACbhpB,SAAUA,GAAYyP,EAEtB/M,WAAYA,EACZX,QAASmX,EACTlX,YAAaA,EACbY,eAAgBmW,EAChBlW,cAAe/F,KAAK0U,kBACpB1O,cAAehG,KAAKgU,uBACpB/N,cAAejG,KAAK4T,uBACpB1N,eAAgBlG,KAAKwU,qBAEzB,yBAAKlV,UAAWid,GACVwP,GACE,kBAAC,KAAD,CACIxoB,aAAW,EACXmS,SAAS,KACTpW,UAAWgtB,EACX7oB,QAASzD,KAAKwsB,2BACd/kB,MAAM,qBACNvE,SAAUA,GAAYyP,EACtBnP,KAAK,SACLL,SAAS,aAGf8P,GACE,kBAAC8G,GAAA,EAAD,CACIxW,aAAW,EACXmS,SAAS,KACTpW,UAAWujB,EACXpf,QAASzD,KAAKyU,uBACdhN,MAAM,2BACNvE,SAAUA,GAAYyP,EACtBxP,SAAS,UAGjB,kBAAC,KAAD,CACIuS,SAAS,KACTvS,SAAS,gBACT7D,UAAWkd,EACX/Y,QAASzD,KAAK4T,uBACdrQ,aAAW,EACXL,SAAUA,GAAYyP,MAIhCQ,GACE,kBAAC,GAAD,CACIjM,MAAOA,EACPC,KAAMA,IAGd,kBAAC,GAAD,CACI6jB,WAAYlZ,EACZhF,KAAMsP,EACNlX,YAAaA,EACbwM,cAAeA,EACfG,oBAAqBA,EACrBlH,OAAQ3K,KAAKgU,uBACb1L,aAActI,KAAKsU,wBACnB3C,cAAe3R,KAAKwU,mBACpB5C,cAAe5R,KAAK0U,kBACpBpV,UAAWmT,EACX8I,gBAAiBpQ,EACjBmQ,YAAaA,EACb7D,KAAMwE,EACNrW,WAAYA,SAhYhC,GAA4CtF,IAAMC,e,IAArCmrB,G,YACUrsB,I,IADVqsB,G,eAGajnB,IAoYX+S,mBAAkBkU,I,4EC7c3BrsB,GAAY,CAIdC,UAAWC,KAAUC,OAKrB0D,SAAU3D,KAAUmX,KAKpBxP,MAAO3H,KAAUC,OAKjB2H,KAAM5H,KAAUC,OAKhB0S,MAAO3S,KAAUC,OAKjBmL,OAAQpL,KAAUoX,KAKlBrE,SAAU/S,KAAUoX,KAKpB7F,QAASvR,KAAUoX,KAKnBoS,SAAUxpB,KAAUmX,KACpBtD,UAAW7T,KAAUmX,KACrBvD,iBAAkB5T,KAAUmX,KAC5B5E,MAAOvS,KAAUwX,OACjBgM,UAAWxjB,KAAUC,OACrBypB,cAAe1pB,KAAUmX,KACzBjP,MAAOlI,KAAUC,QAGfiF,GAAe,CACjBnF,UAAW,GACX4D,UAAU,EACVgE,MAAO,GACPC,KAAM,GACN+K,MAAO,GACPvH,YAAQ9D,EACRyL,cAAUzL,EACViK,aAASjK,EACTkiB,UAAU,EACV3V,WAAW,EACXD,kBAAkB,EAClBrB,WAAOjL,EACPkc,UAAW,IACXkG,eAAe,EACfxhB,WAAOZ,GAKL4lB,GAAiB,WAAgB,IAAf3a,EAAe,uDAAP,GAC5B,GAAc,KAAVA,EACA,OAAOA,EAGX,IAAMuM,EAAWvM,EAAM4a,QAAQ,UAAW,IAC1C,GAAiB,KAAbrO,EACA,OAAOA,EAGX,IAAMsO,GAAatO,EAEnB,OACIuO,YAASD,GACH7X,OAAO5S,KAAKE,IAhBR,iBAgBuBuqB,IAC3BtO,GAIRwO,GAAS,SAAA/a,GAAK,MAAc,MAAVA,GAElBgb,GAAmB,WAAgB,IAAfhb,EAAe,uDAAP,GAC9B,GAAIib,OAAOC,MAAMlb,GACb,MAAO,CAAEmb,KAAM,KAGnB,IAAMC,EAAcpb,EAAMqb,WACpBC,EAAiBF,EAAYG,OAAO,GAE1C,OAAIR,GAAOO,GACA,CACHH,KAAM,IACNlW,OAAQ0V,GAAeS,EAAYI,UAAU,KAI9C,CAAEvW,OAAQ0V,GAAeS,KAGvBK,GAAb,YAKI,WAAYttB,GAAO,yBACf,4BAAMA,IADS,6BAKD+b,aAAQ,SAAClK,EAAOiR,GAAc,MAIxC+J,GAAiBhb,GAJuB,IAExCmb,YAFwC,MAEjC,GAFiC,MAGxClW,cAHwC,MAG/B,GAH+B,EAKtCyW,EAAsBC,YAAa1W,EAAQgM,GACjD,gBAAUkK,GAAV,OAAiBO,MAXF,0BAuDJ,SAACzpB,GAAU,IACd+N,EAAU/N,EAAM8H,OAAhBiG,MACAQ,EAAa,EAAKrS,MAAlBqS,SACR,GAAIA,EAAU,OAINwa,GAAiBhb,GAJX,IAENiF,cAFM,MAEG,GAFH,MAGNkW,YAHM,MAGC,GAHD,EAcV3a,EAPe,KAAXyE,GAA0B,KAATkW,EACLS,IACM,KAAX3W,GAA0B,KAATkW,OACZpmB,GAEC,GAAD,OAAIomB,GAAJ,OAAWlW,OAtEhB,yBA4EL,WAAM,MACmB,EAAK9W,MAAhCgpB,EADQ,EACRA,cAAenY,EADP,EACOA,QACnBmY,GAEAllB,MAAM8H,OAAOiI,SAGjB,EAAKmE,SAAS,CAAEpH,WAAW,IACvBC,GACAA,MArFW,wBAyFN,WAAM,IACPnG,EAAW,EAAK1K,MAAhB0K,OACR,EAAKsN,SAAS,CAAEpH,WAAW,IACvBlG,GACAA,MA3FJ,EAAK0N,MAAQ,CAAExH,WAAW,GAFX,EALvB,4DAmBmB,MAMP7Q,KAAKC,MAJLiD,EAFO,EAEPA,SACAgE,EAHO,EAGPA,MACA6hB,EAJO,EAIPA,SACAzpB,EALO,EAKPA,UAIAuR,EACA7Q,KAAKqY,MADLxH,UAGE3Q,EAAa,CACfZ,EACA,eACAa,KAAOwtB,aAuBX,OApBIzqB,IACAhD,EAAW2J,KAAK1J,KAAO+C,UACvBhD,EAAW2J,KAAK,aAGhBgH,IACA3Q,EAAW2J,KAAK1J,KAAOmR,SACvBpR,EAAW2J,KAAK,YAGhB3C,IACAhH,EAAW2J,KAAK1J,KAAO+G,OACvBhH,EAAW2J,KAAK,UAGhBkf,IACA7oB,EAAW2J,KAAK1J,KAAO4oB,UACvB7oB,EAAW2J,KAAK,aAGb3J,EAAWG,KAAK,OAzD/B,+BAsGa,MAqBDL,KAAKC,MATLiH,GAZC,EAID4K,MAJC,EAKDnH,OALC,EAMD2H,SANC,EAODxB,QAPC,EAQDmY,cARC,EAUD3pB,UAVC,EAYD4H,OACAC,EAbC,EAaDA,KACA+K,EAdC,EAcDA,MACAkB,EAfC,EAeDA,UACAD,EAhBC,EAgBDA,iBACArB,EAjBC,EAiBDA,MACArK,EAlBC,EAkBDA,MACAsb,EAnBC,EAmBDA,UACGpf,EApBF,6JAuBCrE,EAAYU,KAAKwZ,eAEvB,OACI,yBACIla,UAAWA,EACXmI,MAAOA,GAEP,kBAAC,GAAD,CACInI,UAAWa,KAAO+R,MAClBuF,KAAMrE,EACNuE,KAAMzF,IAEV,+BACI5S,UAAS,UAAKa,KAAO0T,MAAZ,UACTlJ,OAAQ3K,KAAKopB,WACb9W,SAAUtS,KAAKmd,aACfrM,QAAS9Q,KAAKqpB,YACdvX,MAAO9R,KAAK4tB,gBAAgB9b,EAAOiR,IAC/Bpf,IAER,kBAAC,GAAD,CACI8T,KAAMtE,EACNhM,KAAMA,EACND,MAAOA,SApJ3B,GAAuC5G,IAAMC,e,IAAhCgtB,G,YACUluB,I,IADVkuB,G,eAGa9oB,IAwJX+S,mBAAkB6O,GAAMkH,K,oCClRjCluB,GAAY,CACd4X,QAAS1X,KAAUmX,KACnBpX,UAAWC,KAAUC,OACrB0S,MAAO3S,KAAUC,OAAOM,WACxBoD,SAAU3D,KAAUmX,KACpB/D,SAAUpT,KAAUmX,MAWHjG,G,YAKjB,WAAYxQ,GAAO,0BACf,4BAAMA,KAEDiX,QAAUzN,cAHA,E,sDAMV,MAQDzJ,KAAKC,MANMgD,EAFV,EAED3D,UACA2X,EAHC,EAGDA,QACA/E,EAJC,EAIDA,MACAhP,EALC,EAKDA,SACAyP,EANC,EAMDA,SACGhP,EAPF,6DAUCrE,EAAY2E,YACd9D,KAAOkR,OACP,eACApO,EACAC,GAAY/C,KAAO+C,SACnByP,GAAYxS,KAAOwS,SACnBsE,GAAW9W,KAAO8W,QAClBA,GAAW,WAGT4W,EAAiB5pB,YACnB9D,KAAO2tB,MACP,SAGJ,OACI,2BACIvW,QAASvX,KAAKkX,QACd5X,UAAWA,GAEX,+BACIA,UAAS,UAAKa,KAAO0T,MAAZ,UACTka,eAAgB9W,EAChBzM,GAAIxK,KAAKkX,QACT1T,KAAK,QACLN,SAAUA,GAAYyP,GAClBhP,IAER,kBAACY,EAAA,EAAD,CACIjF,UAAWuuB,EACXrpB,KAAMyS,EAAU,UAAY,aAEhC,0BAAM3X,UAAS,UAAKa,KAAO+R,MAAZ,WACTA,Q,GAtDc5R,IAAMC,e,IAArBkQ,G,YACEpR,I,IADFoR,G,eARA,CACjBwG,SAAS,EACT3X,UAAW,GACX4D,UAAU,EACVyP,UAAU,I,4BCXRtT,GAAY,CAIdC,UAAWC,KAAUC,OAKrBgF,KAAMjF,KAAUC,OAAOM,WAKvBoD,SAAU3D,KAAUmX,KAKpBzR,QAAS1F,KAAUI,QACfJ,KAAU+mB,MAAM,CACZthB,IAAKzF,KAAUC,OACf0S,MAAO3S,KAAUC,UAEvBM,WAEFwS,SAAU/S,KAAUoX,KAEpBhE,SAAUpT,KAAUmX,KAKpB5E,MAAOvS,KAAUC,QAGfiF,GAAe,CACjBnF,UAAW,GACXgT,cAAUzL,EACViL,WAAOjL,EACP3D,UAAU,EACVyP,UAAU,GAGRqb,G,YAYF,WAAY/tB,GAAO,kBACf,4BAAMA,IADS,+BA2BC,SAAC+E,GACjB,IAAMqM,EAAS,EAAKpR,MAAMgF,QAAQ4P,KAAK,SAAA5K,GAAC,OAAIA,EAAEjF,MAAQA,IAEtD,EAAKiT,SACD,CAAEgW,eAAgB5c,GAClB,WACQ,EAAKpR,MAAMqS,UACX,EAAKrS,MAAMqS,SAAStN,OAlCjB,0BAwCJ,SAACA,EAAKqM,GAAN,OACX,kBAAC,GAAD,KACIrM,IAAKA,EACLR,KAAM,EAAKvE,MAAMuE,KACjB0N,MAAOb,EAAOa,MACd+E,QAAS,EAAKoB,MAAM4V,gBAAkBjpB,IAAQ,EAAKqT,MAAM4V,eAAejpB,IACxEvB,QAAS,kBAAM,EAAKyqB,kBAAkBlpB,KAClC,EAAK/E,UA/CE,MAMX,EAAKA,MAFLgF,EAJW,EAIXA,QACA6M,EALW,EAKXA,MAGEmc,EAAiBD,EAAWG,kBAAkBlpB,EAAS6M,GAR9C,OASf,EAAKuG,MAAQ,CAAE4V,kBATA,E,uEAYOxT,GAAW,MAI7Bza,KAAKC,MAFLgF,EAF6B,EAE7BA,QAIJ,GANiC,EAG7B6M,QAGU2I,EAAU3I,OAAS7M,IAAYwV,EAAUxV,QAAS,CAC5D,IAAMgpB,EAAiBD,EAAWG,kBAC9B1T,EAAUxV,QACVwV,EAAU3I,OAEd9R,KAAKiY,SAAS,CAAEgW,sB,+BA4Bf,MAIDjuB,KAAKC,MAFLX,EAFC,EAEDA,UACA2F,EAHC,EAGDA,QAGJ,OACI,kBAAC,KAAD,CACI3F,UAAS,sBAAiBA,EAAjB,YAA8Ba,KAAOiuB,YAC9CthB,KAAM7H,EACNC,YAAa8oB,EAAWK,mBACxB3S,SAAU1b,KAAK2b,mB,GA1ENrb,IAAMC,e,IAAzBytB,G,YACiB3uB,I,IADjB2uB,G,eAGoBvpB,I,IAHpBupB,G,oBAMyB,SAAC/oB,EAAS6M,GAAV,OACvBA,GAAS7M,EAAQ4P,KAAK,SAAA5K,GAAC,OAAIA,EAAEjF,MAAQ8M,M,IAPvCkc,G,qBAU0B,SAAA3c,GAAM,OAAIA,EAAOrM,MAsElCwS,mBAAkBwW,IC/H3B3uB,GAAY,CACd6S,MAAO3S,KAAUC,OACjB8S,SAAU/S,KAAUoX,KAAK7W,WACzBgS,MAAOvS,KAAUI,QAAQJ,KAAUC,QACnCyF,QAAS1F,KAAUI,QAAQJ,KAAU+mB,MAAM,CACvCthB,IAAKzF,KAAUC,OACf0S,MAAO3S,KAAUC,WAInBiF,GAAe,CACjByN,MAAO,GACPJ,WAAOjL,EACP5B,QAAS,IAIPqpB,G,YAKF,WAAYruB,GAAO,yBACf,4BAAMA,IADS,oCAmBM,SAACsuB,GACtB,EAAKA,WAAaA,EAClB,EAAKC,iBArBU,kCAwBI,SAACC,GACpB,EAAKA,SAAWA,EAChB,EAAKD,iBAxBL,EAAKE,gBAAgBzuB,GAFN,E,uEAKOwa,GAAW,IACzBxV,EAAYjF,KAAKC,MAAjBgF,QAEJjF,KAAK8R,QAAU2I,EAAU3I,OAAS7M,IAAYwV,EAAUxV,SACxDjF,KAAK0uB,gBAAgBjU,K,yCAIF,IAAT3I,EAAS,EAATA,MACd9R,KAAK8R,MAAQA,EACb9R,KAAKuuB,WAAazc,GAASA,EAAM,GACjC9R,KAAKyuB,SAAW3c,GAASA,EAAMA,EAAMtM,OAAS,K,qCAanC,aACmBxF,KAAKC,MAA3BgF,EADG,EACHA,QAASqN,EADN,EACMA,SACXqc,EAAa3uB,KAAKuuB,WAClBtpB,EAAQE,UAAU,SAAAC,GAAC,OAAIA,EAAEJ,MAAQ,EAAKupB,aAAc,EACpDK,EAAW5uB,KAAKyuB,SAChBxpB,EAAQE,UAAU,SAAAC,GAAC,OAAIA,EAAEJ,MAAQ,EAAKypB,WAAYxpB,EAAQO,OAAS,EAEzExF,KAAK8R,MAAQ7M,EAAQsR,MAAMoY,EAAYC,EAAW,GAAGjhB,IAAI,SAAAvI,GAAC,OAAIA,EAAEJ,MAChEsN,EAAStS,KAAK8R,S,+BAGT,MAMD9R,KAAKC,MAJLiS,EAFC,EAEDA,MAGGvO,GALF,EAGDmO,MAHC,EAIDQ,SAJC,qCAQL,OACI,kBAAC,WAAD,KACI,kBAAC,GAAD,KACIA,SAAUtS,KAAK6uB,uBACf/c,MAAO9R,KAAKuuB,WACZrc,MAAK,UAAKA,EAAL,UACDvO,IAER,kBAAC,GAAD,KACI2O,SAAUtS,KAAK8uB,qBACfhd,MAAO9R,KAAKyuB,SACZvc,MAAK,UAAKA,EAAL,QACDvO,S,GAjEErD,IAAMC,e,IAA1B+tB,G,YACiBjvB,I,IADjBivB,G,eAGoB7pB,IAsEX+S,mBAAkB8W,I,wBCxF3BjvB,GAAY,CAId0vB,WAAYxvB,KAAUmX,KAKtBxP,MAAO3H,KAAUC,OAEjBsS,MAAOvS,KAAUG,UAAU,CACvBH,KAAU4Z,OACV5Z,KAAUI,QAAQJ,KAAU4Z,UAGhChS,KAAM5H,KAAUC,OAChBwvB,SAAUzvB,KAAUmX,KAEpBpX,UAAWC,KAAUC,OAErB2T,iBAAkB5T,KAAUmX,KAE5BjX,SAAUF,KAAUG,UAAU,CAC1BH,KAAUM,KACVN,KAAUI,QACNJ,KAAUM,QAEfC,WAEHmvB,OAAQ1vB,KAAUC,OAElB8S,SAAU/S,KAAUoX,KAEpBG,YAAavX,KAAUwX,OAEvB7T,SAAU3D,KAAUmX,KACpB/D,SAAUpT,KAAUmX,MAGlBjS,GAAe,CACjBnF,UAAW,GACX4H,MAAO,GACPC,KAAM,GACNmL,cAAUzL,EACVkoB,YAAY,EACZ5b,kBAAkB,EAClB8b,YAAQpoB,EACRmoB,UAAU,EACVld,WAAOjL,EACP3D,UAAU,EACVyP,UAAU,EACVmE,iBAAajQ,GAGXqoB,G,YAuBF,WAAYjvB,GAAO,yBACf,4BAAMA,IADS,2BAMH,SAAC6R,GACb,OAAI1H,MAAM+kB,QAAQrd,IAAUA,EAAMtM,OAAS,EACvC,oBAAoBsM,EAAMnE,IAAI,SAAAyhB,GAAI,OAAIA,EAAK5qB,OAAMnE,KAAK,OAEtDyR,EACA,oBAAoBA,EAAMtN,MAEvB,mBAbQ,0BAgBJ,WAAM,MAKb,EAAKvE,MAHLgvB,EAFa,EAEbA,OACA3c,EAHa,EAGbA,SACA0c,EAJa,EAIbA,SAEEK,EAAiBjlB,MAAMC,KAAK,EAAKilB,UAAUC,OAC3CA,EAAQF,EAAe/kB,OACzB,SAAA8kB,GAAI,OAAIF,EAAaM,YAAYJ,EAAK5qB,KAAM4qB,EAAK5rB,KAAMyrB,KAErDQ,EAAeJ,EAAe7pB,OAAS+pB,EAAM/pB,OAE/C8M,GACAA,EAAS0c,EAAWO,EAAQA,EAAM,GAAI,CAAEE,mBA1B5C,EAAKvY,QAAUzN,cAHA,E,sDAkCV,aAYDzJ,KAAKC,MAVL8uB,EAFC,EAEDA,WACAzvB,EAHC,EAGDA,UACAG,EAJC,EAIDA,SACAyH,EALC,EAKDA,MACAC,EANC,EAMDA,KACAgM,EAPC,EAODA,iBACArB,EARC,EAQDA,MAGGnO,GAXF,EASDmT,YATC,EAUDxE,SAVC,iHAcL,OACI,yBAAKhT,UAAS,qBAAgBA,EAAhB,YAA6Ba,KAAOuvB,mBAC9C,2BACIpwB,UAAS,gBAAWa,KAAO+R,OAC3BqF,QAASvX,KAAKkX,SAEZzX,GAEN,+BACIH,UAAS,gBAAWa,KAAO0T,OAC3BrJ,GAAIxK,KAAKkX,QACT5E,SAAUtS,KAAKmd,aAEfpW,IAAK,SAAC0R,GAAS,EAAK6W,UAAY7W,GAChCjV,KAAK,QACDG,IAGJorB,GACI,uBAAGzvB,UAAWa,KAAOwvB,QAChB3vB,KAAK4vB,cAAc9d,IAIhC,kBAAC,GAAD,CACI2F,KAAMtE,EACNhM,KAAMA,EACND,MAAOA,S,GAlGA5G,IAAMC,e,IAA3B2uB,G,YACiB7vB,I,IADjB6vB,G,eAGoBzqB,I,IAHpByqB,G,cAKmB,SAAC1qB,EAAMqrB,EAAUC,GAElC,IAAKA,EACD,OAAO,EAEX,IAAMC,EAAiB,SAASC,KAAKxrB,GAC/ByrB,EAAY,QAAQD,KAAKH,GAG/B,OADmBC,EAAalmB,MAAM,QACpBsmB,KAAK,SAACjB,GAEpB,SAAIY,IAAaZ,GAAagB,GAAa,UAAGA,EAAU,GAAb,OAAuBhB,MAGzDc,GAAkBA,EAAe,GAAGI,gBAAkBlB,EAAOkB,kBAsFnE3Y,mBAAkB0X,I,wBC/J3B7vB,GAAY,CACdC,UAAWC,KAAUC,OAErByF,QAAS1F,KAAUya,MACnBlI,MAAOvS,KAAUG,UAAU,CAACH,KAAUC,OAAQD,KAAUwX,SACxDzE,SAAU/S,KAAUoX,KACpBzT,SAAU3D,KAAUmX,KACpB/D,SAAUpT,KAAUmX,KACpBxR,YAAa3F,KAAUoX,KACvBjF,cAAenS,KAAUoX,KACzByZ,cAAe7wB,KAAUoX,KACzB0Z,kBAAmB9wB,KAAUoX,MAE3BlS,GAAe,CACjBnF,UAAW,GACX2F,QAAS,GACT6M,WAAOjL,EACPyL,SAAU,aACVpP,UAAU,EACVyP,UAAU,EAEVzN,YAAa,SAAAmM,GAAM,OAAIA,EAAOrM,KAC9B0M,cAAe,SAAAL,GAAM,OAAIA,EAAOa,OAChCke,cAAe,SAAA/e,GAAM,OAAIA,EAAOsH,OAChC0X,kBAAmB,SAAAhf,GAAM,QAAMA,EAAOif,UAGpCC,G,YAKF,WAAYtwB,GAAO,yBACf,4BAAMA,IADS,0BAsBJ,WAAM,MAKb,EAAKA,MAHLX,EAFa,EAEbA,UACA4D,EAHa,EAGbA,SACAyP,EAJa,EAIbA,SAGEzS,EAAa,CACfZ,EACA,cACAa,KAAOqwB,YAaX,OAVIttB,IACAhD,EAAW2J,KAAK,YAChB3J,EAAW2J,KAAK1J,KAAO+C,WAGvByP,IACAzS,EAAW2J,KAAK,aAChB3J,EAAW2J,KAAK1J,KAAOwS,WAGpBzS,EAAWG,KAAK,OA7CR,gCAgDE,SAAC2E,GAAQ,IAClB8M,EAAU,EAAK7R,MAAf6R,MAEF5R,EAAa,CACfC,KAAO2R,OAUX,OANiBgD,OAAO9P,KAAS8P,OAAOhD,IAGpC5R,EAAW2J,KAAK1J,KAAOwH,QAGpBzH,EAAWG,KAAK,OA9DR,qCAiEO,SAAC4E,EAAS6M,GAAU,MAOtC,EAAK7R,MALLqS,EAFsC,EAEtCA,SACA+d,EAHsC,EAGtCA,kBACAnrB,EAJsC,EAItCA,YACAhC,EALsC,EAKtCA,SACAyP,EANsC,EAMtCA,SAGJ,IAAIzP,IAAYyP,EAAhB,CAIA,IAAM8d,EAAgBxrB,EAAQ4P,KAAK,SAAAxD,GAAM,OAAIgf,EAAkBhf,KAC3D+Q,YAAQtQ,EAAO,CAAC,OAASsQ,YAAQqO,EAAe,CAAC,MACjDne,EAASpN,EAAYurB,OAhFV,+BAoFC,SAACzrB,GAAQ,MAIrB,EAAK/E,MAFL6R,EAFqB,EAErBA,MACAQ,EAHqB,EAGrBA,SAGAR,IAAU9M,GACVsN,EAAStN,KA3FE,0BA+FJ,SAACmmB,EAAG9Z,GAAW,MAOtB,EAAKpR,MALLiD,EAFsB,EAEtBA,SACAyP,EAHsB,EAGtBA,SACAyd,EAJsB,EAItBA,cACAlrB,EALsB,EAKtBA,YACAwM,EANsB,EAMtBA,cAGE1M,EAAME,EAAYmM,GAClBsH,EAAQyX,EAAc/e,GACtBa,EAAQR,EAAcL,GAEtB7F,EAAQ,CACVoN,gBAAiBD,GAGfrZ,EAAY,EAAKoxB,mBAAmB1rB,GAE1C,OACI,4BACIvB,QAAS,WAAQ,EAAKyqB,kBAAkBlpB,IACxCxB,KAAK,SACLwB,IAAKA,EACL1F,UAAWA,EACXmI,MAAOyK,EACPhP,SAAUA,GAAYyP,EACtBnH,MAAOA,MAvHf,EAAKmlB,wBAAwB1wB,EAAMgF,QAAShF,EAAM6R,OAHnC,E,uEAMO2I,GAAW,MAK7Bza,KAAKC,MAHLgF,EAF6B,EAE7BA,QACA/B,EAH6B,EAG7BA,SACAyP,EAJ6B,EAI7BA,UAIA8H,EAAUxV,UAAYA,IACjBwV,EAAUvX,UAAYuX,EAAUvX,WAAaA,IAC7CuX,EAAU9H,UAAY8H,EAAU9H,WAAaA,IAElD3S,KAAK2wB,wBAAwBlW,EAAUxV,QAASwV,EAAU3I,S,+BA6GzD,IACG7M,EAAYjF,KAAKC,MAAjBgF,QACF3F,EAAYU,KAAKwZ,eAEvB,OACI,yBAAKla,UAAWA,GACZ,kBAAC,KAAD,CACIwN,KAAM7H,EACNyW,SAAU1b,KAAK2b,oB,GA5IVrb,IAAMC,e,IAAzBgwB,G,YACiBlxB,I,IADjBkxB,G,eAGoB9rB,IAgJX+S,mBAAkB+Y,I,wBC1K3BlxB,GAAY,CACdC,UAAWC,KAAUC,OACrB0D,SAAU3D,KAAUmX,KACpBxP,MAAO3H,KAAUC,OACjB2H,KAAM5H,KAAUC,OAChB0S,MAAO3S,KAAUC,OACjBmL,OAAQpL,KAAUoX,KAClBrE,SAAU/S,KAAUoX,KACpB7F,QAASvR,KAAUoX,KACnBoS,SAAUxpB,KAAUmX,KACpBtD,UAAW7T,KAAUmX,KACrBvD,iBAAkB5T,KAAUmX,KAC5B5E,MAAOvS,KAAUG,UAAU,CACvBH,KAAUC,OACVD,KAAUwX,SAEdkS,cAAe1pB,KAAUmX,KACzBjP,MAAOlI,KAAUC,QAGfiF,GAAe,CACjBnF,UAAW,GACX4D,UAAU,EACVgE,MAAO,GACPC,KAAM,GACN+K,MAAO,GACPvH,YAAQ9D,EACRyL,cAAUzL,EACViK,aAASjK,EACTkiB,UAAU,EACV3V,WAAW,EACXD,kBAAkB,EAClBrB,MAAO,GACPmX,eAAe,EACfxhB,WAAOZ,GAGLqU,G,YAKF,WAAYjb,GAAO,yBACf,4BAAMA,IADS,0BAMJ,WAAM,MAMb,EAAKA,MAJMgD,EAFE,EAEb3D,UACA4D,EAHa,EAGbA,SACAgE,EAJa,EAIbA,MACA6hB,EALa,EAKbA,SAGIlY,EAAc,EAAKwH,MAAnBxH,UAgBR,OAdkB5M,YACdhB,EACA9C,KAAOywB,UACP,aACA1tB,GAAY/C,KAAO+C,SACnBA,GAAY,WACZ2N,GAAa1Q,KAAOmR,QACpBT,GAAa,UACb3J,GAAS/G,KAAO+G,MAChBA,GAAS,QACT6hB,GAAY5oB,KAAO4oB,SACnBA,GAAY,cA3BD,0BAiCJ,SAAChlB,GAAU,IACd+N,EAAU/N,EAAM8H,OAAhBiG,MACAQ,EAAa,EAAKrS,MAAlBqS,SAEJA,GACAA,EAASR,KAtCE,yBA0CL,SAAC/N,GAAU,MAIjB,EAAK9D,MAFLgpB,EAFiB,EAEjBA,cACAnY,EAHiB,EAGjBA,QAGAmY,GACAllB,EAAM8H,OAAOiI,SAGjB,EAAKmE,SAAS,CAAEpH,WAAW,IAEvBC,GACAA,MAvDW,wBA2DN,WAAM,IACPnG,EAAW,EAAK1K,MAAhB0K,OAER,EAAKsN,SAAS,CAAEpH,WAAW,IACvBlG,GACAA,MA7DJ,EAAK0N,MAAQ,CAAExH,WAAW,GAHX,E,sDAoEV,MAkBD7Q,KAAKC,MARLiH,GAVC,EAGDyD,OAHC,EAID2H,SAJC,EAKDxB,QALC,EAMDmY,cANC,EAQD3pB,UARC,EAUD4H,OACAC,EAXC,EAWDA,KACA+K,EAZC,EAYDA,MACAkB,EAbC,EAaDA,UACAD,EAdC,EAcDA,iBACAjQ,EAfC,EAeDA,SACAuE,EAhBC,EAgBDA,MACG9D,EAjBF,4IAoBGkN,EAAc7Q,KAAKqY,MAAnBxH,UAEFvR,EAAYU,KAAKwZ,eAEvB,OACI,yBACIla,UAAWA,EACXmI,MAAOA,GAEP,kBAAC,GAAD,CACIgQ,KAAMrE,EACNuE,KAAMzF,EACNhL,QAASA,EACTS,OAAQkJ,EACR3N,SAAUA,IAEd,kBAAC,GAAD,KACI5D,UAAWa,KAAO0T,MAClBlJ,OAAQ3K,KAAKopB,WACb9W,SAAUtS,KAAKmd,aACfrM,QAAS9Q,KAAKqpB,YACdnmB,SAAUA,EACVM,KAAK,QACDG,IAER,kBAAC,GAAD,CACI8T,KAAMtE,EACNhM,KAAMA,EACND,MAAOA,S,GAzHH5G,IAAMC,e,IAAxB2a,G,YACiB7b,I,IADjB6b,G,eAGoBzW,IA6HX+S,mBAAkB6O,GAAMnL,K,wBCtKjC7b,GAAY,CACdC,UAAWC,KAAUC,OACrB0D,SAAU3D,KAAUmX,MAQlBma,G,yIAKO,MAKD7wB,KAAKC,MAHMgD,EAFV,EAED3D,UACA4D,EAHC,EAGDA,SACGS,EAJF,gCAOCrE,EAAY2E,YACdhB,EACA,eACA9C,KAAO2wB,YACP5tB,GAAY,WACZA,GAAY/C,KAAO+C,UAGjBkB,EAAgBH,YAClB,OACA9D,KAAOkE,MAGX,OACI,yBAAK/E,UAAWA,GACZ,kBAACiF,EAAA,EAAD,CACIjF,UAAW8E,EACXI,KAAK,WAET,kBAAC,GAAD,KACIlF,UAAWa,KAAOywB,UAClBptB,KAAK,SACLN,SAAUA,GACNS,S,GAnCErD,IAAMC,e,IAA1BswB,G,YACiBxxB,I,IADjBwxB,G,eALe,CACjBvxB,UAAW,GACX4D,UAAU,IA6CCsU,mBAAkB6O,GAAMwK,K,wBCxDjC7Z,GAAW,SAAC,GAAe,IAAbrP,EAAa,EAAbA,OACVrI,EAAY2E,YACd,WACA9D,KAAOgX,UAGX,OACI,kBAAC5S,EAAA,EAAD,CACIjF,UAAWA,EACXkF,KAAMmD,EAAS,WAAa,0BAKxCqP,GAAS3X,UAAY,CACjBsI,OAAQpI,KAAUmX,KAAK5W,YAGZkX,U,wBCpBT3X,GAAY,CACdsI,OAAQpI,KAAUmX,KAAK5W,WACvBwR,QAAS/R,KAAUmX,KAAK5W,WACxBR,UAAWC,KAAUC,OACrBiE,QAASlE,KAAUoX,KAAK7W,WACxBiR,UAAWxR,KAAUG,UAAU,CAC3BH,KAAUC,OACVD,KAAUwX,SACXjX,WACHgR,QAASvR,KAAUoX,KAAK7W,WACxBirB,YAAaxrB,KAAUC,QAQNiR,G,YAKjB,WAAYxQ,GAAO,yBACf,4BAAMA,IADS,0BAsBJ,WAAM,MAKb,EAAKA,MAHL0H,EAFa,EAEbA,OACA2J,EAHa,EAGbA,QAIEpR,EAAa,CAPF,EAIbZ,UAKA,SACAa,KAAOkR,QAYX,OATI1J,GACAzH,EAAW2J,KAAK,UAGhByH,IACApR,EAAW2J,KAAK1J,KAAOmR,SACvBpR,EAAW2J,KAAK,YAGb3J,EAAWG,KAAK,OA5CR,yBA+CL,WAAM,MAIZ,EAAKJ,OAETwD,EANgB,EAEZA,SAFY,EAGZsN,aAlDW,6BAwDD,WAAM,MAIhB,EAAK9Q,MAFL8Q,EAFgB,EAEhBA,UACAD,EAHgB,EAGhBA,QAGJ,EAAKH,gBAAiB,EACtBG,EAAQC,KA/DO,8BAkEA,WACf,EAAKJ,gBAAiB,IAnEP,2BAsEH,WACP,EAAKA,gBACN,EAAK5J,IAAIqE,QAAQ4F,eAAe,CAC5BE,MAAO,cAvEf,EAAKnK,IAAMzG,IAAM8a,YACjB,EAAKzK,oBAAiB9J,EAHP,E,iEAOK7G,KAAKC,MAAjBqR,SAEJtR,KAAKqb,kB,gDAIaZ,IACFza,KAAKC,MAAjBqR,SACQmJ,EAAUnJ,QACtBtR,KAAKqb,gBAELrb,KAAK2Q,gBAAiB,I,+BA4DrB,MAID3Q,KAAKC,MAFL8qB,EAFC,EAEDA,YACApjB,EAHC,EAGDA,OAGErI,EAAYU,KAAKwZ,eAEvB,OACI,4BACIzS,IAAK/G,KAAK+G,IACVzH,UAAWA,EACXmE,QAASzD,KAAK4D,YACd2N,YAAavR,KAAKmR,gBAClBK,aAAcxR,KAAKoR,iBACnB5N,KAAK,UAEL,kBAAC,GAAD,CAAUmE,OAAQA,IAChBojB,O,GArGkBzqB,IAAMC,e,IAArBkQ,G,YACEpR,I,IADFoR,G,eALA,CACjBnR,UAAW,GACXyrB,YAAa,K,4BCXX1rB,GAAY,CACd2rB,WAAYzrB,KAAUya,MAAMla,WAC5BR,UAAWC,KAAUC,OACrBsN,KAAMvN,KAAUya,MAAMla,WACtBoF,YAAa3F,KAAUoX,KAAK7W,WAC5B4R,cAAenS,KAAUoX,KAAK7W,WAC9B+R,oBAAqBtS,KAAUoX,KAC/BhM,OAAQpL,KAAUoX,KAAK7W,WACvBwI,aAAc/I,KAAUoX,KAAK7W,WAC7B6R,cAAepS,KAAUoX,KAAK7W,WAC9B8R,cAAerS,KAAUoX,KAAK7W,WAC9Byb,gBAAiBhc,KAAU4Z,OAC3BmC,YAAa/b,KAAUoX,KACvBc,KAAMlY,KAAUmX,KAAK5W,WACrB8F,WAAYrG,KAAUG,UAAU,CAACH,KAAUC,OAAQD,KAAUwX,UAG3DtS,GAAe,CACjBnF,UAAW,GACXgc,YAAa,iBAAM,uBACnBC,qBAAiB1U,EACjBjB,gBAAYiB,EACZgL,yBAAqBhL,GAGJ4K,G,YAKjB,WAAYxR,GAAO,yBACf,4BAAMA,IADS,0BAcJ,WAQX,MALmB,CAFG,EAAKA,MAAnBX,UAIJa,KAAO8E,SAGO5E,KAAK,OAtBR,+BAyBC,SAACJ,GAAU,IACnB+qB,EAAe/qB,EAAf+qB,WAER,EAAKC,cAAgBC,YACjBF,EACA,SAAAja,GAAS,OAAIA,GACb,kBAAM,MA/BK,0BAmCJ,SAACoa,EAAGre,GAAS,MAQpB,EAAK7M,MANLiF,EAFoB,EAEpBA,YACAwM,EAHoB,EAGpBA,cACAC,EAJoB,EAIpBA,cACAC,EALoB,EAKpBA,cACAC,EANoB,EAMpBA,oBACAjM,EAPoB,EAOpBA,WAGEZ,EAAME,EAAY4H,GAClBoF,EAAQL,EACVA,EAAoB/E,GAEpB4E,EAAc5E,GAEZ8D,IAAa,EAAKqa,cAAcjmB,GAChC6L,EAAY7L,IAAQY,EAE1B,OACI,kBAAC,GAAD,CACIZ,IAAKA,EACL+L,UAAW/L,EACX+lB,YAAa7Y,EACbzO,QAASkO,EACTb,QAASc,EACTjK,OAAQiJ,EACRU,QAAST,MA9DF,yBAmEL,WAAM,MAIZ,EAAK5Q,MAFQ2P,EAFD,EAEZ0L,YAIJ,GANgB,EAGZxO,KAGKtH,OAAS,EACd,OAAO,KAGX,IAAMlG,EAAY,SAAH,OAAYa,KAAOoH,OAClC,OACI,yBAAKjI,UAAWA,GACZ,kBAACsQ,EAAD,SA9ER,EAAKwb,kBAAkBnrB,GAFR,E,uEAKOwa,GAAW,IACb4Q,EAAkBrrB,KAAKC,MAAnC+qB,WACYM,EAAkB7Q,EAA9BuQ,WAEHO,YAAYF,EAAeC,IAC5BtrB,KAAKorB,kBAAkB3Q,K,+BA2EtB,MAODza,KAAKC,MALL0K,EAFC,EAEDA,OACArC,EAHC,EAGDA,aACAiT,EAJC,EAIDA,gBACAzO,EALC,EAKDA,KACA2K,EANC,EAMDA,KAGEnY,EAAYU,KAAKwZ,eACjBiC,EAAQzb,KAAKsb,YAEnB,OAAK7D,EAKD,kBAAC,KAAD,CACI9M,OAAQA,EACRrC,aAAcA,EACdqD,OAAQ4P,EACRjc,UAAWA,GAEX,kBAAC,KAAD,CACIwN,KAAMA,EACN4O,SAAU1b,KAAK2b,eAEnB,kBAACF,EAAD,OAdG,S,GAvGkBnb,IAAMC,e,IAAtBkR,G,YACEpS,I,IADFoS,G,eAGKhN,I,2kBCV1B,IAAMoX,GAAcC,GAAeC,IAC7ByP,GAAY,GAEZuF,GAAe,iBAAM,kBACrBC,GAAoB,iBAAM,uBAC1BC,GAAqB,iBAAM,wBAIpB5xB,GAAY,CACrB4S,UAAW1S,KAAUmX,KACrBxT,SAAU3D,KAAUmX,KACpBrB,gBAAiB9V,KAAUmX,KAC3B+U,oBAAqBlsB,KAAUmX,KAC/B/D,SAAUpT,KAAUmX,KACpBvD,iBAAkB5T,KAAUmX,KAC5BtD,UAAW7T,KAAUmX,KAErBpX,UAAWC,KAAUC,OACrB0H,MAAO3H,KAAUC,OACjB2H,KAAM5H,KAAUC,OAChB0S,MAAO3S,KAAUG,UAAU,CAACH,KAAUC,OAAQD,KAAUwX,SACxDtE,iBAAkBlT,KAAUC,OAC5BkT,YAAanT,KAAUC,OACvBiI,MAAOlI,KAAUC,OAEjByF,QAAS1F,KAAUI,QAAQJ,KAAU4Z,QAErCrH,MAAOvS,KAAUya,MACjB1H,SAAU/S,KAAUoX,KAAK7W,WAEzBoF,YAAa3F,KAAUoX,KACvBjF,cAAenS,KAAUoX,KACzB9E,oBAAqBtS,KAAUoX,KAE/B2E,YAAa/b,KAAUoX,KACvBR,kBAAmB5W,KAAUwX,QAGpBtS,GAAe,CACxBwN,eAAWpL,EACXvH,UAAW,GACX4D,UAAU,EACVgE,WAAOL,EACPwO,iBAAiB,EACjBoW,qBAAqB,EACrBtkB,UAAMN,EACN3B,YAAa,SAAA+E,GAAC,OAAIA,EAAEjF,KACpBkN,MAAO,GACPR,cAAe,SAAAzH,GAAC,OAAIA,EAAEiI,OACtBL,yBAAqBhL,EACrB5B,QAASumB,GACT/Y,iBAAkB,GAClBC,YAAa,mBACbC,UAAU,EACV2I,iBAAazU,EACbsM,kBAAkB,EAClBC,WAAW,EACX3L,WAAOZ,EACPiL,MAAO0Z,GACPrV,kBAAmB,KAGjB+a,G,YAKF,WAAYjxB,GAAO,yBACf,4BAAMA,IADS,kCAuBI+b,aAAQ,SAC3B/W,EACAyM,EACAxM,GAEC,IADD4M,EACC,uDADO,GAEF6Z,EAAaT,YACfjmB,EACAC,EACA,SAAAtF,GAAO,OAAIA,IAETgsB,EAAkB9Z,EACnBnE,IAAI,SAAAwd,GAAC,OAAIQ,EAAWR,KACpB7gB,OAAO5D,KACPiH,IAAI,SAAAke,GAAC,OAAIna,EAAcma,KAC5B,OAAOD,EAAgBvrB,KAAK,SAtCb,2BAyCH2b,aAAQ,SACpB/W,EACAyM,EACAI,EACAqE,GAEA,OAAKrE,GAA0B,IAAjBA,EAAMtM,OAIDP,EACdqF,OACG,SAAA+G,GAAM,YACQxK,IAAViL,GAAuBgE,YAAwBpE,EAAcL,GAASS,KAG7EtE,KAAK,SAACuI,EAAGC,GAAJ,OAAUC,YACZvE,EAAcqE,GACdrE,EAAcsE,GACdlE,KAEHyE,MAAM,EAAGJ,GAdH,MAhDI,oCAoEM,WAAM,IACVtC,EAAU,EAAKP,SAAxBlI,QACJyI,GACAA,EAAMC,SAHiB,IAOV3I,EAAc,EAAKH,aAA5BI,QACJD,IACA,EAAKoI,mBAAqBpI,EAAUwI,yBAGxC,EAAKsE,SAAS,CACVgE,kBAAkB,EAClBlJ,iBAAalM,MAlFF,oCAsFM,WACrB,EAAKoR,SAAS,CACVgE,kBAAkB,EAClBlJ,iBAAalM,MAzFF,8BA+FA,WACf,EAAKoR,SAAS,CAAEzE,cAAc,MAhGf,6BAmGD,WACd,EAAKyE,SAAS,CAAEzE,cAAc,MApGf,+BAuGC,SAAC1P,GAAM,IACfgO,EAAUhO,EAAE+H,OAAZiG,MAGS3G,EAAc,EAAKH,aAA5BI,QACJD,IACA,EAAKoI,mBAAqBpI,EAAUwI,yBAGxC,EAAKsE,SAAS,CACVgE,kBAAkB,EAClBlJ,YAAajB,MAlHF,qCAwHO,SAACyC,GACvB,IAAM9S,EAAc8S,EAAiBZ,wBACjCjS,EAAa,EAAK6R,mBACLpI,EAAc,EAAKH,aAA5BI,QAEJD,IACAzJ,EAAayJ,EAAUwI,yBANiB,IASpCR,EAAqB,EAAKlT,MAA1BkT,iBAEFvR,EAAS,MAAKb,GAoBpB,OAnBIoS,IACAvR,EAAOjB,IAAM,IAUbmC,EAA8B,CAC1BpB,aACAD,cACAG,SACAC,MAXM,MACPX,EADI,CAEPC,KAAMO,EAAWb,MACjBO,KAAMM,EAAWb,YA3IN,gCA0JE,SAACmE,GAAQ,MAItB,EAAK/E,MAFL6R,EAFsB,EAEtBA,MACAQ,EAHsB,EAGtBA,SAGE+L,EAAW,KAAIvM,GACfga,EAAczN,EAASlZ,UAAU,SAAA8E,GAAC,OAAIA,IAAMjF,KAC7B,IAAjB8mB,EACAzN,EAASxU,KAAK7E,GAEdqZ,EAASnU,OAAO4hB,EAAa,GAKjCxZ,EAAS+L,KA1KM,oCA6KM,YAErB/L,EADqB,EAAKrS,MAAlBqS,UACCkZ,MA/KM,wCAkLU,WAAM,MAK3B,EAAKvrB,MAHLgF,EAF2B,EAE3BA,QACAC,EAH2B,EAG3BA,aAKJoN,EAR+B,EAI3BA,UAGarN,EAAQ0I,IAAI,SAAA1D,GAAC,OAAI/E,EAAY+E,QAzL/B,+BA6LC,SAACrE,GACjB,EAAKqS,SAAS,CAAErS,iBA3LhB,EAAKyS,MAAQ,CAET7E,aAAcvT,EAAMgS,UACpBrM,gBAAYiB,EAEZoV,kBAAkB,EAClBlJ,iBAAalM,GAGjB,EAAKmE,aAAe1K,IAAM8a,YAC1B,EAAK9H,SAAWhT,IAAM8a,YAbP,E,iEAgBC,IACCjQ,EAAcnL,KAAKgL,aAA5BI,QACJD,IACAnL,KAAKuT,mBAAqBpI,EAAUwI,2B,+BA8KnC,MAuBD3T,KAAKC,MArBLiH,EAFC,EAEDA,MACAC,EAHC,EAGDA,KACAjC,EAJC,EAIDA,YACAgN,EALC,EAKDA,MACAR,EANC,EAMDA,cACAe,EAPC,EAODA,iBACa0e,EARZ,EAQD7V,YACAnI,EATC,EASDA,iBACAC,EAVC,EAUDA,UACA3L,EAXC,EAWDA,MACAqK,EAZC,EAYDA,MACA5O,EAbC,EAaDA,SACWD,EAdV,EAcD3D,UACA2F,EAfC,EAeDA,QACAoQ,EAhBC,EAgBDA,gBACAoW,EAjBC,EAiBDA,oBACA9Y,EAlBC,EAkBDA,SACAV,EAnBC,EAmBDA,UACAS,EApBC,EAoBDA,YACAb,EArBC,EAqBDA,oBACAsE,EAtBC,EAsBDA,kBAtBC,EA8BDnW,KAAKqY,MAJL4D,EA1BC,EA0BDA,iBACArW,EA3BC,EA2BDA,WACA4N,EA5BC,EA4BDA,aACAT,EA7BC,EA6BDA,YAIAuI,EAAc6V,EAEbA,IACD7V,EAAevI,EAA6Bie,GAAfD,IAG5BI,GAA2C,IAAnBlsB,EAAQO,SACjC8V,EAAc2V,IAGlB,IAGMhe,EAHWnB,GAA0B,IAAjBA,EAAMtM,UAGM6P,GAAmBnS,GAAYyP,GAC/DoZ,IAHcja,GAASA,EAAMtM,SAAWP,EAAQO,WAGRimB,GAAuBvoB,GAAYyP,GAEhExH,EAAcnL,KAAKgL,aAA5BI,QAEF4gB,EAAahsB,KAAKisB,qBAAqBhnB,EAASyM,EAAexM,EAAa4M,GAC5Eoa,EACFF,GACGtZ,EAGDwJ,EAAmBnJ,GAAe,GAElCqJ,EAAkBpc,KAAKqc,cACzBpX,EACAyM,EACAqB,EACAoD,GAGE7W,EAAY2E,YACdhB,EACA,qBACA9C,KAAOgsB,iBACPlQ,GAAoB9b,KAAOiV,YAC3B6G,GAAoB,eACpB/Y,GAAY,WACZA,GAAY/C,KAAO+C,SACnBsQ,GAAgBrT,KAAOqT,aACvBA,GAAgB,iBAChBtM,GAAS/G,KAAO+G,MAChBA,GAAS,QACTmO,GAAmBlV,KAAOkV,gBAC1BA,GAAmB,oBACnBoW,GAAuBtrB,KAAOsrB,oBAC9BA,GAAuB,yBACN,IAAjB3Z,EAAMtM,QAAgBrF,KAAOmV,OACZ,IAAjBxD,EAAMtM,QAAgB,SACtBsM,EAAMtM,SAAWP,EAAQO,QAAUrF,KAAOisB,iBAC1Cta,EAAMtM,SAAWP,EAAQO,QAAU,qBAGjC6mB,EAA0B,gDAAH,OAEvBlsB,KAAOoV,gBAFgB,cAKvBgH,EAAmB,sCAAH,OAEhBpc,KAAOsV,QAFS,cAKhBoN,EAAuB,2CAAH,OAEpB1iB,KAAOwV,YAFa,cAKpB2W,EAA2B,gDAAH,OAExBnsB,KAAOosB,gBAFiB,cAK9B,OACI,yBACIjtB,UAAWA,EACXyH,IAAK/G,KAAKgL,aACVvD,MAAOA,GAEL2L,GACE,kBAAC,GAAD,CACIuE,KAAMzF,EACNhL,QAASA,EACThE,SAAUA,EACVyE,OAAQ6L,GAAgByI,IAGhC,yBAAK3c,UAAW+sB,GACZ,kBAAC,GAAD,CACI/sB,UAAWa,KAAO0T,MAClBrQ,KAAK,OACL2X,WAAYnb,KAAKsT,SACjB3I,OAAQ3K,KAAKkU,gBACbpD,QAAS9Q,KAAKiU,iBACdxQ,QAASzD,KAAK4T,uBACdtB,SAAUtS,KAAKmU,kBACfrC,MAAOoK,EACPjK,UAAWA,EACXxK,MAAOukB,EACPtZ,YAAawZ,EACbhpB,SAAUA,GAAYyP,EAEtB/M,WAAYA,EACZX,QAASmX,EACTlX,YAAaA,EACbY,eAAgBmW,EAChBlW,cAAe/F,KAAK0U,kBACpB1O,cAAehG,KAAKgU,uBACpB/N,cAAejG,KAAK4T,uBACpB1N,eAAgBlG,KAAKwU,qBAEzB,yBAAKlV,UAAWid,GACVwP,GACE,kBAAC,KAAD,CACIxoB,aAAW,EACXmS,SAAS,KACTpW,UAAWgtB,EACX7oB,QAASzD,KAAKwsB,2BACd/kB,MAAM,qBACNvE,SAAUA,GAAYyP,EACtBnP,KAAK,SACLL,SAAS,aAGf8P,GACE,kBAAC8G,GAAA,EAAD,CACIxW,aAAW,EACXmS,SAAS,KACTpW,UAAWujB,EACXpf,QAASzD,KAAKyU,uBACdhN,MAAM,2BACNvE,SAAUA,GAAYyP,EACtBxP,SAAS,YAKvBgQ,GACE,kBAAC,GAAD,CACIjM,MAAOA,EACPC,KAAMA,IAGd,kBAAC,GAAD,CACI6jB,WAAYlZ,EACZhF,KAAMsP,EACNlX,YAAaA,EACbwM,cAAeA,EACfG,oBAAqBA,EACrBlH,OAAQ3K,KAAKgU,uBACb1L,aAActI,KAAKsU,wBACnB3C,cAAe3R,KAAKwU,mBACpB5C,cAAe5R,KAAK0U,kBACpBpV,UAAWmT,EACX8I,gBAAiBpQ,EACjBmQ,YAAaA,EACb7D,KAAMwE,EACNrW,WAAYA,S,GAtYKtF,IAAMC,e,IAArC2wB,G,YACiB7xB,I,IADjB6xB,G,eAGoBzsB,IA0YX+S,mBAAkB0Z,I,wBCpe3B7xB,GAAY,CACdC,UAAWC,KAAUC,OACrBuR,UAAWxR,KAAUG,UAAU,CAC3BH,KAAUC,OACVD,KAAUwX,SACXjX,WACH2D,QAASlE,KAAUoX,KAAK7W,WACxBgR,QAASvR,KAAUoX,KAAK7W,WACxBL,SAAUF,KAAUM,KACpB+Q,SAAUrR,KAAUmX,KACpB7F,UAAWtR,KAAUmX,MAGnBjS,GAAe,CACjBmM,UAAU,EACVC,WAAW,EACXvR,UAAW,GACXG,cAAUoH,GAGO4J,G,YAKjB,WAAYxQ,GAAO,yBACf,4BAAMA,IADS,0BAwBJ,WAAM,MAKb,EAAKA,MAHLX,EAFa,EAEbA,UACAsR,EAHa,EAGbA,SACAC,EAJa,EAIbA,UAGE3Q,EAAa,CACfZ,EACAa,KAAOkR,OACP,UAaJ,OAVIT,IACA1Q,EAAW2J,KAAK1J,KAAOwH,QACvBzH,EAAW2J,KAAK,WAGhBgH,IACA3Q,EAAW2J,KAAK1J,KAAOmR,SACvBpR,EAAW2J,KAAK,YAGb3J,EAAWG,KAAK,OA/CR,yBAkDL,WAAM,MAIZ,EAAKJ,MAFL8Q,EAFY,EAEZA,WAIJtN,EANgB,EAGZA,SAGIsN,KAxDO,6BA2DD,WAAM,MAIhB,EAAK9Q,MAFL8Q,EAFgB,EAEhBA,UACAD,EAHgB,EAGhBA,QAGJ,EAAKH,gBAAiB,EACtBG,EAAQC,KAlEO,8BAqEA,WACf,EAAKJ,gBAAiB,IAtEP,2BAyEH,WACP,EAAKA,gBACN,EAAK5J,IAAIqE,QAAQ4F,eAAe,CAC5BE,MAAO,cA1Ef,EAAKnK,IAAMzG,IAAM8a,YACjB,EAAKzK,oBAAiB9J,EAHP,E,iEAOO7G,KAAKC,MAAnB4Q,WAGJ7Q,KAAKqb,kB,gDAIaZ,IACAza,KAAKC,MAAnB4Q,WAEU4J,EAAU5J,UACxB7Q,KAAKqb,gBAELrb,KAAK2Q,gBAAiB,I,+BA6DrB,IACGlR,EAAaO,KAAKC,MAAlBR,SACFH,EAAYU,KAAKwZ,eAEvB,OACI,4BACIzS,IAAK/G,KAAK+G,IACVzH,UAAWA,EACXmE,QAASzD,KAAK4D,YACd2N,YAAavR,KAAKmR,gBAClBK,aAAcxR,KAAKoR,iBACnB5N,KAAK,UAEH/D,O,GAnGkBa,IAAMC,e,IAArBkQ,G,YACEpR,I,IADFoR,G,eAGKhM,I,4BCjBpBpF,GAAY,CACdC,UAAWC,KAAUC,OACrBiY,KAAMlY,KAAUmX,KAChB5J,KAAMvN,KAAUI,QAAQJ,KAAU4Z,QAClCjU,YAAa3F,KAAUoX,KAAK7W,WAC5B4R,cAAenS,KAAUoX,KAAK7W,WAC9B+R,oBAAqBtS,KAAUoX,KAC/B2E,YAAa/b,KAAUoX,KACvBhF,cAAepS,KAAUoX,KAAK7W,WAC9B8R,cAAerS,KAAUoX,KAAK7W,WAC9BgS,MAAOvS,KAAUG,UAAU,CACvBH,KAAUC,OACVD,KAAUwX,SAEdnR,WAAYrG,KAAUG,UAAU,CAACH,KAAUC,OAAQD,KAAUwX,SAC7DpM,OAAQpL,KAAUoX,KAAK7W,WACvBwI,aAAc/I,KAAUoX,KAAK7W,WAG7Byb,gBAAiBhc,KAAU4Z,QAGzB1U,GAAe,CACjBnF,UAAW,GACXmY,MAAM,EACN3K,KAAM,GACNlH,gBAAYiB,EACZgL,yBAAqBhL,EACrByU,YAAa,iBAAM,uBACnBxJ,WAAOjL,EACP0U,qBAAiB1U,GAGA4K,G,4MAKF,SAAC+J,EAAGnK,GAAW,MAStB,EAAKpR,MAPLiF,EAFsB,EAEtBA,YACAwM,EAHsB,EAGtBA,cACAG,EAJsB,EAItBA,oBACAF,EALsB,EAKtBA,cACAC,EANsB,EAMtBA,cACAE,EAPsB,EAOtBA,MACAlM,EARsB,EAQtBA,WAGEZ,EAAME,EAAYmM,GAClBa,EAAQL,EACVA,EAAoBR,GAEpBK,EAAcL,GAGZT,EAAW5L,IAAQ8M,EACnBjB,EAAY7L,IAAQY,EAE1B,OACI,kBAAC,GAAD,CACIZ,IAAKA,EACL+L,UAAW/L,EACXvB,QAASkO,EACTb,QAASc,EACThB,SAAUA,EACVC,UAAWA,GAETqB,K,yBAKA,WAAM,MAIZ,EAAKjS,MAFL6M,EAFY,EAEZA,KACa8C,EAHD,EAGZ0L,YAGJ,GAAoB,IAAhBxO,EAAKtH,OACL,OAAO,KAGX,IAAMlG,EAAY,oCAAH,OAETa,KAAOoH,MAFE,cAKf,OACI,yBAAKjI,UAAWA,GACZ,kBAACsQ,EAAD,S,wDAKH,MAQD5P,KAAKC,MANMgD,EAFV,EAED3D,UACAmY,EAHC,EAGDA,KACA3K,EAJC,EAIDA,KACAnC,EALC,EAKDA,OACArC,EANC,EAMDA,aACAiT,EAPC,EAODA,gBAGJ,IAAK9D,EACD,OAAO,KAGX,IAAMnY,EAAY,iBAAH,OACT2D,EADS,yBAET9C,KAAO8E,QAFE,mCAMTwW,EAAQzb,KAAKsb,YAEnB,OACI,kBAAC,KAAD,CACI3Q,OAAQA,EACRrC,aAAcA,EACdqD,OAAQ4P,EACRjc,UAAWA,GAEX,kBAAC,KAAD,CACIwN,KAAMA,EACN4O,SAAU1b,KAAK2b,eAEnB,kBAACF,EAAD,W,GA/FqBnb,IAAMC,e,IAAtBkR,G,YACEpS,I,IADFoS,G,eAGKhN,I,2kBCrB1B,IAAMmX,GAAcrc,KAAUG,UAAU,CACpCH,KAAUC,OACVD,KAAUwX,SAGR8E,GAAcC,GAAeC,IAK7B1c,GAAY,CACd4S,UAAW1S,KAAUmX,KACrBxT,SAAU3D,KAAUmX,KACpBrB,gBAAiB9V,KAAUmX,KAC3B/D,SAAUpT,KAAUmX,KACpBvD,iBAAkB5T,KAAUmX,KAC5BtD,UAAW7T,KAAUmX,KAErBpX,UAAWC,KAAUC,OACrB0H,MAAO3H,KAAUC,OACjB2H,KAAM5H,KAAUC,OAChB0S,MAAO3S,KAAUC,OACjBiT,iBAAkBlT,KAAUC,OAC5BkT,YAAanT,KAAUC,OACvBiI,MAAOlI,KAAUC,OAEjByF,QAAS1F,KAAUI,QAAQJ,KAAU4Z,QACrCrH,MAAO8J,GACPtJ,SAAU/S,KAAUoX,KAAK7W,WAEzBoF,YAAa3F,KAAUoX,KACvBjF,cAAenS,KAAUoX,KACzB9E,oBAAqBtS,KAAUoX,KAE/B2E,YAAa/b,KAAUoX,KACvBR,kBAAmB5W,KAAUwX,QAG3BtS,GAAe,CACjBwN,eAAWpL,EACXvH,UAAW,GACX4D,UAAU,EACVgE,WAAOL,EACPwO,iBAAiB,EACjBlO,UAAMN,EACN3B,YAAa,SAAA+E,GAAC,OAAIA,EAAEjF,KACpBkN,MAAO,GACPR,cAAe,SAAAzH,GAAC,OAAIA,EAAEiI,OACtBL,yBAAqBhL,EACrB5B,QA3Cc,GA4CdwN,iBAAkB,GAClBC,YAAa,uBACbC,UAAU,EACV2I,iBAAazU,EACbsM,kBAAkB,EAClBC,WAAW,EACX3L,WAAOZ,EACPiL,WAAOjL,EACPsP,kBAAmB,KAGjBib,G,YAKF,WAAYnxB,GAAO,yBACf,4BAAMA,IADS,2BAuBH+b,aAAQ,SACpB/W,EACAyM,EACAI,EACAqE,GAEA,OAAKrE,GAA0B,IAAjBA,EAAMtM,OAIDP,EACdqF,OACG,SAAA+G,GAAM,YACQxK,IAAViL,GAAuBgE,YAAwBpE,EAAcL,GAASS,KAG7EtE,KAAK,SAACuI,EAAGC,GAAJ,OAAUC,YACZvE,EAAcqE,GACdrE,EAAcsE,GACdlE,KAEHyE,MAAM,EAAGJ,GAdH,MA9BI,oCAiDM6F,aAAQ,SAC7B/W,EACAyM,EACAxM,EACA4M,GAEA,IAAM8C,EAAe3P,EAAQ4P,KACzB,SAAA5K,GAAC,OAAI/E,EAAY+E,KAAO6H,IAG5B,YAAqBjL,IAAjB+N,EACO,GAGJlD,EAAckD,MA/DN,oCAoEM,WAAM,IACVf,EAAU,EAAKP,SAAxBlI,QACJyI,GACAA,EAAMC,SAWV,EAAKmE,SAAS,CAEVlF,iBAAalM,MApFF,oCAwFM,WACrB,EAAKoR,SAAS,CACVgE,kBAAkB,EAClBlJ,iBAAalM,MA3FF,8BAiGA,WACf,EAAKoR,SAAS,CAAEzE,cAAc,MAlGf,6BAqGD,WACd,EAAKyE,SAAS,CAAEzE,cAAc,MAtGf,+BAyGC,SAAC1P,GAAM,IACfgO,EAAUhO,EAAE+H,OAAZiG,MAUR,EAAKmG,SAAS,CACVgE,kBAAkB,EAClBlJ,YAAajB,MAtHF,qCA4HO,SAACyC,GACvB,IAAM9S,EAAc8S,EAAiBZ,wBACjCjS,EAAa,EAAK6R,mBACLpI,EAAc,EAAKH,aAA5BI,QAEJD,IACAzJ,EAAayJ,EAAUwI,yBANiB,IASpCR,EAAqB,EAAKlT,MAA1BkT,iBAEFvR,EAAS,MAAKb,GAoBpB,OAnBIoS,IACAvR,EAAOjB,IAAM,IAUbmC,EAA8B,CAC1BpB,aACAD,cACAG,SACAC,MAXM,MACPX,EADI,CAEPC,KAAMO,EAAWb,MACjBO,KAAMM,EAAWb,YA/IN,gCA8JE,SAACkQ,GAAc,MAI5B,EAAK9Q,MAFL6R,EAF4B,EAE5BA,MACAQ,EAH4B,EAG5BA,SAGJ,EAAK2F,SAAS,CACVgE,kBAAkB,EAClBlJ,iBAAalM,IAGbkK,IAAce,GACdQ,EAASvB,KA1KE,oCA8KM,WAAM,MAIvB,EAAK9Q,MAFLqS,EAFuB,EAEvBA,cAIUzL,IANa,EAGvBiL,OAIAQ,OAASzL,KArLE,+BAyLC,SAACjB,GACjB,EAAKqS,SAAS,CAAErS,iBAvLhB,EAAKyS,MAAQ,CAET7E,aAAcvT,EAAMgS,UACpBrM,gBAAYiB,EAEZoV,kBAAkB,EAClBlJ,iBAAalM,GAGjB,EAAKmE,aAAe1K,IAAM8a,YAC1B,EAAK9H,SAAWhT,IAAM8a,YAbP,E,iEAgBC,IACCjQ,EAAcnL,KAAKgL,aAA5BI,QACJD,IACAnL,KAAKuT,mBAAqBpI,EAAUwI,2B,+BA0KnC,MAsBD3T,KAAKC,MApBLiH,EAFC,EAEDA,MACAC,EAHC,EAGDA,KACAjC,EAJC,EAIDA,YACAgN,EALC,EAKDA,MACAR,EANC,EAMDA,cACAG,EAPC,EAODA,oBACAY,EARC,EAQDA,iBACA6I,EATC,EASDA,YACAnI,EAVC,EAUDA,iBACAC,EAXC,EAWDA,UACA3L,EAZC,EAYDA,MACAqK,EAbC,EAaDA,MACA5O,EAdC,EAcDA,SACAyP,EAfC,EAeDA,SACAD,EAhBC,EAgBDA,YACAT,EAjBC,EAiBDA,UACAoD,EAlBC,EAkBDA,gBACWpS,EAnBV,EAmBD3D,UACA2F,EApBC,EAoBDA,QACAkR,EArBC,EAqBDA,kBArBC,EA6BDnW,KAAKqY,MAJL4D,EAzBC,EAyBDA,iBACArW,EA1BC,EA0BDA,WACA4N,EA3BC,EA2BDA,aACAT,EA5BC,EA4BDA,YAIEmJ,OAAmCrV,IAAhBkM,EACnB/S,KAAKmc,uBAAuBlX,EAASyM,EAAexM,EAAa4M,GACjEiB,EAEAiC,EAAWkH,GAAgD,IAA5BA,EAAiB1W,OAChDyN,EAAkB+B,KAAcK,GAAmBnS,GAAYyP,GAEpDxH,EAAcnL,KAAKgL,aAA5BI,QAEFgR,EAAkBpc,KAAKqc,cACzBpX,EACAyM,EAGAqB,EACAoD,GAGE7W,EAAY2E,YACdhB,EACA,eACA9C,KAAOmc,YACPL,GAAoB9b,KAAOiV,YAC3B6G,GAAoB,eACpB/Y,GAAY/C,KAAO+C,SACnBA,GAAY,WACZgE,GAAS/G,KAAO+G,MAChBA,GAAS,QACTsM,GAAgBrT,KAAOqT,aACvBA,GAAgB,iBAChB6B,GAAmBlV,KAAOkV,gBAC1BA,GAAmB,oBACnBL,GAAY7U,KAAOmV,OACnBN,GAAY,UAGVsC,EAAiBrT,YACnB9D,KAAOoV,gBACP,qBAGEgH,EAAmB,sCAAH,OAEhBpc,KAAOsV,QAFS,cAKhBgH,EAAiB,2CAAH,OAEdtc,KAAOwV,YAFO,cAKpB,OACI,yBACIrW,UAAWA,EACXyH,IAAK/G,KAAKgL,aACVvD,MAAOA,GAEL2L,GACE,kBAAC,GAAD,CACIuE,KAAMzF,EACNhL,QAASA,EACThE,SAAUA,EACVyE,OAAQ6L,GAAgByI,IAGhC,yBAAK3c,UAAWgY,GACZ,kBAAC,GAAD,CACIhY,UAAWa,KAAO0T,MAClBrQ,KAAK,OACL2X,WAAYnb,KAAKsT,SACjB3I,OAAQ3K,KAAKkU,gBACbpD,QAAS9Q,KAAKiU,iBACdxQ,QAASzD,KAAK4T,uBACdtB,SAAUtS,KAAKmU,kBACfrC,MAAOoK,EACPjK,UAAWA,EACXS,YAAaA,EACbxP,SAAUA,GAAYyP,EAEtB/M,WAAYA,EACZX,QAASmX,EACTlX,YAAaA,EACbY,eAAgBmW,EAChBlW,cAAe/F,KAAK0U,kBACpB1O,cAAehG,KAAKgU,uBACpB/N,cAAejG,KAAK4T,uBACpB1N,eAAgBlG,KAAKwU,qBAEzB,yBAAKlV,UAAWid,GACVtJ,GACE,kBAAC8G,GAAA,EAAD,CACIrE,SAAS,KACTvS,SAAS,QACT7D,UAAWmd,EACXhZ,QAASzD,KAAKyU,uBACdlR,aAAW,MAKzB4P,GACE,kBAAC,GAAD,CACIjM,MAAOA,EACPC,KAAMA,IAGd,kBAAC,GAAD,CACI7H,UAAWmT,EACXf,cAAeA,EACf/G,OAAQ3K,KAAKgU,uBACb1L,aAActI,KAAKsU,wBACnB3C,cAAe3R,KAAKwU,mBACpB3C,oBAAqBA,EACrB0J,gBAAiBpQ,EACjBmQ,YAAaA,EACbxJ,MAAOA,EAEP2F,KAAMwE,EACN/W,YAAaA,EACb4H,KAAMsP,EACNxK,cAAe5R,KAAK0U,kBACpB9O,WAAYA,S,GA3VAtF,IAAMC,e,IAAhC6wB,G,YACiB/xB,I,IADjB+xB,G,eAGoB3sB,IA+VX+S,mBAAkB4Z,I,wBClb3B/xB,GAAY,CACdmL,GAAIjL,KAAUG,UAAU,CACpBH,KAAUC,OACVD,KAAUwX,SACXjX,WACHwS,SAAU/S,KAAUoX,KAAK7W,WACzBmX,QAAS1X,KAAUmX,KAAK5W,WACxBoS,MAAO3S,KAAUC,OAAOM,WACxB0E,KAAMjF,KAAUC,OAAOM,WACvBoH,MAAO3H,KAAUC,OACjB0D,SAAU3D,KAAUmX,KACpB/D,SAAUpT,KAAUmX,MASH2a,G,YAKjB,WAAYpxB,GAAO,yBACf,4BAAMA,IADS,0BAMJ,WAAM,MAMb,EAAKA,MAJLiD,EAFa,EAEbA,SACAgE,EAHa,EAGbA,MACAyL,EAJa,EAIbA,SACAsE,EALa,EAKbA,QAGE/W,EAAa,CACf,iBACAC,KAAOmxB,eAmBX,OAhBIra,IACA/W,EAAW2J,KAAK,WAChB3J,EAAW2J,KAAK1J,KAAO8W,UAEvBtE,IACAzS,EAAW2J,KAAK,aAChB3J,EAAW2J,KAAK1J,KAAOwS,WAEvBzP,IACAhD,EAAW2J,KAAK,YAChB3J,EAAW2J,KAAK1J,KAAO+C,WAEtBkf,YAAQlb,EAAO,CAAC,OACjBhH,EAAW2J,KAAK,SAChB3J,EAAW2J,KAAK1J,KAAO+G,QAEpBhH,EAAWG,KAAK,OAhCvB,EAAK6W,QAAUzN,cAHA,E,sDAsCV,MAODzJ,KAAKC,MALLuK,EAFC,EAEDA,GACA8H,EAHC,EAGDA,SACA2E,EAJC,EAIDA,QACA/E,EALC,EAKDA,MACA1N,EANC,EAMDA,KAGEtE,EAAaF,KAAKwZ,eAExB,OACI,2BACIjC,QAASvX,KAAKkX,QACd5X,UAAWY,GAEX,2BACIZ,UAAS,UAAKa,KAAOoxB,mBAAZ,yBACT/tB,KAAK,QACL8O,SAAUA,EACV2E,QAASA,EACTzM,GAAIxK,KAAKkX,QACTpF,MAAOtH,EACPhG,KAAMA,IAET0N,O,GApE0B5R,IAAMC,e,IAA5B8wB,G,YACEhyB,I,IADFgyB,G,eANA,CACjBnqB,MAAO,GACPhE,UAAU,EACVyP,UAAU,I,4BCXRtT,GAAY,CAIdC,UAAWC,KAAUC,OAKrB0D,SAAU3D,KAAUmX,KAKpBxP,MAAO3H,KAAUC,OAKjB2H,KAAM5H,KAAUC,OAKhB0S,MAAO3S,KAAUC,OAKjB8S,SAAU/S,KAAUoX,KACpBoS,SAAUxpB,KAAUmX,KAEpBtD,UAAW7T,KAAUmX,KAErBvD,iBAAkB5T,KAAUmX,KAE5BzR,QAAS1F,KAAUI,QAAQJ,KAAU4Z,QAErCzH,cAAenS,KAAUoX,KACzBzR,YAAa3F,KAAUoX,KACvBhE,SAAUpT,KAAUmX,KAEpB5E,MAAOvS,KAAUG,UAAU,CACvBH,KAAUC,OACVD,KAAUwX,OACVxX,KAAUmX,OAGdlS,KAAMjF,KAAUC,QAGdiF,GAAe,CACjBnF,UAAW,GACX4D,UAAU,EACVyP,UAAU,EACVzL,MAAO,GACPC,KAAM,GACN+K,MAAO,GACPI,cAAUzL,EACVkiB,UAAU,EACV3V,WAAW,EACXlO,YAAa,SAAA+E,GAAC,OAAIA,EAAEjF,KACpB0M,cAAe,SAAAzH,GAAC,OAAIA,EAAEiI,OACtBiB,kBAAkB,EAClBrB,MAAO,GACPtN,KAAM,GACNS,QAAS,IAGPusB,G,4MAKa,WAAM,MAMb,EAAKvxB,MAJLX,EAFa,EAEbA,UACA4D,EAHa,EAGbA,SACAgE,EAJa,EAIbA,MACA6hB,EALa,EAKbA,SAGE7oB,EAAa,CACfZ,EACA,gBACAa,KAAOsxB,cAeX,OAZIvuB,IACAhD,EAAW2J,KAAK,YAChB3J,EAAW2J,KAAK1J,KAAO+C,WAEtBkf,YAAQlb,EAAO,CAAC,OACjBhH,EAAW2J,KAAK,SAChB3J,EAAW2J,KAAK1J,KAAO+G,QAEvB6hB,IACA7oB,EAAW2J,KAAK,YAChB3J,EAAW2J,KAAK1J,KAAO4oB,WAEpB7oB,EAAWG,KAAK,O,+BAGP,SAACqxB,GAAgB,MAO7B,EAAKzxB,MALLqS,EAF6B,EAE7BA,SACApP,EAH6B,EAG7BA,SACA+B,EAJ6B,EAI7BA,QACAC,EAL6B,EAK7BA,YACAyN,EAN6B,EAM7BA,SAEIb,EAAU4f,EAAY7lB,OAAtBiG,MAEF6f,EAAa1sB,EACd0I,IAAI,SAAAyG,GAAG,OAAIlP,EAAYkP,KACvBS,KAAK,SAAAT,GAAG,OAAIU,OAAOV,KAAStC,KAE7BQ,GAAapP,GAAayP,GAC1BL,EAASqf,K,4BAIA,SAAC3sB,EAAK8H,GAAN,MAAgB,CAC7BoF,MAAO,EAAKjS,MAAMyR,cAAc5E,GAChCtC,GAAIsK,OAAO,EAAK7U,MAAMiF,YAAY4H,IAClCwF,SAAU,EAAK6B,kBACf3P,KAAM,EAAKvE,MAAMuE,KACjByS,QAASnC,OAAO,EAAK7U,MAAM6R,SAAWgD,OAAO9P,GAC7CkC,MAAO,EAAKjH,MAAMiH,MAClByL,SAAU,EAAK1S,MAAM0S,SACrBzP,SAAU,EAAKjD,MAAMiD,Y,wDAGhB,MAUDlD,KAAKC,MARLiH,EAFC,EAEDA,MACAC,EAHC,EAGDA,KACA+K,EAJC,EAIDA,MACAkB,EALC,EAKDA,UACAD,EANC,EAMDA,iBACAlO,EAPC,EAODA,QACAC,EARC,EAQDA,YACAhC,EATC,EASDA,SAGEhD,EAAaF,KAAKwZ,eAExB,OACI,yBAAKla,UAAWY,GACZ,kBAAC,GAAD,CACIZ,UAAWa,KAAO+R,MAClBuF,KAAMrE,EACNuE,KAAMzF,EACNhP,SAAUA,EACVgE,QAASA,IAEb,kBAAC,KAAD,CACI5H,UAAWa,KAAOyxB,iBAClB9kB,KAAM7H,EACNwH,SAAUgE,GACV1D,eAAgB/M,KAAK+M,eACrB7H,YAAaA,IAEjB,kBAAC,GAAD,CACIuS,KAAMtE,EACNhM,KAAMA,EACND,MAAOA,S,GAjGA5G,IAAMC,e,IAA3BixB,G,YACiBnyB,I,IADjBmyB,G,eAGoB/sB,IAqGX+S,mBAAkBga,I,wBCpL3BnyB,GAAY,CACdC,UAAWC,KAAUC,OACrBsS,MAAOvS,KAAUC,OAAOM,WACxB+xB,OAAQtyB,KAAUC,QAQDsyB,G,yIAKR,MAKD9xB,KAAKC,MAHL6R,EAFC,EAEDA,MACA+f,EAHC,EAGDA,OACW5uB,EAJV,EAID3D,UAGEA,EAAY,iBAAH,OACT2D,EADS,yBAET9C,KAAO4xB,SAFE,cAKf,OACI,yBAAKzyB,UAAWA,GACZ,yBAAKA,UAAWa,KAAO0xB,QACjBA,GAEN,yBAAKvyB,UAAWa,KAAO+R,OACjBJ,Q,GAvBgBxR,IAAMC,e,IAAvBuxB,G,YACEzyB,I,IADFyyB,G,eALA,CACjBxyB,UAAW,GACXuyB,OAAQ,M,4BCNNxyB,GAAY,CACdC,UAAWC,KAAUC,OACrBwyB,UAAWzyB,KAAUoX,KAAK7W,WAC1BmyB,QAAS1yB,KAAUC,OACnB0D,SAAU3D,KAAUmX,MAGlBjS,GAAe,CACjBnF,UAAW,GACX2yB,aAASprB,EACT3D,UAAU,GAGOgvB,G,wNAKU,WAAM,MAIzB,EAAKjyB,OAET+xB,EAN6B,EAEzBA,WAFyB,EAGzBC,W,wDAMC,MAODjyB,KAAKC,MALMgD,EAFV,EAED3D,UAEA4D,GAJC,EAGD8uB,UAHC,EAID9uB,UAEGS,EANF,4CASCrE,EAAY,iBAAH,OACT2D,EADS,yBAET9C,KAAOgyB,oBAFE,cAKf,OACI,yBAAK7yB,UAAWA,GACZ,kBAAC,GAAD,KACIA,UAAWa,KAAO4xB,UACdpuB,IAER,kBAACoW,GAAA,EAAD,CACI7W,SAAUA,EACV5D,UAAWa,KAAOiyB,cAClB3uB,QAASzD,KAAKqyB,yBACd9uB,aAAW,EACXJ,SAAS,QACTG,sBAAoB,EACpBD,wBAAsB,S,GAzCO/C,IAAMC,e,IAAlC2xB,G,YACE7yB,I,IADF6yB,G,eAGKztB,I,4BCVpBpF,GAAY,CACd6F,YAAa3F,KAAUoX,KACvBjF,cAAenS,KAAUoX,KACzBzT,SAAU3D,KAAUmX,KACpB/D,SAAUpT,KAAUmX,KACpBpE,SAAU/S,KAAUoX,KAEpBzE,MAAO3S,KAAUG,UAAU,CACvBH,KAAUC,OACVD,KAAUwX,SAGdjF,MAAOvS,KAAUI,QAAQJ,KAAUG,UAAU,CACzCH,KAAUC,OACVD,KAAUwX,UAGdub,yBAA0B/yB,KAAUmX,KAEpCpX,UAAWC,KAAUC,OACrBuqB,cAAexqB,KAAUC,OACzB+yB,gBAAiBhzB,KAAUC,OAG3BgzB,UAAWjzB,KAAU4Z,OAErBlU,QAAS1F,KAAUI,QACfJ,KAAU+mB,MAAM,CACZthB,IAAKzF,KAAUG,UAAU,CACrBH,KAAUC,OACVD,KAAUwX,SAEd7E,MAAO3S,KAAUC,UAGzBizB,cAAelzB,KAAUoX,KAEzB7G,eAAgBvQ,KAAUoX,KAC1BR,kBAAmB5W,KAAUwX,QAG3BtS,GAAe,CACjBnF,UAAW,GACXyqB,cAAe,GACfwI,gBAAiB,GACjBC,UAAW,GACXttB,YAAa,eAAC+E,EAAD,uDAAK,GAAL,OAAYA,EAAEjF,KAC3B0M,cAAe,eAACzH,EAAD,uDAAK,GAAL,OAAYA,EAAEiI,OAC7BI,cAAUzL,EACV5B,QAAS,GACT6M,MAAO,GACPI,MAAO,GACPogB,0BAA0B,EAC1BG,mBAAe5rB,EACf3D,UAAU,EACVyP,UAAU,EACV7C,oBAAgBjJ,EAChBsP,uBAAmBtP,GAGjB2kB,GAAY,GAEZkH,G,YAKF,WAAYzyB,GAAO,kBACf,4BAAMA,IADS,gCA0BE,WAAgC,IAA/BgF,EAA+B,uDAArBumB,GAAW1Z,EAAU,uCACzC5M,EAAgB,EAAKjF,MAArBiF,YACR,OAAOD,EAAQqF,OAAO,SAAAL,GAAC,OACgB,IAAnC6H,EAAM0Y,QAAQtlB,EAAY+E,QA7Bf,0BAiCJ,WAAM,MAIb,EAAKhK,MAFLX,EAFa,EAEbA,UACA4D,EAHa,EAGbA,SAEIgE,EAAU,EAAKmR,MAAfnR,MAEFhH,EAAa,CACfZ,EACAa,KAAOwyB,oBACP,0BAYJ,OATKvQ,YAAQlb,EAAO,CAAC,OACjBhH,EAAW2J,KAAK1J,KAAO+G,OACvBhH,EAAW2J,KAAK,UAGhB3G,GACAhD,EAAW2J,KAAK1J,KAAO+C,UAGpBhD,EAAWG,KAAK,OAvDR,+BA0DC,SAAC2E,EAAKkI,GAKtB,MAAO,CACH4E,OAAOJ,EAHP,EAAKzR,MADLyR,eAIqBxE,GACrB+kB,QAASjtB,EACTgtB,UAAW,EAAKY,kBAChBtzB,UAAWa,KAAO4xB,YAnEP,+BAuEC,SAAC/sB,GAAQ,MAIrB,EAAK/E,MAFLqS,EAFqB,EAErBA,SACAR,EAHqB,EAGrBA,MAGE9H,EAAQ8H,EAAM0Y,QAAQxlB,GACtBqZ,EAAW,KAAIvM,IAEN,IAAX9H,GACAqU,EAASnU,OAAOF,EAAO,GAEvBsI,GACAA,EAAS+L,KApFE,qCAwFO,SAAChF,GAAW,MAI9B,EAAKpZ,MAFLqS,EAF8B,EAE9BA,SACArN,EAH8B,EAG9BA,QAGE4tB,EAAe,EAAKC,mBAAmB7tB,EAASoU,GACtD,EAAKpB,SAAS,CAAE4a,iBAEZvgB,GACAA,EAAS+G,KAlGE,MAKX,EAAKpZ,MAFLgF,EAHW,EAGXA,QACA6M,EAJW,EAIXA,MAGE+gB,EAAe,EAAKC,mBAAmB7tB,EAAS6M,GAPvC,OASf,EAAKuG,MAAQ,CAAEwa,gBATA,E,uEAYOE,GAAU,IAErB1U,EAEP0U,EAFAjhB,MACA7M,EACA8tB,EADA9tB,QAKJ,GAAIoZ,IAFwBre,KAAKC,MAAzB6R,MAEmB,CACvB,IAAM+gB,EAAe7yB,KAAK8yB,mBAAmB7tB,EAASoZ,GACtDre,KAAKiY,SAAS,CAAE4a,oB,+BAgFf,MAoBD7yB,KAAKC,MAjBLiD,GAHC,EAED5D,UAFC,EAGD4D,UACAgC,EAJC,EAIDA,YACAgN,EALC,EAKDA,MACAR,EANC,EAMDA,cAEAiB,GARC,EAODL,SAPC,EAQDK,UACA1N,EATC,EASDA,QACA6M,EAVC,EAUDA,MACAygB,EAXC,EAWDA,gBACAC,EAZC,EAYDA,UACA1iB,EAbC,EAaDA,eACAia,EAdC,EAcDA,cACeiJ,EAfd,EAeDP,cACAH,EAhBC,EAgBDA,yBACAnc,EAjBC,EAiBDA,kBAEGxS,EAnBF,4OAsBGkvB,EAAiB7yB,KAAKqY,MAAtBwa,aAEFI,EAAiB,CACnBlJ,EACA5pB,KAAO4R,KACP,QAGEmhB,EAAmB,CACrBX,EACApyB,KAAO0T,MACP,UAGAmf,GACAE,EAAiBrpB,KAAK1J,KAAOgzB,kBAGjC,IAAMC,EACFd,GACG3f,GACAzP,EACH4uB,GAAWI,GAEf,OACI,yBAAK5yB,UAAWU,KAAKwZ,gBACjB,yBAAKla,UAAWa,KAAOkzB,sBACKxsB,IAAtBsP,EACE,kBAACmd,GAAD,KACIh0B,UAAW4zB,EAAiB7yB,KAAK,KACjC6C,SAAUA,EACVyP,SAAUA,EACVzN,YAAaA,EACbgN,MAAOA,EACPR,cAAeA,EACfY,SAAUtS,KAAKsoB,wBACfrjB,QAASA,EACT6M,MAAOA,GACHnO,IAGR,kBAAC,GAAD,KACIrE,UAAW4zB,EAAiB7yB,KAAK,KACjC6C,SAAUA,EACVyP,SAAUA,EACVzN,YAAaA,EACbgN,MAAOA,EACPR,cAAeA,EACfY,SAAUtS,KAAKsoB,wBACfrjB,QAASA,EACT6M,MAAOA,EACPqE,kBAAmBA,GACfxS,IAGXqvB,GAAiB,kBAACA,EAAD,OAEtB,kBAAC,KAAD,KACI1zB,UAAW2zB,EAAe5yB,KAAK,KAC/ByM,KAAM+lB,EACNpmB,SAAU2mB,EACVrmB,eAAgB/M,KAAKuzB,kBACrBruB,YAAaA,EACb4K,eAAgBA,GACZ0iB,S,GAjMUlyB,IAAMC,e,IAAlCmyB,G,YACiBrzB,I,IADjBqzB,G,eAGoBjuB,IAqMX+S,mBAAkBkb,I,wBC5Q3BjQ,GAAgB,SAAC,GAOjB,IANFvf,EAME,EANFA,SACAyP,EAKE,EALFA,SACA+P,EAIE,EAJFA,mBACAC,EAGE,EAHFA,mBAIMziB,EAAa,CADjB,EADFZ,UAII,kBAGEujB,EAAuB,CACzB,SACA1iB,KAAO+D,OACP,QACA/D,KAAO2iB,OACTziB,KAAK,KAEP,OACI,yBAAKf,UAAWY,EAAWG,KAAK,MAC5B,4BACIf,UAAWujB,EACXrf,KAAK,SACLC,QAASif,EACTjb,MAAM,aACNiO,SAAS,KACTxS,SAAUA,GAAYyP,GAEtB,kBAACpO,EAAA,EAAD,CAAMC,KAAK,gBAEf,4BACIf,QAASkf,EACTrjB,UAAWa,KAAO+D,OAClBV,KAAK,SACLiE,MAAM,kBACNiO,SAAS,KACTxS,SAAUA,GAAYyP,GAEtB,kBAACpO,EAAA,EAAD,CAAMC,KAAK,aAkB3Bie,GAAcpjB,UAAY,CACtBqjB,mBAAoBnjB,KAAUoX,KAAK7W,WACnC6iB,mBAAoBpjB,KAAUoX,KAAK7W,WAEnCoD,SAAU3D,KAAUmX,KACpB/D,SAAUpT,KAAUmX,KACpBpX,UAAWC,KAAUC,QAGzBijB,GAAche,aAAe,CACzBvB,UAAU,EACVyP,UAAU,EACVrT,UAAW,IAGAmjB,U,qPClEf,IAAMpjB,GAAY,CACdC,UAAWC,KAAUC,OACrB0D,SAAU3D,KAAUmX,KACpB/D,SAAUpT,KAAUmX,KACpBxP,MAAO3H,KAAUC,OACjB2H,KAAM5H,KAAUC,OAChB0S,MAAO3S,KAAUC,OACjB8S,SAAU/S,KAAUoX,KACpBvD,UAAW7T,KAAUmX,KACrBvD,iBAAkB5T,KAAUmX,KAC5B5E,MAAOvS,KAAUC,OACjBiI,MAAOlI,KAAUC,OACjBujB,UAAWxjB,KAAUC,QAGnBiF,GAAe,CACjBnF,UAAW,GACX4D,UAAU,EACVyP,UAAU,EACVzL,MAAO,GACPC,KAAM,GACN+K,MAAO,GACPI,SAAU,aACVc,WAAW,EACX2P,UAAW,IACX5P,kBAAkB,EAClBrB,WAAOjL,EACPY,WAAOZ,GAUL2sB,GAAa,SAAC,EAAoBzQ,GAAc,QAAhC0Q,SAAgC,MAA5B,GAA4B,MAAxBvQ,SAAwB,MAApB,GAAoB,EAClD,IAAId,YAAQqR,EAAG,CAAC,EAAG,OAAQrR,YAAQc,EAAG,CAAC,EAAG,KAI1C,gBAAUuQ,GAAV,OAAc1Q,GAAd,OAA0BG,GAA1B,OAA8BH,EAA9B,OAIE2Q,GAAa,SAAC5hB,EAAOiR,GACvB,IAAKjR,EACD,MAAO,GAEX,IAAMuH,EAASvH,EAAMlI,MAAMmZ,GAC3B,MAAO,CACH0Q,EAAGpa,EAAO,GACV6J,EAAG7J,EAAO,KAKZsa,GAAoB,SAAC7hB,EAAOiR,GAC9B,GAAc,KAAVjR,QAA0BjL,IAAViL,EAChB,OAAO,EAFiC,MAI3B4hB,GAAW5hB,EAAOiR,GAA3B0Q,EAJoC,EAIpCA,EAAGvQ,EAJiC,EAIjCA,EAEX,OAAId,YAAQqR,EAAG,CAAC,OAAQrR,YAAQc,EAAG,CAAC,SAI9BuQ,EAtCO,IAsCUA,EArCV,KAsCJvQ,EArCM,IAqCaA,EApCb,KAwCb0Q,G,YAKF,WAAY3zB,GAAO,yBACf,4BAAMA,IADS,0BASJ,WAAM,MAQb,EAAKA,MANLiD,EAFa,EAEbA,SACAyP,EAHa,EAGbA,SACArT,EAJa,EAIbA,UACAwS,EALa,EAKbA,MACA5K,EANa,EAMbA,MACA6b,EAPa,EAObA,UAPa,EAab,EAAK1K,MAFLwb,EAXa,EAWbA,iBACAC,EAZa,EAYbA,mBAGE5zB,EAAa,CACfZ,EACA,aACAa,KAAO4zB,WA6BX,OA1BIF,GAAoBC,KACpB5zB,EAAW2J,KAAK1J,KAAOmR,SACvBpR,EAAW2J,KAAK,kBAGhB3G,IACAhD,EAAW2J,KAAK1J,KAAO+C,UACvBhD,EAAW2J,KAAK,aAGhB8I,IACAzS,EAAW2J,KAAK1J,KAAOwS,UACvBzS,EAAW2J,KAAK,eAGD8pB,GAAkB7hB,EAAOiR,KAExC7iB,EAAW2J,KAAK1J,KAAO4jB,SACvB7jB,EAAW2J,KAAK,YAGfuY,YAAQlb,EAAO,CAAC,OACjBhH,EAAW2J,KAAK1J,KAAO+G,OACvBhH,EAAW2J,KAAK,UAGb3J,EAAWG,KAAK,OAxDR,kCA2DI,WACnB,EAAK4X,SAAS,CAAE4b,kBAAkB,MA5DnB,iCA+DG,WAClB,EAAK5b,SAAS,CAAE4b,kBAAkB,MAhEnB,oCAmEM,WACrB,EAAK5b,SAAS,CAAE6b,oBAAoB,MApErB,mCAuEK,WACpB,EAAK7b,SAAS,CAAE6b,oBAAoB,MAxErB,mCA2EK,SAACL,GACrB,EAAKtW,aAAa,CAAEsW,QA5EL,qCA+EO,SAACvQ,GACvB,EAAK/F,aAAa,CAAE+F,QAhFL,oCAmFM,WACrB,EAAK/F,aAAa,CACdsW,OAAG5sB,EACHqc,OAAGrc,MAtFQ,oCA0FM,WACrB,IAAM6X,EAAO,IAAIJ,KACjB,EAAKnB,aAAa,CACdsW,EAAGpR,YAASvN,OAAO4J,EAAKsV,YAAa,GAAGzd,OAAO,GAC/C2M,EAAGb,YAASvN,OAAO4J,EAAKuV,cAAe,GAAG1d,OAAO,OA9FtC,0BAkGJ,SAAC8N,GAAoB,MAK5B,EAAKpkB,MAHLqS,EAF4B,EAE5BA,SACO2P,EAHqB,EAG5BnQ,MACAiR,EAJ4B,EAI5BA,UAJ4B,E,+UAAA,IAOf2Q,GAAWzR,EAAgBc,GAPZ,GAWzBsB,GAFCoP,EATwB,EASxBA,EAAGvQ,EATqB,EASrBA,EAKL7E,EAAWmV,GAAW,CAAEC,IAAGvQ,KAAKH,GAElC1E,IAAa4D,GACb3P,EAAS+L,KAhHb,EAAKhG,MAAQ,CACTwb,kBAAkB,EAClBC,oBAAoB,GALT,E,sDAuHV,MAYD9zB,KAAKC,MAVLiH,EAFC,EAEDA,MACAC,EAHC,EAGDA,KACA+K,EAJC,EAIDA,MACAkB,EALC,EAKDA,UACAD,EANC,EAMDA,iBACA1L,EAPC,EAODA,MACAvE,EARC,EAQDA,SACA4O,EATC,EASDA,MACAiR,EAVC,EAUDA,UACApQ,EAXC,EAWDA,SAGErT,EAAYU,KAAKwZ,eAdlB,EAqBDka,GAAW5hB,EAAOiR,GArBjB,IAmBD0Q,EAAGS,OAnBF,MAmBc,GAnBd,MAoBDhR,EAAGiR,OApBF,MAoBgB,GApBhB,EAuBL,OACI,yBACI1sB,MAAOA,EACPnI,UAAWA,GAEX,kBAAC,GAAD,CACIA,UAAWa,KAAO+R,MAClBuF,KAAMrE,EACNuE,KAAMzF,IAEV,yBAAK5S,UAAWa,KAAO0T,OACnB,yBAAKvU,UAAWa,KAAO+kB,OACnB,kBAAC,GAAD,CACInD,UAAW,EACXjR,QAAS9Q,KAAKo0B,qBACdzpB,OAAQ3K,KAAKq0B,oBACb/0B,UAAWa,KAAOm0B,KAClBlyB,IA/MX,EAgNWD,IA/MX,GAgNWojB,KA7Mf,EA8Me7S,YA5BI,KA6BJxP,SAAUA,GAAYyP,EACtBb,MAAOoiB,EACP5hB,SAAUtS,KAAKu0B,wBAEnB,yBAAKj1B,UAAWa,KAAO4iB,WAClBA,GAEL,kBAAC,GAAD,CACIhB,UAAW,EACXjR,QAAS9Q,KAAKw0B,uBACd7pB,OAAQ3K,KAAKy0B,sBACbn1B,UAAWa,KAAOm0B,KAClBlyB,IA7NT,EA8NSD,IA7NT,GA8NSojB,KA7Nf,EA8Ne7S,YA3CM,KA4CNxP,SAAUA,GAAYyP,EACtBb,MAAOqiB,EACP7hB,SAAUtS,KAAK00B,2BAGvB,kBAAC,GAAD,CACIp1B,UAAWa,KAAO8lB,cAClB/iB,SAAUA,EACVyP,SAAUA,EACV+P,mBAAoB1iB,KAAKyU,uBACzBkO,mBAAoB3iB,KAAKkmB,0BAGjC,kBAAC,GAAD,CACIzO,KAAMtE,EACNhM,KAAMA,EACND,MAAOA,S,GAxMH5G,IAAMC,e,IAAxBqzB,G,YACiBv0B,I,IADjBu0B,G,eAGoBnvB,IA4MX+S,mBAAkB6O,GAAMuN,K,wBCxRjCv0B,GAAY,CACdC,UAAWC,KAAUC,OACrBsS,MAAOvS,KAAU+mB,MAAM,CACnBqO,UAAWp1B,KAAUC,OACrBo1B,QAASr1B,KAAUC,SAEvB8S,SAAU/S,KAAUoX,MAGlBlS,GAAe,CACjBnF,UAAW,GACXwS,MAAO,GACPQ,SAdS,cAiBPuiB,G,YAmDF,WAAY50B,GAAO,yBACf,4BAAMA,IADS,0BASJ,WAOX,MALmB,CADG,EAAKA,MAAnBX,UAGJ,eAGce,KAAK,OAhBR,qCAmBO,SAACyR,GACvB,OAAQA,GACJ,IAAK,cACD,EAAKmG,SAAS,CACVkP,gBAAgB,IAEpB,MACJ,IAAK,cACD,EAAKlP,SAAS,CACVmP,gBAAgB,IAEpB,MACJ,UAAKvgB,EACD,EAAK5G,MAAMqS,cAASzL,MAhCb,6BAsCD,WACd,EAAKoR,SAAS,CACVmP,gBAAgB,MAxCL,4BA4CF,YAA4B,IAAzBuN,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,QAC3B,EAAK3c,SAAS,CACVmP,gBAAgB,GACjB,WACC,EAAKnnB,MAAMqS,SAAS,CAChBqiB,YACAC,gBAlDO,6BAuDD,WACd,EAAK3c,SAAS,CACVkP,gBAAgB,MAzDL,4BA6DF,YAAc,IAAX2N,EAAW,EAAXA,KAChB,EAAK7c,SAAS,CACVkP,gBAAgB,GACjB,WACC,EAAKlnB,MAAMqS,SAAS,CAChBqiB,UAAWG,EACXF,QAASE,QAnEF,8BAwEA,WAGf,OAF2B,EAAKzc,MAAxB8O,eAOJ,kBAAC,GAAD,CACI7nB,UAAWa,KAAO40B,gBAClBnqB,QAAS,EAAK2c,gBACdtO,QAAS,EAAK+b,eACdvtB,MAAM,gBACNyR,OAAQ2b,EAAWpN,kBAEnB,kBAAC,GAAD,CAAWC,iBAAiB,UAXzB,OA5EI,8BA4FA,WAGf,OAF2B,EAAKrP,MAAxB+O,eAOJ,kBAAC,GAAD,CACI9nB,UAAWa,KAAO40B,gBAClBnqB,QAAS,EAAK+c,gBACd1O,QAAS,EAAKgc,eACdxtB,MAAM,sBACNyR,OAAQ2b,EAAWhN,kBAEnB,kBAAC,GAAD,CAAWH,iBAAiB,cAC5B,kBAAC,GAAD,CAAWA,iBAAiB,aAZzB,OA7FX,EAAKrP,MAAQ,CACT+O,gBAAgB,EAChBD,gBAAgB,GALL,E,sDAiHV,MAKDnnB,KAAKC,MAHL6R,EAFC,EAEDA,MAEGnO,GAJF,EAGD2O,SAHC,6BAOChT,EAAYU,KAAKwZ,eAPlB,EAYDqb,EAAW/M,yBAAyBhW,GAF3BiW,EAVR,EAUD9iB,QACO+iB,EAXN,EAWDlW,MAGEmW,EAAmBjoB,KAAKkoB,iBACxBC,EAAmBnoB,KAAKooB,iBAE9B,OACI,kBAAC,IAAMC,SAAP,KACI,kBAAC,GAAD,KACI/oB,UAAWA,EACXgT,SAAUtS,KAAKsoB,wBACfrjB,QAAS8iB,EACTjW,MAAOkW,GACHrkB,IAER,kBAACskB,EAAD,MACA,kBAACE,EAAD,W,GA/LS7nB,IAAMC,e,IAAzBs0B,G,YACiBx1B,I,IADjBw1B,G,eAGoBpwB,I,IAHpBowB,G,iBAKsB,CACpB,CAAE7vB,IAAK,cAAekN,MAAO,wBAC7B,CAAElN,IAAK,cAAekN,MAAO,yB,IAP/B2iB,G,mBAUwB,CACtBtM,OAAQ,CACJuM,KAAM,CAACtM,Q,IAZbqM,G,mBAiBwB,CACtBtM,OAAQ,CACJoM,UAAW,CAACnM,KACZoM,QAAS,CAACpM,Q,IApBhBqM,G,2BAwBgC7Y,aAAQ,SAAClK,GACvC,IAAM7M,EAAU4vB,GAAWnM,eACnBiM,EAAuB7iB,EAAvB6iB,UAAWC,EAAY9iB,EAAZ8iB,QAEnB,OAAKD,GAAcC,EAIfD,IAAcC,EACP,CACH3vB,QAAS,GAAF,YACAA,GADA,CAEH,CAAED,IAAK,gBAAiBkN,MAAOyiB,KAEnC7iB,MAAO,iBAIR,CACH7M,QAAS,GAAF,YACAA,GADA,CAEH,CAAED,IAAK,gBAAiBkN,MAAO,GAAF,OAAKyiB,EAAL,cAAoBC,MAErD9iB,MAAO,iBAlBA,CAAE7M,UAAS6M,WAAOjL,MAwKtB2Q,mBAAkBqd,ICtM3BK,GAAiB1d,YAAkB2d,IAqBnClwB,GAAoB,CACtB,CAAED,IAAK,IAAKkN,MAAO,WAAYyG,MAAO,WACtC,CAAE3T,IAAK,IAAKkN,MAAO,WAAYyG,MAAO,WACtC,CAAE3T,IAAK,IAAKkN,MAAO,WAAYyG,MAAO,WACtC,CAAE3T,IAAK,IAAKkN,MAAO,WAAYyG,MAAO,WACtC,CAAE3T,IAAK,IAAKkN,MAAO,WAAYyG,MAAO,YAGpCyc,GAAmB,CACrB,CAAEpwB,IAAK,IAAKkN,MAAO,WACnB,CAAElN,IAAK,IAAKkN,MAAO,SACnB,CAAElN,IAAK,IAAKkN,MAAO,SACnB,CAAElN,IAAK,IAAKkN,MAAO,UACnB,CAAElN,IAAK,IAAKkN,MAAO,aACnB,CAAElN,IAAK,IAAKkN,MAAO,UACnB,CAAElN,IAAK,IAAKkN,MAAO,WACnB,CAAElN,IAAK,IAAKkN,MAAO,QACnB,CAAElN,IAAK,IAAKkN,MAAO,UACnB,CAAElN,IAAK,KAAMkN,MAAO,SACpB,CAAElN,IAAK,KAAMkN,MAAO,cACpB,CAAElN,IAAK,KAAMkN,MAAO,QACpB,CAAElN,IAAK,KAAMkN,MAAO,QACpB,CAAElN,IAAK,KAAMkN,MAAO,SACpB,CAAElN,IAAK,KAAMkN,MAAO,SACpB,CAAElN,IAAK,KAAMkN,MAAO,YAGlBmjB,GAAuB,CACzB,CAAErwB,IAAK,IAAKkN,MAAO,aACnB,CAAElN,IAAK,IAAKkN,MAAO,eACnB,CAAElN,IAAK,IAAKkN,MAAO,cACnB,CAAElN,IAAK,IAAKkN,MAAO,gBACnB,CAAElN,IAAK,IAAKkN,MAAO,YACnB,CAAElN,IAAK,IAAKkN,MAAO,WACnB,CAAElN,IAAK,IAAKkN,MAAO,eACnB,CAAElN,IAAK,IAAKkN,MAAO,WACnB,CAAElN,IAAK,IAAKkN,MAAO,WACnB,CAAElN,IAAK,KAAMkN,MAAO,YACpB,CAAElN,IAAK,KAAMkN,MAAO,UACpB,CAAElN,IAAK,KAAMkN,MAAO,QACpB,CAAElN,IAAK,KAAMkN,MAAO,UACpB,CAAElN,IAAK,KAAMkN,MAAO,UACpB,CAAElN,IAAK,KAAMkN,MAAO,UACpB,CAAElN,IAAK,KAAMkN,MAAO,YACpB,CAAElN,IAAK,KAAMkN,MAAO,UACpB,CAAElN,IAAK,KAAMkN,MAAO,WACpB,CAAElN,IAAK,KAAMkN,MAAO,SACpB,CAAElN,IAAK,KAAMkN,MAAO,UACpB,CAAElN,IAAK,KAAMkN,MAAO,WA4TTojB,GAzTmB,CAE9B,CACItwB,IAAK,uBACLyC,MAAO,yBACP8tB,YAAa,oCACbC,UAAWN,GACXj1B,MAAO,CACHiS,MAAO,QACPwV,iBAAkB,cAClBziB,QAASmwB,GACTnjB,WAAW,EACXkE,kBAAmB,GAEvB1I,SAAU,SAEd,CACIzI,IAAK,iBACLyC,MAAO,mBACP8tB,YAAa,8BACbC,UAAWN,GACXj1B,MAAO,CACHiS,MAAO,QACPwV,iBAAkB,cAClBziB,QAASmwB,GACTnjB,WAAW,GAEfxE,SAAU,SAId,CACIzI,IAAK,YACLyC,MAAO,aACP8tB,YAAa,kCACbC,UAAWta,GACXjb,MAAO,CACHiS,MAAO,OACPwV,iBAAkB,aAEtBja,SAAU,UAEd,CACIzI,IAAK,cACLyC,MAAO,eACP8tB,YAAa,6CACbC,UAAW3E,GACX5wB,MAAO,CACHiS,MAAO,cACPwV,iBAAkB,cAClBvU,kBAAkB,GAEtB1F,SAAU,UAEd,CACIzI,IAAK,WACLyC,MAAO,YACP8tB,YAAa,iCACbC,UAAWC,GACXx1B,MAAO,CACHiS,MAAO,UACPwV,iBAAkB,WAClBgO,KAAM,GAEVjoB,SAAU,UAEd,CACIzI,IAAK,oBACLyC,MAAO,sBACP8tB,YAAa,4DACbC,UAAWjM,GACXtpB,MAAO,CACHiS,MAAO,UACPwV,iBAAkB,oBAClBgO,KAAM,GAEVjoB,SAAU,UAEd,CACIzI,IAAK,cACLyC,MAAO,eACP8tB,YAAa,yBACbC,UAAWG,GACX11B,MAAO,CACHiS,MAAO,MACPwV,iBAAkB,eAEtBja,SAAU,UAEd,CACIzI,IAAK,WACLyC,MAAO,WACP8tB,YAAa,kCACbC,UAAWxe,GACX/W,MAAO,CACHiS,MAAO,wCACPwV,iBAAkB,YAEtBja,SAAU,UAEd,CACIzI,IAAK,aACLyC,MAAO,cACP8tB,YAAa,yEACbC,UAAW3d,GACX5X,MAAO,CACHiS,MAAO,QACPwV,iBAAkB,cAEtBja,SAAU,UAId,CACIzI,IAAK,YACLyC,MAAO,aACP8tB,YAAa,qEACbC,UAAW9R,GACXzjB,MAAO,CACHiS,MAAO,iBACPwV,iBAAkB,aAEtBja,SAAU,QAEd,CACIzI,IAAK,aACLyC,MAAO,cACP8tB,YAAa,oEACbC,UAAWtO,GACXjnB,MAAO,CACHiS,MAAO,aACPwV,iBAAkB,cAEtBja,SAAU,QAEd,CACIzI,IAAK,aACLyC,MAAO,cACP8tB,YAAa,oCACbC,UAAWlU,GACXrhB,MAAO,CACHiS,MAAO,WACPwV,iBAAkB,cAEtBja,SAAU,QAId,CACIzI,IAAK,YACLyC,MAAO,aACP8tB,YAAa,sBACbC,UAAW5B,GACX3zB,MAAO,CACHiS,MAAO,gBACPwV,iBAAkB,aAEtBja,SAAU,QAEd,CACIzI,IAAK,aACLyC,MAAO,cACP8tB,YAAa,+CACbC,UAAWX,GACX50B,MAAO,CACHiS,MAAO,YACPwV,iBAAkB,cAEtBja,SAAU,QAKd,CACIzI,IAAK,aACLyC,MAAO,cACP8tB,YAAa,+CACbC,UAAWjF,GACXtwB,MAAO,CACHiS,MAAO,WACPwV,iBAAkB,aAClBziB,YAEJwI,SAAU,aAEd,CACIzI,IAAK,aACLyC,MAAO,cACP8tB,YAAa,mDACbC,UAAWxH,GACX/tB,MAAO,CACHynB,iBAAkB,aAClBljB,KAAM,QAENS,QAASmwB,GAAO7e,MAAM,EAAG,IAE7B9I,SAAU,aAEd,CACIzI,IAAK,eACLyC,MAAO,gBACP8tB,YAAa,qDACbC,UAAWhE,GACXvxB,MAAO,CACHiS,MAAO,QACPwV,iBAAkB,eAClBziB,QAASmwB,GAAO7e,MAAM,EAAG,IAE7B9I,SAAU,aAEd,CACIzI,IAAK,cACLyC,MAAO,eACP8tB,YAAa,4CACbC,UAAWtf,GACXjW,MAAO,CACHiS,MAAO,QACPwV,iBAAkB,cAClBziB,QAASmwB,IAEb3nB,SAAU,aAEd,CACIzI,IAAK,oBACLyC,MAAO,sBACP8tB,YAAa,kEACbC,UAAWpE,GACXnxB,MAAO,CACHiS,MAAO,QACPwV,iBAAkB,oBAClBziB,QAASmwB,IAEb3nB,SAAU,aAId,CACIzI,IAAK,gBACLyC,MAAO,iBACP8tB,YAAa,+CACbC,UAAWI,GACX31B,MAAO,CACHiS,MAAO,aACPwV,iBAAkB,gBAClBziB,QAASowB,GAAW9e,MAAM,EAAG,IAEjC9I,SAAU,mBAEd,CACIzI,IAAK,mBACLyC,MAAO,qBACP8tB,YAAa,qDACbC,UAAWlC,GACXrzB,MAAO,CACHiS,MAAO,aACPwV,iBAAkB,mBAClBziB,QAASowB,IAEb5nB,SAAU,mBAEd,CACIzI,IAAK,yBACLyC,MAAO,4BACP8tB,YAAa,wEACbC,UAAWtE,GACXjxB,MAAO,CACHiS,MAAO,aACPwV,iBAAkB,yBAClBziB,QAASowB,IAEb5nB,SAAU,mBAEd,CACIzI,IAAK,sBACLyC,MAAO,yBACP8tB,YAAa,uFACbC,UAAW9C,GACXzyB,MAAO,CACHiS,MAAO,aACPwV,iBAAkB,sBAClBziB,QAASowB,IAEb5nB,SAAU,mBAId,CACIzI,IAAK,cACLyC,MAAO,eACP8tB,YAAa,wCACbC,UAAWlH,GACXruB,MAAO,CACHiS,MAAO,QACPwV,iBAAkB,cAClBziB,YAEJwI,SAAU,QAGd,CACIzI,IAAK,eACLyC,MAAO,iBACP8tB,YAAa,sBACbC,UAAWtG,GACXjvB,MAAO,CACHynB,iBAAkB,eAClBjoB,SAAU,iBAEdgO,SAAU,S,wBC1YGooB,G,yIACD,MAQR71B,KAAKC,MANLX,EAFQ,EAERA,UACWw2B,EAHH,EAGRN,UACA/tB,EAJQ,EAIRA,MACA8tB,EALQ,EAKRA,YACAQ,EANQ,EAMRA,MACAC,EAPQ,EAORA,eAGJ,OACI,yBAAK12B,UAAW2E,YAAI9D,KAAO81B,aAAc32B,IACrC,yBAAKA,UAAWa,KAAOS,MACnB,4BAAQtB,UAAWa,KAAO4f,QACtB,wBAAIzgB,UAAWa,KAAO+1B,SAChBzuB,GAEN,yBAAKnI,UAAWa,KAAOo1B,aACjBA,IAGV,yBAAKj2B,UAAWa,KAAO+P,SACnB,kBAAC4lB,EACOE,GAER,yBAAK12B,UAAWa,KAAO41B,OACjBA,KAId,yBAAKz2B,UAAWa,KAAOa,OACnB,4BAAQ1B,UAAWa,KAAO4f,QACtB,wBAAIzgB,UAAWa,KAAO+1B,SAAtB,qB,GAjCkB51B,IAAMC,e,mECiD3B41B,G,YAejB,WAAmBl2B,GAAc,yBAC7B,4BAAMA,IADuB,qHAmEL,SAACsZ,GACzB,EAAKtB,SAAS,CAAEsB,kBAjEhB,EAAKlB,MAAQ,CACTkB,YAAa,CACTqX,UAAW,cACXE,YAAa,OACb3H,SAAU,yPACViN,kBAAmB,+PACnBzI,YAAa,GACbvD,cAAe,CAAC,IAAK,KACrBgE,WAAY,IACZqD,aAAc,IACdjB,WAAY,IACZlU,YAAa,IACb+Z,kBAAmB,IACnBlK,iBAAkB,CAAC,IAAK,KACxBmK,uBAAwB,CAAC,IAAK,KAC9B3D,oBAAqB,CAAC,IAAK,OAInC,EAAK4D,YAAc,CACfhO,OAAQ2C,YAAUoK,GAAW,SAAArrB,GAAC,OAAIA,EAAEjF,KAAK,iBAAM,MAGnD,EAAKwxB,MAAQtL,YACToK,GACA,SAAArrB,GAAC,OAAIA,EAAEjF,KACP,SAAAiF,GAAC,MAAK,CACFurB,UAAWK,GACX9oB,eAAgB,iBAAO,CACnBtF,MAAOwC,EAAExC,MACT+tB,UAAWvrB,EAAEurB,UACbD,YAAatrB,EAAEsrB,YACfS,eAAgB/rB,EAAEhK,MAClBX,UAAWa,KAAO81B,kBAK9B,EAAKQ,KAAOvL,YACRoK,GACA,SAAArrB,GAAC,OAAIA,EAAEjF,KACP,SAAAiF,GAAC,OAAIA,EAAExC,QA5CkB,E,sDAuEjB,IACJnI,EAAcU,KAAKC,MAAnBX,UAEJia,EACAvZ,KAAKqY,MADLkB,YAGJ,OACI,yBAAKja,UAAW2E,YAAI3E,EAAWa,KAAOu2B,SAelC,4BAAQp3B,UAAWa,KAAO4f,QACtB,wBAAIzgB,UAAWa,KAAO+1B,SAAtB,qBAIJ,yBAAK52B,UAAWa,KAAO+P,SACnB,kBAACymB,EAAA,EAAD,CACIr3B,UAAWa,KAAOs2B,KAClBA,KAAMz2B,KAAKy2B,KACXG,SAAO,EACPtqB,iBAAkB6pB,EAAOU,sBACzBhqB,oBAAqBspB,EAAOW,yBAC5BvqB,gBAAiB4pB,EAAOY,uBAE5B,kBAAC,IAAD,CACIz3B,UAAWa,KAAO62B,MAClBllB,MAAOyH,EACPL,OAAQlZ,KAAKu2B,YACbjkB,SAAUtS,KAAK0Z,mBAEf,kBAACud,EAAA,EAAD,CACIT,MAAOx2B,KAAKw2B,MACZI,SAAO,W,GAlICt2B,IAAMC,e,IAArB41B,G,wBACsB,SAAC1f,GACpC,IAAMygB,EAAU5B,GAAUzgB,KAAK,SAAAhB,GAAK,OAAIA,EAAM7O,MAAQyR,IACtD,GAAKygB,EAGL,OAAOA,EAAQzpB,W,IANF0oB,G,2BASyB,SAAC1oB,GAAD,MAAuB,CAC7DhO,SAAUgO,K,IAVG0oB,G,uBAaqB,kBAAM,K,qBC3EhDh3B,EAAOC,QAAU,CAAC,OAAS,uCAAuC,QAAU,wCAAwC,OAAS,yC,qBCA7HD,EAAOC,QAAU,CAAC,aAAa,2CAA2C,UAAY,2CAA2C,MAAQ,sCAAsC,MAAQ,sCAAsC,KAAO,oCAAoC,UAAY,yCAAyC,iBAAiB,8CAA8C,cAAgB,8CAA8C,SAAW,yCAAyC,QAAU,wCAAwC,QAAU,wCAAwC,MAAQ,sCAAsC,SAAW,yCAAyC,MAAQ,sCAAsC,KAAO,uC,qBCAzuBD,EAAOC,QAAU,CAAC,iBAAiB,+CAA+C,cAAgB,+CAA+C,KAAO,qCAAqC,gBAAgB,4CAA4C,aAAe,4CAA4C,KAAO,uC,qBCA3TD,EAAOC,QAAU,CAAC,cAAc,2CAA2C,WAAa,2CAA2C,MAAQ,sCAAsC,YAAY,0CAA0C,SAAW,0CAA0C,MAAQ,sCAAsC,SAAW,2C,qBCArVD,EAAOC,QAAU,CAAC,qBAAqB,mDAAmD,iBAAmB,mDAAmD,oBAAoB,iDAAiD,gBAAkB,iDAAiD,MAAQ,sCAAsC,QAAU,wCAAwC,eAAe,6CAA6C,YAAc,6CAA6C,oBAAoB,kDAAkD,gBAAkB,kDAAkD,SAAW,yCAAyC,OAAS,uCAAuC,iBAAiB,8CAA8C,aAAe,8CAA8C,oBAAoB,kDAAkD,gBAAkB,kDAAkD,oBAAoB,kDAAkD,iBAAmB,kDAAkD,yBAAyB,uDAAuD,oBAAsB,uDAAuD,eAAe,6CAA6C,YAAc,6CAA6C,MAAQ,sC,qBCA15CD,EAAOC,QAAU,CAAC,OAAS,yC,qBCA3BD,EAAOC,QAAU,CAAC,eAAe,6CAA6C,YAAc,6CAA6C,KAAO,qCAAqC,SAAW,0C,qBCAhMD,EAAOC,QAAU,CAAC,wBAAwB,qDAAqD,oBAAsB,qDAAqD,YAAY,0CAA0C,SAAW,0CAA0C,iBAAiB,8CAA8C,cAAgB,gD,uBCApWD,EAAOC,QAAU,CAAC,OAAS,uCAAuC,QAAU,wCAAwC,OAAS,yC,qBCA7HD,EAAOC,QAAU,CAAC,aAAa,2CAA2C,UAAY,2CAA2C,OAAS,sCAAsC,KAAO,oCAAoC,MAAQ,qCAAqC,MAAQ,qCAAqC,KAAO,qCAAqC,MAAQ,sCAAsC,KAAO,oCAAoC,IAAM,oCAAoC,YAAc,2CAA2C,SAAW,2C,uBCAxiBD,EAAOC,QAAU,CAAC,QAAU,wCAAwC,MAAQ,wC,qBCA5ED,EAAOC,QAAU,CAAC,QAAU,wCAAwC,KAAO,sC,qBCA3ED,EAAOC,QAAU,CAAC,gBAAgB,8CAA8C,aAAe,gD,qBCA/FD,EAAOC,QAAU,CAAC,aAAa,2CAA2C,UAAY,2CAA2C,MAAQ,sCAAsC,MAAQ,sCAAsC,SAAW,2C,qBCAxOD,EAAOC,QAAU,CAAC,eAAe,6CAA6C,YAAc,6CAA6C,oBAAoB,kDAAkD,gBAAkB,kDAAkD,MAAQ,sCAAsC,QAAU,wCAAwC,eAAe,6CAA6C,YAAc,6CAA6C,kBAAkB,gDAAgD,eAAiB,gDAAgD,SAAW,wCAAwC,eAAe,6CAA6C,YAAc,6CAA6C,iBAAiB,+CAA+C,aAAe,+CAA+C,MAAQ,sCAAsC,oBAAoB,kDAAkD,gBAAkB,kDAAkD,OAAS,yC,qBCAtlCD,EAAOC,QAAU,CAAC,OAAS,uCAAuC,QAAU,0C,qBCA5ED,EAAOC,QAAU,CAAC,oBAAoB,kDAAkD,gBAAkB,oD,qBCA1GD,EAAOC,QAAU,CAAC,SAAW,2C,qBCA7BD,EAAOC,QAAU,CAAC,uBAAuB,oDAAoD,mBAAqB,oDAAoD,iBAAiB,8CAA8C,cAAgB,8CAA8C,QAAU,wCAAwC,MAAQ,qCAAqC,SAAW,yCAAyC,YAAY,0CAA0C,SAAW,0CAA0C,KAAO,uC,qBCAxiBD,EAAOC,QAAU,CAAC,cAAc,4CAA4C,WAAa,4CAA4C,OAAS,uCAAuC,KAAO,oCAAoC,MAAQ,sCAAsC,MAAQ,qCAAqC,MAAQ,sCAAsC,KAAO,qCAAqC,SAAW,2C,qBCAhaD,EAAOC,QAAU,CAAC,OAAS,uCAAuC,OAAS,uCAAuC,QAAU,uCAAuC,KAAO,qCAAqC,MAAQ,sCAAsC,gBAAgB,8CAA8C,aAAe,gD,+QCKpUC,EAAY,CACdC,UAAWC,IAAUC,OACrB23B,iBAAkB53B,IAAUC,OAC5BoI,eAAgBrI,IAAUK,QAC1B6H,MAAOlI,IAAUC,OAAOM,YAGtB2E,EAAe,CACjBnF,eAAWuH,EACXswB,sBAAkBtwB,EAClBe,oBAAgBf,GAGCuwB,E,yIAKR,MAMDp3B,KAAKC,MAJLX,EAFC,EAEDA,UACAsI,EAHC,EAGDA,eACAH,EAJC,EAIDA,MACA0vB,EALC,EAKDA,iBAGJ,OACI,4BAAQ73B,UAAW2E,YAAI,eAAgB3E,EAAWa,IAAO4f,SACrD,wBAAIzgB,UAAW2E,YAAI,uBAAwB9D,IAAO+1B,QAASiB,IACrD1vB,GAEJG,O,GAlBkBtH,IAAMC,e,IAArB62B,E,YACE/3B,G,IADF+3B,E,eAGK3yB,I,uBCrB1BtF,EAAOC,QAAU,CAAC,OAAS,uCAAuC,QAAU,0C,qBCA5ED,EAAOC,QAAU,CAAC,eAAe,4CAA4C,YAAc,4CAA4C,oBAAoB,iDAAiD,gBAAkB,iDAAiD,MAAQ,qCAAqC,QAAU,wCAAwC,eAAe,6CAA6C,YAAc,6CAA6C,SAAW,yCAAyC,eAAe,4CAA4C,YAAc,4CAA4C,iBAAiB,+CAA+C,aAAe,+CAA+C,MAAQ,qCAAqC,oBAAoB,kDAAkD,gBAAkB,kDAAkD,OAAS,wC,iVCQt8Bi4B,EAAa,GAIbh4B,EAAY,CACdI,SAAUF,IAAUG,UAAU,CAC1BH,IAAUI,QAAQJ,IAAUK,SAC5BL,IAAUK,UACXE,WACHR,UAAWC,IAAUC,OACrBkL,cAAenL,IAAUmX,KACzB4gB,oBAAqB/3B,IAAUmX,KAC/B9L,QAASrL,IAAUoX,MAGjBlS,EAAe,CACjBnF,UAAW,GACXoL,eAAe,EACf4sB,qBAAqB,EACrB1sB,QAjBS,cAqBQ6O,E,YAKjB,WAAYxZ,GAAO,yBACf,4BAAMA,IADS,gCAeE,SAAC8D,GAAU,MAIxB,EAAK9D,MAFLq3B,EAFwB,EAExBA,oBACA1sB,EAHwB,EAGxBA,QAGa2sB,EAAY,EAAKC,WAA1BpsB,QAEJksB,IAAwBC,EAAQzrB,SAAS/H,EAAM8H,SAC/CjB,EAAQ,CAAE6sB,cAAc,MAxBb,8BA4BA,SAAC1zB,GAAU,MAItB,EAAK9D,MAFLyK,EAFsB,EAEtBA,cACAE,EAHsB,EAGtBA,QAGaO,EAAc,EAAKqsB,WAA5BpsB,QACYD,GAA6C,SAAhCA,EAAUhC,QAAQC,WAGhCsB,GAAiB3G,EAAMqC,UAAYixB,GAClDzsB,EAAQ,CAAEqB,QAAQ,MArCtB,EAAKurB,WAAal3B,IAAM8a,YAFT,E,iEAMflT,SAASO,iBAAiB,UAAWzI,KAAKgM,kBAC1C9D,SAASO,iBAAiB,YAAazI,KAAK03B,sB,6CAI5CxvB,SAASQ,oBAAoB,UAAW1I,KAAKgM,kBAC7C9D,SAASQ,oBAAoB,YAAa1I,KAAK03B,sB,+BA+B1C,MAID13B,KAAKC,MAFLR,EAFC,EAEDA,SACWwD,EAHV,EAGD3D,UAGEA,EAAY2E,YACdhB,EACA9C,IAAO8I,MACP,SAGJ,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,yBACIlC,IAAK/G,KAAKw3B,WACVl4B,UAAWA,GAETG,U,GApEKa,IAAMC,e,IAApBkZ,E,YACEpa,G,IADFoa,E,eAGKhV,I,uBClC1BtF,EAAOC,QAAU,CAAC,QAAU,uCAAuC,MAAQ,uC,qBCA3ED,EAAOC,QAAU,CAAC,OAAS,uCAAuC,MAAQ,uC,6QCIpEC,EAAY,CAIdI,SAAUF,IAAUG,UAAU,CAC1BH,IAAUI,QAAQJ,IAAUM,MAC5BN,IAAUM,OAGdP,UAAWC,IAAUC,QASJm4B,E,yIAKR,MAID33B,KAAKC,MAFLR,EAFC,EAEDA,SACAH,EAHC,EAGDA,UAGEY,EAAa,CACf,aACAC,IAAOgI,KACP7I,GAEJ,OACI,yBAAKA,UAAWY,EAAWG,KAAK,MAC1BZ,O,GAlBgBa,IAAMC,e,IAAnBo3B,E,YACEt4B,G,IADFs4B,E,eANA,CACjBr4B,UAAW,GACXG,SAAU,Q,qBClBdN,EAAOC,QAAU,CAAC,oBAAoB,kDAAkD,gBAAkB,kDAAkD,oBAAoB,kDAAkD,gBAAkB,kDAAkD,MAAQ,sCAAsC,QAAU,wCAAwC,eAAe,6CAA6C,YAAc,6CAA6C,kBAAkB,gDAAgD,eAAiB,gDAAgD,QAAU,wCAAwC,SAAW,yCAAyC,eAAe,6CAA6C,YAAc,6CAA6C,iBAAiB,+CAA+C,aAAe,+CAA+C,MAAQ,sCAAsC,oBAAoB,iDAAiD,gBAAkB,iDAAiD,OAAS","file":"js/4.s/chunkhash].js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"file-input-wrapper\":\"styles_file-input-wrapper_ZgOW_-Ybpa2bR-vAfZug-\",\"fileInputWrapper\":\"styles_file-input-wrapper_ZgOW_-Ybpa2bR-vAfZug-\",\"label\":\"styles_label_m2vUa_CJKucEPZjfCLet-\",\"input\":\"styles_input_2a2h-jBCKmNI86IYk7weHC\",\"status\":\"styles_status_1cyO8qxlEN-pTW_ta0JhQt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input-hint-and-error\":\"styles_input-hint-and-error_kCrReIRdmdTnlahVU53Rh\",\"inputHintAndError\":\"styles_input-hint-and-error_kCrReIRdmdTnlahVU53Rh\",\"input-hint\":\"styles_input-hint_26w0iZyIFsaTcTRZ47fwo4\",\"inputHint\":\"styles_input-hint_26w0iZyIFsaTcTRZ47fwo4\",\"input-error\":\"styles_input-error_3lAMyK97W2P5JRp1IlSfje\",\"inputError\":\"styles_input-error_3lAMyK97W2P5JRp1IlSfje\",\"empty\":\"styles_empty_rFflQYwMflCS-_8_sgac_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"styles_button_3-wTLiArDeE7FgGl0mAnDg\",\"clear\":\"styles_clear_2_oD_Dxz-HAJaXnUCrVaDF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"raw-input\":\"styles_raw-input_1sMuFPq5hjhkMkzgPkiaRe\",\"rawInput\":\"styles_raw-input_1sMuFPq5hjhkMkzgPkiaRe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list-selection\":\"styles_list-selection_2alYshyZHzILhBxplw-Pmv\",\"listSelection\":\"styles_list-selection_2alYshyZHzILhBxplw-Pmv\",\"options\":\"styles_options_1hBg1mRW-swCWsYh4K61S-\",\"item\":\"styles_item_r9ntw7gkU31NExe-FhLRE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"styles_button_13vj7SIAdddSp_i708sSFo\",\"pending-icon\":\"styles_pending-icon_29yt-9xiiI6p5dzot9OiI7\",\"pendingIcon\":\"styles_pending-icon_29yt-9xiiI6p5dzot9OiI7\",\"spin\":\"styles_spin_2DpCirEk3HtYoN68741fiJ\",\"transparent\":\"styles_transparent_hMsdpwZF9rvAz8bkmu6oO\",\"button-default\":\"styles_button-default_20iD5NYiKahPYsBspUS75z\",\"buttonDefault\":\"styles_button-default_20iD5NYiKahPYsBspUS75z\",\"button-accent\":\"styles_button-accent_GS30RZaDs0qZVBvsE-vOB\",\"buttonAccent\":\"styles_button-accent_GS30RZaDs0qZVBvsE-vOB\",\"button-primary\":\"styles_button-primary_34ohipVVmo2VguNr6Do0dC\",\"buttonPrimary\":\"styles_button-primary_34ohipVVmo2VguNr6Do0dC\",\"button-danger\":\"styles_button-danger_2sd_lefKXXgExhORdzKmse\",\"buttonDanger\":\"styles_button-danger_2sd_lefKXXgExhORdzKmse\",\"button-success\":\"styles_button-success_3zW-btrGh8dxxEwthhFWYT\",\"buttonSuccess\":\"styles_button-success_3zW-btrGh8dxxEwthhFWYT\",\"button-warning\":\"styles_button-warning_76QTRrc8N-hDrULq7sA23\",\"buttonWarning\":\"styles_button-warning_76QTRrc8N-hDrULq7sA23\",\"with-icon-and-children\":\"styles_with-icon-and-children_3zF87PhpmoY8seionnfexP\",\"withIconAndChildren\":\"styles_with-icon-and-children_3zF87PhpmoY8seionnfexP\",\"icon\":\"styles_icon_26kq0QsdNVd2WwDrfqc5fq\",\"small-horizontal-padding\":\"styles_small-horizontal-padding_1sL_y9Z3bfTLKXZ3URJbmE\",\"smallHorizontalPadding\":\"styles_small-horizontal-padding_1sL_y9Z3bfTLKXZ3URJbmE\",\"small-vertical-padding\":\"styles_small-vertical-padding_1QG-7UCtdloUwtEVkEmu8Z\",\"smallVerticalPadding\":\"styles_small-vertical-padding_1QG-7UCtdloUwtEVkEmu8Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"multi-select-input\":\"styles_multi-select-input_Zc8RDCV8FJPRtnsAAJs5U\",\"multiSelectInput\":\"styles_multi-select-input_Zc8RDCV8FJPRtnsAAJs5U\",\"input-and-actions\":\"styles_input-and-actions_1Q34vqBbtmYBVFKvivD77j\",\"inputAndActions\":\"styles_input-and-actions_1Q34vqBbtmYBVFKvivD77j\",\"input\":\"styles_input_2z20_cTN__Rp0ZH4pzonIB\",\"actions\":\"styles_actions_3W2-zhmGL2obU5oadPDQJr\",\"clear-button\":\"styles_clear-button_1iymlhFqBP89TXJFY_w9iR\",\"clearButton\":\"styles_clear-button_1iymlhFqBP89TXJFY_w9iR\",\"select-all-button\":\"styles_select-all-button_1sGHsbAYu2wC5tZBTDwhEB\",\"selectAllButton\":\"styles_select-all-button_1sGHsbAYu2wC5tZBTDwhEB\",\"dropdown-button\":\"styles_dropdown-button_asW7vtoajAGkOEzfB4zRh\",\"dropdownButton\":\"styles_dropdown-button_asW7vtoajAGkOEzfB4zRh\",\"disabled\":\"styles_disabled_17S0AdqovrEyuenuK03yDV\",\"filled\":\"styles_filled_2CrCKoD0RCcA8hKMaks2uL\",\"input-in-focus\":\"styles_input-in-focus_19BALNwiqPXHh3nNrr7Lg6\",\"inputInFocus\":\"styles_input-in-focus_19BALNwiqPXHh3nNrr7Lg6\",\"hide-clear-button\":\"styles_hide-clear-button_2nRMBxJeUEY2piY_hzWUJJ\",\"hideClearButton\":\"styles_hide-clear-button_2nRMBxJeUEY2piY_hzWUJJ\",\"completely-filled\":\"styles_completely-filled_3Qxk6jOhkagETHn76j9sPi\",\"completelyFilled\":\"styles_completely-filled_3Qxk6jOhkagETHn76j9sPi\",\"hide-select-all-button\":\"styles_hide-select-all-button_3_D0IRk74pWvKkcp_oakYV\",\"hideSelectAllButton\":\"styles_hide-select-all-button_3_D0IRk74pWvKkcp_oakYV\",\"show-options\":\"styles_show-options_1o14FRsFEWwsXwO5Sw_iSv\",\"showOptions\":\"styles_show-options_1o14FRsFEWwsXwO5Sw_iSv\",\"error\":\"styles_error_2CV5ap0rvwyED4_1I5OvzB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list-view\":\"styles_list-view_3OafS0zHUXc4pLk1uux2j6\",\"listView\":\"styles_list-view_3OafS0zHUXc4pLk1uux2j6\",\"list-view-empty\":\"styles_list-view-empty_3GUh3PQeGNIm2JCOt4jQ2_\",\"listViewEmpty\":\"styles_list-view-empty_3GUh3PQeGNIm2JCOt4jQ2_\",\"empty\":\"styles_empty_qQunlkvt202Dy1H5yRm8k\",\"pending\":\"styles_pending_157k6mFoj9tXelrZj61_VB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text-area\":\"styles_text-area_2JuYY9p9MB-adwopdnj5xc\",\"textArea\":\"styles_text-area_2JuYY9p9MB-adwopdnj5xc\",\"input\":\"styles_input_1__apEZ1A6o4k4DVvPXmPs\",\"focused\":\"styles_focused_2I9k67Sxbm6xvVkZd8S5Ze\",\"label\":\"styles_label_vcsMn1DtgbczZpoBbdjDv\",\"error\":\"styles_error_1YJfxKxRBgZLi9TSNt46SF\",\"required\":\"styles_required_2MOi3wqC88DH776ISSlFVW\",\"disabled\":\"styles_disabled_3P5wOrZlcwpMg5WF5t9CVb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"date-input\":\"styles_date-input_2H7F0TQUvqXa_HhIf8o1aa\",\"dateInput\":\"styles_date-input_2H7F0TQUvqXa_HhIf8o1aa\",\"disabled\":\"styles_disabled__8P4z99HVg3nQCrn_Brg5\",\"input\":\"styles_input_3o6WwaVXWoqAxq47RaG_hC\",\"date-picker-container\":\"styles_date-picker-container_2gCyBK_hrzLr_poIkXv2E-\",\"datePickerContainer\":\"styles_date-picker-container_2gCyBK_hrzLr_poIkXv2E-\",\"units\":\"styles_units_VGhzqYsGN8l3ZAXFd2CKM\",\"day-unit\":\"styles_day-unit_2UQ9yED6tdG3tE8pAHAu72\",\"dayUnit\":\"styles_day-unit_2UQ9yED6tdG3tE8pAHAu72\",\"month-unit\":\"styles_month-unit_1Bv8MDMng8PQlXl5x46-Id\",\"monthUnit\":\"styles_month-unit_1Bv8MDMng8PQlXl5x46-Id\",\"year-unit\":\"styles_year-unit_337Xp2QLR1dOfXjcSsczHR\",\"yearUnit\":\"styles_year-unit_337Xp2QLR1dOfXjcSsczHR\",\"action-buttons\":\"styles_action-buttons_oHDqouP7lhHfh4RlhjlAK\",\"actionButtons\":\"styles_action-buttons_oHDqouP7lhHfh4RlhjlAK\",\"focused\":\"styles_focused_i1N1DM0b3vi2uLavs2tU6\",\"invalid\":\"styles_invalid_3SXzfA6BbRUYU0RhzR2T-o\",\"error\":\"styles_error_3L0mTbqLae9Q5PcgtsRRqR\",\"readOnly\":\"styles_readOnly_37zbcgpKF1I37BEEhrRkb5\",\"label\":\"styles_label_WnB5GOj7oTUbh8JbCCDXA\",\"spin\":\"styles_spin_1sCTXWheEDy19M1IzqcuCO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"floating-container\":\"styles_floating-container_1u9DsqSkKlKErW84QXXo42\",\"floatingContainer\":\"styles_floating-container_1u9DsqSkKlKErW84QXXo42\",\"spin\":\"styles_spin_35MwU0b27zWJCx-17CzCL-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"number-input\":\"styles_number-input_ek39K8MroOPWNM69HqhpQ\",\"numberInput\":\"styles_number-input_ek39K8MroOPWNM69HqhpQ\",\"input\":\"styles_input_27WueZiWIAwQXuOlKCegCU\",\"focused\":\"styles_focused_1y8gOfVfxBvhH_dQedH_8M\",\"label\":\"styles_label_3PUBAJIL3sYqmwW74q_9D0\",\"error\":\"styles_error_10izC4bd8TXMpL8SxekG_m\",\"required\":\"styles_required_2yNgJnBWoyKtpuE617zNg8\",\"disabled\":\"styles_disabled_39IbWPVjVfG-UONiGzjf6i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input-hint-and-error\":\"styles_input-hint-and-error_2huNJ6pKs5Blz8tXgSy_Lt\",\"inputHintAndError\":\"styles_input-hint-and-error_2huNJ6pKs5Blz8tXgSy_Lt\",\"input-hint\":\"styles_input-hint_1Rz2Eg2OspB-K2H0pDe1Ic\",\"inputHint\":\"styles_input-hint_1Rz2Eg2OspB-K2H0pDe1Ic\",\"input-error\":\"styles_input-error_2zaUfTahIgMJef8wOPe51k\",\"inputError\":\"styles_input-error_2zaUfTahIgMJef8wOPe51k\",\"empty\":\"styles_empty_2zLUGskG6LKT6HTW5kcprT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"styles_message_3gutVAEeZqOacg-7dt6c3W\",\"spin\":\"styles_spin_1IzagXORca5NV3c4r2wFMV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"month-picker\":\"styles_month-picker_6nzV9sTWHFz1_RJf4zco1\",\"monthPicker\":\"styles_month-picker_6nzV9sTWHFz1_RJf4zco1\",\"header\":\"styles_header_2ni5OrZsTDoL93m4ic0af1\",\"left\":\"styles_left_1et0kTJKxzwXJQ3pgb9J30\",\"right\":\"styles_right_-kTeULqBnDnS2eih1uwex\",\"year\":\"styles_year_ChRRnvA40UaCuMIyn6V_Q\",\"months\":\"styles_months_3Qco0XjK7RdeXBhd5KqSoQ\",\"month\":\"styles_month_2W-5xaReKPumYnkcSUMLIX\",\"selected\":\"styles_selected_1VDNl2AFZlpF0r4PkFSgEy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select-input-with-list\":\"styles_select-input-with-list_o_TbQWmsyqawqD8zJihYM\",\"selectInputWithList\":\"styles_select-input-with-list_o_TbQWmsyqawqD8zJihYM\",\"header-container\":\"styles_header-container_HN54SDGh1_G5icucpgwni\",\"headerContainer\":\"styles_header-container_HN54SDGh1_G5icucpgwni\",\"input\":\"styles_input_2BW-f_t3bGBvv3AhtdeWno\",\"list\":\"styles_list_uaBN9vUaIpgVTwsOPhReV\",\"list-item\":\"styles_list-item_oW1yieZaVq_ZEaw36opqs\",\"listItem\":\"styles_list-item_oW1yieZaVq_ZEaw36opqs\",\"error\":\"styles_error_2-QisYW_Eg3wyadv8faTHf\",\"disabled\":\"styles_disabled_A9BL5gVxdZk1CuUDOc3EK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input-details\":\"styles_input-details_3oF-Vqm7EtMaAkgp90qdSp\",\"inputDetails\":\"styles_input-details_3oF-Vqm7EtMaAkgp90qdSp\",\"left\":\"styles_left_25sfckP4Lv2VtgG2_iA76o\",\"header\":\"styles_header_1BpsACa1WbBwFMjIh8yAgC\",\"heading\":\"styles_heading_3Nl3hNrnGbJhd724cQYgju\",\"description\":\"styles_description_1q2vJbWVi3VdIhOvWW0IJO\",\"content\":\"styles_content_1if14QVlzsDPilHot5xE1A\",\"right\":\"styles_right_2350ETG4Roa4hsK_SDqef6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"option\":\"styles_option_2cqo7sbPpHHo9Q53Tl5Ezd\",\"focused\":\"styles_focused_3QGR9awULIPfNRABdoSgSL\",\"active\":\"styles_active_2kdQIYqm9zm2Nn0D0qfvQ8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"styles_body_HijTe5NrtNgu5ORSwcu1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"styles_modal_2Lr_843zhTbroZhirZo-o3\",\"fade-in-from-top\":\"styles_fade-in-from-top_1KXaZ0pHnJPYk0p0OaOEOA\",\"fadeInFromTop\":\"styles_fade-in-from-top_1KXaZ0pHnJPYk0p0OaOEOA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"raw-input\":\"styles_raw-input_2slUotT2TZccE-Us91RhLY\",\"rawInput\":\"styles_raw-input_2slUotT2TZccE-Us91RhLY\"};","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport styles from './styles.scss';\n\nconst propTypes = {\n    className: PropTypes.string,\n\n    /**\n     * child elements\n     */\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.element),\n        PropTypes.element,\n        PropTypes.node,\n    ]).isRequired,\n};\n\nconst defaultProps = {\n    className: '',\n};\n\n\nexport default class Footer extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    render() {\n        const {\n            children,\n            className,\n        } = this.props;\n\n        const classNames = [\n            'modal-footer',\n            className,\n            styles.footer,\n        ];\n        return (\n            <footer className={classNames.join(' ')}>\n                { children }\n            </footer>\n        );\n    }\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scale-input\":\"styles_scale-input_3K7DJU4M4x9YKAKXnLCbwe\",\"scaleInput\":\"styles_scale-input_3K7DJU4M4x9YKAKXnLCbwe\",\"value\":\"styles_value_1__QYkPpMfxLXq75r55nLX\",\"active\":\"styles_active_1gm9V9rd130dpaj3UYVIvN\",\"disabled\":\"styles_disabled_2wyx_FdL8sc76pOSt1gSab\",\"read-only\":\"styles_read-only_2wKnn-hg33gNnl-d6Kz6_3\",\"readOnly\":\"styles_read-only_2wKnn-hg33gNnl-d6Kz6_3\",\"spin\":\"styles_spin_1w14-ldyFT-PppcOoBEIDs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"segment-input\":\"styles_segment-input_2CAYxYgqYTmVw2ItvRTcFk\",\"segmentInput\":\"styles_segment-input_2CAYxYgqYTmVw2ItvRTcFk\",\"segment-container\":\"styles_segment-container_19hOgr9IwSF2UmWVVo1Zm-\",\"segmentContainer\":\"styles_segment-container_19hOgr9IwSF2UmWVVo1Zm-\",\"label\":\"styles_label_2QODvLcDUm9XQVLpbYFJr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio-input\":\"styles_radio-input_2WW5bGxSIvjxEAth3aFaV9\",\"radioInput\":\"styles_radio-input_2WW5bGxSIvjxEAth3aFaV9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"date-filter-modal\":\"styles_date-filter-modal_30CnqL_GjIe5nCz14m5BNr\",\"dateFilterModal\":\"styles_date-filter-modal_30CnqL_GjIe5nCz14m5BNr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"date-picker\":\"styles_date-picker_tLsqAWd9h-yLicnWDlcnc\",\"datePicker\":\"styles_date-picker_tLsqAWd9h-yLicnWDlcnc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"styles_header_B0ZHzcAk6V8NyKSuaL0r3\",\"heading\":\"styles_heading_3PzHg6Pro0E9vD-j7Q-8nJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input-label\":\"styles_input-label_31dXhWApX7bUurozUenkmh\",\"inputLabel\":\"styles_input-label_31dXhWApX7bUurozUenkmh\",\"empty\":\"styles_empty_2mBuRKp8ULd1ZrT31d4NoJ\",\"active\":\"styles_active_1DTcYPHkviyK9oDptuZxhr\",\"error\":\"styles_error_1hm5pdENjkamJcExwKZ4zh\",\"disabled\":\"styles_disabled_1wx5FGxMbdzmYyHHdNAf_7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"option\":\"styles_option_3dYxBJTx51Hm-i9JW4Nqx4\",\"input\":\"styles_input_1JKiHQc-l5W2spbbFYEpLJ\",\"radio\":\"styles_radio_3cML1blvgQ52ljhhvzN35T\",\"label\":\"styles_label_kAJR6hmD_OweCi0lmdURl\",\"checked\":\"styles_checked_1d5pPc7DycrPPdi9GwHtGF\",\"disabled\":\"styles_disabled_2kmWoJTpdnNpIsMSY3YP-B\",\"read-only\":\"styles_read-only_1SHFC2d1fFoNwbGfLlMFxd\",\"readOnly\":\"styles_read-only_1SHFC2d1fFoNwbGfLlMFxd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"styles_checkbox_1Ef_v4FN4lZwZmAXBGTOoN\",\"checkmark\":\"styles_checkmark_PTv2WhfXW_uhd649a0nm7\",\"input\":\"styles_input_1r2mAndbKvNB0aU-YtZnqb\",\"label\":\"styles_label_2hrz80Vg2G6LePJQIGAl9L\",\"checked\":\"styles_checked_3dNAk-QBB6TxlNSbPZp4AG\",\"disabled\":\"styles_disabled_lpZ68AsDnR5cccmGTjZud\",\"read-only\":\"styles_read-only_1wiv544jQ4TEc3eBB5YO_t\",\"readOnly\":\"styles_read-only_1wiv544jQ4TEc3eBB5YO_t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list-item\":\"styles_list-item_b9fYEpJtO9INKv4hxDbxI\",\"listItem\":\"styles_list-item_b9fYEpJtO9INKv4hxDbxI\",\"marker\":\"styles_marker_33mhXQ1YzDYu9vXuxlWTkw\",\"label\":\"styles_label_R0IKKuL51tr9VsIpqayFx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"options\":\"styles_options_1AQD7GsNSvLgjG6OJlygVG\",\"empty\":\"styles_empty_2oNWb2JnJ6IeUdVFCnf7WZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"options\":\"styles_options_N45WUQuozg1EDlyNjhmRs\",\"empty\":\"styles_empty_MRQQPCPyojcFAEjff5jaC\",\"spin\":\"styles_spin_d1lcYcVS2j4KUcXiNXp7_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input-label\":\"styles_input-label_2FCauAdEYIVawFkRfi6R_T\",\"inputLabel\":\"styles_input-label_2FCauAdEYIVawFkRfi6R_T\",\"left\":\"styles_left_2pU2pjAqnrXur69hqH7AWE\",\"right\":\"styles_right_2SzH9lwUIwiyQtkY_MzWJV\",\"empty\":\"styles_empty_3kEomIWiLgXhFqaSIDe7bD\",\"active\":\"styles_active_1A3SyU8lW6H6jjvcGM7Jn_\",\"error\":\"styles_error_1BaiHkmgSKViKzfytu01Sb\",\"disabled\":\"styles_disabled_3MkKnzjGi3ttu5-YsuCHWL\"};","import React from 'react';\nimport Button from './index.js';\n\nconst PrimaryButton = props => (\n    <Button buttonType=\"button-primary\" {...props} />\n);\nexport default PrimaryButton;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"styles_checkbox_1s_UT_LZGm_IbkgET2IRDS\"};","interface Rect {\n    top: number;\n    left: number;\n    width: number;\n    height: number;\n}\n\ninterface Offset {\n    top: number;\n    left: number;\n    right: number;\n    bottom: number;\n}\n\ninterface Limit {\n    minW: number;\n    minH: number;\n    maxW: number;\n    maxH: number;\n}\n\nexport const defaultRect: Rect = {\n    top: 0,\n    left: 0,\n    width: 0,\n    height: 0,\n};\n\nexport const defaultOffset: Offset = {\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n};\n\nexport const defaultLimit: Limit = {\n    minW: 0,\n    maxW: Infinity,\n    minH: 0,\n    maxH: Infinity,\n};\n\ninterface Params {\n    contentRect: Rect;\n    parentRect: Rect;\n    boundingRect: Rect;\n    offset: Offset;\n    limit: Limit;\n}\n\nconst defaultParams: Params = {\n    contentRect: { ...defaultRect },\n    parentRect: { ...defaultRect },\n    boundingRect: { ...defaultRect },\n    offset: { ...defaultOffset },\n    limit: { ...defaultLimit },\n};\n\nexport function calcFloatRect(p: Partial<Params>) {\n    const params = {\n        ...defaultParams,\n        ...p,\n    };\n\n    const {\n        contentRect,\n        parentRect,\n        boundingRect,\n        offset,\n        limit,\n    } = params;\n\n    const newWidth = Math.max(\n        Math.min(\n            contentRect.width,\n            limit.maxW,\n        ),\n        limit.minW,\n    );\n\n    const newContentRect = {\n        top: (parentRect.top + parentRect.height) - offset.top,\n        left: parentRect.left - offset.left,\n        width: newWidth,\n    };\n\n    // TODO: consider the case where height doesn't fit on either side (top or bottom)\n    const containerOffsetY = parentRect.top + parentRect.height + contentRect.height;\n    if (boundingRect.height < containerOffsetY) {\n        newContentRect.top = (parentRect.top + boundingRect.top)\n            - (contentRect.height + offset.bottom);\n    }\n\n    const containerOffsetX = parentRect.left + newWidth;\n    if (boundingRect.width < containerOffsetX) {\n        newContentRect.left = (boundingRect.left + parentRect.left + parentRect.width)\n            - (newContentRect.width + offset.right);\n    }\n\n    return newContentRect;\n}\n\nexport function calcFloatRectInMainWindow(p: Partial<Params>) {\n    return calcFloatRect({\n        ...p,\n        boundingRect: {\n            top: window.scrollY,\n            left: window.scrollX,\n            width: window.innerWidth,\n            height: window.innerHeight,\n        },\n    });\n}\n\nexport function calcFloatPositionInMainWindow(p: Partial<Params>) {\n    const floatRect = calcFloatRectInMainWindow(p);\n    return {\n        top: `${floatRect.top}px`,\n        left: `${floatRect.left}px`,\n        width: `${floatRect.width}px`,\n    };\n}\n","import React, { useCallback } from 'react';\nimport { _cs } from '@togglecorp/fujs';\n\nimport Icon from '../../../components/General/Icon';\n\n/*\neslint css-modules/no-unused-class: [\n    1,\n    {\n        markAsUsed: [\n            'button-default', 'button-accent', 'button-primary', 'button-danger',\n            'button-warning', 'button-success'\n        ],\n        camelCase: true\n    }\n]\n*/\nimport styles from './styles.scss';\n\n/*\n# Breaking Change\n- Removed PrimaryButton, DangerButton, SuccessButton, WarningButton, AccentButton components\n- Removed changeDelay prop\n- onClickParams doesn't resolve functions by default\n\n# Todo\n- Remove smallHorizontalPadding and smallVerticalPadding\n- Introduce small, medium and large buttons\n*/\n\n\ntype ButtonType = 'button-default' | 'button-accent' | 'button-primary' | 'button-danger' | 'button-success' | 'button-warning';\ntype RawButtonType = 'button' | 'submit' | 'reset';\n\nexport interface Props<T> extends Omit<React.HTMLProps<HTMLButtonElement>, 'onClick' | 'ref'> {\n    buttonType?: ButtonType;\n    children?: React.ReactNode;\n    className?: string;\n    disabled?: boolean;\n    iconName?: string;\n    onClick: (value: { event: React.MouseEvent; params?: T }) => void;\n    onClickParams?: T;\n    pending?: boolean;\n    smallHorizontalPadding?: boolean;\n    smallVerticalPadding?: boolean;\n    transparent: boolean;\n    type?: RawButtonType;\n}\n\nfunction Button<T>(props: Props<T>) {\n    const {\n        buttonType,\n        children,\n        className: classNameFromProps,\n        disabled,\n        iconName,\n        pending,\n        smallHorizontalPadding,\n        smallVerticalPadding,\n        transparent,\n        type,\n        onClick,\n        onClickParams,\n        ...otherProps\n    } = props;\n\n    const handleClick = useCallback(\n        (e: React.MouseEvent) => {\n            onClick({\n                event: e,\n                params: onClickParams,\n            });\n        },\n        [\n            onClick,\n            onClickParams,\n        ],\n    );\n\n    const buttonClassName = _cs(\n        classNameFromProps,\n        'button',\n        styles.button,\n        buttonType,\n        buttonType && styles[buttonType],\n        iconName && !!children && 'with-icon-and-children',\n        iconName && !!children && styles.withIconAndChildren,\n        smallHorizontalPadding && 'small-horizontal-padding',\n        smallHorizontalPadding && styles.smallHorizontalPadding,\n        smallVerticalPadding && 'small-vertical-padding',\n        smallVerticalPadding && styles.smallVerticalPadding,\n        transparent && 'transparent',\n        transparent && styles.transparent,\n    );\n\n    const iconClassName = _cs(\n        'icon',\n        styles.icon,\n        pending && styles.pendingIcon,\n    );\n\n    return (\n        // eslint-disable-next-line react/button-has-type\n        <button\n            className={buttonClassName}\n            disabled={disabled || pending}\n            onClick={handleClick}\n            type={type}\n            {...otherProps}\n        >\n            <Icon\n                name={pending ? 'spinner' : iconName}\n                className={iconClassName}\n            />\n            { children }\n        </button>\n    );\n}\nButton.defaultProps = {\n    buttonType: 'button-default' as ButtonType,\n    disabled: false,\n    pending: false,\n    smallHorizontalPadding: false,\n    smallVerticalPadding: false,\n    transparent: false,\n    type: 'button',\n};\n\nexport default Button;\n","export type OptionKey = string | number;\n\n// eslint-disable-next-line import/prefer-default-export\nexport enum Keys {\n    Tab = 9,\n    Esc = 27,\n    Enter = 13,\n    Down = 38,\n    Up = 40,\n}\n","import { useEffect, useCallback } from 'react';\nimport { modulo, isDefined } from '@togglecorp/fujs';\n\nimport { Keys, OptionKey } from '../types';\n\n/*\n# Feature\n- Handles setting value of focusedKey exclusively\n\n# Breaking change\n- Add prop selectedKey to set it as focusedKey if focusedKey is not defined\n*/\n\nconst specialKeys = [Keys.Up, Keys.Down, Keys.Enter];\n\nfunction getOptionIndex<T, Q extends OptionKey>(\n    key: Q | undefined,\n    options: T[],\n    keySelector: (option: T) => Q,\n) {\n    return options.findIndex(o => keySelector(o) === key);\n}\n\nfunction getNewKey<T, Q extends OptionKey>(\n    oldKey: Q | undefined,\n    increment: number,\n    options: T[],\n    keySelector: (option: T) => Q,\n) {\n    if (options.length <= 0) {\n        return undefined;\n    }\n\n    const index = getOptionIndex(oldKey, options, keySelector);\n    // NOTE: index should never be -1 to begin with\n\n    let oldIndex = index;\n    if (oldIndex === -1) {\n        oldIndex = increment > 0 ? -1 : 0;\n    }\n\n    const newIndex = modulo(oldIndex + increment, options.length);\n\n    return keySelector(options[newIndex]);\n}\n\nfunction useKeyboard<T, Q extends OptionKey>(\n    focusedKey: Q | undefined,\n    selectedKey: Q | undefined,\n    keySelector: (option: T) => Q,\n    options: T[],\n    isOptionsShown: boolean,\n\n    onFocusChange: (key: Q | undefined) => void,\n    onHideOptions: () => void,\n    onShowOptions: () => void,\n    onOptionSelect: (key: Q) => void,\n) {\n    const handleKeyDown = useCallback(\n        (e: React.KeyboardEvent<HTMLInputElement>) => {\n            // NOTE: De-structuring e here will create access error\n            const { keyCode } = e;\n            if (isOptionsShown && (keyCode === Keys.Tab || keyCode === Keys.Esc)) {\n                // If tab or escape was pressed and dropdown is being shown,\n                // hide the dropdown.\n                onHideOptions();\n            } else if (!isOptionsShown && specialKeys.includes(keyCode)) {\n                // If any of the special keys was pressed but the dropdown is currently hidden,\n                // show the dropdown.\n                e.stopPropagation();\n                e.preventDefault();\n                onShowOptions();\n            } else if (keyCode === Keys.Enter) {\n                if (isDefined(focusedKey)) {\n                    e.stopPropagation();\n                    e.preventDefault();\n                    onOptionSelect(focusedKey);\n                }\n            } else if (keyCode === Keys.Up) {\n                e.stopPropagation();\n                e.preventDefault();\n                const newFocusedKey = getNewKey(focusedKey, 1, options, keySelector);\n                onFocusChange(newFocusedKey);\n            } else if (keyCode === Keys.Down) {\n                e.stopPropagation();\n                e.preventDefault();\n                const newFocusedKey = getNewKey(focusedKey, -1, options, keySelector);\n                onFocusChange(newFocusedKey);\n            }\n        },\n        [\n            focusedKey,\n            isOptionsShown,\n            keySelector,\n            onFocusChange,\n            onHideOptions,\n            onOptionSelect,\n            onShowOptions,\n            options,\n        ],\n    );\n\n    // the missing dependencies are intentional\n    useEffect(\n        () => {\n            if (!isOptionsShown) {\n                if (focusedKey !== undefined) {\n                    onFocusChange(undefined);\n                }\n                return;\n            }\n\n            if (\n                selectedKey !== undefined\n                && getOptionIndex(selectedKey, options, keySelector) !== -1\n            ) {\n                onFocusChange(selectedKey);\n            } else {\n                const newFocusedKey = getNewKey(undefined, 1, options, keySelector);\n                onFocusChange(newFocusedKey);\n            }\n        },\n        [isOptionsShown],\n    );\n\n    // the missing dependencies are intentional\n    useEffect(\n        () => {\n            if (isOptionsShown) {\n                const newFocusedKey = getNewKey(undefined, 1, options, keySelector);\n                onFocusChange(newFocusedKey);\n            }\n        },\n        [\n            keySelector,\n            options,\n        ],\n    );\n\n    return handleKeyDown;\n}\n\nexport default useKeyboard;\n","import React, { forwardRef } from 'react';\nimport { _cs } from '@togglecorp/fujs';\n\nimport styles from './styles.scss';\n\n/*\n# Breaking Change\n- Remove elementRef prop, and use React.forwardRef\n*/\n\ninterface Props extends Omit<React.HTMLProps<HTMLInputElement>, 'ref'> {\n    className?: string;\n}\n\nfunction RawInput(props: Props, ref: React.Ref<HTMLInputElement>) {\n    const {\n        className: classNameFromProps,\n        ...otherProps\n    } = props;\n\n    const className = _cs(\n        classNameFromProps,\n        styles.rawInput,\n        'raw-input',\n    );\n\n    return (\n        <input\n            ref={ref}\n            className={className}\n            {...otherProps}\n        />\n    );\n}\n\nexport default forwardRef(RawInput);\n","import React from 'react';\nimport { _cs } from '@togglecorp/fujs';\n\nimport styles from './styles.scss';\n\ninterface Props {\n    error?: string;\n    hint?: string;\n}\n\nfunction HintAndError(props: Props) {\n    const {\n        error,\n        hint,\n    } = props;\n\n    const className = _cs(\n        styles.inputHintAndError,\n        'input-hint-and-error',\n        error && styles.inputError,\n        error && 'input-error',\n        hint && styles.inputHint,\n        hint && 'input-hint',\n        !(hint || error) && styles.empty,\n        !(hint || error) && 'empty',\n    );\n\n    const message = error || hint;\n\n    return (\n        <div\n            className={className}\n            title={message}\n        >\n            { message || '-' }\n        </div>\n    );\n}\n\nexport default HintAndError;\n","import React from 'react';\nimport { _cs } from '@togglecorp/fujs';\n\nimport styles from './styles.scss';\n\ninterface Props {\n    active: boolean;\n    children?: React.ReactNode;\n    className?: string;\n    disabled: boolean;\n    error: boolean;\n    title?: string;\n    rightComponent?: React.ReactNode;\n    rightComponentClassName?: string;\n}\n\nfunction Label(props: Props) {\n    const {\n        active,\n        children,\n        className: classNameFromProps,\n        disabled,\n        error,\n        title,\n        rightComponent,\n        rightComponentClassName,\n        ...otherProps\n    } = props;\n\n    const className = _cs(\n        classNameFromProps,\n        'input-label',\n        styles.inputLabel,\n        !children && 'empty',\n        !children && styles.empty,\n        error && styles.error,\n        error && 'error',\n        active && styles.active,\n        active && 'active',\n        disabled && styles.disabled,\n        disabled && 'disabled',\n    );\n\n    return (\n        <div\n            className={className}\n            title={title}\n            {...otherProps}\n        >\n            <div className={styles.left}>\n                {children}\n            </div>\n            { rightComponent && (\n                <div className={_cs(rightComponentClassName, styles.right)}>\n                    { rightComponent }\n                </div>\n            )}\n        </div>\n    );\n}\n\nLabel.defaultProps = {\n    active: false,\n    disabled: false,\n    error: false,\n};\n\nexport default Label;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\ninterface Props {\n    children: React.ReactNode;\n}\n\nfunction Portal(props: Props) {\n    const { children } = props;\n    return (\n        ReactDOM.createPortal(\n            children,\n            document.body,\n        )\n    );\n}\n\nexport default Portal;\n","import React, { useCallback, useEffect, useLayoutEffect } from 'react';\nimport FocusTrap from 'react-focus-trap';\n\nimport Portal from './Portal';\n\ninterface Props {\n    children: React.ReactNode;\n    focusTrap: boolean;\n    onInvalidate: () => void;\n}\n\n/*\n# Todo\n- Can be merged with FloatingContainer\n*/\n\n/* Portal with invalidation and focus trap */\nfunction Float(props: Props) {\n    const {\n        children,\n        focusTrap,\n        onInvalidate,\n    } = props;\n\n    const handleInvalidate = useCallback(\n        () => {\n            if (onInvalidate) {\n                onInvalidate();\n            }\n        },\n        [onInvalidate],\n    );\n\n    useLayoutEffect(\n        handleInvalidate,\n        [],\n    );\n\n    useEffect(\n        () => {\n            window.addEventListener('resize', handleInvalidate);\n            return () => {\n                window.removeEventListener('resize', handleInvalidate);\n            };\n        },\n        [handleInvalidate],\n    );\n\n    useEffect(\n        () => {\n            window.addEventListener('scroll', handleInvalidate);\n            return () => {\n                window.removeEventListener('scroll', handleInvalidate);\n            };\n        },\n        [handleInvalidate],\n    );\n\n    if (focusTrap) {\n        return (\n            <Portal>\n                <FocusTrap>\n                    { children }\n                </FocusTrap>\n            </Portal>\n        );\n    }\n\n    return (\n        <Portal>\n            { children }\n        </Portal>\n    );\n}\nFloat.defaultProps = {\n    focusTrap: false,\n};\n\nexport default Float;\n","import { useEffect, useMemo } from 'react';\nimport { _cs, randomString } from '@togglecorp/fujs';\n\nconst portalChildQuery = '.portal-child';\nconst portalChildClassName = 'portal-child';\nconst portalChildShownClassName = 'portal-child-shown';\n\n/*\n# Breaking change\n- It returns id and className that should be injected manually to children\n*/\n\nfunction addClassName(classNames: string, classNameToAdd: string) {\n    const classNameList = classNames.split(' ');\n    classNameList.push(classNameToAdd);\n    return classNameList.join(' ');\n}\n\nfunction removeClassName(classNames: string, classNameToRemove: string) {\n    const classNameList = classNames.split(' ');\n    const index = classNameList.findIndex(d => d === classNameToRemove);\n    if (index !== -1) {\n        classNameList.splice(index, 1);\n    }\n    return classNameList.join(' ');\n}\n\nfunction refreshLastModalStatus(modals: NodeListOf<Element> | Element[]) {\n    modals.forEach((modal: Element, i: number) => {\n        if (i === modals.length - 1) {\n            // eslint-disable-next-line no-param-reassign\n            (modal as HTMLElement).dataset.lastModal = 'true';\n        } else {\n            // eslint-disable-next-line no-param-reassign\n            (modal as HTMLElement).dataset.lastModal = 'false';\n        }\n    });\n}\n\nfunction useHaze(className?: string, enabled?: boolean) {\n    const uniqueId = useMemo(\n        () => randomString(),\n        [],\n    );\n\n    useEffect(\n        () => {\n            if (!enabled) {\n                return undefined;\n            }\n\n            document.body.className = addClassName(\n                document.body.className,\n                portalChildShownClassName,\n            );\n\n            const modals = document.querySelectorAll(portalChildQuery);\n            refreshLastModalStatus(modals);\n\n            return () => {\n                document.body.className = removeClassName(\n                    document.body.className,\n                    portalChildShownClassName,\n                );\n\n                const modalsExcludingMe = Array.from(\n                    document.querySelectorAll(portalChildQuery),\n                ).filter(n => n.id !== uniqueId);\n                refreshLastModalStatus(modalsExcludingMe);\n            };\n        },\n        [enabled, uniqueId],\n    );\n\n    if (!enabled) {\n        return [undefined, className];\n    }\n\n    return [\n        uniqueId,\n        _cs(className, portalChildClassName),\n    ];\n}\n\nexport default useHaze;\n","import React, { useRef, useEffect, useCallback } from 'react';\nimport { _cs } from '@togglecorp/fujs';\n\nimport Float from '../Float';\n// import Haze from '../Haze';\n\nimport useHaze from '../../General/useHaze';\nimport { Keys } from '../../types';\n\nimport styles from './styles.scss';\n\n/*\n# Breaking Change\n- Change prop parent to parentRef\n\n# Todo\n- Merge with Float\n- onBlur and onClose should be merged into same function\n*/\n\ninterface Props {\n    className?: string;\n    closeOnEscape: boolean;\n    focusTrap: boolean;\n    onBlur?: () => void;\n    onClose?: (attributes: { escape: boolean }) => void;\n    onInvalidate?: (e: HTMLDivElement) => object; // gets container\n    onMouseDown?: (e: MouseEvent) => void; // gets mouse down event\n    parentRef: React.RefObject<HTMLElement>;\n    showHaze: boolean;\n    children?: React.ReactNode;\n}\n\n/* Float with haze, close on outside click, and close on escape */\nfunction FloatingContainer(props: Props) {\n    const {\n        children,\n        className: classNameFromProps,\n        closeOnEscape,\n        focusTrap,\n        onBlur,\n        onClose,\n        onInvalidate,\n        onMouseDown,\n        parentRef,\n        showHaze,\n    } = props;\n\n    const containerRef = useRef<HTMLDivElement>(null);\n\n    const handleContainerInvalidate = useCallback(\n        () => {\n            const { current: container } = containerRef;\n            if (container && onInvalidate) {\n                const containerStyles = onInvalidate(container);\n                if (containerStyles) {\n                    Object.assign(container.style, containerStyles);\n                } else {\n                    console.error('FloatingContainer.onInvalidate should return style');\n                }\n            }\n        },\n        [\n            containerRef,\n            onInvalidate,\n        ],\n    );\n\n    const handleMouseDown = useCallback(\n        (e: MouseEvent) => {\n            const { current: container } = containerRef;\n            const { current: parent } = parentRef;\n\n            const isTargetOrContainsTarget = container && (\n                container === e.target || container.contains(e.target as HTMLElement)\n            );\n\n            const isTargetParentOrContainedInParent = parent && (\n                parent === e.target || parent.contains(e.target as HTMLElement)\n            );\n\n            const clickedInside = isTargetOrContainsTarget || isTargetParentOrContainedInParent;\n\n            if (!clickedInside) {\n                if (onBlur) {\n                    onBlur();\n                }\n            } else if (onMouseDown) {\n                onMouseDown(e);\n            }\n        },\n        [\n            onBlur,\n            onMouseDown,\n            parentRef,\n            containerRef,\n        ],\n    );\n\n    const handleKeyPressed = useCallback(\n        (event: KeyboardEvent) => {\n            const { current: container } = containerRef;\n            const isLastModal = container && container.dataset.lastModal === 'true';\n            if (isLastModal && onClose && closeOnEscape && event.keyCode === Keys.Esc) {\n                onClose({ escape: true });\n            }\n        },\n        [\n            closeOnEscape,\n            onClose,\n            containerRef,\n        ],\n    );\n\n    useEffect(\n        () => {\n            window.addEventListener('mousedown', handleMouseDown);\n            return () => {\n                window.removeEventListener('mousedown', handleMouseDown);\n            };\n        },\n        [handleMouseDown],\n    );\n\n    useEffect(\n        () => {\n            document.addEventListener('keydown', handleKeyPressed);\n            return () => {\n                document.removeEventListener('keydown', handleKeyPressed);\n            };\n        },\n        [handleKeyPressed],\n    );\n\n    const myClassName = _cs(\n        classNameFromProps,\n        styles.floatingContainer,\n        'floating-container',\n    );\n\n    const [containerId, className] = useHaze(myClassName, showHaze);\n\n    return (\n        <Float\n            onInvalidate={handleContainerInvalidate}\n            focusTrap={focusTrap}\n        >\n            <div\n                id={containerId}\n                className={className}\n                ref={containerRef}\n            >\n                { children }\n            </div>\n        </Float>\n    );\n}\nFloatingContainer.defaultProps = {\n    closeOnEscape: false,\n    focusTrap: false,\n    showHaze: false,\n};\nexport default FloatingContainer;\n","import React, { useMemo, Fragment } from 'react';\nimport {\n    isNotDefined,\n    listToGroupList,\n} from '@togglecorp/fujs';\n\nimport { OptionKey } from '../../types';\n\n/*\n# Breaking Change\n- Remove modifier prop\n- Remove default ListItem and GroupItem\n- Add prop grouped to identify grouped / non-grouped list\n*/\n\ninterface BaseProps<D, P, K extends OptionKey> {\n    data: D[];\n    keySelector(datum: D, index: number): K;\n    renderer: React.ComponentType<P>;\n    rendererClassName?: string;\n    rendererParams: (key: K, datum: D, index: number, data: D[]) => P;\n}\n\ninterface GroupOptions<D, P, K extends OptionKey, GP, GK extends OptionKey> {\n    groupComparator?: (a: GK, b: GK) => number;\n    groupKeySelector(datum: D): GK;\n    groupRenderer: React.ComponentType<GP>;\n    groupRendererClassName?: string;\n    groupRendererParams: (key: GK, index: number, data: D[]) => GP;\n    grouped: true;\n}\n\ninterface NoGroupOptions {\n    grouped?: false;\n}\n\nexport type ListProps<D, P, K extends OptionKey, GP, GK extends OptionKey> = (\n    BaseProps<D, P, K> & (GroupOptions<D, P, K, GP, GK> | NoGroupOptions)\n);\n\nexport type GroupedListProps<D, P, K extends OptionKey, GP, GK extends OptionKey> = (\n    BaseProps<D, P, K> & GroupOptions<D, P, K, GP, GK>\n);\n\nfunction hasGroup<D, P, K extends OptionKey, GP, GK extends OptionKey>(\n    props: ListProps<D, P, K, GP, GK>,\n): props is (BaseProps<D, P, K> & GroupOptions<D, P, K, GP, GK>) {\n    return !!(props as BaseProps<D, P, K> & GroupOptions<D, P, K, GP, GK>).grouped;\n}\n\nfunction GroupedList<D, P, K extends OptionKey, GP, GK extends OptionKey>(\n    props: GroupedListProps<D, P, K, GP, GK>,\n) {\n    const {\n        groupKeySelector,\n        groupComparator,\n        renderer: Renderer,\n        groupRenderer: GroupRenderer,\n        groupRendererClassName,\n        groupRendererParams,\n        data,\n        keySelector,\n        rendererParams,\n        rendererClassName,\n    } = props;\n\n    const renderListItem = (datum: D, i: number) => {\n        const key = keySelector(datum, i);\n        const extraProps = rendererParams(key, datum, i, data);\n\n        return (\n            <Renderer\n                key={key}\n                className={rendererClassName}\n                {...extraProps}\n            />\n        );\n    };\n    const renderGroup = (groupKey: GK, index: number) => {\n        const extraProps = groupRendererParams(groupKey, index, data);\n\n        return (\n            <GroupRenderer\n                key={groupKey}\n                className={groupRendererClassName}\n                {...extraProps}\n            />\n        );\n    };\n\n    const groups = useMemo(\n        () => listToGroupList(data, groupKeySelector),\n        [data, groupKeySelector],\n    );\n\n    const sortedGroupKeys = useMemo(\n        () => {\n            const keys = Object.keys(groups) as GK[];\n            return keys.sort(groupComparator);\n        },\n        [groups, groupComparator],\n    );\n\n    const children: React.ReactNode[] = [];\n    sortedGroupKeys.forEach((groupKey, i) => {\n        children.push(renderGroup(groupKey, i));\n        children.push(...groups[groupKey].map(renderListItem));\n    });\n\n    return (\n        <Fragment>\n            {children}\n        </Fragment>\n    );\n}\n\nfunction List<D, P, K extends OptionKey, GP, GK extends OptionKey>(\n    props: ListProps<D, P, K, GP, GK>,\n) {\n    const {\n        data,\n        keySelector,\n        renderer: Renderer,\n        rendererClassName,\n        rendererParams,\n    } = props;\n\n    if (isNotDefined(data)) {\n        return null;\n    }\n\n    const renderListItem = (datum: D, i: number) => {\n        const key = keySelector(datum, i);\n        const extraProps = rendererParams(key, datum, i, data);\n\n        return (\n            <Renderer\n                key={key}\n                className={rendererClassName}\n                {...extraProps}\n            />\n        );\n    };\n\n    if (!hasGroup(props)) {\n        return (\n            <Fragment>\n                {data.map(renderListItem)}\n            </Fragment>\n        );\n    }\n\n    return (\n        <GroupedList\n            {...props}\n        />\n    );\n}\n\nList.defaultProps = {\n    data: [],\n};\n\nexport default List;\n","import { useEffect, useRef } from 'react';\nimport ResizeObserver from 'resize-observer-polyfill';\n\nfunction useResizeObserver(\n    containerRef: React.RefObject<HTMLElement>,\n    onObserve: () => void,\n    onResize: (e: ResizeObserverEntry[]) => void,\n) {\n    const resizeObserver = useRef<ResizeObserver>();\n\n    useEffect(\n        () => {\n            const { current: containerToObserve } = containerRef;\n            if (!containerToObserve || !containerToObserve.parentElement) {\n                console.warn('Cannot observer resize as container is not defined');\n            } else {\n                resizeObserver.current = new ResizeObserver(onResize);\n                resizeObserver.current.observe(containerToObserve.parentElement);\n                onObserve();\n            }\n\n            return () => {\n                const { current: containerToUnobserve } = containerRef;\n\n                if (!containerToUnobserve || !containerToUnobserve.parentElement) {\n                    console.warn('Cannot un-observer resize as container is not defined');\n                    return;\n                }\n\n                if (resizeObserver.current) {\n                    resizeObserver.current.unobserve(containerToUnobserve.parentElement);\n                }\n            };\n        },\n        [\n            onObserve,\n            onResize,\n            containerRef.current,\n        ],\n    );\n}\n\nexport default useResizeObserver;\n","import React, { useCallback, useState, useRef } from 'react';\nimport { _cs } from '@togglecorp/fujs';\n\nimport useResizeObserver from '../../General/useResizeObserver';\n\nimport styles from './styles.scss';\n\nfunction calculateDimensionCost(width: number, height: number, factor: number) {\n    return width * Math.sqrt(height) * factor;\n}\n\nfunction calculateRelativeValue(\n    minFontSize: number,\n    maxFontSize: number,\n    width: number,\n    height: number,\n    factor: number,\n) {\n    return Math.min(\n        maxFontSize,\n        minFontSize + ((maxFontSize - minFontSize) * calculateDimensionCost(width, height, factor)),\n    );\n}\n\ninterface Props {\n    children: React.ReactNode;\n    className?: string;\n    maxFontSize: number;\n    maxPaddingSize: number;\n    minFontSize: number;\n    minPaddingSize: number;\n    resizeFactor: number;\n}\n\ninterface State {\n    show: boolean;\n}\n\nfunction Message(props: Props) {\n    const {\n        maxFontSize,\n        maxPaddingSize,\n        minFontSize,\n        minPaddingSize,\n        resizeFactor,\n    } = props;\n\n    const [isChildrenShown, setIsChildrenShown] = useState(false);\n\n    const containerRef = useRef<HTMLDivElement>(null);\n\n    const showChildren = useCallback(\n        () => {\n            setIsChildrenShown(true);\n        },\n        [],\n    );\n\n    const handleResize = useCallback(\n        (e: ResizeObserverEntry[]) => {\n            const {\n                0: {\n                    contentRect: {\n                        width,\n                        height,\n                    },\n                },\n            } = e;\n\n            const { current: container } = containerRef;\n\n            const fontSize = calculateRelativeValue(\n                minFontSize, maxFontSize, width, height, resizeFactor,\n            );\n            const padding = calculateRelativeValue(\n                minPaddingSize, maxPaddingSize, width, height, resizeFactor,\n            );\n\n            if (container) {\n                container.style.width = `${width}px`;\n                container.style.height = `${height}px`;\n                container.style.fontSize = `${fontSize}px`;\n                container.style.padding = `${padding}px`;\n            }\n        },\n        [\n            maxFontSize,\n            maxPaddingSize,\n            minFontSize,\n            minPaddingSize,\n            resizeFactor,\n            containerRef,\n        ],\n    );\n\n    useResizeObserver(\n        containerRef,\n        showChildren,\n        handleResize,\n    );\n\n    const {\n        className: classNameFromProps,\n        children,\n    } = props;\n\n    const className = _cs(\n        classNameFromProps,\n        styles.message,\n    );\n\n    return (\n        <div\n            ref={containerRef}\n            className={className}\n        >\n            { isChildrenShown && children }\n        </div>\n    );\n}\nMessage.defaultProps = {\n    maxFontSize: 20,\n    maxPaddingSize: 16,\n    minFontSize: 8,\n    minPaddingSize: 3,\n    resizeFactor: 0.0001,\n};\n\nexport default Message;\n","import React from 'react';\nimport { _cs } from '@togglecorp/fujs';\n\nimport Message from '../../Message';\n\ninterface Props {\n    className?: string;\n}\n\nfunction EmptyComponent(props: Props) {\n    const {\n        className: classNameFromProps,\n    } = props;\n\n    const className = _cs(\n        'empty',\n        classNameFromProps,\n    );\n\n    return (\n        <div className={className}>\n            <Message>\n                Nothing to show.\n            </Message>\n        </div>\n    );\n}\n\nexport default EmptyComponent;\n","import React from 'react';\nimport { _cs } from '@togglecorp/fujs';\n\nimport { OptionKey } from '../../types';\n\nimport DefaultEmptyWhenFilterComponent from '../../../components/View/EmptyWhenFilter';\nimport LoadingAnimation from '../../../components/View/LoadingAnimation';\n\nimport List, { ListProps } from '../List';\nimport DefaultEmptyComponent from './EmptyComponent';\n\nimport styles from './styles.scss';\n\ntype ListViewProps<D, P, K extends OptionKey, GP, GK extends OptionKey> = {\n    className?: string;\n    emptyComponent: any;\n    emptyWhenFilterComponent: any;\n    filtered: boolean;\n    id?: string;\n    pending: boolean;\n} & ListProps<D, P, K, GP, GK>;\n\nfunction ListView<\n    D,\n    P,\n    K extends OptionKey, GP, GK extends OptionKey,\n>(props: ListViewProps<D, P, K, GP, GK>) {\n    const {\n        id,\n        className: classNameFromProps,\n\n        emptyComponent: EmptyComponent,\n        emptyWhenFilterComponent: EmptyWhenFilterComponent,\n        filtered,\n        pending,\n\n        ...otherProps\n    } = props;\n\n    let content = null;\n\n    const isEmpty = otherProps.data.length <= 0;\n\n    if (isEmpty) {\n        if (filtered) {\n            content = !pending\n                ? <EmptyWhenFilterComponent className={styles.empty} />\n                : null;\n        } else {\n            content = EmptyComponent && !pending\n                ? <EmptyComponent className={styles.empty} />\n                : null;\n        }\n    } else {\n        content = (\n            <List\n                {...otherProps}\n            />\n        );\n    }\n\n    const className = _cs(\n        classNameFromProps,\n        styles.listView,\n        'list-view',\n        pending && styles.pending,\n        isEmpty && 'list-view-empty',\n        isEmpty && styles.listViewEmpty,\n    );\n\n    return (\n        <div\n            id={id}\n            className={className}\n        >\n            { pending && <LoadingAnimation /> }\n            {content}\n        </div>\n    );\n}\n\nListView.defaultProps = {\n    data: [],\n    emptyComponent: DefaultEmptyComponent,\n    emptyWhenFilterComponent: DefaultEmptyWhenFilterComponent,\n    filtered: false,\n    pending: false,\n};\n\nexport default ListView;\n","import React, { useRef, useEffect, useCallback } from 'react';\nimport { _cs } from '@togglecorp/fujs';\n\nimport { OptionKey } from '../../../../types';\n\n\nimport styles from './styles.scss';\n\ninterface Props<K extends OptionKey> {\n    children?: React.ReactNode;\n    className?: string;\n    isActive: boolean;\n    isFocused: boolean;\n    onClick: (key: K) => void;\n    onFocus: (key: K) => void;\n    optionKey: K;\n    scrollOffset?: number;\n}\n\nfunction Option<K extends OptionKey>(props: Props<K>) {\n    const divRef = useRef<HTMLButtonElement>(null);\n    const focusedByMouse = useRef(false);\n\n    const {\n        children,\n        className: classNameFromProps,\n        isActive,\n        isFocused,\n        onClick,\n        onFocus,\n        optionKey,\n    } = props;\n\n    useEffect(\n        () => {\n            if (isFocused && !focusedByMouse.current && divRef.current) {\n                divRef.current.scrollIntoView({\n                    behavior: 'smooth',\n                    block: 'center',\n                });\n            }\n        },\n        [\n            divRef.current,\n            focusedByMouse,\n            isFocused,\n        ],\n    );\n\n    const handleClick = useCallback(\n        () => {\n            onClick(optionKey);\n        },\n        [\n            onClick,\n            optionKey,\n        ],\n    );\n\n    const handleMouseMove = useCallback(\n        () => {\n            focusedByMouse.current = true;\n            onFocus(optionKey);\n        },\n        [\n            onFocus,\n            optionKey,\n        ],\n    );\n\n    const handleMouseLeave = useCallback(\n        () => {\n            focusedByMouse.current = false;\n        },\n        [],\n    );\n\n    const className = _cs(\n        classNameFromProps,\n        styles.option,\n        'option',\n        isActive && styles.active,\n        isActive && 'active',\n        isFocused && styles.focused,\n        isFocused && 'focused',\n    );\n\n    return (\n        <button\n            ref={divRef}\n            className={className}\n            onClick={handleClick}\n            onMouseMove={handleMouseMove}\n            onMouseLeave={handleMouseLeave}\n            type=\"button\"\n        >\n            { children }\n        </button>\n    );\n}\nOption.defaultProps = {\n    isActive: false,\n    isFocused: false,\n};\n\n// TODO: memo breaks typings\n// export default memo(Option);\nexport default Option;\n","import React, { useCallback } from 'react';\nimport { _cs } from '@togglecorp/fujs';\n\nimport FloatingContainer from '../../../View/FloatingContainer';\nimport ListView from '../../../View/ListView';\n\nimport { OptionKey } from '../../../types';\n\nimport Option from './Option';\n\nimport styles from './styles.scss';\n\ninterface Props<T, K extends OptionKey> {\n    className?: string;\n    data: T[];\n    focusedKey?: K;\n    keySelector: (datum: T) => K;\n    labelSelector: (datum: T) => string | number;\n    onBlur: () => void;\n    onInvalidate: (e: HTMLDivElement) => object;\n    onOptionClick: (key: K) => void;\n    onOptionFocus: (key: K) => void;\n    optionLabelSelector?: (datum: T) => React.ReactNode;\n    parentRef: React.RefObject<HTMLElement>;\n    emptyComponent: React.ComponentType<unknown>;\n    emptyWhenFilterComponent: React.ComponentType<unknown>;\n    value?: K;\n    filtered: boolean;\n    pending: boolean;\n}\n\nfunction Options<T, K extends OptionKey>(props: Props<T, K>) {\n    const {\n        className: classNameFromProps,\n        data,\n        focusedKey,\n        keySelector,\n        labelSelector,\n        onBlur,\n        onInvalidate,\n        onOptionClick,\n        onOptionFocus,\n        optionLabelSelector,\n        parentRef,\n        emptyComponent: EmptyComponent,\n        emptyWhenFilterComponent: EmptyWhenFilterComponent,\n        value,\n        filtered,\n        pending,\n    } = props;\n\n    const rendererParams = useCallback(\n        (key: K, option: T) => {\n            const label = optionLabelSelector\n                ? optionLabelSelector(option)\n                : labelSelector(option);\n\n            const isActive = key === value;\n            const isFocused = key === focusedKey;\n\n            return {\n                children: label,\n                isActive,\n                isFocused,\n                onClick: onOptionClick,\n                onFocus: onOptionFocus,\n                optionKey: key,\n            };\n        },\n        [\n            focusedKey,\n            labelSelector,\n            onOptionClick,\n            onOptionFocus,\n            optionLabelSelector,\n            value,\n        ],\n    );\n\n    const className = _cs(\n        classNameFromProps,\n        styles.options,\n        'options',\n    );\n\n    return (\n        <FloatingContainer\n            onBlur={onBlur}\n            onInvalidate={onInvalidate}\n            parentRef={parentRef}\n            className={className}\n        >\n            <ListView\n                data={data}\n                keySelector={keySelector}\n                rendererParams={rendererParams}\n                renderer={Option}\n                emptyComponent={EmptyComponent}\n                emptyWhenFilterComponent={EmptyWhenFilterComponent}\n                filtered={filtered}\n                pending={pending}\n                className={styles.list}\n            />\n        </FloatingContainer>\n    );\n}\n\nOptions.defaultProps = {\n    data: [],\n    filtered: false,\n    pending: false,\n};\n\nexport default Options;\n","import React, {\n    useCallback,\n    useEffect,\n    useMemo,\n    useRef,\n    useState,\n} from 'react';\nimport {\n    _cs,\n    isTruthyString,\n} from '@togglecorp/fujs';\n\nimport {\n    calcFloatPositionInMainWindow,\n    defaultLimit,\n    defaultOffset,\n} from '../../../utils/bounds';\nimport { OptionKey } from '../../types';\n\nimport Button from '../../Action/Button';\nimport useKeyboard from '../../General/useKeyboard';\nimport RawInput from '../RawInput';\nimport HintAndError from '../HintAndError';\nimport Label from '../Label';\n\nimport Options from './Options';\nimport styles from './styles.scss';\n\nexport interface SelectInputBaseProps<T, K extends OptionKey> {\n    autoFocus?: boolean;\n    className?: string;\n    disabled: boolean;\n    error?: string;\n    hint?: string;\n    keySelector: (datum: T) => K;\n    label?: string;\n    labelClassName?: string;\n    labelRightComponent?: React.ReactNode;\n    labelRightComponentClassName?: string;\n    labelSelector: (datum: T) => string | number;\n    onChange: (key: K | undefined) => void;\n    onOptionClick: (key: K) => void;\n    onOptionFocus: (key: K) => void;\n    onSearchValueChange: (text: string | undefined) => void;\n    onShowPopupChange: (value: boolean, initialSearchText?: string) => void;\n    optionLabelSelector?: (datum: T) => React.ReactNode;\n    options: T[];\n    optionsClassName?: string;\n    placeholder: string;\n    readOnly: boolean;\n    emptyComponent: React.ComponentType<unknown>;\n    emptyWhenFilterComponent: React.ComponentType<unknown>;\n    searchOptions: T[];\n    searchOptionsPending: boolean;\n    searchOptionsFiltered: boolean;\n    searchValue?: string;\n    showClearButton: boolean;\n    showDropdownArrowButton: boolean;\n    showHintAndError: boolean;\n    showLabel: boolean;\n    showPopup: boolean;\n    title?: string;\n    value?: K;\n}\n// eslint-disable-next-line max-len\nfunction SelectInputBase<T, K extends OptionKey = string>(props: SelectInputBaseProps<T, K>) {\n    const {\n        autoFocus,\n        className: classNameFromProps,\n        disabled,\n        error,\n        hint,\n        keySelector,\n        label,\n        labelClassName,\n        labelRightComponent,\n        labelRightComponentClassName,\n        labelSelector,\n        onChange,\n        onSearchValueChange,\n        onShowPopupChange,\n        optionLabelSelector,\n        options,\n        optionsClassName,\n        placeholder,\n        readOnly,\n        emptyComponent,\n        emptyWhenFilterComponent,\n        searchOptions,\n        searchOptionsPending,\n        searchOptionsFiltered,\n        searchValue,\n        showClearButton: showClearButtonFromProps,\n        showDropdownArrowButton,\n        showHintAndError,\n        showLabel,\n        showPopup,\n        title,\n        value,\n    } = props;\n\n    const containerRef = useRef<HTMLDivElement>(null);\n    const inputRef = useRef<HTMLInputElement>(null);\n    const boundingClientRect = useRef<ClientRect>();\n\n    const [inputInFocus, setInputInFocus] = useState(false);\n    const [focusedKey, setFocusKey] = useState();\n\n    useEffect(\n        () => {\n            const { current: container } = containerRef;\n            if (container) {\n                boundingClientRect.current = container.getBoundingClientRect();\n            }\n        },\n        [containerRef],\n    );\n\n    const handleShowOptionsPopup = useCallback(\n        () => {\n            const { current: input } = inputRef;\n            if (input) {\n                input.select();\n            }\n\n            // Only show if it is previously not shown else ignore\n            if (!showPopup) {\n                onShowPopupChange(true);\n                // onSearchValueChange(undefined);\n            }\n        },\n        [inputRef, showPopup, onShowPopupChange],\n    );\n\n    const handleToggleOptionsPopup = useCallback(\n        () => {\n            const { current: input } = inputRef;\n            if (input) {\n                input.select();\n            }\n\n            if (!showPopup) {\n                onShowPopupChange(true);\n                // onSearchValueChange(undefined);\n            } else {\n                onShowPopupChange(false);\n            }\n        },\n        [inputRef, showPopup, onShowPopupChange],\n    );\n\n    const handleHideOptionsPopup = useCallback(\n        () => {\n            onShowPopupChange(false);\n        },\n        [onShowPopupChange],\n    );\n\n    const handleInputFocus = useCallback(\n        () => {\n            setInputInFocus(true);\n        },\n        [],\n    );\n\n    const handleInputBlur = useCallback(\n        () => {\n            setInputInFocus(false);\n        },\n        [],\n    );\n\n    const handleInputChange = useCallback(\n        (e: React.FormEvent<HTMLInputElement>) => {\n            const { value: val } = e.currentTarget;\n            onShowPopupChange(true, val);\n            // onSearchValueChange(val);\n        },\n        [onShowPopupChange],\n    );\n\n    const handleOptionsInvalidate = useCallback(\n        (optionsContainer: HTMLDivElement) => {\n            const contentRect = optionsContainer.getBoundingClientRect();\n\n            const { current: container } = containerRef;\n            const parentRect = container\n                ? container.getBoundingClientRect()\n                : boundingClientRect.current;\n\n            const offset = { ...defaultOffset };\n\n            const limit = { ...defaultLimit };\n            if (parentRect) {\n                limit.minW = parentRect.width;\n                limit.maxW = parentRect.width;\n            }\n\n            const optionsContainerPosition = calcFloatPositionInMainWindow({\n                parentRect,\n                contentRect,\n                offset,\n                limit,\n            });\n\n            return optionsContainerPosition;\n        },\n        [containerRef, boundingClientRect],\n    );\n\n    const handleOptionSelect = useCallback(\n        (optionKey: K) => {\n            onShowPopupChange(false);\n            if (optionKey !== value) {\n                onChange(optionKey);\n            }\n        },\n        [value, onChange, onShowPopupChange],\n    );\n\n    const handleClearButtonClick = useCallback(\n        () => {\n            if (value !== undefined) {\n                onChange(undefined);\n            }\n        },\n        [value, onChange],\n    );\n\n    const handleFocusChange = useCallback(\n        (key: K | undefined) => {\n            setFocusKey(key);\n        },\n        [],\n    );\n\n    const selectedValueLabel = useMemo(\n        () => {\n            const activeOption = options.find(\n                d => keySelector(d) === value,\n            );\n            if (activeOption === undefined) {\n                return '';\n            }\n            return String(labelSelector(activeOption));\n        },\n        [options, labelSelector, keySelector, value],\n    );\n\n    const inputText: string | undefined = !showPopup\n        ? selectedValueLabel\n        : searchValue;\n\n    const isFilled = isTruthyString(inputText);\n\n    const myPlaceholder = showPopup && isTruthyString(selectedValueLabel)\n        ? selectedValueLabel\n        : placeholder;\n\n    const showClearButton = showClearButtonFromProps\n        && !disabled\n        && !readOnly\n        && isFilled;\n\n    const handleKeyDown = useKeyboard(\n        focusedKey,\n        value,\n        keySelector,\n        searchOptions,\n        showPopup,\n\n        handleFocusChange,\n        handleHideOptionsPopup,\n        handleShowOptionsPopup,\n        handleOptionSelect,\n    );\n\n    const className = _cs(\n        classNameFromProps,\n        'select-input-base',\n        styles.selectInputBase,\n        showPopup && styles.showOptions,\n        showPopup && 'show-options',\n        disabled && styles.disabled,\n        disabled && 'disabled',\n        error && styles.error,\n        error && 'error',\n        inputInFocus && styles.inputInFocus,\n        inputInFocus && 'input-in-focus',\n        !showClearButton && styles.hideClearButton,\n        !showClearButton && 'hide-clear-button',\n        isFilled && styles.filled,\n        isFilled && 'filled',\n    );\n\n    return (\n        <div\n            className={className}\n            title={title}\n        >\n            { showLabel && (\n                <Label\n                    className={labelClassName}\n                    active={inputInFocus || showPopup}\n                    disabled={disabled}\n                    error={!!error}\n                    title={label}\n                    rightComponent={labelRightComponent}\n                    rightComponentClassName={labelRightComponentClassName}\n                >\n                    { label }\n                </Label>\n            )}\n            <div\n                ref={containerRef}\n                className={_cs(styles.inputAndActions, 'input-and-actions')}\n            >\n                <RawInput\n                    ref={inputRef}\n                    className={styles.input}\n                    type=\"text\"\n                    onBlur={handleInputBlur}\n                    onFocus={handleInputFocus}\n                    onClick={handleShowOptionsPopup}\n                    onChange={handleInputChange}\n                    value={inputText || ''}\n                    autoFocus={autoFocus}\n                    placeholder={myPlaceholder}\n                    disabled={disabled || readOnly}\n\n                    onKeyDown={handleKeyDown}\n                />\n                <div className={_cs('actions', styles.actions)}>\n                    { showClearButton && (\n                        <Button\n                            buttonType=\"button-danger\"\n                            tabIndex={-1}\n                            iconName=\"close\"\n                            className={_cs('clear-button', styles.clearButton)}\n                            onClick={handleClearButtonClick}\n                            transparent\n                        />\n                    )}\n                </div>\n                { showDropdownArrowButton && (\n                    <Button\n                        tabIndex={-1}\n                        iconName={\n                            showPopup ? 'arrowDropup' : 'arrowDropdown'\n                        }\n                        className={_cs('dropdown-button', styles.dropdownButton)}\n                        onClick={handleToggleOptionsPopup}\n                        disabled={disabled || readOnly}\n                        transparent\n                    />\n                )}\n            </div>\n            { showHintAndError && (\n                <HintAndError\n                    error={error}\n                    hint={hint}\n                />\n            )}\n            { showPopup && (\n                <Options\n                    className={optionsClassName}\n                    labelSelector={labelSelector}\n                    onBlur={handleHideOptionsPopup}\n                    onInvalidate={handleOptionsInvalidate}\n                    onOptionClick={handleOptionSelect}\n                    optionLabelSelector={optionLabelSelector}\n                    parentRef={containerRef}\n                    emptyComponent={emptyComponent}\n                    emptyWhenFilterComponent={emptyWhenFilterComponent}\n                    value={value}\n\n                    keySelector={keySelector}\n                    data={searchOptions}\n                    onOptionFocus={handleFocusChange}\n                    focusedKey={focusedKey}\n                    filtered={searchOptionsFiltered}\n                    pending={searchOptionsPending}\n                />\n            )}\n        </div>\n    );\n}\nSelectInputBase.defaultProps = {\n    disabled: false,\n    readOnly: false,\n    showClearButton: true,\n    showDropdownArrowButton: true,\n    showHintAndError: true,\n    showLabel: true,\n};\n\nexport default SelectInputBase;\n","import React, {\n    useMemo,\n    useState,\n} from 'react';\nimport {\n    isFalsyString,\n    isTruthyString,\n    caseInsensitiveSubmatch,\n    compareStringSearch,\n} from '@togglecorp/fujs';\n\nimport { OptionKey } from '../../types';\n\nimport SelectInputBase, { SelectInputBaseProps } from '../SelectInputBase';\n\ninterface DefaultItem {\n    key: string;\n    label: string;\n}\n\ninterface State<K> {\n    searchValue?: string;\n}\n\n/*\n# Feature\n- Auto-scroll to selected item on popup open\n- Add maxDisplayOptions to limit visible options\n- Clicking on dropdown button will toggle popup visibility\n- Can hide/un-hide dropdown button using prop showDropdownArrowButton\n- Support string or number as key\n- Create BasicSelectInput to pull data from server\n\n# Breaking Change\n- Remove prop focusedKey\n\n# Todo\n- Support list grouping\n- Use ListView instead of List\n- Show values that are invalid (tally with current options)\n*/\n\ntype injectedProps = 'searchValue' | 'onSearchValueChange' | 'searchOptions' | 'showPopup' | 'setShowPopup';\ntype Props<T, K extends OptionKey> = Omit<SelectInputBaseProps<T, K>, injectedProps> & {\n    maxDisplayOptions?: number;\n};\n\nfunction filterAndSearch<T, K>(\n    options: T[],\n    labelSelector: (datum: T) => string | number,\n    searchValue: string,\n) {\n    return options\n        .filter(option => caseInsensitiveSubmatch(labelSelector(option), searchValue))\n        .sort((a, b) => compareStringSearch(\n            String(labelSelector(a)),\n            String(labelSelector(b)),\n            String(searchValue),\n        ));\n}\n\nfunction SelectInput<T = DefaultItem, K extends OptionKey = string>(props: Props<T, K>) {\n    const {\n        maxDisplayOptions,\n        placeholder,\n        ...otherProps\n    } = props;\n\n    const {\n        options,\n        labelSelector,\n    } = otherProps;\n\n    const [searchValue, setSearchValue] = useState<string | undefined>(undefined);\n    const [showPopup, setShowPopup] = useState(false);\n\n    const searchOptions = useMemo(\n        () => {\n            if (maxDisplayOptions === undefined) {\n                if (isFalsyString(searchValue)) {\n                    return options;\n                }\n                return filterAndSearch(options, labelSelector, searchValue);\n            }\n\n            if (isFalsyString(searchValue)) {\n                return [];\n            }\n\n            return filterAndSearch(options, labelSelector, searchValue)\n                .slice(0, maxDisplayOptions);\n        },\n        [options, labelSelector, maxDisplayOptions, searchValue],\n    );\n\n    const defaultPlaceholder = maxDisplayOptions === undefined || !showPopup\n        ? 'Select an option'\n        : 'Search for an option';\n\n    return (\n        <SelectInputBase\n            searchOptionsFiltered={isTruthyString(searchValue)}\n            searchValue={searchValue}\n            onSearchValueChange={setSearchValue}\n            searchOptions={searchOptions}\n\n            showPopup={showPopup}\n            onShowPopupChange={setShowPopup}\n\n            placeholder={placeholder || defaultPlaceholder}\n            {...otherProps}\n        />\n    );\n}\nSelectInput.defaultProps = {\n    keySelector: (item: DefaultItem) => item.key,\n    labelSelector: (item: DefaultItem) => item.label,\n    options: [],\n};\n\nexport default SelectInput;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport {\n    randomString,\n    _cs,\n} from '@togglecorp/fujs';\nimport { FaramInputElement } from '@togglecorp/faram';\n\nimport Icon from '../../General/Icon';\n\nimport styles from './styles.scss';\n\nconst propTypes = {\n    /**\n     * for styling by className\n     */\n    className: PropTypes.string,\n\n    /**\n     * Is input disabled?\n     */\n    disabled: PropTypes.bool,\n\n    value: PropTypes.bool,\n\n    /**\n     * A callback for when the input changes its content\n     */\n    onChange: PropTypes.func.isRequired,\n\n    /**\n     * label for the checkbox\n     */\n    label: PropTypes.node.isRequired,\n\n    tooltip: PropTypes.string,\n\n    readOnly: PropTypes.bool,\n\n    checkboxType: PropTypes.string,\n\n    // FIXME\n    changeDelay: PropTypes.number,\n};\n\nconst defaultProps = {\n    className: '',\n    disabled: false,\n    checkboxType: 'checkbox',\n    tooltip: '',\n    readOnly: false,\n    value: false,\n    changeDelay: undefined,\n};\n\nclass Checkbox extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n\n        this.inputId = randomString();\n    }\n\n    handleInputChange = (e) => {\n        const value = e.target.checked;\n        this.props.onChange(value);\n    }\n\n    render() {\n        const {\n            label,\n            tooltip,\n            className: classNameFromProps,\n            value,\n            disabled,\n            readOnly,\n            checkboxType,\n            onChange, // eslint-disable-line no-unused-vars, @typescript-eslint/no-unused-vars\n            changeDelay, // eslint-disable-line no-unused-vars, @typescript-eslint/no-unused-vars\n            ...otherProps\n        } = this.props;\n\n        const className = _cs(\n            styles.checkbox,\n            'checkbox',\n            classNameFromProps,\n            value && styles.checked,\n            value && 'checked',\n            disabled && styles.disabled,\n            disabled && 'disabled',\n            readOnly && styles.readOnly,\n            readOnly && 'read-only',\n        );\n\n        const spanClassName = _cs(\n            styles.checkmark,\n            'checkmark',\n        );\n\n        const inputClassName = _cs(\n            'input',\n            styles.input,\n        );\n\n        const labelClassName = _cs(\n            'label',\n            styles.label,\n        );\n\n        return (\n            <label\n                htmlFor={this.inputId}\n                className={className}\n                title={tooltip}\n            >\n                <Icon\n                    name={value ? checkboxType : 'checkboxOutlineBlank'}\n                    className={spanClassName}\n                />\n                <input\n                    id={this.inputId}\n                    onChange={this.handleInputChange}\n                    className={inputClassName}\n                    type=\"checkbox\"\n                    checked={value}\n                    disabled={disabled || readOnly}\n                    {...otherProps}\n                />\n                <div className={labelClassName}>\n                    { label }\n                </div>\n            </label>\n        );\n    }\n}\n\nexport default FaramInputElement(Checkbox);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { _cs } from '@togglecorp/fujs';\n\nimport styles from './styles.scss';\n\nconst propTypes = {\n    show: PropTypes.bool,\n    error: PropTypes.string,\n    hint: PropTypes.string,\n};\n\nconst defaultProps = {\n    show: true,\n    error: undefined,\n    hint: undefined,\n};\n\nconst emptyText = '-';\n\nexport default class InputHintAndError extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    render() {\n        const {\n            show,\n            error,\n            hint,\n        } = this.props;\n\n        if (!show) {\n            return null;\n        }\n\n        const className = _cs(\n            styles.inputHintAndError,\n            'input-hint-and-error',\n            error && styles.inputError,\n            error && 'input-error',\n            hint && styles.inputHint,\n            hint && 'input-hint',\n            !(hint || error) && styles.empty,\n            !(hint || error) && 'empty',\n        );\n\n        return (\n            <div\n                className={className}\n                title={error || hint}\n            >\n                { error || hint || emptyText }\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { _cs } from '@togglecorp/fujs';\nimport styles from './styles.scss';\n\nconst propTypes = {\n    className: PropTypes.string,\n    error: PropTypes.bool,\n    show: PropTypes.bool,\n    active: PropTypes.bool,\n    disabled: PropTypes.bool,\n    text: PropTypes.string,\n};\n\nconst defaultProps = {\n    className: '',\n    error: false,\n    show: true,\n    text: '',\n    active: false,\n    disabled: false,\n};\n\nconst emptyText = '-';\n\nexport default class InputLabel extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    render() {\n        const {\n            show,\n            text,\n            error,\n            className: classNameFromProps,\n            active,\n            disabled,\n            ...otherProps\n        } = this.props;\n\n        if (!show) {\n            return null;\n        }\n\n        const className = _cs(\n            classNameFromProps,\n            'input-label',\n            styles.inputLabel,\n            !text && 'empty',\n            !text && styles.empty,\n            error && styles.error,\n            error && 'error',\n            active && styles.active,\n            active && 'active',\n            disabled && styles.disabled,\n            disabled && 'disabled',\n        );\n\n        return (\n            <div\n                className={className}\n                title={text}\n                {...otherProps}\n            >\n                { text || emptyText }\n            </div>\n        );\n    }\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { SketchPicker } from 'react-color';\n\nimport { randomString } from '@togglecorp/fujs';\nimport { FaramInputElement } from '@togglecorp/faram';\n\nimport { calcFloatingPositionInMainWindow } from '../../../utils/common';\n\nimport FloatingContainer from '../../View/FloatingContainer';\nimport HintAndError from '../HintAndError';\nimport Label from '../Label';\n\nimport styles from './styles.scss';\n\nconst propTypes = {\n    /**\n     * for styling by className\n     */\n    className: PropTypes.string,\n\n    value: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n\n    /**\n     * String to show in case of error\n     */\n    error: PropTypes.string,\n\n    /**\n     * Hint text\n     */\n    hint: PropTypes.string,\n\n    /**\n     * A callback for when the input changes its content\n     */\n    onChange: PropTypes.func.isRequired,\n\n    /**\n     * label for the checkbox\n     */\n    label: PropTypes.node.isRequired,\n\n    showLabel: PropTypes.bool,\n\n    showHintAndError: PropTypes.bool,\n\n    disabled: PropTypes.bool,\n    readOnly: PropTypes.bool,\n};\n\nconst defaultProps = {\n    className: '',\n    showLabel: true,\n    value: undefined,\n    error: '',\n    hint: '',\n    showHintAndError: true,\n    disabled: false,\n    readOnly: false,\n};\n\nclass ColorInput extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            showColorPicker: false,\n        };\n\n        this.inputId = randomString();\n        this.boundingClientRect = {};\n    }\n\n    handleColorPickerInvalidate = (colorPickerContainer) => {\n        const containerRect = colorPickerContainer.getBoundingClientRect();\n        let parentRect = this.boundingClientRect;\n        if (this.container) {\n            parentRect = this.container.getBoundingClientRect();\n        }\n\n        const offset = {\n            top: 2,\n            right: 0,\n            bottom: 0,\n            left: 0,\n        };\n        if (this.props.showHintAndError) {\n            offset.top = 12;\n        }\n\n        const optionsContainerPosition = (\n            calcFloatingPositionInMainWindow(parentRect, containerRect, offset)\n        );\n        return optionsContainerPosition;\n    }\n\n    handleInputChange = (e) => {\n        const value = e.target.checked;\n        this.props.onChange(value);\n    }\n\n    handleColorBoxClick = () => {\n        this.boundingClientRect = this.container.getBoundingClientRect();\n        this.setState({ showColorPicker: true });\n    }\n\n    handleCloseColorPickerClick = () => {\n        this.setState({ showColorPicker: false });\n    }\n\n    handleColorChange = (newColor) => {\n        if (this.props.onChange) {\n            this.props.onChange(newColor.hex);\n        }\n    }\n\n    handleColorPickerBlur = () => {\n        this.setState({ showColorPicker: false });\n    }\n\n    render() {\n        const {\n            label,\n            className,\n            value,\n            showLabel,\n            showHintAndError,\n            error,\n            hint,\n            disabled,\n            readOnly,\n        } = this.props;\n\n        const { showColorPicker } = this.state;\n        const buttonClassNames = [\n            styles.colorBox,\n            'color-box',\n        ];\n\n        const classNames = [\n            styles.colorInput,\n            className,\n        ];\n\n        if (disabled) {\n            buttonClassNames.push(styles.disabled);\n            classNames.push(styles.disabled);\n        }\n\n        return (\n            <div\n                className={classNames.join(' ')}\n                ref={(el) => { this.container = el; }}\n            >\n                <Label\n                    className={styles.label}\n                    show={showLabel}\n                    text={label}\n                />\n                <button\n                    type=\"button\"\n                    className={buttonClassNames.join(' ')}\n                    onClick={this.handleColorBoxClick}\n                    disabled={disabled || readOnly}\n                >\n                    <span\n                        className={`${styles.color} color`}\n                        style={{ backgroundColor: value }}\n                    />\n                </button>\n                <HintAndError\n                    show={showHintAndError}\n                    hint={hint}\n                    error={error}\n                />\n                {\n                    showColorPicker && (\n                        <FloatingContainer\n                            parent={this.container}\n                            onBlur={this.handleColorPickerBlur}\n                            onInvalidate={this.handleColorPickerInvalidate}\n                        >\n                            <SketchPicker\n                                color={value}\n                                onChange={this.handleColorChange}\n                            />\n                        </FloatingContainer>\n                    )\n                }\n            </div>\n        );\n    }\n}\n\nexport default FaramInputElement(ColorInput);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport Faram from '@togglecorp/faram';\n\nimport PrimaryButton from '../../Action/Button/PrimaryButton';\nimport DangerButton from '../../Action/Button/DangerButton';\n\nimport Modal from '../Modal';\nimport ModalHeader from '../Modal/Header';\nimport ModalBody from '../Modal/Body';\nimport ModalFooter from '../Modal/Footer';\n\nconst noOp = () => undefined;\n\nconst propTypes = {\n    className: PropTypes.string,\n    children: PropTypes.node.isRequired,\n    title: PropTypes.string.isRequired,\n    onClose: PropTypes.func,\n    onApply: PropTypes.func,\n    schema: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n};\n\nconst defaultProps = {\n    className: '',\n    onClose: noOp,\n    onApply: noOp,\n};\n\n\n// FIXME: remove this or move this to better place\nexport default class ApplyModal extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            faramValues: {},\n            faramErrors: {},\n        };\n    }\n\n    getClassName = () => {\n        const { className } = this.props;\n        const classNames = [\n            className,\n            'apply-modal',\n        ];\n\n        return classNames.join(' ');\n    }\n\n    handleFaramSuccess = (values) => {\n        const { onApply } = this.props;\n        if (onApply) {\n            onApply(values);\n        }\n    }\n\n    handleFaramFailure = (faramErrors) => {\n        this.setState({ faramErrors });\n    }\n\n    handleFaramChange = (faramValues, faramErrors) => {\n        this.setState({\n            faramValues,\n            faramErrors,\n        });\n    }\n\n    render() {\n        const className = this.getClassName();\n        const {\n            onClose,\n            title,\n            children,\n            schema,\n        } = this.props;\n\n        const {\n            faramValues,\n            faramErrors,\n        } = this.state;\n\n        return (\n            <Modal\n                className={className}\n                closeOnEscape\n                onClose={onClose}\n            >\n                <Faram\n                    onChange={this.handleFaramChange}\n                    onValidationFailure={this.handleFaramFailure}\n                    onValidationSuccess={this.handleFaramSuccess}\n                    schema={schema}\n                    value={faramValues}\n                    error={faramErrors}\n                >\n                    <ModalHeader title={title} />\n                    <ModalBody>\n                        {children}\n                    </ModalBody>\n                    <ModalFooter>\n                        <DangerButton\n                            onClick={onClose}\n                            autoFocus\n                        >\n                            Close\n                        </DangerButton>\n                        <PrimaryButton type=\"submit\">\n                            Apply\n                        </PrimaryButton>\n                    </ModalFooter>\n                </Faram>\n            </Modal>\n        );\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { modulo } from '@togglecorp/fujs';\n\nconst propTypes = {\n    focusedKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    // eslint-disable-next-line react/forbid-prop-types\n    options: PropTypes.array,\n    keySelector: PropTypes.func.isRequired,\n    isOptionsShown: PropTypes.bool,\n\n    onFocusChange: PropTypes.func.isRequired,\n    onHideOptions: PropTypes.func.isRequired,\n    onShowOptions: PropTypes.func.isRequired,\n    onOptionSelect: PropTypes.func.isRequired,\n};\n\nconst defaultProps = {\n    focusedKey: undefined,\n    options: [],\n    isOptionsShown: false,\n};\n\nconst TAB = 9;\nconst ESC = 27;\nconst ENTER = 13;\nconst DOWN = 38;\nconst UP = 40;\nconst specialKeys = [UP, DOWN, ENTER];\n\nconst getNewKey = (oldKey, increment, options, keySelector) => {\n    if (options.length <= 0) {\n        return undefined;\n    }\n\n    const index = options.findIndex(o => keySelector(o) === oldKey);\n    // NOTE: index should never to -1 to begin with\n\n    let oldIndex = index;\n    if (oldIndex === -1) {\n        oldIndex = increment > 0 ? -1 : 0;\n    }\n\n    const newIndex = modulo(oldIndex + increment, options.length);\n\n    return keySelector(options[newIndex]);\n};\n\nexport default (WrappedComponent) => {\n    const ListenerComponent = class extends React.PureComponent {\n        static propTypes = propTypes;\n\n        static defaultProps = defaultProps;\n\n        componentWillReceiveProps(nextProps) {\n            const {\n                isOptionsShown: oldIsOptionsShown,\n                options: oldOptions,\n                keySelector: oldKeySelector,\n            } = this.props;\n            const {\n                isOptionsShown: newIsOptionsShown,\n                options: newOptions,\n                keySelector: newKeySelector,\n            } = nextProps;\n\n            if (\n                (!oldIsOptionsShown && newIsOptionsShown)\n                || (oldKeySelector !== newKeySelector)\n                || (oldOptions !== newOptions)\n            ) {\n                const newFocusedKey = getNewKey(\n                    undefined,\n                    1,\n                    newOptions,\n                    newKeySelector,\n                );\n                nextProps.onFocusChange(newFocusedKey);\n            }\n        }\n\n        handleInputKeyDown = (e) => {\n            const {\n                focusedKey,\n                options,\n                keySelector,\n                isOptionsShown,\n\n                onHideOptions,\n                onShowOptions,\n                onOptionSelect,\n                onFocusChange,\n            } = this.props;\n            const { keyCode } = e;\n\n            if (isOptionsShown && (keyCode === TAB || keyCode === ESC)) {\n                // If tab or escape was pressed and dropdown is being shown,\n                // hide the dropdown.\n                onHideOptions();\n            } else if (!isOptionsShown && specialKeys.includes(keyCode)) {\n                // If any of the special keys was pressed but the dropdown is currently hidden,\n                // show the dropdown.\n                e.stopPropagation();\n                e.preventDefault();\n                onShowOptions();\n            } else if (keyCode === ENTER) {\n                if (focusedKey) {\n                    e.stopPropagation();\n                    e.preventDefault();\n                    onOptionSelect(focusedKey);\n                }\n            } else if (keyCode === UP) {\n                e.stopPropagation();\n                e.preventDefault();\n                const newFocusedKey = getNewKey(focusedKey, 1, options, keySelector);\n                onFocusChange(newFocusedKey);\n            } else if (keyCode === DOWN) {\n                e.stopPropagation();\n                e.preventDefault();\n                const newFocusedKey = getNewKey(focusedKey, -1, options, keySelector);\n                onFocusChange(newFocusedKey);\n            }\n        }\n\n        render() {\n            const {\n                focusedKey, // eslint-disable-line no-unused-vars, @typescript-eslint/no-unused-vars\n                options, // eslint-disable-line no-unused-vars, @typescript-eslint/no-unused-vars\n                // eslint-disable-next-line no-unused-vars, @typescript-eslint/no-unused-vars\n                keySelector,\n                // eslint-disable-next-line no-unused-vars, @typescript-eslint/no-unused-vars\n                isOptionsShown,\n                // eslint-disable-next-line no-unused-vars, @typescript-eslint/no-unused-vars\n                onFocusChange,\n                // eslint-disable-next-line no-unused-vars, @typescript-eslint/no-unused-vars\n                onHideOptions,\n                // eslint-disable-next-line no-unused-vars, @typescript-eslint/no-unused-vars\n                onShowOptions,\n                // eslint-disable-next-line no-unused-vars, @typescript-eslint/no-unused-vars\n                onOptionSelect,\n                ...otherProps\n            } = this.props;\n\n            return (\n                <WrappedComponent\n                    onKeyDown={this.handleInputKeyDown}\n                    {...otherProps}\n                />\n            );\n        }\n    };\n\n    return hoistNonReactStatics(ListenerComponent, WrappedComponent);\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { _cs } from '@togglecorp/fujs';\nimport styles from './styles.scss';\n\nconst propTypes = {\n    className: PropTypes.string,\n};\n\nconst defaultProps = {\n    className: '',\n};\n\nexport default class TextInput extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    render() {\n        // NOTE: elementRef is pass through prop.\n        // So, it doesn't require prop type declaration.\n\n        const {\n            className,\n            elementRef, // eslint-disable-line react/prop-types\n            ...otherProps\n        } = this.props;\n\n        return (\n            <input\n                ref={elementRef}\n                className={_cs(\n                    className,\n                    styles.rawInput,\n                    'raw-input',\n                )}\n                {...otherProps}\n            />\n        );\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './styles.scss';\n\nconst propTypes = {\n    className: PropTypes.string,\n    optionKey: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]).isRequired,\n    onClick: PropTypes.func.isRequired,\n    onFocus: PropTypes.func.isRequired,\n    children: PropTypes.node,\n    isActive: PropTypes.bool,\n    isFocused: PropTypes.bool,\n};\n\nconst defaultProps = {\n    isActive: false,\n    isFocused: false,\n    className: '',\n    children: undefined,\n};\n\nexport default class Option extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n        this.ref = React.createRef();\n        this.focusedByMouse = undefined;\n    }\n\n    componentDidMount() {\n        const { isFocused } = this.props;\n\n        if (isFocused) {\n            this.scrollToFocus();\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const { isFocused } = this.props;\n\n        if (!isFocused && nextProps.isFocused) {\n            this.scrollToFocus();\n        } else {\n            this.focusedByMouse = false;\n        }\n    }\n\n    getClassName = () => {\n        const {\n            className,\n            isActive,\n            isFocused,\n        } = this.props;\n\n        const classNames = [\n            className,\n            styles.option,\n            'option',\n        ];\n\n        if (isActive) {\n            classNames.push(styles.active);\n            classNames.push('active');\n        }\n\n        if (isFocused) {\n            classNames.push(styles.focused);\n            classNames.push('focused');\n        }\n\n        return classNames.join(' ');\n    }\n\n    handleClick = () => {\n        const {\n            optionKey,\n            onClick,\n        } = this.props;\n\n        onClick(optionKey);\n    }\n\n    handleMouseMove = () => {\n        const {\n            optionKey,\n            onFocus,\n        } = this.props;\n\n        this.focusedByMouse = true;\n        onFocus(optionKey);\n    }\n\n    handleMouseLeave = () => {\n        this.focusedByMouse = false;\n    }\n\n    scrollToFocus = () => {\n        if (!this.focusedByMouse) {\n            this.ref.current.scrollIntoView({\n                block: 'nearest',\n            });\n        }\n    }\n\n    render() {\n        const { children } = this.props;\n        const className = this.getClassName();\n\n        return (\n            <button\n                ref={this.ref}\n                className={className}\n                onClick={this.handleClick}\n                onMouseMove={this.handleMouseMove}\n                onMouseLeave={this.handleMouseLeave}\n                type=\"button\"\n            >\n                { children }\n            </button>\n        );\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport FloatingContainer from '../../../View/FloatingContainer';\nimport List from '../../../View/List';\n\nimport Option from './Option';\n\nimport styles from './styles.scss';\n\nconst propTypes = {\n    className: PropTypes.string,\n    show: PropTypes.bool,\n    data: PropTypes.arrayOf(PropTypes.object),\n    keySelector: PropTypes.func.isRequired,\n    labelSelector: PropTypes.func.isRequired,\n    optionLabelSelector: PropTypes.func,\n    renderEmpty: PropTypes.func,\n    onOptionClick: PropTypes.func.isRequired,\n    onOptionFocus: PropTypes.func.isRequired,\n    value: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    focusedKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    onBlur: PropTypes.func.isRequired,\n    onInvalidate: PropTypes.func.isRequired,\n\n    // eslint-disable-next-line react/forbid-prop-types\n    parentContainer: PropTypes.object,\n};\n\nconst defaultProps = {\n    className: '',\n    show: false,\n    data: [],\n    focusedKey: undefined,\n    optionLabelSelector: undefined,\n    renderEmpty: () => 'No option available',\n    value: undefined,\n    parentContainer: undefined,\n};\n\nexport default class Options extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    renderOption = (_, option) => {\n        const {\n            keySelector,\n            labelSelector,\n            optionLabelSelector,\n            onOptionClick,\n            onOptionFocus,\n            value,\n            focusedKey,\n        } = this.props;\n\n        const key = keySelector(option);\n        const label = optionLabelSelector ? (\n            optionLabelSelector(option)\n        ) : (\n            labelSelector(option)\n        );\n\n        const isActive = key === value;\n        const isFocused = key === focusedKey;\n\n        return (\n            <Option\n                key={key}\n                optionKey={key}\n                onClick={onOptionClick}\n                onFocus={onOptionFocus}\n                isActive={isActive}\n                isFocused={isFocused}\n            >\n                { label }\n            </Option>\n        );\n    }\n\n    renderEmpty = () => {\n        const {\n            data,\n            renderEmpty: EmptyComponent,\n        } = this.props;\n\n        if (data.length !== 0) {\n            return null;\n        }\n\n        const className = `\n            empty\n            ${styles.empty}\n        `;\n\n        return (\n            <div className={className}>\n                <EmptyComponent />\n            </div>\n        );\n    }\n\n    render() {\n        const {\n            className: classNameFromProps,\n            show,\n            data,\n            onBlur,\n            onInvalidate,\n            parentContainer,\n        } = this.props;\n\n        if (!show) {\n            return null;\n        }\n\n        const className = `\n            ${classNameFromProps}\n            ${styles.options}\n            options\n        `;\n\n        const Empty = this.renderEmpty;\n\n        return (\n            <FloatingContainer\n                onBlur={onBlur}\n                onInvalidate={onInvalidate}\n                parent={parentContainer}\n                className={className}\n            >\n                <List\n                    data={data}\n                    modifier={this.renderOption}\n                />\n                <Empty />\n            </FloatingContainer>\n        );\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport memoize from 'memoize-one';\nimport {\n    caseInsensitiveSubmatch,\n    compareStringSearch,\n    _cs,\n} from '@togglecorp/fujs';\nimport { FaramInputElement } from '@togglecorp/faram';\n\n\nimport Button from '../../Action/Button';\nimport DangerButton from '../../Action/Button/DangerButton';\nimport handleKeyboard from '../../General/HandleKeyboard';\nimport HintAndError from '../HintAndError';\nimport Label from '../Label';\nimport RawInput from '../RawInput';\n\nimport {\n    calcFloatPositionInMainWindow,\n    defaultOffset,\n    defaultLimit,\n} from '../../../utils/bounds';\n\nimport Options from './Options';\nimport styles from './styles.scss';\n\nconst propTypeKey = PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n]);\n\nconst RawKeyInput = handleKeyboard(RawInput);\nconst emptyList = [];\n\n// NOTE: labelSelector must return string\n// NOTE: optionLabelSelector may return renderable node\nconst propTypes = {\n    autoFocus: PropTypes.bool,\n    disabled: PropTypes.bool,\n    hideClearButton: PropTypes.bool,\n    readOnly: PropTypes.bool,\n    showHintAndError: PropTypes.bool,\n    showLabel: PropTypes.bool,\n\n    className: PropTypes.string,\n    error: PropTypes.string,\n    hint: PropTypes.string,\n    label: PropTypes.string,\n    optionsClassName: PropTypes.string,\n    placeholder: PropTypes.string,\n    title: PropTypes.string,\n\n    options: PropTypes.arrayOf(PropTypes.object),\n    value: propTypeKey,\n    onChange: PropTypes.func.isRequired,\n\n    keySelector: PropTypes.func,\n    labelSelector: PropTypes.func,\n    optionLabelSelector: PropTypes.func,\n\n    renderEmpty: PropTypes.func,\n};\n\nconst defaultProps = {\n    autoFocus: undefined,\n    className: '',\n    disabled: false,\n    error: undefined,\n    hideClearButton: false,\n    hint: undefined,\n    keySelector: d => d.key,\n    label: '',\n    labelSelector: d => d.label,\n    optionLabelSelector: undefined,\n    options: emptyList,\n    optionsClassName: '',\n    placeholder: 'Select an option',\n    readOnly: false,\n    renderEmpty: undefined,\n    showHintAndError: true,\n    showLabel: true,\n    title: undefined,\n    value: undefined,\n};\n\nclass SelectInput extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            // FIXME: this may break\n            inputInFocus: props.autoFocus,\n            focusedKey: undefined,\n\n            showOptionsPopup: false,\n            searchValue: undefined,\n        };\n\n        this.containerRef = React.createRef();\n        this.inputRef = React.createRef();\n    }\n\n    componentDidMount() {\n        const { current: container } = this.containerRef;\n        if (container) {\n            this.boundingClientRect = container.getBoundingClientRect();\n        }\n    }\n\n    filterOptions = memoize((\n        options,\n        labelSelector,\n        value,\n    ) => {\n        const newOptions = options\n            .filter(\n                option => (\n                    value === undefined || caseInsensitiveSubmatch(labelSelector(option), value)\n                ),\n            )\n            .sort((a, b) => compareStringSearch(\n                labelSelector(a),\n                labelSelector(b),\n                value,\n            ));\n        return newOptions;\n    });\n\n    findDefaultSearchValue = memoize((\n        options,\n        labelSelector,\n        keySelector,\n        value,\n    ) => {\n        const activeOption = options.find(\n            d => keySelector(d) === value,\n        );\n\n        if (activeOption === undefined) {\n            return '';\n        }\n\n        return labelSelector(activeOption);\n    });\n\n\n    // Helper\n\n    handleShowOptionsPopup = () => {\n        const { current: input } = this.inputRef;\n        if (input) {\n            input.select();\n        }\n\n        /*\n        // NOTE: this may not be required\n        const { current: container } = this.containerRef;\n        if (container) {\n            this.boundingClientRect = container.getBoundingClientRect();\n        }\n        */\n\n        this.setState({\n            showOptionsPopup: true,\n            searchValue: undefined,\n        });\n    }\n\n    handleHideOptionsPopup = () => {\n        this.setState({\n            showOptionsPopup: false,\n            searchValue: undefined,\n        });\n    }\n\n    // Input\n\n    handleInputFocus = () => {\n        this.setState({ inputInFocus: true });\n    }\n\n    handleInputBlur = () => {\n        this.setState({ inputInFocus: false });\n    }\n\n    handleInputChange = (e) => {\n        const { value } = e.target;\n\n        /*\n        // NOTE: this may not be required\n        const { current: container } = this.containerRef;\n        if (container) {\n            this.boundingClientRect = container.getBoundingClientRect();\n        }\n        */\n\n        this.setState({\n            showOptionsPopup: true,\n            searchValue: value,\n        });\n    }\n\n    // Options\n\n    handleOptionsInvalidate = (optionsContainer) => {\n        const contentRect = optionsContainer.getBoundingClientRect();\n        let parentRect = this.boundingClientRect;\n        const { current: container } = this.containerRef;\n\n        if (container) {\n            parentRect = container.getBoundingClientRect();\n        }\n\n        const { showHintAndError } = this.props;\n\n        const offset = { ...defaultOffset };\n        if (showHintAndError) {\n            offset.top = 12;\n        }\n\n        const limit = {\n            ...defaultLimit,\n            minW: parentRect.width,\n            maxW: parentRect.width,\n        };\n\n        const optionsContainerPosition = (\n            calcFloatPositionInMainWindow({\n                parentRect,\n                contentRect,\n                offset,\n                limit,\n            })\n        );\n\n        return optionsContainerPosition;\n    };\n\n    handleOptionSelect = (optionKey) => {\n        const {\n            value,\n            onChange,\n        } = this.props;\n\n        this.setState({\n            showOptionsPopup: false,\n            searchValue: undefined,\n        });\n\n        if (optionKey !== value) {\n            onChange(optionKey);\n        }\n    }\n\n    handleClearButtonClick = () => {\n        const {\n            onChange,\n            value,\n        } = this.props;\n\n        if (value !== undefined) {\n            onChange(undefined);\n        }\n    }\n\n    handleFocusChange = (focusedKey) => {\n        this.setState({ focusedKey });\n    }\n\n    render() {\n        const {\n            error,\n            hint,\n            keySelector,\n            label,\n            labelSelector,\n            optionLabelSelector,\n            optionsClassName,\n            renderEmpty,\n            showHintAndError,\n            showLabel,\n            title,\n            value,\n            disabled,\n            readOnly,\n            placeholder,\n            autoFocus,\n            hideClearButton,\n            className: classNameFromProps,\n            options,\n        } = this.props;\n\n        const {\n            showOptionsPopup,\n            focusedKey,\n            inputInFocus,\n            searchValue,\n        } = this.state;\n\n        // NOTE: finalSearchValue shouldn't be undefined\n        const finalSearchValue = searchValue === undefined\n            ? this.findDefaultSearchValue(options, labelSelector, keySelector, value)\n            : searchValue;\n\n        const isFilled = finalSearchValue && finalSearchValue.length !== 0;\n        const showClearButton = isFilled && !(hideClearButton || disabled || readOnly);\n\n        const { current: container } = this.containerRef;\n\n        const filteredOptions = this.filterOptions(\n            options,\n            labelSelector,\n            // NOTE: Using value instead of finalSearchValue\n            // this will display all options at first\n            searchValue,\n        );\n\n        const className = _cs(\n            classNameFromProps,\n            'select-input',\n            styles.selectInput,\n            showOptionsPopup && styles.showOptions,\n            showOptionsPopup && 'show-options',\n            disabled && styles.disabled,\n            disabled && 'disabled',\n            error && styles.error,\n            error && 'error',\n            inputInFocus && styles.inputInFocus,\n            inputInFocus && 'input-in-focus',\n            hideClearButton && styles.hideClearButton,\n            hideClearButton && 'hide-clear-button',\n            isFilled && styles.filled,\n            isFilled && 'filled',\n        );\n\n        const inputClassName = _cs(\n            styles.inputAndActions,\n            'input-and-actions',\n        );\n\n        const actionsClassName = `\n            actions\n            ${styles.actions}\n        `;\n\n        const dropdownButtonClassName = `\n            dropdown-button\n            ${styles.dropdownButton}\n        `;\n\n        const clearClassName = `\n            clear-button\n            ${styles.clearButton}\n        `;\n\n        return (\n            <div\n                className={className}\n                ref={this.containerRef}\n                title={title}\n            >\n                { showLabel && (\n                    <Label\n                        text={label}\n                        error={!!error}\n                        disabled={disabled}\n                        active={inputInFocus || showOptionsPopup}\n                    />\n                )}\n                <div className={inputClassName}>\n                    <RawKeyInput\n                        className={styles.input}\n                        type=\"text\"\n                        elementRef={this.inputRef}\n                        onBlur={this.handleInputBlur}\n                        onFocus={this.handleInputFocus}\n                        onClick={this.handleShowOptionsPopup}\n                        onChange={this.handleInputChange}\n                        value={finalSearchValue}\n                        autoFocus={autoFocus}\n                        placeholder={placeholder}\n                        disabled={disabled || readOnly}\n\n                        focusedKey={focusedKey}\n                        options={filteredOptions}\n                        keySelector={keySelector}\n                        isOptionsShown={showOptionsPopup}\n                        onFocusChange={this.handleFocusChange}\n                        onHideOptions={this.handleHideOptionsPopup}\n                        onShowOptions={this.handleShowOptionsPopup}\n                        onOptionSelect={this.handleOptionSelect}\n                    />\n                    <div className={actionsClassName}>\n                        { showClearButton && (\n                            <DangerButton\n                                tabIndex=\"-1\"\n                                iconName=\"close\"\n                                className={clearClassName}\n                                onClick={this.handleClearButtonClick}\n                                transparent\n                            />\n                        )}\n                        <Button\n                            tabIndex=\"-1\"\n                            iconName=\"arrowDropdown\"\n                            className={dropdownButtonClassName}\n                            onClick={this.handleShowOptionsPopup}\n                            disabled={disabled || readOnly}\n                            transparent\n                        />\n                    </div>\n                </div>\n                { showHintAndError && (\n                    <HintAndError\n                        error={error}\n                        hint={hint}\n                    />\n                )}\n                <Options\n                    className={optionsClassName}\n                    labelSelector={labelSelector}\n                    onBlur={this.handleHideOptionsPopup}\n                    onInvalidate={this.handleOptionsInvalidate}\n                    onOptionClick={this.handleOptionSelect}\n                    optionLabelSelector={optionLabelSelector}\n                    parentContainer={container}\n                    renderEmpty={renderEmpty}\n                    value={value}\n\n                    show={showOptionsPopup}\n                    keySelector={keySelector}\n                    data={filteredOptions}\n                    onOptionFocus={this.handleFocusChange}\n                    focusedKey={focusedKey}\n                />\n            </div>\n        );\n    }\n}\n\nexport default FaramInputElement(SelectInput);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\n\nconst propTypes = {\n    value: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n    onChange: PropTypes.func,\n    changeDelay: PropTypes.number,\n};\n\nconst defaultProps = {\n    value: undefined,\n    onChange: () => {},\n    changeDelay: 100,\n};\n\nexport default (WrappedComponent) => {\n    const DelayedComponent = class extends React.PureComponent {\n        static propTypes = propTypes;\n\n        static defaultProps = defaultProps;\n\n        constructor(props) {\n            super(props);\n            const { value } = props;\n\n            this.pendingChange = false;\n            this.lastValue = value;\n            this.state = {\n                value,\n            };\n        }\n\n        componentWillReceiveProps(nextProps) {\n            const { value } = this.props;\n            if (value !== nextProps.value) {\n                if (!this.pendingChange) {\n                    this.lastValue = nextProps.value;\n                    this.setState({\n                        value: nextProps.value,\n                    });\n                } else {\n                    console.warn('DELAYER: Not sending new value due to pending change.');\n                }\n            }\n        }\n\n        componentWillUnmount() {\n            if (this.changeTimeout) {\n                clearTimeout(this.changeTimeout);\n            }\n        }\n\n        handleChange = (value, error, info) => {\n            const {\n                onChange,\n                changeDelay,\n            } = this.props;\n\n            if (this.changeTimeout) {\n                clearTimeout(this.changeTimeout);\n            }\n\n            this.pendingChange = true;\n            this.setState({ value });\n\n            this.changeTimeout = setTimeout(\n                () => {\n                    this.pendingChange = false;\n                    // this.setState({ value: this.lastValue });\n                    onChange(value, error, info);\n                },\n                changeDelay,\n            );\n        }\n\n        render() {\n            const {\n                onChange, // eslint-disable-line no-unused-vars, @typescript-eslint/no-unused-vars\n                value, // eslint-disable-line no-unused-vars, @typescript-eslint/no-unused-vars\n                // eslint-disable-next-line no-unused-vars, @typescript-eslint/no-unused-vars\n                changeDelay,\n                ...otherProps\n            } = this.props;\n            const { value: stateValue } = this.state;\n\n            return (\n                <WrappedComponent\n                    value={stateValue}\n                    onChange={this.handleChange}\n                    {...otherProps}\n                />\n            );\n        }\n    };\n\n    return hoistNonReactStatics(DelayedComponent, WrappedComponent);\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nconst propTypes = {\n    className: PropTypes.string,\n};\n\nconst defaultProps = {\n    className: '',\n};\n\n\nexport default class DaysHeader extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    static dayNames = [\n        { key: 'sunday', value: 'S' },\n        { key: 'monday', value: 'M' },\n        { key: 'tuesday', value: 'T' },\n        { key: 'wednesday', value: 'W' },\n        { key: 'thursday', value: 'T' },\n        { key: 'friday', value: 'F' },\n        { key: 'saturday', value: 'S' },\n    ];\n\n    render() {\n        const { className } = this.props;\n        return (\n            <div className={`days-header ${className}`}>\n                {\n                    DaysHeader.dayNames.map(d => (\n                        <span\n                            className=\"day\"\n                            key={d.key}\n                        >\n                            {d.value}\n                        </span>\n                    ))\n                }\n            </div>\n        );\n    }\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport Button from '../../../Action/Button';\n\nimport DaysHeader from './DaysHeader';\nimport styles from './styles.scss';\n\nconst propTypes = {\n    className: PropTypes.string,\n    year: PropTypes.number.isRequired,\n    month: PropTypes.number.isRequired,\n    value: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    onChange: PropTypes.func,\n    onYearMonthChange: PropTypes.func,\n    onMonthClick: PropTypes.func,\n};\n\nconst defaultProps = {\n    className: '',\n    value: undefined,\n    onChange: undefined,\n    onYearMonthChange: undefined,\n    onMonthClick: undefined,\n};\n\nexport default class DayPicker extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    static monthNames = [\n        'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',\n        'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec',\n    ];\n\n    constructor(props) {\n        super(props);\n        this.createDays(props);\n\n        this.today = new Date();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const {\n            year,\n            month,\n            value,\n        } = this.props;\n\n        if (year !== nextProps.year\n            || month !== nextProps.month\n            || value !== nextProps.value\n        ) {\n            this.createDays(nextProps);\n        }\n    }\n\n    getDayClassName = (dayKey) => {\n        const { year, month } = this.props;\n\n        const highlight = (\n            this.today.getFullYear() === year\n            && this.today.getMonth() + 1 === month\n            && this.today.getDate() === dayKey\n        );\n\n        const classNames = [styles.day];\n        if (this.selectedId === dayKey) {\n            classNames.push('selected');\n            classNames.push(styles.selected);\n        }\n        if (highlight) {\n            classNames.push('highlighted');\n            classNames.push(styles.highlighted);\n        }\n        return classNames.join(' ');\n    }\n\n    handleDayChange = (value) => {\n        if (!value) {\n            return;\n        }\n\n        const { year, month, onChange } = this.props;\n        const newValue = new Date(year, month - 1, value);\n\n        if (onChange) {\n            const oldTimestamp = new Date(value).getTime();\n            const newTimestamp = newValue.getTime();\n            onChange(newTimestamp, oldTimestamp !== newTimestamp);\n        }\n    }\n\n    handlePrevious = () => {\n        const { year, month, onYearMonthChange } = this.props;\n        if (onYearMonthChange) {\n            const date = new Date(year, month - 2, 1);\n            if (date.getFullYear() >= 1990) {\n                onYearMonthChange(date.getFullYear(), date.getMonth() + 1);\n            }\n        }\n    }\n\n    handleNext = () => {\n        const { year, month, onYearMonthChange } = this.props;\n        if (onYearMonthChange) {\n            const date = new Date(year, month, 1);\n            onYearMonthChange(date.getFullYear(), date.getMonth() + 1);\n        }\n    }\n\n    createDays({ year, month, value }) {\n        const firstDate = new Date(year, month - 1, 1);\n        const lastDate = new Date(year, month, 0);\n        const selected = value && new Date(value);\n\n        const numDays = (lastDate.getDate() - firstDate.getDate()) + 1;\n        const firstDay = firstDate.getDay();\n        const totalDays = numDays + firstDay;\n        const lastDay = lastDate.getDay();\n\n        this.selectedId = -1;\n        if (selected && selected.getFullYear() === year && selected.getMonth() + 1 === month) {\n            this.selectedId = (firstDay + selected.getDate());\n        }\n\n        const weeks = [];\n        for (let i = 0; i < totalDays / 7; i += 1) {\n            const days = [];\n            if (i === 0) {\n                for (let j = 0; j < firstDay; j += 1) {\n                    days.push({ key: j, value: undefined });\n                }\n                for (let j = firstDay; j < 7; j += 1) {\n                    days.push({ key: j + 1, value: (j - firstDay) + 1 });\n                }\n            } else if (i === parseInt(totalDays / 7, 10)) {\n                const initial = (i * 7) + 1;\n                for (let j = 0; j <= lastDay; j += 1) {\n                    days.push({ key: initial + j, value: initial + (j - firstDay) });\n                }\n            } else {\n                const initial = (i * 7) + 1;\n                for (let j = 0; j < 7; j += 1) {\n                    days.push({ key: initial + j, value: initial + (j - firstDay) });\n                }\n            }\n\n            weeks.push({\n                week: i,\n                days,\n            });\n        }\n        this.weeks = weeks;\n    }\n\n\n    renderDay = day => (\n        <div\n            key={day.key}\n            className={this.getDayClassName(day.key)}\n        >\n            {\n                day.value && (\n                    <Button\n                        onClick={() => this.handleDayChange(day.value)}\n                        transparent\n                    >\n                        {day.value}\n                    </Button>\n                )\n            }\n        </div>\n    )\n\n    renderWeek = week => (\n        <div\n            key={week.week}\n            className={styles.week}\n        >\n            { week.days.map(this.renderDay) }\n        </div>\n    )\n\n    render() {\n        const {\n            className,\n            month,\n            year,\n            onMonthClick,\n        } = this.props;\n        const monthName = DayPicker.monthNames[month - 1];\n\n        const classNames = [\n            className,\n            'day-picker',\n            styles.dayPicker,\n        ];\n\n        return (\n            <div className={classNames.join(' ')}>\n                <header className={styles.header}>\n                    <Button\n                        className={styles.left}\n                        onClick={this.handlePrevious}\n                        transparent\n                        iconName=\"chevronLeft\"\n                    />\n                    <Button\n                        className={styles.month}\n                        onClick={onMonthClick}\n                        transparent\n                    >\n                        {`${monthName} ${year}`}\n                    </Button>\n                    <Button\n                        className={styles.right}\n                        onClick={this.handleNext}\n                        transparent\n                        iconName=\"chevronRight\"\n                    />\n                    <DaysHeader className={styles.days} />\n                </header>\n                <div className={styles.weeks}>\n                    { this.weeks.map(this.renderWeek) }\n                </div>\n            </div>\n        );\n    }\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styles from './styles.scss';\n\nimport Button from '../../../Action/Button';\n\nconst propTypes = {\n    className: PropTypes.string,\n    year: PropTypes.number.isRequired,\n    month: PropTypes.number.isRequired,\n    value: PropTypes.number,\n    onYearMonthChange: PropTypes.func,\n    onYearClick: PropTypes.func,\n};\n\nconst defaultProps = {\n    className: '',\n    value: undefined,\n    onYearMonthChange: undefined,\n    onYearClick: undefined,\n};\n\n\nexport default class MonthPicker extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    static monthNames = [\n        'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',\n        'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec',\n    ];\n\n    getMonthClassName = (monthIndex) => {\n        const { year, value } = this.props;\n        const classNames = [styles.month];\n\n        const selected = value && new Date(value);\n        if (selected && monthIndex === selected.getMonth() && year === selected.getFullYear()) {\n            classNames.push(styles.selected);\n        }\n        return classNames.join(' ');\n    }\n\n    handlePrevYearClick = () => {\n        const { year, month, onYearMonthChange } = this.props;\n        if (year > 1990 && onYearMonthChange) {\n            onYearMonthChange(year - 1, month);\n        }\n    }\n\n    handleNextYearClick = () => {\n        const { year, month, onYearMonthChange } = this.props;\n        if (onYearMonthChange) {\n            onYearMonthChange(year + 1, month);\n        }\n    }\n\n    handleMonthChange = (monthIndex) => {\n        const { year, onYearMonthChange } = this.props;\n        if (onYearMonthChange) {\n            onYearMonthChange(year, monthIndex + 1, 'day');\n        }\n    }\n\n    render() {\n        const {\n            className,\n            year,\n            onYearClick,\n        } = this.props;\n\n        return (\n            <div className={`${className} ${styles.monthPicker}`}>\n                <header className={styles.header}>\n                    <Button\n                        className={styles.left}\n                        onClick={this.handlePrevYearClick}\n                        transparent\n                        iconName=\"chevronLeft\"\n                    />\n                    <Button\n                        className={styles.year}\n                        onClick={onYearClick}\n                        transparent\n                    >\n                        { year }\n                    </Button>\n                    <Button\n                        className={styles.right}\n                        onClick={this.handleNextYearClick}\n                        transparent\n                        iconName=\"chevronRight\"\n                    />\n                </header>\n\n                <div className={styles.months}>\n                    {MonthPicker.monthNames.map((monthName, monthIndex) => (\n                        <Button\n                            key={monthName}\n                            className={this.getMonthClassName(monthIndex)}\n                            onClick={() => this.handleMonthChange(monthIndex)}\n                            transparent\n                        >\n                            { monthName }\n                        </Button>\n                    ))}\n                </div>\n            </div>\n        );\n    }\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styles from './styles.scss';\n\nimport Button from '../../../Action/Button';\n\nconst propTypes = {\n    className: PropTypes.string,\n    year: PropTypes.number.isRequired,\n    month: PropTypes.number.isRequired,\n    value: PropTypes.number,\n    onYearMonthChange: PropTypes.func,\n};\n\nconst defaultProps = {\n    className: '',\n    value: undefined,\n    onYearMonthChange: undefined,\n};\n\n\nconst YEARS_PER_PAGE = 12;\n\nexport default class YearPicker extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n        const { year } = props;\n        this.state = {\n            startYear: Math.round(year / YEARS_PER_PAGE) * YEARS_PER_PAGE,\n        };\n    }\n\n    getYearClassName = (year) => {\n        const { value } = this.props;\n        const classNames = [styles.year];\n\n        const selected = value ? new Date(value).getFullYear() : -1;\n        if (selected === year) {\n            classNames.push(styles.selected);\n        }\n        return classNames.join(' ');\n    }\n\n    handleYearChange = (year) => {\n        const { month, onYearMonthChange } = this.props;\n        if (year >= 1990 && onYearMonthChange) {\n            onYearMonthChange(year, month, 'month');\n        }\n    }\n\n    handlePrevious = () => {\n        this.setState(oldState => ({\n            startYear: oldState.startYear - YEARS_PER_PAGE,\n        }));\n    }\n\n    handleNext = () => {\n        this.setState(oldState => ({\n            startYear: oldState.startYear + YEARS_PER_PAGE,\n        }));\n    }\n\n    render() {\n        const { startYear } = this.state;\n        const { className } = this.props;\n\n        const years = [];\n        for (let i = 0; i < YEARS_PER_PAGE; i += 1) {\n            years.push(startYear + i);\n        }\n        const endYear = (startYear + YEARS_PER_PAGE) - 1;\n\n        return (\n            <div className={`${className} ${styles.yearPicker}`}>\n                <header className={styles.header}>\n                    <Button\n                        className={styles.left}\n                        onClick={this.handlePrevious}\n                        transparent\n                        iconName=\"chevronLeft\"\n                    />\n                    <Button\n                        className={styles.title}\n                        transparent\n                    >\n                        {`${startYear} - ${endYear}`}\n                    </Button>\n                    <Button\n                        className={styles.right}\n                        onClick={this.handleNext}\n                        transparent\n                        iconName=\"chevronRight\"\n                    />\n                </header>\n                <div className={styles.years}>\n                    {years.map(year => (\n                        <Button\n                            key={year}\n                            className={this.getYearClassName(year)}\n                            onClick={() => this.handleYearChange(year)}\n                            transparent\n                        >\n                            { year }\n                        </Button>\n                    ))}\n                </div>\n            </div>\n        );\n    }\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { FaramInputElement } from '@togglecorp/faram';\n\nimport DayPicker from './DayPicker';\nimport MonthPicker from './MonthPicker';\nimport YearPicker from './YearPicker';\n\nimport styles from './styles.scss';\n\n\nconst propTypes = {\n    className: PropTypes.string,\n    value: PropTypes.number,\n    onChange: PropTypes.func,\n};\n\nconst defaultProps = {\n    className: '',\n    value: undefined,\n    onChange: undefined,\n};\n\n\nclass DatePicker extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n\n        const initialDate = props.value ? new Date(props.value) : new Date();\n        this.state = {\n            year: initialDate.getFullYear(),\n            month: initialDate.getMonth() + 1,\n\n            picker: 'day',\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const { value } = this.props;\n        if (nextProps.value !== value && nextProps.value) {\n            const date = new Date(nextProps.value);\n            this.setState({\n                year: date.getFullYear(),\n                month: date.getMonth() + 1,\n            });\n        }\n    }\n\n    getClassName = () => {\n        const { className } = this.props;\n\n        const classNames = [\n            className,\n            styles.datePicker,\n            'date-picker',\n        ];\n\n        return classNames.join(' ');\n    }\n\n    setMonthPicker = () => {\n        this.setState({ picker: 'month' });\n    }\n\n    setYearPicker = () => {\n        this.setState({ picker: 'year' });\n    }\n\n    handleYearMonthChange = (year, month, picker = undefined) => {\n        this.setState(oldState => ({\n            year,\n            month,\n            picker: picker || oldState.picker,\n        }));\n    }\n\n    renderPicker = () => {\n        const {\n            value,\n            onChange,\n        } = this.props;\n\n        const {\n            year,\n            month,\n            picker,\n        } = this.state;\n\n\n        switch (picker) {\n            case 'day':\n                return (\n                    <DayPicker\n                        year={year}\n                        month={month}\n                        value={value}\n                        onChange={onChange}\n                        onMonthClick={this.setMonthPicker}\n                        onYearMonthChange={this.handleYearMonthChange}\n                    />\n                );\n            case 'month':\n                return (\n                    <MonthPicker\n                        year={year}\n                        month={month}\n                        value={value}\n                        onYearClick={this.setYearPicker}\n                        onYearMonthChange={this.handleYearMonthChange}\n                    />\n                );\n            case 'year':\n                return (\n                    <YearPicker\n                        year={year}\n                        month={month}\n                        value={value}\n                        onYearMonthChange={this.handleYearMonthChange}\n                    />\n                );\n            default:\n                return null;\n        }\n    }\n\n    render() {\n        const className = this.getClassName();\n        const Picker = this.renderPicker;\n\n        return (\n            <div className={className}>\n                <Picker />\n            </div>\n        );\n    }\n}\n\nexport default FaramInputElement(DatePicker);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport {\n    padStart,\n    isFalsy,\n    _cs,\n} from '@togglecorp/fujs';\n\nimport RawInput from '../RawInput';\n\n\nimport styles from './styles.scss';\n\nconst propTypes = {\n    onChange: PropTypes.func,\n    value: PropTypes.string,\n    padLength: PropTypes.number,\n    className: PropTypes.string,\n};\nconst defaultProps = {\n    value: '',\n    onChange: undefined,\n    padLength: 2,\n    className: '',\n};\n\nexport default class DigitalInput extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    static padAndTrim = (value, padLength) => {\n        if (isFalsy(value, [''])) {\n            return '';\n        }\n        return padStart(+value % (10 ** padLength), padLength, '0');\n    }\n\n    static getNewValue = (newValue, oldValue, padLength) => {\n        // NOTE: to identify a backspace, we look at the length of\n        // old value and new value. (New value will be shorter than old value)\n        // However, when value is changed from arrows in number input,\n        // this algorithm cannot differentiate between the two.\n        if (\n            isFalsy(newValue, [''])\n            || (\n                oldValue !== undefined\n                && oldValue.length > newValue.length\n                && newValue.match(/^0+$/)\n            )\n        ) {\n            return '';\n        }\n        const newerValue = DigitalInput.padAndTrim(newValue, padLength);\n        return newerValue;\n    }\n\n    handleChange = (event) => {\n        const { value } = event.target;\n        const {\n            value: valueFromProps,\n            padLength,\n            onChange,\n        } = this.props;\n\n        if (onChange) {\n            const newValue = DigitalInput.getNewValue(value, valueFromProps, padLength);\n            onChange(newValue);\n        }\n    }\n\n    render() {\n        const {\n            className: classNameFromProps,\n            onChange, // eslint-disable-line no-unused-vars, @typescript-eslint/no-unused-vars\n            padLength, // eslint-disable-line no-unused-vars, @typescript-eslint/no-unused-vars\n            ...otherProps\n        } = this.props;\n\n        const className = _cs(\n            classNameFromProps,\n            'digital-input',\n            styles.digitalInput,\n        );\n\n        return (\n            <RawInput\n                className={className}\n                type=\"number\"\n                onChange={this.handleChange}\n                {...otherProps}\n            />\n        );\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport FloatingContainer from '../../../View/FloatingContainer';\nimport Icon from '../../../General/Icon';\n\nimport styles from './styles.scss';\n\nconst ActionButtons = ({\n    disabled,\n    readOnly,\n    onClearButtonClick,\n    onTodayButtonClick,\n    onCalendarButtonClick,\n    className,\n    onInvalidate,\n}) => {\n    const classNames = [\n        className,\n        'action-buttons',\n    ];\n\n    const clearButtonClassName = [\n        'button',\n        styles.button,\n        'clear',\n        styles.clear,\n    ].join(' ');\n\n    return (\n        <FloatingContainer\n            className={classNames.join(' ')}\n            onInvalidate={onInvalidate}\n        >\n            <button\n                className={clearButtonClassName}\n                type=\"button\"\n                onClick={onClearButtonClick}\n                title=\"Clear date\"\n                tabIndex=\"-1\"\n                disabled={disabled || readOnly}\n            >\n                <Icon name=\"closeRound\" />\n            </button>\n            <button\n                onClick={onTodayButtonClick}\n                className={styles.button}\n                type=\"button\"\n                title=\"Set date to today\"\n                tabIndex=\"-1\"\n                disabled={disabled || readOnly}\n            >\n                <Icon name=\"clock\" />\n            </button>\n            <button\n                onClick={onCalendarButtonClick}\n                className={styles.button}\n                type=\"button\"\n                title=\"Open date picker\"\n                tabIndex=\"-1\"\n                disabled={disabled || readOnly}\n            >\n                <Icon name=\"calendar\" />\n            </button>\n        </FloatingContainer>\n    );\n};\n\nActionButtons.propTypes = {\n    onClearButtonClick: PropTypes.func.isRequired,\n    onTodayButtonClick: PropTypes.func.isRequired,\n    onCalendarButtonClick: PropTypes.func.isRequired,\n    disabled: PropTypes.bool,\n    readOnly: PropTypes.bool,\n    className: PropTypes.string,\n    onInvalidate: PropTypes.func.isRequired,\n};\n\nActionButtons.defaultProps = {\n    disabled: false,\n    readOnly: false,\n    className: '',\n};\n\nexport default ActionButtons;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport {\n    padStart,\n    getErrorForDateValues,\n    getNumDaysInMonthX,\n    isFalsy,\n    decodeDate as decodeAsDate,\n} from '@togglecorp/fujs';\nimport { FaramInputElement } from '@togglecorp/faram';\n\nimport FloatingContainer from '../../View/FloatingContainer';\nimport Delay from '../../General/Delay';\nimport DatePicker from '../DatePicker';\n\nimport HintAndError from '../HintAndError';\nimport Label from '../Label';\nimport DigitalInput from '../DigitalInput';\n\nimport {\n    calcFloatPositionInMainWindow,\n    defaultOffset,\n    defaultLimit,\n} from '../../../utils/bounds';\n\nimport ActionButtons from './ActionButtons';\nimport styles from './styles.scss';\n\nconst propTypes = {\n    className: PropTypes.string,\n    disabled: PropTypes.bool,\n    readOnly: PropTypes.bool,\n    hint: PropTypes.string,\n    error: PropTypes.string,\n    label: PropTypes.string,\n    onChange: PropTypes.func,\n    showLabel: PropTypes.bool,\n    showHintAndError: PropTypes.bool,\n    value: PropTypes.string,\n    title: PropTypes.string,\n    separator: PropTypes.string,\n};\n\nconst defaultProps = {\n    className: '',\n    disabled: false,\n    error: '',\n    hint: '',\n    label: '',\n    onChange: () => {},\n    showLabel: true,\n    separator: '-',\n    readOnly: false,\n    value: undefined,\n    showHintAndError: true,\n    title: undefined,\n};\n\nconst MIN_YEAR = 1900;\nconst MAX_YEAR = 9999;\nconst MIN_MONTH = 1;\nconst MAX_MONTH = 12;\nconst MIN_DAY = 1;\nconst STEP = 1;\n\nconst createDate = (y, m, d) => {\n    if (getErrorForDateValues({ yearValue: y, monthValue: m, dayValue: d })) {\n        return undefined;\n    }\n    return new Date(y, m - 1, d);\n};\n\n\n// y, m, d is string\nconst encodeDate = ({ y = '', m = '', d = '' }, separator = '-') => {\n    if (isFalsy(y, [0, '']) && isFalsy(m, [0, '']) && isFalsy(d, [0, ''])) {\n        return undefined;\n    }\n    return `${y}${separator}${m}${separator}${d}`;\n};\n\n// value is string\nconst decodeDate = (value, separator = '-') => {\n    if (!value) {\n        return {};\n    }\n    const values = value.split(separator);\n    return {\n        y: values[0],\n        m: values[1],\n        d: values[2],\n    };\n};\n\n// value is string\nexport const isValidDateString = (value, separator = '-') => {\n    if (value === '' || value === undefined) {\n        return true;\n    }\n    const { y, m, d } = decodeDate(value, separator);\n\n    return !getErrorForDateValues({ yearValue: +y, monthValue: +m, dayValue: +d });\n};\n\nclass DateInput extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            yearInputFocused: false,\n            monthInputFocused: false,\n            dayInputFocused: false,\n            showDatePicker: false,\n            containerHover: false,\n        };\n\n        this.containerRef = React.createRef();\n        this.boundingClientRect = {};\n    }\n\n    componentDidMount() {\n        const { current: container } = this.containerRef;\n        if (container) {\n            this.boundingClientRect = container.getBoundingClientRect();\n        }\n    }\n\n    getClassName = () => {\n        const {\n            disabled,\n            className,\n            value,\n            error,\n            separator,\n            readOnly,\n        } = this.props;\n\n        const {\n            yearInputFocused,\n            monthInputFocused,\n            dayInputFocused,\n        } = this.state;\n\n        const classNames = [\n            className,\n            'date-input',\n            styles.dateInput,\n        ];\n\n        if (yearInputFocused || monthInputFocused || dayInputFocused) {\n            classNames.push(styles.focused);\n            classNames.push('input-focused');\n            classNames.push('input-in-focus');\n        }\n\n        if (disabled) {\n            classNames.push(styles.disabled);\n            classNames.push('disabled');\n        }\n\n        const isInvalid = !isValidDateString(value, separator);\n        if (isInvalid) {\n            classNames.push(styles.invalid);\n            classNames.push('invalid');\n        }\n\n        if (error) {\n            classNames.push(styles.error);\n            classNames.push('error');\n        }\n\n        if (readOnly) {\n            classNames.push('read-only');\n            classNames.push(styles.readOnly);\n        }\n\n        return classNames.join(' ');\n    }\n\n    handleYearInputFocus = () => {\n        this.setState({ yearInputFocused: true });\n    }\n\n    handleYearInputBlur = () => {\n        this.setState({ yearInputFocused: false });\n    }\n\n    handleMonthInputFocus = () => {\n        this.setState({ monthInputFocused: true });\n    }\n\n    handleMonthInputBlur = () => {\n        this.setState({ monthInputFocused: false });\n    }\n\n    handleDayInputFocus = () => {\n        this.setState({ dayInputFocused: true });\n    }\n\n    handleDayInputBlur = () => {\n        this.setState({ dayInputFocused: false });\n    }\n\n    handleYearInputChange = (y) => {\n        this.handleChange({ y });\n    }\n\n    handleMonthInputChange = (m) => {\n        this.handleChange({ m });\n    }\n\n    handleDayInputChange = (d) => {\n        this.handleChange({ d });\n    }\n\n    handleClearButtonClick = () => {\n        this.handleChange({\n            y: undefined,\n            m: undefined,\n            d: undefined,\n        });\n    }\n\n    handleTodayButtonClick = () => {\n        const date = new Date();\n        this.handleChange({\n            y: padStart(String(date.getFullYear()), 4).slice(-4),\n            m: padStart(String(date.getMonth() + 1), 2).slice(-2),\n            d: padStart(String(date.getDate()), 2).slice(-2),\n        });\n    }\n\n    handleCalendarButtonClick = () => {\n        const { current: container } = this.containerRef;\n        this.boundingClientRect = container.getBoundingClientRect();\n        this.setState({ showDatePicker: true });\n    }\n\n    handleDatePickerBlur = () => {\n        this.setState({ showDatePicker: false });\n    }\n\n    handleDatePickerInvalidate = (datePickerContainer) => {\n        const contentRect = datePickerContainer.getBoundingClientRect();\n\n        const { current: container } = this.containerRef;\n        const parentRect = container\n            ? container.getBoundingClientRect()\n            : this.boundingClientRect;\n\n        const { showHintAndError } = this.props;\n        const offset = { ...defaultOffset };\n        if (showHintAndError) {\n            offset.top = 12;\n        }\n\n        const optionsContainerPosition = calcFloatPositionInMainWindow({\n            parentRect,\n            contentRect,\n            offset,\n            limit: {\n                ...defaultLimit,\n                minW: parentRect.width,\n            },\n        });\n\n        return optionsContainerPosition;\n    }\n\n    handleDatePickerDatePick = (timestamp) => {\n        const newDate = decodeAsDate(timestamp);\n        this.setState(\n            { showDatePicker: false },\n            () => {\n                this.handleChange({\n                    y: padStart(String(newDate.getFullYear()), 4).slice(-4),\n                    m: padStart(String(newDate.getMonth() + 1), 2).slice(-2),\n                    d: padStart(String(newDate.getDate()), 2).slice(-2),\n                });\n            },\n        );\n    }\n\n    handleChange = (valueToOverride) => {\n        const {\n            onChange,\n            value: valueFromProps,\n            separator,\n        } = this.props;\n\n        const oldValue = decodeDate(valueFromProps, separator);\n        const { y, m, d } = {\n            ...oldValue,\n            ...valueToOverride,\n        };\n\n        const newValue = encodeDate({ y, m, d }, separator);\n        if (newValue !== valueFromProps) {\n            onChange(newValue);\n        }\n    }\n\n    handleActionButtonsInvalidate = (actionButtonsContainer) => {\n        const { current: container } = this.containerRef;\n        const parentRect = container\n            ? container.getBoundingClientRect()\n            : this.boundingClientRect;\n\n        const contentRect = actionButtonsContainer.getBoundingClientRect();\n\n        const { showHintAndError } = this.props;\n\n        const actionButtonsContainerPosition = {\n            left: `${(parentRect.left + parentRect.width) - contentRect.width}px`,\n            top: `${(parentRect.top + parentRect.height) - (showHintAndError ? 12 : 0)}px`,\n        };\n\n        return actionButtonsContainerPosition;\n    }\n\n    handleContainerHover = () => {\n        this.setState({ containerHover: true });\n    }\n\n    handleContainerLeave = () => {\n        this.setState({ containerHover: false });\n    }\n\n    renderDatePicker = ({ y, m, d }) => {\n        const date = createDate(+y, +m, +d);\n        const datetime = date && date.getTime();\n\n        return (\n            <FloatingContainer\n                className={styles.datePickerContainer}\n                parent={this.container}\n                onBlur={this.handleDatePickerBlur}\n                onInvalidate={this.handleDatePickerInvalidate}\n            >\n                <DatePicker\n                    value={datetime}\n                    onChange={this.handleDatePickerDatePick}\n                />\n            </FloatingContainer>\n        );\n    }\n\n    render() {\n        const {\n            error,\n            hint,\n            label,\n            showLabel,\n            showHintAndError,\n            title,\n            disabled,\n            value,\n            readOnly,\n            separator,\n        } = this.props;\n        const {\n            showDatePicker,\n            containerHover,\n        } = this.state;\n\n        const className = this.getClassName();\n        const yearPlaceholder = 'yyyy';\n        const monthPlaceholder = 'mm';\n        const dayPlaceholder = 'dd';\n\n        const {\n            y: yearValue = '',\n            m: monthValue = '',\n            d: dayValue = '',\n        } = decodeDate(value, separator);\n\n        const FloatingDatePicker = this.renderDatePicker;\n        const inputAndActionsClassName = `\n            ${styles.input}\n            input-and-actions\n        `;\n\n        return (\n            // eslint-disable-next-line jsx-a11y/mouse-events-have-key-events\n            <div\n                ref={this.containerRef}\n                title={title}\n                className={className}\n                onMouseOver={this.handleContainerHover}\n                onMouseLeave={this.handleContainerLeave}\n            >\n                <Label\n                    className={styles.label}\n                    show={showLabel}\n                    text={label}\n                />\n                <div className={inputAndActionsClassName}>\n                    <div className={styles.units}>\n                        <DigitalInput\n                            onFocus={this.handleDayInputFocus}\n                            onBlur={this.handleDayInputBlur}\n                            className={styles.dayUnit}\n                            padLength={2}\n                            min={MIN_DAY}\n                            max={getNumDaysInMonthX(+yearValue, +monthValue)}\n                            step={STEP}\n                            placeholder={dayPlaceholder}\n                            disabled={disabled || readOnly}\n                            value={dayValue}\n                            onChange={this.handleDayInputChange}\n                        />\n                        <DigitalInput\n                            onFocus={this.handleMonthInputFocus}\n                            onBlur={this.handleMonthInputBlur}\n                            className={styles.monthUnit}\n                            padLength={2}\n                            min={MIN_MONTH}\n                            max={MAX_MONTH}\n                            step={STEP}\n                            placeholder={monthPlaceholder}\n                            disabled={disabled || readOnly}\n                            value={monthValue}\n                            onChange={this.handleMonthInputChange}\n                        />\n                        <DigitalInput\n                            onFocus={this.handleYearInputFocus}\n                            onBlur={this.handleYearInputBlur}\n                            className={styles.yearUnit}\n                            padLength={4}\n                            min={MIN_YEAR}\n                            max={MAX_YEAR}\n                            step={STEP}\n                            placeholder={yearPlaceholder}\n                            disabled={disabled || readOnly}\n                            value={yearValue}\n                            onChange={this.handleYearInputChange}\n                        />\n                    </div>\n                    { containerHover && (\n                        <ActionButtons\n                            className={styles.actionButtons}\n                            disabled={disabled}\n                            readOnly={readOnly}\n                            onClearButtonClick={this.handleClearButtonClick}\n                            onTodayButtonClick={this.handleTodayButtonClick}\n                            onCalendarButtonClick={this.handleCalendarButtonClick}\n                            onInvalidate={this.handleActionButtonsInvalidate}\n                        />\n                    )}\n                </div>\n                <HintAndError\n                    show={showHintAndError}\n                    hint={hint}\n                    error={error}\n                />\n                { showDatePicker && (\n                    <FloatingDatePicker\n                        y={yearValue}\n                        m={monthValue}\n                        d={dayValue}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nexport default FaramInputElement(Delay(DateInput));\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport memoize from 'memoize-one';\nimport {\n    formatDateToString,\n    encodeDate,\n    decodeDate,\n} from '@togglecorp/fujs';\nimport { FaramInputElement, requiredCondition } from '@togglecorp/faram';\n\nimport ApplyModal from '../../View/ApplyModal';\n\n\nimport SelectInput from '../SelectInput';\nimport DateInput from '../DateInput';\n\nimport styles from './styles.scss';\n\nconst noOp = () => {};\n\nconst propTypes = {\n    className: PropTypes.string,\n    value: PropTypes.shape({\n        startDate: PropTypes.string,\n        endDate: PropTypes.string,\n    }),\n    onChange: PropTypes.func,\n};\n\nconst defaultProps = {\n    className: '',\n    value: {},\n    onChange: noOp,\n};\n\nconst presets = {\n    today: () => {\n        const today = new Date();\n        today.setHours(0, 0, 0, 0);\n        const startDate = encodeDate(today);\n        const endDate = encodeDate(today);\n\n        return { startDate, endDate };\n    },\n    yesterday: () => {\n        const yesterday = new Date();\n        yesterday.setHours(0, 0, 0, 0);\n        yesterday.setDate(yesterday.getDate() - 1);\n        const startDate = encodeDate(yesterday);\n        const endDate = encodeDate(yesterday);\n\n        return { startDate, endDate };\n    },\n    currentWeek: () => {\n        const min = new Date();\n        min.setHours(0, 0, 0, 0);\n        min.setDate(min.getDate() - min.getDay());\n        const startDate = encodeDate(min);\n\n        const max = min;\n        max.setHours(0, 0, 0, 0);\n        max.setDate(min.getDate() + 7);\n        const endDate = encodeDate(max);\n        return { startDate, endDate };\n    },\n    lastSevenDays: () => {\n        const min = new Date();\n        min.setHours(0, 0, 0, 0);\n        min.setDate(min.getDate() - 7);\n        const startDate = encodeDate(min);\n\n        const max = new Date();\n        max.setHours(0, 0, 0, 0);\n        const endDate = encodeDate(max);\n\n        return { startDate, endDate };\n    },\n    currentMonth: () => {\n        const min = new Date();\n        min.setHours(0, 0, 0, 0);\n        min.setDate(1);\n        const startDate = encodeDate(min);\n\n        const max = new Date();\n        max.setHours(0, 0, 0, 0);\n        max.setMonth(min.getMonth() + 1);\n        max.setDate(0);\n        const endDate = encodeDate(max);\n\n        return { startDate, endDate };\n    },\n    lastThirtyDays: () => {\n        const min = new Date();\n        min.setHours(0, 0, 0, 0);\n        min.setDate(min.getDate() - 30);\n        const startDate = encodeDate(min);\n\n        const max = new Date();\n        max.setHours(0, 0, 0, 0);\n        const endDate = encodeDate(max);\n\n        return { startDate, endDate };\n    },\n};\n\nclass DateFilter extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    static defaultOptions = [\n        { key: 'today', label: 'Today' },\n        { key: 'yesterday', label: 'Yesterday' },\n        { key: 'currentWeek', label: 'This week' },\n        { key: 'lastSevenDays', label: 'Last 7 days' },\n        { key: 'currentMonth', label: 'This month' },\n        { key: 'lastThirtyDays', label: 'Last 30 days' },\n        { key: 'customExact', label: 'Select an exact date' },\n        { key: 'customRange', label: 'Select a date range' },\n    ];\n\n    static exactModalSchema = {\n        fields: {\n            date: [requiredCondition],\n        },\n    };\n\n    // FIXME: add startDate smaller than endDate condition\n    static rangeModalSchema = {\n        fields: {\n            startDate: [requiredCondition],\n            endDate: [requiredCondition],\n        },\n    };\n\n    static formatDate = date => formatDateToString(decodeDate(date), 'dd-MM-yyyy');\n\n    static calculateOptionsAndValue = memoize((value) => {\n        const options = DateFilter.defaultOptions;\n        const { startDate, endDate } = value;\n\n        if (!startDate || !endDate) {\n            return { options, value: undefined };\n        }\n\n        const preset = Object.keys(presets).find((key) => {\n            const test = presets[key]();\n            return test.startDate === startDate && test.endDate === endDate;\n        });\n\n        if (preset) {\n            return {\n                options,\n                value: preset,\n            };\n        }\n\n        if (startDate === endDate) {\n            return {\n                options: [\n                    ...options,\n                    { key: 'selectedExact', label: startDate },\n                ],\n                value: 'selectedExact',\n            };\n        }\n\n        return {\n            options: [\n                ...options,\n                {\n                    key: 'selectedRange',\n                    label: `${DateFilter.formatDate(startDate)} - ${DateFilter.formatDate(endDate)}`,\n                },\n            ],\n            value: 'selectedRange',\n        };\n    });\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showRangeModal: false,\n            showExactModal: false,\n        };\n    }\n\n    getClassName = () => {\n        const { className } = this.props;\n        const classNames = [\n            className,\n            'date-filter',\n        ];\n\n        return classNames.join(' ');\n    }\n\n    setNewDate = ({ startDate, endDate } = {}) => {\n        if (!startDate || !endDate) {\n            this.props.onChange(undefined);\n            return;\n        }\n\n        this.props.onChange({\n            startDate,\n            endDate,\n        });\n    }\n\n    handleSelectInputChange = (value) => {\n        switch (value) {\n            case 'customExact':\n                this.setState({\n                    showExactModal: true,\n                });\n                break;\n            case 'customRange':\n                this.setState({\n                    showRangeModal: true,\n                });\n                break;\n            default:\n                this.setNewDate(value && presets[value]());\n        }\n    }\n\n    closeRangeModal = () => {\n        this.setState({\n            showRangeModal: false,\n        });\n    }\n\n    applyRangeDate = ({ startDate, endDate }) => {\n        this.setState({\n            showRangeModal: false,\n        }, () => {\n            this.setNewDate({\n                startDate,\n                endDate,\n            });\n        });\n    }\n\n    closeExactModal = () => {\n        this.setState({\n            showExactModal: false,\n        });\n    }\n\n    applyExactDate = ({ date }) => {\n        this.setState({\n            showExactModal: false,\n        }, () => {\n            this.setNewDate({\n                startDate: date,\n                endDate: date,\n            });\n        });\n    }\n\n    renderExactModal = () => {\n        const { showExactModal } = this.state;\n\n        if (!showExactModal) {\n            return null;\n        }\n\n        return (\n            <ApplyModal\n                className={styles.dateFilterModal}\n                onClose={this.closeExactModal}\n                onApply={this.applyExactDate}\n                title=\"Select a date\"\n                schema={DateFilter.exactModalSchema}\n            >\n                <DateInput faramElementName=\"date\" />\n            </ApplyModal>\n        );\n    }\n\n    renderRangeModal = () => {\n        const { showRangeModal } = this.state;\n\n        if (!showRangeModal) {\n            return null;\n        }\n\n        return (\n            <ApplyModal\n                className={styles.dateFilterModal}\n                onClose={this.closeRangeModal}\n                onApply={this.applyRangeDate}\n                title=\"Select a date range\"\n                schema={DateFilter.rangeModalSchema}\n            >\n                <DateInput faramElementName=\"startDate\" />\n                <DateInput faramElementName=\"endDate\" />\n            </ApplyModal>\n        );\n    }\n\n    render() {\n        const {\n            value,\n            onChange, // eslint-disable-line no-unused-vars, @typescript-eslint/no-unused-vars\n            ...otherProps\n        } = this.props;\n\n        const className = this.getClassName();\n\n        const {\n            options: selectInputOptions,\n            value: selectInputValue,\n        } = DateFilter.calculateOptionsAndValue(value);\n\n        const CustomExactModal = this.renderExactModal;\n        const CustomRangeModal = this.renderRangeModal;\n\n        return (\n            <React.Fragment>\n                <SelectInput\n                    className={className}\n                    onChange={this.handleSelectInputChange}\n                    options={selectInputOptions}\n                    value={selectInputValue}\n                    {...otherProps}\n                />\n                <CustomExactModal />\n                <CustomRangeModal />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default FaramInputElement(DateFilter);\n","import React from 'react';\nimport Button from './index.js';\n\nconst AccentButton = props => (\n    <Button buttonType=\"button-accent\" {...props} />\n);\nexport default AccentButton;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { randomString, isFalsy } from '@togglecorp/fujs';\nimport { FaramInputElement } from '@togglecorp/faram';\n\nimport Delay from '../../General/Delay';\nimport Label from '../Label';\nimport HintAndError from '../HintAndError';\n\nimport styles from './styles.scss';\n\nconst propTypes = {\n    /**\n     * required for style override\n     */\n    className: PropTypes.string,\n\n    /**\n     * Is input disabled?\n     */\n    disabled: PropTypes.bool,\n\n    /**\n     * String to show in case of error\n     */\n    error: PropTypes.string,\n\n    /**\n     * Hint text\n     */\n    hint: PropTypes.string,\n\n    /**\n     * Input label\n     */\n    label: PropTypes.string,\n\n    /**\n     * A callback for when the input loses focus\n     */\n    onBlur: PropTypes.func,\n\n    /**\n     * A callback for when the input changes its content\n     */\n    onChange: PropTypes.func,\n\n    /**\n     * A callback for when the input gets focus\n     */\n    onFocus: PropTypes.func,\n\n    /**\n     * Is a required element for form\n     */\n    required: PropTypes.bool,\n\n    showLabel: PropTypes.bool,\n\n    showHintAndError: PropTypes.bool,\n\n    value: PropTypes.string,\n    resize: PropTypes.string,\n\n    selectOnFocus: PropTypes.bool,\n};\n\nconst defaultProps = {\n    className: '',\n    resize: 'none',\n    disabled: false,\n    error: '',\n    hint: '',\n    label: '',\n    onBlur: undefined,\n    onChange: undefined,\n    onFocus: undefined,\n    required: false,\n    showLabel: true,\n    showHintAndError: true,\n    value: '',\n    selectOnFocus: false,\n};\n\nexport class NormalTextArea extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n\n        this.state = { isFocused: false };\n        this.inputId = randomString();\n    }\n\n    getClassName() {\n        const classNames = [];\n\n        const {\n            disabled,\n            error,\n            required,\n        } = this.props;\n\n        const {\n            isFocused,\n        } = this.state;\n\n        classNames.push('text-area');\n        classNames.push(styles.textArea);\n\n        if (disabled) {\n            classNames.push(styles.disabled);\n            classNames.push('disabled');\n        }\n\n        if (isFocused) {\n            classNames.push(styles.focused);\n            classNames.push('focused');\n        }\n\n        if (!isFalsy(error, [''])) {\n            classNames.push(styles.error);\n            classNames.push('error');\n        }\n\n        if (required) {\n            classNames.push(styles.required);\n            classNames.push('required');\n        }\n\n        return classNames.join(' ');\n    }\n\n    handleChange = (event) => {\n        const { value } = event.target;\n        const { onChange } = this.props;\n\n        if (onChange) {\n            onChange(value);\n        }\n    }\n\n    handleFocus = () => {\n        const { selectOnFocus, onFocus } = this.props;\n        if (selectOnFocus) {\n            // eslint-disable-next-line no-restricted-globals\n            event.target.select();\n        }\n\n        this.setState({\n            isFocused: true,\n        });\n\n        if (onFocus) {\n            onFocus();\n        }\n    }\n\n    handleBlur = () => {\n        const {\n            onBlur,\n        } = this.props;\n\n        this.setState({\n            isFocused: false,\n        });\n\n        if (onBlur) {\n            onBlur();\n        }\n    }\n\n    render() {\n        const {\n            // skip prop injection\n            onBlur, // eslint-disable-line\n            onChange, // eslint-disable-line\n            onFocus, // eslint-disable-line\n            selectOnFocus, // eslint-disable-line\n            className,\n\n            error,\n            hint,\n            label,\n            showLabel,\n            showHintAndError,\n            disabled,\n            resize,\n            ...otherProps\n        } = this.props;\n\n        const classNames = this.getClassName();\n        const { isFocused } = this.state;\n\n        return (\n            <div className={`${classNames} ${className}`}>\n                <Label\n                    show={showLabel}\n                    text={label}\n                    error={!!error}\n                    active={isFocused}\n                    disabled={disabled}\n                />\n                <textarea\n                    className={`${styles.input} input`}\n                    id={this.inputId}\n                    onBlur={this.handleBlur}\n                    onChange={this.handleChange}\n                    onFocus={this.handleFocus}\n                    style={{ resize }}\n                    {...otherProps}\n                />\n                <HintAndError\n                    show={showHintAndError}\n                    hint={hint}\n                    error={error}\n                />\n            </div>\n        );\n    }\n}\n\nexport default FaramInputElement(Delay(NormalTextArea));\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport memoize from 'memoize-one';\nimport { formatPdfText } from '@togglecorp/fujs';\nimport { FaramInputElement } from '@togglecorp/faram';\n\nimport AccentButton from '../../Action/Button/AccentButton';\nimport Delay from '../../General/Delay';\nimport { NormalTextArea as TextArea } from '../TextArea';\n\nimport styles from './styles.scss';\n\nconst propTypes = {\n    disabled: PropTypes.bool,\n    className: PropTypes.string,\n    onChange: PropTypes.func,\n    required: PropTypes.bool,\n    readOnly: PropTypes.bool,\n    showFormatButton: PropTypes.bool,\n    value: PropTypes.string,\n};\n\nconst defaultProps = {\n    disabled: false,\n    className: '',\n    readOnly: false,\n    onChange: undefined,\n    required: false,\n    showFormatButton: true,\n    value: undefined,\n};\n\n\nclass FormattedTextArea extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    handleFormatText = () => {\n        const {\n            onChange,\n            value,\n        } = this.props;\n\n        const formattedText = formatPdfText(value);\n        onChange(formattedText);\n    }\n\n    shouldDisableFormat = memoize(excerpt => !excerpt || excerpt === formatPdfText(excerpt))\n\n    render() {\n        const {\n            disabled,\n            readOnly,\n            className,\n            showFormatButton,\n            value,\n            ...otherProps\n        } = this.props;\n\n        return (\n            <div className={`${className} ${styles.formattedText}`}>\n                <TextArea\n                    {...otherProps}\n                    disabled={disabled}\n                    readOnly={readOnly}\n                    className={styles.area}\n                    value={value}\n                />\n                { showFormatButton && (\n                    <AccentButton\n                        tabIndex=\"-1\"\n                        className={styles.formatButton}\n                        iconName=\"textFormat\"\n                        onClick={this.handleFormatText}\n                        title=\"Click here to format the text\"\n                        smallVerticalPadding\n                        smallHorizontalPadding\n                        transparent\n                        disabled={disabled || readOnly || this.shouldDisableFormat(value)}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nexport default FaramInputElement(Delay(FormattedTextArea));\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport memoize from 'memoize-one';\nimport {\n    _cs,\n    isFalsyString,\n    caseInsensitiveSubmatch,\n    compareStringSearch,\n} from '@togglecorp/fujs';\nimport { FaramInputElement } from '@togglecorp/faram';\n\nimport ListView from '../../View/List/ListView';\nimport Checkbox from '../Checkbox';\n\nimport Label from '../Label';\nimport HintAndError from '../HintAndError';\n\nimport styles from './styles.scss';\n\nconst propTypes = {\n    className: PropTypes.string,\n    listClassName: PropTypes.string,\n    value: PropTypes.arrayOf(PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ])),\n    options: PropTypes.arrayOf(PropTypes.object),\n    onChange: PropTypes.func.isRequired,\n    keySelector: PropTypes.func,\n    labelSelector: PropTypes.func,\n    tooltipSelector: PropTypes.func,\n    searchText: PropTypes.string,\n\n    label: PropTypes.string,\n    disabled: PropTypes.bool,\n    readOnly: PropTypes.bool,\n    error: PropTypes.string,\n    hint: PropTypes.string,\n    showLabel: PropTypes.bool,\n    showHintAndError: PropTypes.bool,\n    segment: PropTypes.bool,\n};\n\nconst defaultProps = {\n    className: '',\n    listClassName: '',\n    value: [],\n    options: [],\n    keySelector: item => item.key,\n    tooltipSelector: item => item.label,\n    labelSelector: item => item.label,\n    searchText: undefined,\n\n    label: '',\n    disabled: false,\n    readOnly: false,\n    error: '',\n    hint: '',\n    showLabel: true,\n    showHintAndError: true,\n    segment: false,\n};\n\n\nexport class NormalListSelection extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    getClassName = () => {\n        const {\n            className: classNameFromProps,\n            disabled,\n            error,\n            segment,\n        } = this.props;\n\n        const className = _cs(\n            classNameFromProps,\n            styles.listSelection,\n            'list-selection',\n            segment ? styles.multiSegment : styles.singleSegment,\n            segment ? 'multi-segment' : 'single-segment',\n            disabled && styles.disabled,\n            disabled && 'disabled',\n            error && styles.error,\n            error && 'error',\n        );\n\n        return className;\n    }\n\n    getFilteredOptions = memoize((searchText, options) => {\n        const {\n            labelSelector,\n        } = this.props;\n\n        if (isFalsyString(searchText)) {\n            return options;\n        }\n\n        const newOptions = options\n            .filter(option => caseInsensitiveSubmatch(labelSelector(option), searchText))\n            .sort((a, b) => compareStringSearch(\n                labelSelector(a),\n                labelSelector(b),\n                searchText,\n            ));\n        return newOptions;\n    });\n\n    handleItemChange = (key, isSelected) => {\n        const { value, onChange } = this.props;\n\n        const newValue = [...value];\n        if (!isSelected) {\n            const index = newValue.indexOf(key);\n            newValue.splice(index, 1);\n        } else {\n            newValue.push(key);\n        }\n\n        onChange(newValue);\n    }\n\n    renderParams = (key, itemData) => {\n        const {\n            labelSelector,\n            tooltipSelector,\n            value,\n            disabled,\n            readOnly,\n            segment,\n        } = this.props;\n\n        const selected = value.indexOf(key) >= 0;\n        /*\n        const className = _cs(\n            styles.item,\n            isDefined(selected) && styles.checked,\n        );\n        */\n\n        return {\n            // className,\n            className: styles.item,\n            label: labelSelector(itemData),\n            tooltip: tooltipSelector(itemData),\n            value: selected,\n            onChange: val => this.handleItemChange(key, val),\n            checkboxType: segment ? 'check' : 'checkbox',\n            disabled,\n            readOnly,\n        };\n    }\n\n    renderInput = () => {\n        const {\n            options,\n            keySelector,\n            listClassName,\n            searchText,\n        } = this.props;\n\n        const filteredOptions = this.getFilteredOptions(searchText, options);\n\n        return (\n            <ListView\n                className={_cs(\n                    styles.options,\n                    'list-selection-options',\n                    listClassName,\n                )}\n                data={filteredOptions}\n                renderer={Checkbox}\n                keySelector={keySelector}\n                rendererParams={this.renderParams}\n            />\n        );\n    }\n\n    render() {\n        const {\n            label,\n            hint,\n            error,\n            showHintAndError,\n            showLabel,\n            disabled,\n        } = this.props;\n\n        const className = this.getClassName();\n        const Input = this.renderInput;\n\n        return (\n            <div className={className}>\n                <Label\n                    show={showLabel}\n                    text={label}\n                    disabled={disabled}\n                    error={!!error}\n                />\n                <Input />\n                <HintAndError\n                    show={showHintAndError}\n                    hint={hint}\n                    error={error}\n                />\n            </div>\n        );\n    }\n}\n\nexport default FaramInputElement(NormalListSelection);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { _cs } from '@togglecorp/fujs';\n\nimport Icon from '../../../General/Icon';\n\nimport styles from './styles.scss';\n\nconst Checkbox = ({ active }) => {\n    const className = _cs(\n        'checkbox',\n        styles.checkbox,\n    );\n\n    return (\n        <Icon\n            className={className}\n            name={active ? 'checkbox' : 'checkboxOutlineBlank'}\n        />\n    );\n};\n\nCheckbox.propTypes = {\n    active: PropTypes.bool.isRequired,\n};\n\nexport default Checkbox;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Checkbox from '../Checkbox';\nimport styles from './styles.scss';\n\nconst propTypes = {\n    active: PropTypes.bool.isRequired,\n    focused: PropTypes.bool.isRequired,\n    className: PropTypes.string,\n    onClick: PropTypes.func.isRequired,\n    optionKey: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]).isRequired,\n    onFocus: PropTypes.func.isRequired,\n    optionLabel: PropTypes.string,\n};\n\nconst defaultProps = {\n    className: '',\n    optionLabel: '',\n};\n\nexport default class Option extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n        this.ref = React.createRef();\n        this.focusedByMouse = undefined;\n    }\n\n    componentDidMount() {\n        const { focused } = this.props;\n        if (focused) {\n            this.scrollToFocus();\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const { focused } = this.props;\n\n        if (!focused && nextProps.focused) {\n            this.scrollToFocus();\n        } else {\n            this.focusedByMouse = false;\n        }\n    }\n\n    getClassName = () => {\n        const {\n            active,\n            focused,\n            className,\n        } = this.props;\n\n        const classNames = [\n            className,\n            'option',\n            styles.option,\n        ];\n\n        if (active) {\n            classNames.push('active');\n        }\n\n        if (focused) {\n            classNames.push(styles.focused);\n            classNames.push('focused');\n        }\n\n        return classNames.join(' ');\n    }\n\n    handleClick = () => {\n        const {\n            onClick,\n            optionKey,\n        } = this.props;\n\n        onClick(optionKey);\n    }\n\n    handleMouseMove = () => {\n        const {\n            optionKey,\n            onFocus,\n        } = this.props;\n\n        this.focusedByMouse = true;\n        onFocus(optionKey);\n    }\n\n    handleMouseLeave = () => {\n        this.focusedByMouse = false;\n    }\n\n    scrollToFocus = () => {\n        if (!this.focusedByMouse) {\n            this.ref.current.scrollIntoView({\n                block: 'nearest',\n            });\n        }\n    }\n\n    render() {\n        const {\n            optionLabel,\n            active,\n        } = this.props;\n\n        const className = this.getClassName();\n\n        return (\n            <button\n                ref={this.ref}\n                className={className}\n                onClick={this.handleClick}\n                onMouseMove={this.handleMouseMove}\n                onMouseLeave={this.handleMouseLeave}\n                type=\"button\"\n            >\n                <Checkbox active={active} />\n                { optionLabel }\n            </button>\n        );\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { listToMap, isListEqual } from '@togglecorp/fujs';\n\nimport FloatingContainer from '../../../View/FloatingContainer';\nimport List from '../../../View/List';\nimport Option from '../Option';\n\nimport styles from './styles.scss';\n\nconst propTypes = {\n    activeKeys: PropTypes.array.isRequired, // eslint-disable-line react/forbid-prop-types\n    className: PropTypes.string,\n    data: PropTypes.array.isRequired, // eslint-disable-line react/forbid-prop-types\n    keySelector: PropTypes.func.isRequired,\n    labelSelector: PropTypes.func.isRequired,\n    optionLabelSelector: PropTypes.func,\n    onBlur: PropTypes.func.isRequired,\n    onInvalidate: PropTypes.func.isRequired,\n    onOptionClick: PropTypes.func.isRequired,\n    onOptionFocus: PropTypes.func.isRequired,\n    parentContainer: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n    renderEmpty: PropTypes.func,\n    show: PropTypes.bool.isRequired,\n    focusedKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nconst defaultProps = {\n    className: '',\n    renderEmpty: () => 'No option available',\n    parentContainer: undefined,\n    focusedKey: undefined,\n    optionLabelSelector: undefined,\n};\n\nexport default class Options extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n        this.generateActiveMap(props);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const { activeKeys: oldActiveKeys } = this.props;\n        const { activeKeys: newActiveKeys } = nextProps;\n\n        if (!isListEqual(oldActiveKeys, newActiveKeys)) {\n            this.generateActiveMap(nextProps);\n        }\n    }\n\n    getClassName = () => {\n        const { className } = this.props;\n\n        const classNames = [\n            className,\n            styles.options,\n        ];\n\n        return classNames.join(' ');\n    }\n\n    generateActiveMap = (props) => {\n        const { activeKeys } = props;\n\n        this.activeKeysMap = listToMap(\n            activeKeys,\n            optionKey => optionKey,\n            () => true,\n        );\n    }\n\n    renderOption = (k, data) => {\n        const {\n            keySelector,\n            labelSelector,\n            onOptionClick,\n            onOptionFocus,\n            optionLabelSelector,\n            focusedKey,\n        } = this.props;\n\n        const key = keySelector(data);\n        const label = optionLabelSelector ? (\n            optionLabelSelector(data)\n        ) : (\n            labelSelector(data)\n        );\n        const isActive = !!this.activeKeysMap[key];\n        const isFocused = key === focusedKey;\n\n        return (\n            <Option\n                key={key}\n                optionKey={key}\n                optionLabel={label}\n                onClick={onOptionClick}\n                onFocus={onOptionFocus}\n                active={isActive}\n                focused={isFocused}\n            />\n        );\n    }\n\n    renderEmpty = () => {\n        const {\n            renderEmpty: EmptyComponent,\n            data,\n        } = this.props;\n\n        if (data.length > 0) {\n            return null;\n        }\n\n        const className = `empty ${styles.empty}`;\n        return (\n            <div className={className}>\n                <EmptyComponent />\n            </div>\n        );\n    }\n\n    render() {\n        const {\n            onBlur,\n            onInvalidate,\n            parentContainer,\n            data,\n            show,\n        } = this.props;\n\n        const className = this.getClassName();\n        const Empty = this.renderEmpty;\n\n        if (!show) {\n            return null;\n        }\n\n        return (\n            <FloatingContainer\n                onBlur={onBlur}\n                onInvalidate={onInvalidate}\n                parent={parentContainer}\n                className={className}\n            >\n                <List\n                    data={data}\n                    modifier={this.renderOption}\n                />\n                <Empty />\n            </FloatingContainer>\n        );\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport memoize from 'memoize-one';\nimport {\n    listToMap,\n    caseInsensitiveSubmatch,\n    compareStringSearch,\n    isDefined,\n    _cs,\n} from '@togglecorp/fujs';\nimport { FaramInputElement } from '@togglecorp/faram';\n\nimport Button from '../../Action/Button';\nimport DangerButton from '../../Action/Button/DangerButton';\nimport handleKeyboard from '../../General/HandleKeyboard';\nimport HintAndError from '../HintAndError';\nimport Label from '../Label';\nimport RawInput from '../RawInput';\n\nimport {\n    calcFloatPositionInMainWindow,\n    defaultOffset,\n    defaultLimit,\n} from '../../../utils/bounds';\n\nimport Options from './Options';\nimport styles from './styles.scss';\n\nconst RawKeyInput = handleKeyboard(RawInput);\nconst emptyList = [];\n\n// NOTE: labelSelector must return string\n// NOTE: optionLabelSelector may return renderable node\nexport const propTypes = {\n    autoFocus: PropTypes.bool,\n    disabled: PropTypes.bool,\n    hideClearButton: PropTypes.bool,\n    hideSelectAllButton: PropTypes.bool,\n    readOnly: PropTypes.bool,\n    showHintAndError: PropTypes.bool,\n    showLabel: PropTypes.bool,\n\n    className: PropTypes.string,\n    error: PropTypes.string,\n    hint: PropTypes.string,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    optionsClassName: PropTypes.string,\n    placeholder: PropTypes.string,\n    title: PropTypes.string,\n\n    options: PropTypes.arrayOf(PropTypes.object),\n    // eslint-disable-next-line react/forbid-prop-types\n    value: PropTypes.array,\n    onChange: PropTypes.func.isRequired,\n\n    keySelector: PropTypes.func,\n    labelSelector: PropTypes.func,\n    optionLabelSelector: PropTypes.func,\n\n    renderEmpty: PropTypes.func,\n};\n\nexport const defaultProps = {\n    autoFocus: undefined,\n    className: '',\n    disabled: false,\n    error: undefined,\n    hideClearButton: false,\n    hideSelectAllButton: false,\n    hint: undefined,\n    keySelector: d => d.key,\n    label: '',\n    labelSelector: d => d.label,\n    optionLabelSelector: undefined,\n    options: emptyList,\n    optionsClassName: '',\n    placeholder: 'Select option(s)',\n    readOnly: false,\n    renderEmpty: undefined,\n    showHintAndError: true,\n    showLabel: true,\n    title: undefined,\n    value: emptyList,\n};\n\nexport class NormalMultiSelectInput extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            // FIXME: this may break\n            inputInFocus: props.autoFocus,\n            focusedKey: undefined,\n\n            showOptionsPopup: false,\n            searchValue: undefined,\n        };\n\n        this.containerRef = React.createRef();\n        this.inputRef = React.createRef();\n    }\n\n    componentDidMount() {\n        const { current: container } = this.containerRef;\n        if (container) {\n            this.boundingClientRect = container.getBoundingClientRect();\n        }\n    }\n\n    findPlaceholderValue = memoize((\n        options,\n        labelSelector,\n        keySelector,\n        value = [],\n    ) => {\n        const optionsMap = listToMap(\n            options,\n            keySelector,\n            element => element,\n        );\n        const selectedOptions = value\n            .map(k => optionsMap[k])\n            .filter(isDefined)\n            .map(v => labelSelector(v));\n        return selectedOptions.join(', ');\n    })\n\n    filterOptions = memoize((\n        options,\n        labelSelector,\n        value,\n    ) => {\n        const newOptions = options\n            .filter(\n                option => (\n                    value === undefined || caseInsensitiveSubmatch(labelSelector(option), value)\n                ),\n            )\n            .sort((a, b) => compareStringSearch(\n                labelSelector(a),\n                labelSelector(b),\n                value,\n            ));\n        return newOptions;\n    })\n\n    // Helper\n\n    handleShowOptionsPopup = () => {\n        const { current: input } = this.inputRef;\n        if (input) {\n            input.select();\n        }\n\n        // NOTE: this may not be required\n        const { current: container } = this.containerRef;\n        if (container) {\n            this.boundingClientRect = container.getBoundingClientRect();\n        }\n\n        this.setState({\n            showOptionsPopup: true,\n            searchValue: undefined,\n        });\n    }\n\n    handleHideOptionsPopup = () => {\n        this.setState({\n            showOptionsPopup: false,\n            searchValue: undefined,\n        });\n    }\n\n    // Input\n\n    handleInputFocus = () => {\n        this.setState({ inputInFocus: true });\n    }\n\n    handleInputBlur = () => {\n        this.setState({ inputInFocus: false });\n    }\n\n    handleInputChange = (e) => {\n        const { value } = e.target;\n\n        // NOTE: this may not be required\n        const { current: container } = this.containerRef;\n        if (container) {\n            this.boundingClientRect = container.getBoundingClientRect();\n        }\n\n        this.setState({\n            showOptionsPopup: true,\n            searchValue: value,\n        });\n    }\n\n    // Options\n\n    handleOptionsInvalidate = (optionsContainer) => {\n        const contentRect = optionsContainer.getBoundingClientRect();\n        let parentRect = this.boundingClientRect;\n        const { current: container } = this.containerRef;\n\n        if (container) {\n            parentRect = container.getBoundingClientRect();\n        }\n\n        const { showHintAndError } = this.props;\n\n        const offset = { ...defaultOffset };\n        if (showHintAndError) {\n            offset.top = 12;\n        }\n\n        const limit = {\n            ...defaultLimit,\n            minW: parentRect.width,\n            maxW: parentRect.width,\n        };\n\n        const optionsContainerPosition = (\n            calcFloatPositionInMainWindow({\n                parentRect,\n                contentRect,\n                offset,\n                limit,\n            })\n        );\n\n        return optionsContainerPosition;\n    };\n\n    handleOptionSelect = (key) => {\n        const {\n            value,\n            onChange,\n        } = this.props;\n\n        const newValue = [...value];\n        const optionIndex = newValue.findIndex(d => d === key);\n        if (optionIndex === -1) {\n            newValue.push(key);\n        } else {\n            newValue.splice(optionIndex, 1);\n        }\n\n        // No need to close modal or reset sort\n        // No need to check if same option was clicked\n        onChange(newValue);\n    }\n\n    handleClearButtonClick = () => {\n        const { onChange } = this.props;\n        onChange(emptyList);\n    }\n\n    handleSelectAllButtonClick = () => {\n        const {\n            options,\n            keySelector,\n            onChange,\n        } = this.props;\n\n        const newValue = options.map(d => keySelector(d));\n        onChange(newValue);\n    }\n\n    handleFocusChange = (focusedKey) => {\n        this.setState({ focusedKey });\n    }\n\n    render() {\n        const {\n            error,\n            hint,\n            keySelector,\n            label,\n            labelSelector,\n            optionsClassName,\n            renderEmpty,\n            showHintAndError,\n            showLabel,\n            title,\n            value,\n            disabled,\n            className: classNameFromProps,\n            options,\n            hideClearButton,\n            hideSelectAllButton,\n            readOnly,\n            autoFocus,\n            placeholder,\n            optionLabelSelector,\n        } = this.props;\n\n        const {\n            showOptionsPopup,\n            focusedKey,\n            inputInFocus,\n            searchValue,\n        } = this.state;\n\n\n        const isFilled = value && value.length !== 0;\n        const isAllFilled = value && value.length === options.length;\n\n        const showClearButton = isFilled && !(hideClearButton || disabled || readOnly);\n        const showSelectAllButton = !isAllFilled && !(hideSelectAllButton || disabled || readOnly);\n\n        const { current: container } = this.containerRef;\n\n        const inputTitle = this.findPlaceholderValue(options, labelSelector, keySelector, value);\n        const finalPlaceholder = (\n            inputTitle\n            || placeholder\n        );\n\n        const finalSearchValue = searchValue || '';\n\n        const filteredOptions = this.filterOptions(\n            options,\n            labelSelector,\n            searchValue,\n        );\n\n        const className = _cs(\n            classNameFromProps,\n            'multi-select-input',\n            styles.multiSelectInput,\n            showOptionsPopup && styles.showOptions,\n            showOptionsPopup && 'show-options',\n            disabled && 'disabled',\n            disabled && styles.disabled,\n            inputInFocus && styles.inputInFocus,\n            inputInFocus && 'input-in-focus',\n            error && styles.error,\n            error && 'error',\n            hideClearButton && styles.hideClearButton,\n            hideClearButton && 'hide-clear-button',\n            hideSelectAllButton && styles.hideSelectAllButton,\n            hideSelectAllButton && 'hide-select-all-button',\n            value.length !== 0 && styles.filled,\n            value.length !== 0 && 'filled',\n            value.length === options.length && styles.completelyFilled,\n            value.length === options.length && 'completely-filled',\n        );\n\n        const inputAndActionClassName = `\n            input-and-actions\n            ${styles.inputAndActions}\n        `;\n\n        const actionsClassName = `\n            actions\n            ${styles.actions}\n        `;\n        const dropdownButtonClassName = `\n            dropdown-button\n            ${styles.dropdownButton}\n        `;\n\n        const clearButtonClassName = `\n            clear-button\n            ${styles.clearButton}\n        `;\n\n        const selectAllButtonClassName = `\n            select-all-button\n            ${styles.selectAllButton}\n        `;\n\n        return (\n            <div\n                className={className}\n                ref={this.containerRef}\n                title={title}\n            >\n                { showLabel && (\n                    <Label\n                        text={label}\n                        error={!!error}\n                        disabled={disabled}\n                        active={inputInFocus || showOptionsPopup}\n                    />\n                )}\n                <div className={inputAndActionClassName}>\n                    <RawKeyInput\n                        className={styles.input}\n                        type=\"text\"\n                        elementRef={this.inputRef}\n                        onBlur={this.handleInputBlur}\n                        onFocus={this.handleInputFocus}\n                        onClick={this.handleShowOptionsPopup}\n                        onChange={this.handleInputChange}\n                        value={finalSearchValue}\n                        autoFocus={autoFocus}\n                        title={inputTitle}\n                        placeholder={finalPlaceholder}\n                        disabled={disabled || readOnly}\n\n                        focusedKey={focusedKey}\n                        options={filteredOptions}\n                        keySelector={keySelector}\n                        isOptionsShown={showOptionsPopup}\n                        onFocusChange={this.handleFocusChange}\n                        onHideOptions={this.handleHideOptionsPopup}\n                        onShowOptions={this.handleShowOptionsPopup}\n                        onOptionSelect={this.handleOptionSelect}\n                    />\n                    <div className={actionsClassName}>\n                        { showSelectAllButton && (\n                            <Button\n                                transparent\n                                tabIndex=\"-1\"\n                                className={selectAllButtonClassName}\n                                onClick={this.handleSelectAllButtonClick}\n                                title=\"Select all options\"\n                                disabled={disabled || readOnly}\n                                type=\"button\"\n                                iconName=\"checkAll\"\n                            />\n                        )}\n                        { showClearButton && (\n                            <DangerButton\n                                transparent\n                                tabIndex=\"-1\"\n                                className={clearButtonClassName}\n                                onClick={this.handleClearButtonClick}\n                                title=\"Clear selected option(s)\"\n                                disabled={disabled || readOnly}\n                                iconName=\"close\"\n                            />\n                        )}\n                        <Button\n                            tabIndex=\"-1\"\n                            iconName=\"arrowDropdown\"\n                            className={dropdownButtonClassName}\n                            onClick={this.handleShowOptionsPopup}\n                            transparent\n                            disabled={disabled || readOnly}\n                        />\n                    </div>\n                </div>\n                { showHintAndError && (\n                    <HintAndError\n                        error={error}\n                        hint={hint}\n                    />\n                )}\n                <Options\n                    activeKeys={value}\n                    data={filteredOptions}\n                    keySelector={keySelector}\n                    labelSelector={labelSelector}\n                    optionLabelSelector={optionLabelSelector}\n                    onBlur={this.handleHideOptionsPopup}\n                    onInvalidate={this.handleOptionsInvalidate}\n                    onOptionClick={this.handleOptionSelect}\n                    onOptionFocus={this.handleFocusChange}\n                    className={optionsClassName}\n                    parentContainer={container}\n                    renderEmpty={renderEmpty}\n                    show={showOptionsPopup}\n                    focusedKey={focusedKey}\n                />\n            </div>\n        );\n    }\n}\n\nexport default FaramInputElement(NormalMultiSelectInput);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport memoize from 'memoize-one';\nimport {\n    isTruthy,\n    addSeparator,\n} from '@togglecorp/fujs';\nimport { FaramInputElement } from '@togglecorp/faram';\n\nimport Delay from '../../General/Delay';\n\nimport HintAndError from '../HintAndError';\nimport Label from '../Label';\nimport styles from './styles.scss';\n\nconst propTypes = {\n    /**\n     * required for style override\n     */\n    className: PropTypes.string,\n\n    /**\n     * Is input disabled?\n     */\n    disabled: PropTypes.bool,\n\n    /**\n     * String to show in case of error\n     */\n    error: PropTypes.string,\n\n    /**\n     * Hint text\n     */\n    hint: PropTypes.string,\n\n    /**\n     * Input label\n     */\n    label: PropTypes.string,\n\n    /**\n     * A callback for when the input loses focus\n     */\n    onBlur: PropTypes.func,\n\n    /**\n     * A callback for when the input changes its content\n     */\n    onChange: PropTypes.func,\n\n    /**\n     * A callback for when the input gets focus\n     */\n    onFocus: PropTypes.func,\n\n    /**\n     * Is a required element for form\n     */\n    required: PropTypes.bool,\n    showLabel: PropTypes.bool,\n    showHintAndError: PropTypes.bool,\n    value: PropTypes.number,\n    separator: PropTypes.string,\n    selectOnFocus: PropTypes.bool,\n    title: PropTypes.string,\n};\n\nconst defaultProps = {\n    className: '',\n    disabled: false,\n    error: '',\n    hint: '',\n    label: '',\n    onBlur: undefined,\n    onChange: undefined,\n    onFocus: undefined,\n    required: false,\n    showLabel: true,\n    showHintAndError: true,\n    value: undefined,\n    separator: ',',\n    selectOnFocus: false,\n    title: undefined,\n};\n\nconst INT_LIMIT = 9007199254740992;\n\nconst sanitizeNumber = (value = '') => {\n    if (value === '') {\n        return value;\n    }\n\n    const newValue = value.replace(/[^0-9]/g, '');\n    if (newValue === '') {\n        return newValue;\n    }\n\n    const realValue = +newValue;\n    // NOTE: Limit integer value to MAX_LIMIT\n    return (\n        isTruthy(realValue)\n            ? String(Math.min(INT_LIMIT, realValue))\n            : newValue\n    );\n};\n\nconst isSign = value => value === '-';\n\nconst getNumberAndSign = (value = '') => {\n    if (Number.isNaN(value)) {\n        return { sign: '-' };\n    }\n\n    const stringValue = value.toString();\n    const firstCharacter = stringValue.charAt(0);\n\n    if (isSign(firstCharacter)) {\n        return {\n            sign: '-',\n            number: sanitizeNumber(stringValue.substring(1)),\n        };\n    }\n\n    return { number: sanitizeNumber(stringValue) };\n};\n\nexport class NormalNumberInput extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n        this.state = { isFocused: false };\n    }\n\n    getDisplayValue = memoize((value, separator) => {\n        const {\n            sign = '',\n            number = '',\n        } = getNumberAndSign(value);\n        const numberWithSeparator = addSeparator(number, separator);\n        return `${sign}${numberWithSeparator}`;\n    })\n\n    getClassName() {\n        const {\n            disabled,\n            error,\n            required,\n            className,\n        } = this.props;\n\n        const {\n            isFocused,\n        } = this.state;\n\n        const classNames = [\n            className,\n            'number-input',\n            styles.numberInput,\n        ];\n\n        if (disabled) {\n            classNames.push(styles.disabled);\n            classNames.push('disabled');\n        }\n\n        if (isFocused) {\n            classNames.push(styles.focused);\n            classNames.push('focused');\n        }\n\n        if (error) {\n            classNames.push(styles.error);\n            classNames.push('error');\n        }\n\n        if (required) {\n            classNames.push(styles.required);\n            classNames.push('required');\n        }\n\n        return classNames.join(' ');\n    }\n\n    handleChange = (event) => {\n        const { value } = event.target;\n        const { onChange } = this.props;\n        if (onChange) {\n            const {\n                number = '',\n                sign = '',\n            } = getNumberAndSign(value);\n\n            let realValue;\n            if (number === '' && sign !== '') {\n                realValue = NaN;\n            } else if (number === '' && sign === '') {\n                realValue = undefined;\n            } else {\n                realValue = +`${sign}${number}`;\n            }\n            onChange(realValue);\n        }\n    }\n\n    handleFocus = () => {\n        const { selectOnFocus, onFocus } = this.props;\n        if (selectOnFocus) {\n            // eslint-disable-next-line no-restricted-globals\n            event.target.select();\n        }\n\n        this.setState({ isFocused: true });\n        if (onFocus) {\n            onFocus();\n        }\n    }\n\n    handleBlur = () => {\n        const { onBlur } = this.props;\n        this.setState({ isFocused: false });\n        if (onBlur) {\n            onBlur();\n        }\n    }\n\n    render() {\n        const {\n            // skip prop injection\n            // eslint-disable-next-line no-unused-vars, @typescript-eslint/no-unused-vars\n            value: propValue,\n            onBlur, // eslint-disable-line no-unused-vars, @typescript-eslint/no-unused-vars\n            onChange, // eslint-disable-line no-unused-vars, @typescript-eslint/no-unused-vars\n            onFocus, // eslint-disable-line no-unused-vars, @typescript-eslint/no-unused-vars\n            selectOnFocus, // eslint-disable-line no-unused-vars, @typescript-eslint/no-unused-vars\n            // eslint-disable-next-line no-unused-vars, @typescript-eslint/no-unused-vars\n            className: propClassName,\n\n            error,\n            hint,\n            label,\n            showLabel,\n            showHintAndError,\n            value,\n            title,\n            separator,\n            ...otherProps\n        } = this.props;\n\n        const className = this.getClassName();\n\n        return (\n            <div\n                className={className}\n                title={title}\n            >\n                <Label\n                    className={styles.label}\n                    show={showLabel}\n                    text={label}\n                />\n                <input\n                    className={`${styles.input} input`}\n                    onBlur={this.handleBlur}\n                    onChange={this.handleChange}\n                    onFocus={this.handleFocus}\n                    value={this.getDisplayValue(value, separator)}\n                    {...otherProps}\n                />\n                <HintAndError\n                    show={showHintAndError}\n                    hint={hint}\n                    error={error}\n                />\n            </div>\n        );\n    }\n}\n\nexport default FaramInputElement(Delay(NormalNumberInput));\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { _cs, randomString } from '@togglecorp/fujs';\n\nimport Icon from '../../../General/Icon';\n\nimport styles from './styles.scss';\n\nconst propTypes = {\n    checked: PropTypes.bool,\n    className: PropTypes.string,\n    label: PropTypes.string.isRequired,\n    disabled: PropTypes.bool,\n    readOnly: PropTypes.bool,\n};\n\nconst defaultProps = {\n    checked: false,\n    className: '',\n    disabled: false,\n    readOnly: false,\n};\n\n\nexport default class Option extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n\n        this.inputId = randomString();\n    }\n\n    render() {\n        const {\n            className: classNameFromProps,\n            checked,\n            label,\n            disabled,\n            readOnly,\n            ...otherProps\n        } = this.props;\n\n        const className = _cs(\n            styles.option,\n            'radio-option',\n            classNameFromProps,\n            disabled && styles.disabled,\n            readOnly && styles.readOnly,\n            checked && styles.checked,\n            checked && 'checked',\n        );\n\n        const radioClassName = _cs(\n            styles.radio,\n            'radio',\n        );\n\n        return (\n            <label\n                htmlFor={this.inputId}\n                className={className}\n            >\n                <input\n                    className={`${styles.input} input`}\n                    defaultChecked={checked}\n                    id={this.inputId}\n                    type=\"radio\"\n                    disabled={disabled || readOnly}\n                    {...otherProps}\n                />\n                <Icon\n                    className={radioClassName}\n                    name={checked ? 'radioOn' : 'radioOff'}\n                />\n                <span className={`${styles.label} label`}>\n                    { label }\n                </span>\n            </label>\n        );\n    }\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { FaramInputElement } from '@togglecorp/faram';\n\nimport ListView from '../../View/List/ListView';\n\nimport Option from './Option';\nimport styles from './styles.scss';\n\nconst propTypes = {\n    /**\n     * required for style override\n     */\n    className: PropTypes.string,\n\n    /**\n     * unique name for the radio input\n     */\n    name: PropTypes.string.isRequired,\n\n    /**\n     * Is input disabled?\n     */\n    disabled: PropTypes.bool,\n\n    /**\n     * list of options\n     */\n    options: PropTypes.arrayOf(\n        PropTypes.shape({\n            key: PropTypes.string,\n            label: PropTypes.string,\n        }),\n    ).isRequired,\n\n    onChange: PropTypes.func,\n\n    readOnly: PropTypes.bool,\n\n    /**\n     * key for selected option\n     */\n    value: PropTypes.string,\n};\n\nconst defaultProps = {\n    className: '',\n    onChange: undefined,\n    value: undefined,\n    disabled: false,\n    readOnly: false,\n};\n\nclass RadioInput extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    // XXX: use isTruthy\n    static getSelectedOption = (options, value) => (\n        value && options.find(d => d.key === value)\n    )\n\n    static optionKeyExtractor = option => option.key;\n\n    constructor(props) {\n        super(props);\n\n        const {\n            options,\n            value,\n        } = this.props;\n\n        const selectedOption = RadioInput.getSelectedOption(options, value);\n        this.state = { selectedOption };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const {\n            options,\n            value,\n        } = this.props;\n\n        if (value !== nextProps.value || options !== nextProps.options) {\n            const selectedOption = RadioInput.getSelectedOption(\n                nextProps.options,\n                nextProps.value,\n            );\n            this.setState({ selectedOption });\n        }\n    }\n\n    handleOptionClick = (key) => {\n        const option = this.props.options.find(d => d.key === key);\n\n        this.setState(\n            { selectedOption: option },\n            () => {\n                if (this.props.onChange) {\n                    this.props.onChange(key);\n                }\n            },\n        );\n    }\n\n    renderOption = (key, option) => (\n        <Option\n            key={key}\n            name={this.props.name}\n            label={option.label}\n            checked={this.state.selectedOption && key === this.state.selectedOption.key}\n            onClick={() => this.handleOptionClick(key)}\n            {...this.props}\n        />\n    )\n\n    render() {\n        const {\n            className,\n            options,\n        } = this.props;\n\n        return (\n            <ListView\n                className={`radio-input ${className} ${styles.radioInput}`}\n                data={options}\n                keySelector={RadioInput.optionKeyExtractor}\n                modifier={this.renderOption}\n            />\n        );\n    }\n}\n\nexport default FaramInputElement(RadioInput);\n","import PropTypes from 'prop-types';\nimport React, { Fragment } from 'react';\nimport { FaramInputElement } from '@togglecorp/faram';\n\nimport SelectInput from '../SelectInput';\n\nconst propTypes = {\n    label: PropTypes.string,\n    onChange: PropTypes.func.isRequired,\n    value: PropTypes.arrayOf(PropTypes.string),\n    options: PropTypes.arrayOf(PropTypes.shape({\n        key: PropTypes.string,\n        label: PropTypes.string,\n    })),\n};\n\nconst defaultProps = {\n    label: '',\n    value: undefined,\n    options: [],\n};\n\n\nclass RangeFilter extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n        this.updateFromProps(props);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const { options } = this.props;\n        // Checking this.value instead of this.props.value is intentional\n        if (this.value !== nextProps.value || options !== nextProps.options) {\n            this.updateFromProps(nextProps);\n        }\n    }\n\n    updateFromProps({ value }) {\n        this.value = value;\n        this.startValue = value && value[0];\n        this.endValue = value && value[value.length - 1];\n    }\n\n    handleStartValueChange = (startValue) => {\n        this.startValue = startValue;\n        this.handleUpdate();\n    }\n\n    handleEndValueChange = (endValue) => {\n        this.endValue = endValue;\n        this.handleUpdate();\n    }\n\n    handleUpdate() {\n        const { options, onChange } = this.props;\n        const startIndex = this.startValue\n            ? options.findIndex(o => o.key === this.startValue) : 0;\n        const endIndex = this.endValue\n            ? options.findIndex(o => o.key === this.endValue) : options.length - 1;\n\n        this.value = options.slice(startIndex, endIndex + 1).map(o => o.key);\n        onChange(this.value);\n    }\n\n    render() {\n        const {\n            label,\n            value, // eslint-disable-line no-unused-vars, @typescript-eslint/no-unused-vars\n            onChange, // eslint-disable-line no-unused-vars, @typescript-eslint/no-unused-vars\n            ...otherProps\n        } = this.props;\n\n        return (\n            <Fragment>\n                <SelectInput\n                    onChange={this.handleStartValueChange}\n                    value={this.startValue}\n                    label={`${label} from`}\n                    {...otherProps}\n                />\n                <SelectInput\n                    onChange={this.handleEndValueChange}\n                    value={this.endValue}\n                    label={`${label} to`}\n                    {...otherProps}\n                />\n            </Fragment>\n\n        );\n    }\n}\n\nexport default FaramInputElement(RangeFilter);\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { randomString } from '@togglecorp/fujs';\nimport { FaramInputElement } from '@togglecorp/faram';\nimport HintAndError from '../HintAndError';\nimport styles from './styles.scss';\n\nconst propTypes = {\n    /**\n     * Show file status? (eg: File name, 'No file selected')\n     */\n    showStatus: PropTypes.bool,\n\n    /**\n     * String to show in case of error\n     */\n    error: PropTypes.string,\n\n    value: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.arrayOf(PropTypes.object),\n    ]),\n\n    hint: PropTypes.string,\n    multiple: PropTypes.bool,\n\n    className: PropTypes.string,\n\n    showHintAndError: PropTypes.bool,\n\n    children: PropTypes.oneOfType([\n        PropTypes.node,\n        PropTypes.arrayOf(\n            PropTypes.node,\n        ),\n    ]).isRequired,\n\n    accept: PropTypes.string,\n\n    onChange: PropTypes.func,\n\n    changeDelay: PropTypes.number,\n\n    disabled: PropTypes.bool,\n    readOnly: PropTypes.bool,\n};\n\nconst defaultProps = {\n    className: '',\n    error: '',\n    hint: '',\n    onChange: undefined,\n    showStatus: true,\n    showHintAndError: true,\n    accept: undefined,\n    multiple: false,\n    value: undefined,\n    disabled: false,\n    readOnly: false,\n    changeDelay: undefined,\n};\n\nclass RawFileInput extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    static isValidFile = (name, mimeType, acceptString) => {\n        // if there is no accept string, anything is valid\n        if (!acceptString) {\n            return true;\n        }\n        const extensionMatch = /\\.\\w+$/.exec(name);\n        const mimeMatch = /^.+\\//.exec(mimeType);\n\n        const acceptList = acceptString.split(/,\\s+/);\n        return acceptList.some((accept) => {\n            // check mimeType such as image/png or image/*\n            if (mimeType === accept || (!!mimeMatch && `${mimeMatch[0]}*` === accept)) {\n                return true;\n            }\n            return !!extensionMatch && extensionMatch[0].toLowerCase() === accept.toLowerCase();\n        });\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.inputId = randomString();\n    }\n\n    getFileStatus = (value) => {\n        if (Array.isArray(value) && value.length > 0) {\n            return `Selected: ${value.map(file => file.name).join(', ')}`;\n        }\n        if (value) {\n            return `Selected: ${value.name}`;\n        }\n        return 'No file chosen';\n    }\n\n    handleChange = () => {\n        const {\n            accept,\n            onChange,\n            multiple,\n        } = this.props;\n        const filesFromInput = Array.from(this.fileInput.files);\n        const files = filesFromInput.filter(\n            file => RawFileInput.isValidFile(file.name, file.type, accept),\n        );\n        const invalidFiles = filesFromInput.length - files.length;\n\n        if (onChange) {\n            onChange(multiple ? files : files[0], { invalidFiles });\n        }\n    }\n\n\n    render() {\n        const {\n            showStatus,\n            className,\n            children,\n            error,\n            hint,\n            showHintAndError,\n            value,\n            changeDelay, // eslint-disable-line no-unused-vars, @typescript-eslint/no-unused-vars\n            onChange, // eslint-disable-line no-unused-vars, @typescript-eslint/no-unused-vars\n            ...otherProps\n        } = this.props;\n\n        return (\n            <div className={`file-input ${className} ${styles.fileInputWrapper}`}>\n                <label\n                    className={`label ${styles.label}`}\n                    htmlFor={this.inputId}\n                >\n                    { children }\n                </label>\n                <input\n                    className={`input ${styles.input}`}\n                    id={this.inputId}\n                    onChange={this.handleChange}\n                    // FIXME: ref may not be needed\n                    ref={(el) => { this.fileInput = el; }}\n                    type=\"file\"\n                    {...otherProps}\n                />\n                {\n                    showStatus && (\n                        <p className={styles.status}>\n                            {this.getFileStatus(value)}\n                        </p>\n                    )\n                }\n                <HintAndError\n                    show={showHintAndError}\n                    hint={hint}\n                    error={error}\n                />\n            </div>\n        );\n    }\n}\n\nexport default FaramInputElement(RawFileInput);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { isFalsy } from '@togglecorp/fujs';\nimport { FaramInputElement } from '@togglecorp/faram';\n\nimport List from '../../View/List';\n\nimport styles from './styles.scss';\n\nconst propTypes = {\n    className: PropTypes.string,\n    // eslint-disable-next-line react/forbid-prop-types\n    options: PropTypes.array,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    onChange: PropTypes.func,\n    disabled: PropTypes.bool,\n    readOnly: PropTypes.bool,\n    keySelector: PropTypes.func,\n    labelSelector: PropTypes.func,\n    colorSelector: PropTypes.func,\n    isDefaultSelector: PropTypes.func,\n};\nconst defaultProps = {\n    className: '',\n    options: [],\n    value: undefined,\n    onChange: () => {},\n    disabled: false,\n    readOnly: false,\n\n    keySelector: option => option.key,\n    labelSelector: option => option.label,\n    colorSelector: option => option.color,\n    isDefaultSelector: option => !!option.default,\n};\n\nclass ScaleInput extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n        // FIXME: this kind of actions should be moved to Faram:computeSchema\n        this.checkAndSetDefaultValue(props.options, props.value);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const {\n            options,\n            disabled,\n            readOnly,\n        } = this.props;\n\n        if (\n            nextProps.options !== options\n            || (!nextProps.disabled && nextProps.disabled !== disabled)\n            || (!nextProps.readOnly && nextProps.readOnly !== readOnly)\n        ) {\n            this.checkAndSetDefaultValue(nextProps.options, nextProps.value);\n        }\n    }\n\n    getClassName = () => {\n        const {\n            className,\n            disabled,\n            readOnly,\n        } = this.props;\n\n        const classNames = [\n            className,\n            'scale-input',\n            styles.scaleInput,\n        ];\n\n        if (disabled) {\n            classNames.push('disabled');\n            classNames.push(styles.disabled);\n        }\n\n        if (readOnly) {\n            classNames.push('read-only');\n            classNames.push(styles.readOnly);\n        }\n\n        return classNames.join(' ');\n    }\n\n    getOptionClassName = (key) => {\n        const { value } = this.props;\n\n        const classNames = [\n            styles.value,\n        ];\n\n        // FIXME: there shouldn't be need for cast to string\n        const isActive = String(key) === String(value);\n\n        if (isActive) {\n            classNames.push(styles.active);\n        }\n\n        return classNames.join(' ');\n    }\n\n    checkAndSetDefaultValue = (options, value) => {\n        const {\n            onChange,\n            isDefaultSelector,\n            keySelector,\n            disabled,\n            readOnly,\n        } = this.props;\n\n        if (disabled || readOnly) {\n            return;\n        }\n\n        const defaultOption = options.find(option => isDefaultSelector(option));\n        if (isFalsy(value, ['']) && !isFalsy(defaultOption, [''])) {\n            onChange(keySelector(defaultOption));\n        }\n    }\n\n    handleOptionClick = (key) => {\n        const {\n            value,\n            onChange,\n        } = this.props;\n\n        if (value !== key) {\n            onChange(key);\n        }\n    }\n\n    renderOption = (k, option) => {\n        const {\n            disabled,\n            readOnly,\n            colorSelector,\n            keySelector,\n            labelSelector,\n        } = this.props;\n\n        const key = keySelector(option);\n        const color = colorSelector(option);\n        const label = labelSelector(option);\n\n        const style = {\n            backgroundColor: color,\n        };\n\n        const className = this.getOptionClassName(key);\n\n        return (\n            <button\n                onClick={() => { this.handleOptionClick(key); }}\n                type=\"button\"\n                key={key}\n                className={className}\n                title={label}\n                disabled={disabled || readOnly}\n                style={style}\n            />\n        );\n    }\n\n    render() {\n        const { options } = this.props;\n        const className = this.getClassName();\n\n        return (\n            <div className={className}>\n                <List\n                    data={options}\n                    modifier={this.renderOption}\n                />\n            </div>\n        );\n    }\n}\n\nexport default FaramInputElement(ScaleInput);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { _cs } from '@togglecorp/fujs';\nimport { FaramInputElement } from '@togglecorp/faram';\n\nimport Delay from '../../General/Delay';\n\nimport RawInput from '../RawInput';\nimport HintAndError from '../HintAndError';\nimport Label from '../Label';\n\nimport styles from './styles.scss';\n\nconst propTypes = {\n    className: PropTypes.string,\n    disabled: PropTypes.bool,\n    error: PropTypes.string,\n    hint: PropTypes.string,\n    label: PropTypes.string,\n    onBlur: PropTypes.func,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    required: PropTypes.bool,\n    showLabel: PropTypes.bool,\n    showHintAndError: PropTypes.bool,\n    value: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    selectOnFocus: PropTypes.bool,\n    title: PropTypes.string,\n};\n\nconst defaultProps = {\n    className: '',\n    disabled: false,\n    error: '',\n    hint: '',\n    label: '',\n    onBlur: undefined,\n    onChange: undefined,\n    onFocus: undefined,\n    required: false,\n    showLabel: true,\n    showHintAndError: true,\n    value: '',\n    selectOnFocus: false,\n    title: undefined,\n};\n\nclass TextInput extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n\n        this.state = { isFocused: false };\n    }\n\n    getClassName = () => {\n        const {\n            className: classNameFromProps,\n            disabled,\n            error,\n            required,\n        } = this.props;\n\n        const { isFocused } = this.state;\n\n        const className = _cs(\n            classNameFromProps,\n            styles.textInput,\n            'text-input',\n            disabled && styles.disabled,\n            disabled && 'disabled',\n            isFocused && styles.focused,\n            isFocused && 'focused',\n            error && styles.error,\n            error && 'error',\n            required && styles.required,\n            required && 'required',\n        );\n\n        return className;\n    }\n\n    handleChange = (event) => {\n        const { value } = event.target;\n        const { onChange } = this.props;\n\n        if (onChange) {\n            onChange(value);\n        }\n    }\n\n    handleFocus = (event) => {\n        const {\n            selectOnFocus,\n            onFocus,\n        } = this.props;\n\n        if (selectOnFocus) {\n            event.target.select();\n        }\n\n        this.setState({ isFocused: true });\n\n        if (onFocus) {\n            onFocus();\n        }\n    }\n\n    handleBlur = () => {\n        const { onBlur } = this.props;\n\n        this.setState({ isFocused: false });\n        if (onBlur) {\n            onBlur();\n        }\n    }\n\n    render() {\n        const {\n            // skip prop injection\n            onBlur, // eslint-disable-line no-unused-vars, @typescript-eslint/no-unused-vars\n            onChange, // eslint-disable-line no-unused-vars, @typescript-eslint/no-unused-vars\n            onFocus, // eslint-disable-line no-unused-vars, @typescript-eslint/no-unused-vars\n            selectOnFocus, // eslint-disable-line no-unused-vars, @typescript-eslint/no-unused-vars\n            // eslint-disable-next-line no-unused-vars, @typescript-eslint/no-unused-vars\n            className: classNameFromProps,\n\n            error,\n            hint,\n            label,\n            showLabel,\n            showHintAndError,\n            disabled,\n            title,\n            ...otherProps\n        } = this.props;\n\n        const { isFocused } = this.state;\n\n        const className = this.getClassName();\n\n        return (\n            <div\n                className={className}\n                title={title}\n            >\n                <Label\n                    show={showLabel}\n                    text={label}\n                    error={!!error}\n                    active={isFocused}\n                    disabled={disabled}\n                />\n                <RawInput\n                    className={styles.input}\n                    onBlur={this.handleBlur}\n                    onChange={this.handleChange}\n                    onFocus={this.handleFocus}\n                    disabled={disabled}\n                    type=\"text\"\n                    {...otherProps}\n                />\n                <HintAndError\n                    show={showHintAndError}\n                    hint={hint}\n                    error={error}\n                />\n            </div>\n        );\n    }\n}\n\nexport default FaramInputElement(Delay(TextInput));\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { FaramInputElement } from '@togglecorp/faram';\nimport { _cs } from '@togglecorp/fujs';\n\nimport Icon from '../../General/Icon';\nimport Delay from '../../General/Delay';\n\nimport TextInput from '../TextInput';\n\nimport styles from './styles.scss';\n\nconst propTypes = {\n    className: PropTypes.string,\n    disabled: PropTypes.bool,\n};\n\nconst defaultProps = {\n    className: '',\n    disabled: false,\n};\n\nclass SearchInput extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    render() {\n        const {\n            className: classNameFromProps,\n            disabled,\n            ...otherProps\n        } = this.props;\n\n        const className = _cs(\n            classNameFromProps,\n            'search-input',\n            styles.searchInput,\n            disabled && 'disabled',\n            disabled && styles.disabled,\n        );\n\n        const iconClassName = _cs(\n            'icon',\n            styles.icon,\n        );\n\n        return (\n            <div className={className}>\n                <Icon\n                    className={iconClassName}\n                    name=\"search\"\n                />\n                <TextInput\n                    className={styles.textInput}\n                    type=\"search\"\n                    disabled={disabled}\n                    {...otherProps}\n                />\n            </div>\n        );\n    }\n}\n\nexport default FaramInputElement(Delay(SearchInput));\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { _cs } from '@togglecorp/fujs';\n\nimport Icon from '../../../General/Icon';\n\nimport styles from './styles.scss';\n\nconst Checkbox = ({ active }) => {\n    const className = _cs(\n        'checkbox',\n        styles.checkbox,\n    );\n\n    return (\n        <Icon\n            className={className}\n            name={active ? 'checkbox' : 'checkboxOutlineBlank'}\n        />\n    );\n};\n\nCheckbox.propTypes = {\n    active: PropTypes.bool.isRequired,\n};\n\nexport default Checkbox;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Checkbox from '../Checkbox';\nimport styles from './styles.scss';\n\nconst propTypes = {\n    active: PropTypes.bool.isRequired,\n    focused: PropTypes.bool.isRequired,\n    className: PropTypes.string,\n    onClick: PropTypes.func.isRequired,\n    optionKey: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]).isRequired,\n    onFocus: PropTypes.func.isRequired,\n    optionLabel: PropTypes.string,\n};\n\nconst defaultProps = {\n    className: '',\n    optionLabel: '',\n};\n\nexport default class Option extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n        this.ref = React.createRef();\n        this.focusedByMouse = undefined;\n    }\n\n    componentDidMount() {\n        const { focused } = this.props;\n        if (focused) {\n            this.scrollToFocus();\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const { focused } = this.props;\n        if (!focused && nextProps.focused) {\n            this.scrollToFocus();\n        } else {\n            this.focusedByMouse = false;\n        }\n    }\n\n    getClassName = () => {\n        const {\n            active,\n            focused,\n            className,\n        } = this.props;\n\n        const classNames = [\n            className,\n            'option',\n            styles.option,\n        ];\n\n        if (active) {\n            classNames.push('active');\n        }\n\n        if (focused) {\n            classNames.push(styles.focused);\n            classNames.push('focused');\n        }\n\n        return classNames.join(' ');\n    }\n\n    handleClick = () => {\n        const {\n            onClick,\n            optionKey,\n        } = this.props;\n\n        onClick(optionKey);\n    }\n\n    handleMouseMove = () => {\n        const {\n            optionKey,\n            onFocus,\n        } = this.props;\n\n        this.focusedByMouse = true;\n        onFocus(optionKey);\n    }\n\n    handleMouseLeave = () => {\n        this.focusedByMouse = false;\n    }\n\n    scrollToFocus = () => {\n        if (!this.focusedByMouse) {\n            this.ref.current.scrollIntoView({\n                block: 'nearest',\n            });\n        }\n    }\n\n    render() {\n        const {\n            optionLabel,\n            active,\n        } = this.props;\n\n        const className = this.getClassName();\n\n        return (\n            <button\n                ref={this.ref}\n                className={className}\n                onClick={this.handleClick}\n                onMouseMove={this.handleMouseMove}\n                onMouseLeave={this.handleMouseLeave}\n                type=\"button\"\n            >\n                <Checkbox active={active} />\n                { optionLabel }\n            </button>\n        );\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { listToMap, isListEqual } from '@togglecorp/fujs';\n\nimport FloatingContainer from '../../../View/FloatingContainer';\nimport List from '../../../View/List';\nimport Option from '../Option';\n\nimport styles from './styles.scss';\n\nconst propTypes = {\n    activeKeys: PropTypes.array.isRequired, // eslint-disable-line react/forbid-prop-types\n    className: PropTypes.string,\n    data: PropTypes.array.isRequired, // eslint-disable-line react/forbid-prop-types\n    keySelector: PropTypes.func.isRequired,\n    labelSelector: PropTypes.func.isRequired,\n    optionLabelSelector: PropTypes.func,\n    onBlur: PropTypes.func.isRequired,\n    onInvalidate: PropTypes.func.isRequired,\n    onOptionClick: PropTypes.func.isRequired,\n    onOptionFocus: PropTypes.func.isRequired,\n    parentContainer: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n    renderEmpty: PropTypes.func,\n    show: PropTypes.bool.isRequired,\n    focusedKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nconst defaultProps = {\n    className: '',\n    renderEmpty: () => 'No option available',\n    parentContainer: undefined,\n    focusedKey: undefined,\n    optionLabelSelector: undefined,\n};\n\nexport default class Options extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n        this.generateActiveMap(props);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const { activeKeys: oldActiveKeys } = this.props;\n        const { activeKeys: newActiveKeys } = nextProps;\n\n        if (!isListEqual(oldActiveKeys, newActiveKeys)) {\n            this.generateActiveMap(nextProps);\n        }\n    }\n\n    getClassName = () => {\n        const { className } = this.props;\n\n        const classNames = [\n            className,\n            styles.options,\n        ];\n\n        return classNames.join(' ');\n    }\n\n    generateActiveMap = (props) => {\n        const { activeKeys } = props;\n\n        this.activeKeysMap = listToMap(\n            activeKeys,\n            optionKey => optionKey,\n            () => true,\n        );\n    }\n\n    renderOption = (k, data) => {\n        const {\n            keySelector,\n            labelSelector,\n            onOptionClick,\n            onOptionFocus,\n            optionLabelSelector,\n            focusedKey,\n        } = this.props;\n\n        const key = keySelector(data);\n        const label = optionLabelSelector ? (\n            optionLabelSelector(data)\n        ) : (\n            labelSelector(data)\n        );\n        const isActive = !!this.activeKeysMap[key];\n        const isFocused = key === focusedKey;\n\n        return (\n            <Option\n                key={key}\n                optionKey={key}\n                optionLabel={label}\n                onClick={onOptionClick}\n                onFocus={onOptionFocus}\n                active={isActive}\n                focused={isFocused}\n            />\n        );\n    }\n\n    renderEmpty = () => {\n        const {\n            renderEmpty: EmptyComponent,\n            data,\n        } = this.props;\n\n        if (data.length > 0) {\n            return null;\n        }\n\n        const className = `empty ${styles.empty}`;\n        return (\n            <div className={className}>\n                <EmptyComponent />\n            </div>\n        );\n    }\n\n    render() {\n        const {\n            onBlur,\n            onInvalidate,\n            parentContainer,\n            data,\n            show,\n        } = this.props;\n\n        const className = this.getClassName();\n        const Empty = this.renderEmpty;\n\n        if (!show) {\n            return null;\n        }\n\n        return (\n            <FloatingContainer\n                onBlur={onBlur}\n                onInvalidate={onInvalidate}\n                parent={parentContainer}\n                className={className}\n            >\n                <List\n                    data={data}\n                    modifier={this.renderOption}\n                />\n                <Empty />\n            </FloatingContainer>\n        );\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport memoize from 'memoize-one';\nimport {\n    listToMap,\n    caseInsensitiveSubmatch,\n    compareStringSearch,\n    isDefined,\n    _cs,\n} from '@togglecorp/fujs';\nimport { FaramInputElement } from '@togglecorp/faram';\n\nimport Button from '../../Action/Button';\nimport DangerButton from '../../Action/Button/DangerButton';\nimport handleKeyboard from '../../General/HandleKeyboard';\nimport HintAndError from '../HintAndError';\nimport Label from '../Label';\nimport RawInput from '../RawInput';\n\nimport {\n    calcFloatPositionInMainWindow,\n    defaultOffset,\n    defaultLimit,\n} from '../../../utils/bounds';\n\nimport Options from './Options';\nimport styles from './styles.scss';\n\nconst RawKeyInput = handleKeyboard(RawInput);\nconst emptyList = [];\n\nconst typeToSearch = () => 'Type to search';\nconst noMatchingResults = () => 'No matching results';\nconst noOptionsAvailable = () => 'No options available';\n\n// NOTE: labelSelector must return string\n// NOTE: optionLabelSelector may return renderable node\nexport const propTypes = {\n    autoFocus: PropTypes.bool,\n    disabled: PropTypes.bool,\n    hideClearButton: PropTypes.bool,\n    hideSelectAllButton: PropTypes.bool,\n    readOnly: PropTypes.bool,\n    showHintAndError: PropTypes.bool,\n    showLabel: PropTypes.bool,\n\n    className: PropTypes.string,\n    error: PropTypes.string,\n    hint: PropTypes.string,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    optionsClassName: PropTypes.string,\n    placeholder: PropTypes.string,\n    title: PropTypes.string,\n\n    options: PropTypes.arrayOf(PropTypes.object),\n    // eslint-disable-next-line react/forbid-prop-types\n    value: PropTypes.array,\n    onChange: PropTypes.func.isRequired,\n\n    keySelector: PropTypes.func,\n    labelSelector: PropTypes.func,\n    optionLabelSelector: PropTypes.func,\n\n    renderEmpty: PropTypes.func,\n    maxDisplayOptions: PropTypes.number,\n};\n\nexport const defaultProps = {\n    autoFocus: undefined,\n    className: '',\n    disabled: false,\n    error: undefined,\n    hideClearButton: false,\n    hideSelectAllButton: false,\n    hint: undefined,\n    keySelector: d => d.key,\n    label: '',\n    labelSelector: d => d.label,\n    optionLabelSelector: undefined,\n    options: emptyList,\n    optionsClassName: '',\n    placeholder: 'Select option(s)',\n    readOnly: false,\n    renderEmpty: undefined,\n    showHintAndError: true,\n    showLabel: true,\n    title: undefined,\n    value: emptyList,\n    maxDisplayOptions: 100,\n};\n\nclass SearchMultiSelectInput extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            // FIXME: this may break\n            inputInFocus: props.autoFocus,\n            focusedKey: undefined,\n\n            showOptionsPopup: false,\n            searchValue: undefined,\n        };\n\n        this.containerRef = React.createRef();\n        this.inputRef = React.createRef();\n    }\n\n    componentDidMount() {\n        const { current: container } = this.containerRef;\n        if (container) {\n            this.boundingClientRect = container.getBoundingClientRect();\n        }\n    }\n\n    findPlaceholderValue = memoize((\n        options,\n        labelSelector,\n        keySelector,\n        value = [],\n    ) => {\n        const optionsMap = listToMap(\n            options,\n            keySelector,\n            element => element,\n        );\n        const selectedOptions = value\n            .map(k => optionsMap[k])\n            .filter(isDefined)\n            .map(v => labelSelector(v));\n        return selectedOptions.join(', ');\n    })\n\n    filterOptions = memoize((\n        options,\n        labelSelector,\n        value,\n        maxDisplayOptions,\n    ) => {\n        if (!value || value.length === 0) {\n            return [];\n        }\n\n        const newOptions = options\n            .filter(\n                option => (\n                    value === undefined || caseInsensitiveSubmatch(labelSelector(option), value)\n                ),\n            )\n            .sort((a, b) => compareStringSearch(\n                labelSelector(a),\n                labelSelector(b),\n                value,\n            ))\n            .slice(0, maxDisplayOptions);\n        return newOptions;\n    })\n\n    // Helper\n\n    handleShowOptionsPopup = () => {\n        const { current: input } = this.inputRef;\n        if (input) {\n            input.select();\n        }\n\n        // NOTE: this may not be required\n        const { current: container } = this.containerRef;\n        if (container) {\n            this.boundingClientRect = container.getBoundingClientRect();\n        }\n\n        this.setState({\n            showOptionsPopup: true,\n            searchValue: undefined,\n        });\n    }\n\n    handleHideOptionsPopup = () => {\n        this.setState({\n            showOptionsPopup: false,\n            searchValue: undefined,\n        });\n    }\n\n    // Input\n\n    handleInputFocus = () => {\n        this.setState({ inputInFocus: true });\n    }\n\n    handleInputBlur = () => {\n        this.setState({ inputInFocus: false });\n    }\n\n    handleInputChange = (e) => {\n        const { value } = e.target;\n\n        // NOTE: this may not be required\n        const { current: container } = this.containerRef;\n        if (container) {\n            this.boundingClientRect = container.getBoundingClientRect();\n        }\n\n        this.setState({\n            showOptionsPopup: true,\n            searchValue: value,\n        });\n    }\n\n    // Options\n\n    handleOptionsInvalidate = (optionsContainer) => {\n        const contentRect = optionsContainer.getBoundingClientRect();\n        let parentRect = this.boundingClientRect;\n        const { current: container } = this.containerRef;\n\n        if (container) {\n            parentRect = container.getBoundingClientRect();\n        }\n\n        const { showHintAndError } = this.props;\n\n        const offset = { ...defaultOffset };\n        if (showHintAndError) {\n            offset.top = 12;\n        }\n\n        const limit = {\n            ...defaultLimit,\n            minW: parentRect.width,\n            maxW: parentRect.width,\n        };\n\n        const optionsContainerPosition = (\n            calcFloatPositionInMainWindow({\n                parentRect,\n                contentRect,\n                offset,\n                limit,\n            })\n        );\n\n        return optionsContainerPosition;\n    };\n\n    handleOptionSelect = (key) => {\n        const {\n            value,\n            onChange,\n        } = this.props;\n\n        const newValue = [...value];\n        const optionIndex = newValue.findIndex(d => d === key);\n        if (optionIndex === -1) {\n            newValue.push(key);\n        } else {\n            newValue.splice(optionIndex, 1);\n        }\n\n        // No need to close modal or reset sort\n        // No need to check if same option was clicked\n        onChange(newValue);\n    }\n\n    handleClearButtonClick = () => {\n        const { onChange } = this.props;\n        onChange(emptyList);\n    }\n\n    handleSelectAllButtonClick = () => {\n        const {\n            options,\n            keySelector,\n            onChange,\n        } = this.props;\n\n        const newValue = options.map(d => keySelector(d));\n        onChange(newValue);\n    }\n\n    handleFocusChange = (focusedKey) => {\n        this.setState({ focusedKey });\n    }\n\n    render() {\n        const {\n            error,\n            hint,\n            keySelector,\n            label,\n            labelSelector,\n            optionsClassName,\n            renderEmpty: renderEmptyFromProps,\n            showHintAndError,\n            showLabel,\n            title,\n            value,\n            disabled,\n            className: classNameFromProps,\n            options,\n            hideClearButton,\n            hideSelectAllButton,\n            readOnly,\n            autoFocus,\n            placeholder,\n            optionLabelSelector,\n            maxDisplayOptions,\n        } = this.props;\n\n        const {\n            showOptionsPopup,\n            focusedKey,\n            inputInFocus,\n            searchValue,\n        } = this.state;\n\n\n        let renderEmpty = renderEmptyFromProps;\n\n        if (!renderEmptyFromProps) {\n            renderEmpty = !searchValue ? typeToSearch : noMatchingResults;\n        }\n\n        if (!renderEmptyFromProps && options.length === 0) {\n            renderEmpty = noOptionsAvailable;\n        }\n\n        const isFilled = value && value.length !== 0;\n        const isAllFilled = value && value.length === options.length;\n\n        const showClearButton = isFilled && !(hideClearButton || disabled || readOnly);\n        const showSelectAllButton = !isAllFilled && !(hideSelectAllButton || disabled || readOnly);\n\n        const { current: container } = this.containerRef;\n\n        const inputTitle = this.findPlaceholderValue(options, labelSelector, keySelector, value);\n        const finalPlaceholder = (\n            inputTitle\n            || placeholder\n        );\n\n        const finalSearchValue = searchValue || '';\n\n        const filteredOptions = this.filterOptions(\n            options,\n            labelSelector,\n            searchValue,\n            maxDisplayOptions,\n        );\n\n        const className = _cs(\n            classNameFromProps,\n            'multi-select-input',\n            styles.multiSelectInput,\n            showOptionsPopup && styles.showOptions,\n            showOptionsPopup && 'show-options',\n            disabled && 'disabled',\n            disabled && styles.disabled,\n            inputInFocus && styles.inputInFocus,\n            inputInFocus && 'input-in-focus',\n            error && styles.error,\n            error && 'error',\n            hideClearButton && styles.hideClearButton,\n            hideClearButton && 'hide-clear-button',\n            hideSelectAllButton && styles.hideSelectAllButton,\n            hideSelectAllButton && 'hide-select-all-button',\n            value.length !== 0 && styles.filled,\n            value.length !== 0 && 'filled',\n            value.length === options.length && styles.completelyFilled,\n            value.length === options.length && 'completely-filled',\n        );\n\n        const inputAndActionClassName = `\n            input-and-actions\n            ${styles.inputAndActions}\n        `;\n\n        const actionsClassName = `\n            actions\n            ${styles.actions}\n        `;\n\n        const clearButtonClassName = `\n            clear-button\n            ${styles.clearButton}\n        `;\n\n        const selectAllButtonClassName = `\n            select-all-button\n            ${styles.selectAllButton}\n        `;\n\n        return (\n            <div\n                className={className}\n                ref={this.containerRef}\n                title={title}\n            >\n                { showLabel && (\n                    <Label\n                        text={label}\n                        error={!!error}\n                        disabled={disabled}\n                        active={inputInFocus || showOptionsPopup}\n                    />\n                )}\n                <div className={inputAndActionClassName}>\n                    <RawKeyInput\n                        className={styles.input}\n                        type=\"text\"\n                        elementRef={this.inputRef}\n                        onBlur={this.handleInputBlur}\n                        onFocus={this.handleInputFocus}\n                        onClick={this.handleShowOptionsPopup}\n                        onChange={this.handleInputChange}\n                        value={finalSearchValue}\n                        autoFocus={autoFocus}\n                        title={inputTitle}\n                        placeholder={finalPlaceholder}\n                        disabled={disabled || readOnly}\n\n                        focusedKey={focusedKey}\n                        options={filteredOptions}\n                        keySelector={keySelector}\n                        isOptionsShown={showOptionsPopup}\n                        onFocusChange={this.handleFocusChange}\n                        onHideOptions={this.handleHideOptionsPopup}\n                        onShowOptions={this.handleShowOptionsPopup}\n                        onOptionSelect={this.handleOptionSelect}\n                    />\n                    <div className={actionsClassName}>\n                        { showSelectAllButton && (\n                            <Button\n                                transparent\n                                tabIndex=\"-1\"\n                                className={selectAllButtonClassName}\n                                onClick={this.handleSelectAllButtonClick}\n                                title=\"Select all options\"\n                                disabled={disabled || readOnly}\n                                type=\"button\"\n                                iconName=\"checkAll\"\n                            />\n                        )}\n                        { showClearButton && (\n                            <DangerButton\n                                transparent\n                                tabIndex=\"-1\"\n                                className={clearButtonClassName}\n                                onClick={this.handleClearButtonClick}\n                                title=\"Clear selected option(s)\"\n                                disabled={disabled || readOnly}\n                                iconName=\"close\"\n                            />\n                        )}\n                    </div>\n                </div>\n                { showHintAndError && (\n                    <HintAndError\n                        error={error}\n                        hint={hint}\n                    />\n                )}\n                <Options\n                    activeKeys={value}\n                    data={filteredOptions}\n                    keySelector={keySelector}\n                    labelSelector={labelSelector}\n                    optionLabelSelector={optionLabelSelector}\n                    onBlur={this.handleHideOptionsPopup}\n                    onInvalidate={this.handleOptionsInvalidate}\n                    onOptionClick={this.handleOptionSelect}\n                    onOptionFocus={this.handleFocusChange}\n                    className={optionsClassName}\n                    parentContainer={container}\n                    renderEmpty={renderEmpty}\n                    show={showOptionsPopup}\n                    focusedKey={focusedKey}\n                />\n            </div>\n        );\n    }\n}\n\nexport default FaramInputElement(SearchMultiSelectInput);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './styles.scss';\n\nconst propTypes = {\n    className: PropTypes.string,\n    optionKey: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]).isRequired,\n    onClick: PropTypes.func.isRequired,\n    onFocus: PropTypes.func.isRequired,\n    children: PropTypes.node,\n    isActive: PropTypes.bool,\n    isFocused: PropTypes.bool,\n};\n\nconst defaultProps = {\n    isActive: false,\n    isFocused: false,\n    className: '',\n    children: undefined,\n};\n\nexport default class Option extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n        this.ref = React.createRef();\n        this.focusedByMouse = undefined;\n    }\n\n    componentDidMount() {\n        const { isFocused } = this.props;\n\n        if (isFocused) {\n            this.scrollToFocus();\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const { isFocused } = this.props;\n\n        if (!isFocused && nextProps.isFocused) {\n            this.scrollToFocus();\n        } else {\n            this.focusedByMouse = false;\n        }\n    }\n\n    getClassName = () => {\n        const {\n            className,\n            isActive,\n            isFocused,\n        } = this.props;\n\n        const classNames = [\n            className,\n            styles.option,\n            'option',\n        ];\n\n        if (isActive) {\n            classNames.push(styles.active);\n            classNames.push('active');\n        }\n\n        if (isFocused) {\n            classNames.push(styles.focused);\n            classNames.push('focused');\n        }\n\n        return classNames.join(' ');\n    }\n\n    handleClick = () => {\n        const {\n            optionKey,\n            onClick,\n        } = this.props;\n\n        onClick(optionKey);\n    }\n\n    handleMouseMove = () => {\n        const {\n            optionKey,\n            onFocus,\n        } = this.props;\n\n        this.focusedByMouse = true;\n        onFocus(optionKey);\n    }\n\n    handleMouseLeave = () => {\n        this.focusedByMouse = false;\n    }\n\n    scrollToFocus = () => {\n        if (!this.focusedByMouse) {\n            this.ref.current.scrollIntoView({\n                block: 'nearest',\n            });\n        }\n    }\n\n    render() {\n        const { children } = this.props;\n        const className = this.getClassName();\n\n        return (\n            <button\n                ref={this.ref}\n                className={className}\n                onClick={this.handleClick}\n                onMouseMove={this.handleMouseMove}\n                onMouseLeave={this.handleMouseLeave}\n                type=\"button\"\n            >\n                { children }\n            </button>\n        );\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport FloatingContainer from '../../../View/FloatingContainer';\nimport List from '../../../View/List';\n\nimport Option from './Option';\n\nimport styles from './styles.scss';\n\nconst propTypes = {\n    className: PropTypes.string,\n    show: PropTypes.bool,\n    data: PropTypes.arrayOf(PropTypes.object),\n    keySelector: PropTypes.func.isRequired,\n    labelSelector: PropTypes.func.isRequired,\n    optionLabelSelector: PropTypes.func,\n    renderEmpty: PropTypes.func,\n    onOptionClick: PropTypes.func.isRequired,\n    onOptionFocus: PropTypes.func.isRequired,\n    value: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    focusedKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    onBlur: PropTypes.func.isRequired,\n    onInvalidate: PropTypes.func.isRequired,\n\n    // eslint-disable-next-line react/forbid-prop-types\n    parentContainer: PropTypes.object,\n};\n\nconst defaultProps = {\n    className: '',\n    show: false,\n    data: [],\n    focusedKey: undefined,\n    optionLabelSelector: undefined,\n    renderEmpty: () => 'No option available',\n    value: undefined,\n    parentContainer: undefined,\n};\n\nexport default class Options extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    renderOption = (_, option) => {\n        const {\n            keySelector,\n            labelSelector,\n            optionLabelSelector,\n            onOptionClick,\n            onOptionFocus,\n            value,\n            focusedKey,\n        } = this.props;\n\n        const key = keySelector(option);\n        const label = optionLabelSelector ? (\n            optionLabelSelector(option)\n        ) : (\n            labelSelector(option)\n        );\n\n        const isActive = key === value;\n        const isFocused = key === focusedKey;\n\n        return (\n            <Option\n                key={key}\n                optionKey={key}\n                onClick={onOptionClick}\n                onFocus={onOptionFocus}\n                isActive={isActive}\n                isFocused={isFocused}\n            >\n                { label }\n            </Option>\n        );\n    }\n\n    renderEmpty = () => {\n        const {\n            data,\n            renderEmpty: EmptyComponent,\n        } = this.props;\n\n        if (data.length !== 0) {\n            return null;\n        }\n\n        const className = `\n            empty\n            ${styles.empty}\n        `;\n\n        return (\n            <div className={className}>\n                <EmptyComponent />\n            </div>\n        );\n    }\n\n    render() {\n        const {\n            className: classNameFromProps,\n            show,\n            data,\n            onBlur,\n            onInvalidate,\n            parentContainer,\n        } = this.props;\n\n        if (!show) {\n            return null;\n        }\n\n        const className = `\n            ${classNameFromProps}\n            ${styles.options}\n            options\n        `;\n\n        const Empty = this.renderEmpty;\n\n        return (\n            <FloatingContainer\n                onBlur={onBlur}\n                onInvalidate={onInvalidate}\n                parent={parentContainer}\n                className={className}\n            >\n                <List\n                    data={data}\n                    modifier={this.renderOption}\n                />\n                <Empty />\n            </FloatingContainer>\n        );\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport memoize from 'memoize-one';\nimport {\n    caseInsensitiveSubmatch,\n    compareStringSearch,\n    _cs,\n} from '@togglecorp/fujs';\nimport { FaramInputElement } from '@togglecorp/faram';\n\nimport DangerButton from '../../Action/Button/DangerButton';\nimport handleKeyboard from '../../General/HandleKeyboard';\nimport HintAndError from '../HintAndError';\nimport Label from '../Label';\nimport RawInput from '../RawInput';\n\nimport {\n    calcFloatPositionInMainWindow,\n    defaultOffset,\n    defaultLimit,\n} from '../../../utils/bounds';\n\nimport Options from './Options';\nimport styles from './styles.scss';\n\nconst propTypeKey = PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n]);\n\nconst RawKeyInput = handleKeyboard(RawInput);\nconst emptyList = [];\n\n// NOTE: labelSelector must return string\n// NOTE: optionLabelSelector may return renderable node\nconst propTypes = {\n    autoFocus: PropTypes.bool,\n    disabled: PropTypes.bool,\n    hideClearButton: PropTypes.bool,\n    readOnly: PropTypes.bool,\n    showHintAndError: PropTypes.bool,\n    showLabel: PropTypes.bool,\n\n    className: PropTypes.string,\n    error: PropTypes.string,\n    hint: PropTypes.string,\n    label: PropTypes.string,\n    optionsClassName: PropTypes.string,\n    placeholder: PropTypes.string,\n    title: PropTypes.string,\n\n    options: PropTypes.arrayOf(PropTypes.object),\n    value: propTypeKey,\n    onChange: PropTypes.func.isRequired,\n\n    keySelector: PropTypes.func,\n    labelSelector: PropTypes.func,\n    optionLabelSelector: PropTypes.func,\n\n    renderEmpty: PropTypes.func,\n    maxDisplayOptions: PropTypes.number,\n};\n\nconst defaultProps = {\n    autoFocus: undefined,\n    className: '',\n    disabled: false,\n    error: undefined,\n    hideClearButton: false,\n    hint: undefined,\n    keySelector: d => d.key,\n    label: '',\n    labelSelector: d => d.label,\n    optionLabelSelector: undefined,\n    options: emptyList,\n    optionsClassName: '',\n    placeholder: 'Search for an option',\n    readOnly: false,\n    renderEmpty: undefined,\n    showHintAndError: true,\n    showLabel: true,\n    title: undefined,\n    value: undefined,\n    maxDisplayOptions: 100,\n};\n\nclass SearchSelectInput extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            // FIXME: this may break\n            inputInFocus: props.autoFocus,\n            focusedKey: undefined,\n\n            showOptionsPopup: false,\n            searchValue: undefined,\n        };\n\n        this.containerRef = React.createRef();\n        this.inputRef = React.createRef();\n    }\n\n    componentDidMount() {\n        const { current: container } = this.containerRef;\n        if (container) {\n            this.boundingClientRect = container.getBoundingClientRect();\n        }\n    }\n\n    filterOptions = memoize((\n        options,\n        labelSelector,\n        value,\n        maxDisplayOptions,\n    ) => {\n        if (!value || value.length === 0) {\n            return [];\n        }\n\n        const newOptions = options\n            .filter(\n                option => (\n                    value === undefined || caseInsensitiveSubmatch(labelSelector(option), value)\n                ),\n            )\n            .sort((a, b) => compareStringSearch(\n                labelSelector(a),\n                labelSelector(b),\n                value,\n            ))\n            .slice(0, maxDisplayOptions);\n\n        return newOptions;\n    });\n\n    findDefaultSearchValue = memoize((\n        options,\n        labelSelector,\n        keySelector,\n        value,\n    ) => {\n        const activeOption = options.find(\n            d => keySelector(d) === value,\n        );\n\n        if (activeOption === undefined) {\n            return '';\n        }\n\n        return labelSelector(activeOption);\n    });\n\n    // Helper\n\n    handleShowOptionsPopup = () => {\n        const { current: input } = this.inputRef;\n        if (input) {\n            input.select();\n        }\n\n        /*\n        // NOTE: this may not be required\n        const { current: container } = this.containerRef;\n        if (container) {\n            this.boundingClientRect = container.getBoundingClientRect();\n        }\n        */\n\n        this.setState({\n            // showOptionsPopup: true,\n            searchValue: undefined,\n        });\n    }\n\n    handleHideOptionsPopup = () => {\n        this.setState({\n            showOptionsPopup: false,\n            searchValue: undefined,\n        });\n    }\n\n    // Input\n\n    handleInputFocus = () => {\n        this.setState({ inputInFocus: true });\n    }\n\n    handleInputBlur = () => {\n        this.setState({ inputInFocus: false });\n    }\n\n    handleInputChange = (e) => {\n        const { value } = e.target;\n\n        /*\n        // NOTE: this may not be required\n        const { current: container } = this.containerRef;\n        if (container) {\n            this.boundingClientRect = container.getBoundingClientRect();\n        }\n        */\n\n        this.setState({\n            showOptionsPopup: true,\n            searchValue: value,\n        });\n    }\n\n    // Options\n\n    handleOptionsInvalidate = (optionsContainer) => {\n        const contentRect = optionsContainer.getBoundingClientRect();\n        let parentRect = this.boundingClientRect;\n        const { current: container } = this.containerRef;\n\n        if (container) {\n            parentRect = container.getBoundingClientRect();\n        }\n\n        const { showHintAndError } = this.props;\n\n        const offset = { ...defaultOffset };\n        if (showHintAndError) {\n            offset.top = 12;\n        }\n\n        const limit = {\n            ...defaultLimit,\n            minW: parentRect.width,\n            maxW: parentRect.width,\n        };\n\n        const optionsContainerPosition = (\n            calcFloatPositionInMainWindow({\n                parentRect,\n                contentRect,\n                offset,\n                limit,\n            })\n        );\n\n        return optionsContainerPosition;\n    };\n\n    handleOptionSelect = (optionKey) => {\n        const {\n            value,\n            onChange,\n        } = this.props;\n\n        this.setState({\n            showOptionsPopup: false,\n            searchValue: undefined,\n        });\n\n        if (optionKey !== value) {\n            onChange(optionKey);\n        }\n    }\n\n    handleClearButtonClick = () => {\n        const {\n            onChange,\n            value,\n        } = this.props;\n\n        if (value !== undefined) {\n            onChange(undefined);\n        }\n    }\n\n    handleFocusChange = (focusedKey) => {\n        this.setState({ focusedKey });\n    }\n\n    render() {\n        const {\n            error,\n            hint,\n            keySelector,\n            label,\n            labelSelector,\n            optionLabelSelector,\n            optionsClassName,\n            renderEmpty,\n            showHintAndError,\n            showLabel,\n            title,\n            value,\n            disabled,\n            readOnly,\n            placeholder,\n            autoFocus,\n            hideClearButton,\n            className: classNameFromProps,\n            options,\n            maxDisplayOptions,\n        } = this.props;\n\n        const {\n            showOptionsPopup,\n            focusedKey,\n            inputInFocus,\n            searchValue,\n        } = this.state;\n\n        // NOTE: finalSearchValue shouldn't be undefined\n        const finalSearchValue = searchValue === undefined\n            ? this.findDefaultSearchValue(options, labelSelector, keySelector, value)\n            : searchValue;\n\n        const isFilled = finalSearchValue && finalSearchValue.length !== 0;\n        const showClearButton = isFilled && !(hideClearButton || disabled || readOnly);\n\n        const { current: container } = this.containerRef;\n\n        const filteredOptions = this.filterOptions(\n            options,\n            labelSelector,\n            // NOTE: Using value instead of finalSearchValue\n            // this will display all options at first\n            searchValue,\n            maxDisplayOptions,\n        );\n\n        const className = _cs(\n            classNameFromProps,\n            'select-input',\n            styles.selectInput,\n            showOptionsPopup && styles.showOptions,\n            showOptionsPopup && 'show-options',\n            disabled && styles.disabled,\n            disabled && 'disabled',\n            error && styles.error,\n            error && 'error',\n            inputInFocus && styles.inputInFocus,\n            inputInFocus && 'input-in-focus',\n            hideClearButton && styles.hideClearButton,\n            hideClearButton && 'hide-clear-button',\n            isFilled && styles.filled,\n            isFilled && 'filled',\n        );\n\n        const inputClassName = _cs(\n            styles.inputAndActions,\n            'input-and-actions',\n        );\n\n        const actionsClassName = `\n            actions\n            ${styles.actions}\n        `;\n\n        const clearClassName = `\n            clear-button\n            ${styles.clearButton}\n        `;\n\n        return (\n            <div\n                className={className}\n                ref={this.containerRef}\n                title={title}\n            >\n                { showLabel && (\n                    <Label\n                        text={label}\n                        error={!!error}\n                        disabled={disabled}\n                        active={inputInFocus || showOptionsPopup}\n                    />\n                )}\n                <div className={inputClassName}>\n                    <RawKeyInput\n                        className={styles.input}\n                        type=\"text\"\n                        elementRef={this.inputRef}\n                        onBlur={this.handleInputBlur}\n                        onFocus={this.handleInputFocus}\n                        onClick={this.handleShowOptionsPopup}\n                        onChange={this.handleInputChange}\n                        value={finalSearchValue}\n                        autoFocus={autoFocus}\n                        placeholder={placeholder}\n                        disabled={disabled || readOnly}\n\n                        focusedKey={focusedKey}\n                        options={filteredOptions}\n                        keySelector={keySelector}\n                        isOptionsShown={showOptionsPopup}\n                        onFocusChange={this.handleFocusChange}\n                        onHideOptions={this.handleHideOptionsPopup}\n                        onShowOptions={this.handleShowOptionsPopup}\n                        onOptionSelect={this.handleOptionSelect}\n                    />\n                    <div className={actionsClassName}>\n                        { showClearButton && (\n                            <DangerButton\n                                tabIndex=\"-1\"\n                                iconName=\"close\"\n                                className={clearClassName}\n                                onClick={this.handleClearButtonClick}\n                                transparent\n                            />\n                        )}\n                    </div>\n                </div>\n                { showHintAndError && (\n                    <HintAndError\n                        error={error}\n                        hint={hint}\n                    />\n                )}\n                <Options\n                    className={optionsClassName}\n                    labelSelector={labelSelector}\n                    onBlur={this.handleHideOptionsPopup}\n                    onInvalidate={this.handleOptionsInvalidate}\n                    onOptionClick={this.handleOptionSelect}\n                    optionLabelSelector={optionLabelSelector}\n                    parentContainer={container}\n                    renderEmpty={renderEmpty}\n                    value={value}\n\n                    show={showOptionsPopup}\n                    keySelector={keySelector}\n                    data={filteredOptions}\n                    onOptionFocus={this.handleFocusChange}\n                    focusedKey={focusedKey}\n                />\n            </div>\n        );\n    }\n}\n\nexport default FaramInputElement(SearchSelectInput);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { randomString, isFalsy } from '@togglecorp/fujs';\n\nimport styles from './styles.scss';\n\nconst propTypes = {\n    id: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]).isRequired,\n    onChange: PropTypes.func.isRequired,\n    checked: PropTypes.bool.isRequired,\n    label: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    error: PropTypes.string,\n    disabled: PropTypes.bool,\n    readOnly: PropTypes.bool,\n};\n\nconst defaultProps = {\n    error: '',\n    disabled: false,\n    readOnly: false,\n};\n\nexport default class SegmentOption extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n\n        this.inputId = randomString();\n    }\n\n    getClassName = () => {\n        const {\n            disabled,\n            error,\n            readOnly,\n            checked,\n        } = this.props;\n\n        const classNames = [\n            'segment-option',\n            styles.segmentOption,\n        ];\n\n        if (checked) {\n            classNames.push('checked');\n            classNames.push(styles.checked);\n        }\n        if (readOnly) {\n            classNames.push('read-only');\n            classNames.push(styles.readOnly);\n        }\n        if (disabled) {\n            classNames.push('disabled');\n            classNames.push(styles.disabled);\n        }\n        if (!isFalsy(error, [''])) {\n            classNames.push('error');\n            classNames.push(styles.error);\n        }\n        return classNames.join(' ');\n    }\n\n    render() {\n        const {\n            id,\n            onChange,\n            checked,\n            label,\n            name,\n        } = this.props;\n\n        const classNames = this.getClassName();\n\n        return (\n            <label\n                htmlFor={this.inputId}\n                className={classNames}\n            >\n                <input\n                    className={`${styles.segmentButtonInput} segment-option-input`}\n                    type=\"radio\"\n                    onChange={onChange}\n                    checked={checked}\n                    id={this.inputId}\n                    value={id}\n                    name={name}\n                />\n                {label}\n            </label>\n        );\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { isFalsy } from '@togglecorp/fujs';\nimport { FaramInputElement } from '@togglecorp/faram';\n\nimport ListView from '../../View/List/ListView';\nimport HintAndError from '../HintAndError';\nimport Label from '../Label';\n\nimport Option from './Option';\nimport styles from './styles.scss';\n\nconst propTypes = {\n    /**\n     * required for style override\n     */\n    className: PropTypes.string,\n\n    /**\n     * Is input disabled?\n     */\n    disabled: PropTypes.bool,\n\n    /**\n     * String to show in case of error\n     */\n    error: PropTypes.string,\n\n    /**\n     * Hint text\n     */\n    hint: PropTypes.string,\n\n    /**\n     * Input label\n     */\n    label: PropTypes.string,\n\n    /**\n     * A callback for when the input changes its content\n     */\n    onChange: PropTypes.func,\n    required: PropTypes.bool,\n\n    showLabel: PropTypes.bool,\n\n    showHintAndError: PropTypes.bool,\n\n    options: PropTypes.arrayOf(PropTypes.object),\n\n    labelSelector: PropTypes.func,\n    keySelector: PropTypes.func,\n    readOnly: PropTypes.bool,\n\n    value: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n        PropTypes.bool,\n    ]),\n\n    name: PropTypes.string,\n};\n\nconst defaultProps = {\n    className: '',\n    disabled: false,\n    readOnly: false,\n    error: '',\n    hint: '',\n    label: '',\n    onChange: undefined,\n    required: false,\n    showLabel: true,\n    keySelector: d => d.key,\n    labelSelector: d => d.label,\n    showHintAndError: true,\n    value: '',\n    name: '',\n    options: [],\n};\n\nclass SegmentInput extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    getClassName = () => {\n        const {\n            className,\n            disabled,\n            error,\n            required,\n        } = this.props;\n\n        const classNames = [\n            className,\n            'segment-input',\n            styles.segmentInput,\n        ];\n\n        if (disabled) {\n            classNames.push('disabled');\n            classNames.push(styles.disabled);\n        }\n        if (!isFalsy(error, [''])) {\n            classNames.push('error');\n            classNames.push(styles.error);\n        }\n        if (required) {\n            classNames.push('required');\n            classNames.push(styles.required);\n        }\n        return classNames.join(' ');\n    }\n\n    handleInputChange = (changeEvent) => {\n        const {\n            onChange,\n            disabled,\n            options,\n            keySelector,\n            readOnly,\n        } = this.props;\n        const { value } = changeEvent.target;\n\n        const finalValue = options\n            .map(val => keySelector(val))\n            .find(val => String(val) === value);\n\n        if (onChange && !disabled && !readOnly) {\n            onChange(finalValue);\n        }\n    }\n\n    rendererParams = (key, data) => ({\n        label: this.props.labelSelector(data),\n        id: String(this.props.keySelector(data)),\n        onChange: this.handleInputChange,\n        name: this.props.name,\n        checked: String(this.props.value) === String(key),\n        error: this.props.error,\n        readOnly: this.props.readOnly,\n        disabled: this.props.disabled,\n    });\n\n    render() {\n        const {\n            error,\n            hint,\n            label,\n            showLabel,\n            showHintAndError,\n            options,\n            keySelector,\n            disabled,\n        } = this.props;\n\n        const classNames = this.getClassName();\n\n        return (\n            <div className={classNames}>\n                <Label\n                    className={styles.label}\n                    show={showLabel}\n                    text={label}\n                    disabled={disabled}\n                    error={!!error}\n                />\n                <ListView\n                    className={styles.segmentContainer}\n                    data={options}\n                    renderer={Option}\n                    rendererParams={this.rendererParams}\n                    keySelector={keySelector}\n                />\n                <HintAndError\n                    show={showHintAndError}\n                    hint={hint}\n                    error={error}\n                />\n            </div>\n        );\n    }\n}\n\nexport default FaramInputElement(SegmentInput);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './styles.scss';\n\nconst propTypes = {\n    className: PropTypes.string,\n    value: PropTypes.string.isRequired,\n    marker: PropTypes.string,\n};\n\nconst defaultProps = {\n    className: '',\n    marker: '•',\n};\n\nexport default class ListItem extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    render() {\n        const {\n            value,\n            marker,\n            className: classNameFromProps,\n        } = this.props;\n\n        const className = `\n            ${classNameFromProps}\n            ${styles.listItem}\n        `;\n\n        return (\n            <div className={className}>\n                <div className={styles.marker}>\n                    { marker }\n                </div>\n                <div className={styles.label}>\n                    { value }\n                </div>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '../../View/ListItem';\nimport DangerButton from '../Button/DangerButton';\n\nimport styles from './styles.scss';\n\nconst propTypes = {\n    className: PropTypes.string,\n    onDismiss: PropTypes.func.isRequired,\n    itemKey: PropTypes.string,\n    disabled: PropTypes.bool,\n};\n\nconst defaultProps = {\n    className: '',\n    itemKey: undefined,\n    disabled: false,\n};\n\nexport default class DismissableListItem extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    handleDismissButtonClick = () => {\n        const {\n            onDismiss,\n            itemKey,\n        } = this.props;\n\n        onDismiss(itemKey);\n    }\n\n    render() {\n        const {\n            className: classNameFromProps,\n            onDismiss, // eslint-disable-line no-unused-vars, @typescript-eslint/no-unused-vars\n            disabled,\n\n            ...otherProps\n        } = this.props;\n\n        const className = `\n            ${classNameFromProps}\n            ${styles.dismissableListItem}\n        `;\n\n        return (\n            <div className={className}>\n                <ListItem\n                    className={styles.listItem}\n                    {...otherProps}\n                />\n                <DangerButton\n                    disabled={disabled}\n                    className={styles.dismissButton}\n                    onClick={this.handleDismissButtonClick}\n                    transparent\n                    iconName=\"close\"\n                    smallVerticalPadding\n                    smallHorizontalPadding\n                />\n            </div>\n        );\n    }\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { isFalsy } from '@togglecorp/fujs';\nimport { FaramInputElement } from '@togglecorp/faram';\n\nimport MultiSelectInput from '../MultiSelectInput';\nimport SearchMultiSelectInput from '../SearchMultiSelectInput';\nimport DismissableListItem from '../../Action/DismissableListItem';\nimport ListItem from '../../View/ListItem';\nimport ListView from '../../View/List/ListView';\n\nimport styles from './styles.scss';\n\nconst propTypes = {\n    keySelector: PropTypes.func,\n    labelSelector: PropTypes.func,\n    disabled: PropTypes.bool,\n    readOnly: PropTypes.bool,\n    onChange: PropTypes.func,\n\n    label: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n\n    value: PropTypes.arrayOf(PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ])),\n\n    hideRemoveFromListButton: PropTypes.bool,\n\n    className: PropTypes.string,\n    listClassName: PropTypes.string,\n    selectClassName: PropTypes.string,\n\n    // eslint-disable-next-line react/forbid-prop-types\n    listProps: PropTypes.object,\n\n    options: PropTypes.arrayOf(\n        PropTypes.shape({\n            key: PropTypes.oneOfType([\n                PropTypes.string,\n                PropTypes.number,\n            ]),\n            label: PropTypes.string,\n        }),\n    ),\n    topRightChild: PropTypes.func,\n\n    emptyComponent: PropTypes.func,\n    maxDisplayOptions: PropTypes.number,\n};\n\nconst defaultProps = {\n    className: '',\n    listClassName: '',\n    selectClassName: '',\n    listProps: {},\n    keySelector: (d = {}) => d.key,\n    labelSelector: (d = {}) => d.label,\n    onChange: undefined,\n    options: [],\n    value: [],\n    label: '',\n    hideRemoveFromListButton: false,\n    topRightChild: undefined,\n    disabled: false,\n    readOnly: false,\n    emptyComponent: undefined,\n    maxDisplayOptions: undefined,\n};\n\nconst emptyList = [];\n\nclass SelectInputWithList extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n        const {\n            options,\n            value,\n        } = this.props;\n\n        const objectValues = this.getObjectFromValue(options, value);\n\n        this.state = { objectValues };\n    }\n\n    componentWillReceiveProps(newProps) {\n        const {\n            value: newValue,\n            options,\n        } = newProps;\n\n        const { value: oldValue } = this.props;\n\n        if (newValue !== oldValue) {\n            const objectValues = this.getObjectFromValue(options, newValue);\n            this.setState({ objectValues });\n        }\n    }\n\n    getObjectFromValue = (options = emptyList, value) => {\n        const { keySelector } = this.props;\n        return options.filter(d => (\n            value.indexOf(keySelector(d)) !== -1\n        ));\n    }\n\n    getClassName = () => {\n        const {\n            className,\n            disabled,\n        } = this.props;\n        const { error } = this.state;\n\n        const classNames = [\n            className,\n            styles.selectInputWithList,\n            'select-input-with-list',\n        ];\n\n        if (!isFalsy(error, [''])) {\n            classNames.push(styles.error);\n            classNames.push('error');\n        }\n\n        if (disabled) {\n            classNames.push(styles.disabled);\n        }\n\n        return classNames.join(' ');\n    }\n\n    getListItemParams = (key, datum) => {\n        const {\n            labelSelector,\n        } = this.props;\n\n        return {\n            value: labelSelector(datum),\n            itemKey: key,\n            onDismiss: this.handleItemDismiss,\n            className: styles.listItem,\n        };\n    }\n\n    handleItemDismiss = (key) => {\n        const {\n            onChange,\n            value,\n        } = this.props;\n\n        const index = value.indexOf(key);\n        const newValue = [...value];\n\n        if (index !== -1) {\n            newValue.splice(index, 1);\n        }\n        if (onChange) {\n            onChange(newValue);\n        }\n    }\n\n    handleSelectInputChange = (values) => {\n        const {\n            onChange,\n            options,\n        } = this.props;\n\n        const objectValues = this.getObjectFromValue(options, values);\n        this.setState({ objectValues });\n\n        if (onChange) {\n            onChange(values);\n        }\n    }\n\n    render() {\n        const {\n            className, // eslint-disable-line no-unused-vars, @typescript-eslint/no-unused-vars\n            disabled,\n            keySelector,\n            label,\n            labelSelector,\n            onChange, // eslint-disable-line no-unused-vars, @typescript-eslint/no-unused-vars\n            readOnly,\n            options,\n            value,\n            selectClassName,\n            listProps,\n            emptyComponent,\n            listClassName,\n            topRightChild: TopRightChild,\n            hideRemoveFromListButton,\n            maxDisplayOptions,\n\n            ...otherProps\n        } = this.props;\n\n        const { objectValues } = this.state;\n\n        const listClassNames = [\n            listClassName,\n            styles.list,\n            'list',\n        ];\n\n        const selectClassNames = [\n            selectClassName,\n            styles.input,\n            'select',\n        ];\n\n        if (TopRightChild) {\n            selectClassNames.push(styles.hasTopRightChild);\n        }\n\n        const Item = (\n            hideRemoveFromListButton\n            || readOnly\n            || disabled\n        ) ? ListItem : DismissableListItem;\n\n        return (\n            <div className={this.getClassName()}>\n                <div className={styles.headerContainer}>\n                    { maxDisplayOptions === undefined ? (\n                        <MultiSelectInput\n                            className={selectClassNames.join(' ')}\n                            disabled={disabled}\n                            readOnly={readOnly}\n                            keySelector={keySelector}\n                            label={label}\n                            labelSelector={labelSelector}\n                            onChange={this.handleSelectInputChange}\n                            options={options}\n                            value={value}\n                            {...otherProps}\n                        />\n                    ) : (\n                        <SearchMultiSelectInput\n                            className={selectClassNames.join(' ')}\n                            disabled={disabled}\n                            readOnly={readOnly}\n                            keySelector={keySelector}\n                            label={label}\n                            labelSelector={labelSelector}\n                            onChange={this.handleSelectInputChange}\n                            options={options}\n                            value={value}\n                            maxDisplayOptions={maxDisplayOptions}\n                            {...otherProps}\n                        />\n                    )}\n                    {TopRightChild && <TopRightChild />}\n                </div>\n                <ListView\n                    className={listClassNames.join(' ')}\n                    data={objectValues}\n                    renderer={Item}\n                    rendererParams={this.getListItemParams}\n                    keySelector={keySelector}\n                    emptyComponent={emptyComponent}\n                    {...listProps}\n                />\n            </div>\n        );\n    }\n}\n\nexport default FaramInputElement(SelectInputWithList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Icon from '../../../General/Icon';\n\nimport styles from './styles.scss';\n\nconst ActionButtons = ({\n    disabled,\n    readOnly,\n    onClearButtonClick,\n    onTodayButtonClick,\n    // onCalendarButtonClick,\n    className,\n}) => {\n    const classNames = [\n        className,\n        'action-buttons',\n    ];\n\n    const clearButtonClassName = [\n        'button',\n        styles.button,\n        'clear',\n        styles.clear,\n    ].join(' ');\n\n    return (\n        <div className={classNames.join(' ')}>\n            <button\n                className={clearButtonClassName}\n                type=\"button\"\n                onClick={onClearButtonClick}\n                title=\"Clear time\"\n                tabIndex=\"-1\"\n                disabled={disabled || readOnly}\n            >\n                <Icon name=\"closeRound\" />\n            </button>\n            <button\n                onClick={onTodayButtonClick}\n                className={styles.button}\n                type=\"button\"\n                title=\"Set time to now\"\n                tabIndex=\"-1\"\n                disabled={disabled || readOnly}\n            >\n                <Icon name=\"clock\" />\n            </button>\n            {/*\n            <button\n                onClick={onCalendarButtonClick}\n                className={styles.button}\n                type=\"button\"\n                title=\"Open date picker\"\n                tabIndex=\"-1\"\n                disabled={disabled}\n            >\n                <Icon name=\"calendar\" />\n            </button>\n            */}\n        </div>\n    );\n};\n\nActionButtons.propTypes = {\n    onClearButtonClick: PropTypes.func.isRequired,\n    onTodayButtonClick: PropTypes.func.isRequired,\n    // onCalendarButtonClick: PropTypes.func.isRequired,\n    disabled: PropTypes.bool,\n    readOnly: PropTypes.bool,\n    className: PropTypes.string,\n};\n\nActionButtons.defaultProps = {\n    disabled: false,\n    readOnly: false,\n    className: '',\n};\n\nexport default ActionButtons;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { padStart, isFalsy } from '@togglecorp/fujs';\nimport { FaramInputElement } from '@togglecorp/faram';\n\nimport Delay from '../../General/Delay';\n\nimport HintAndError from '../HintAndError';\nimport Label from '../Label';\nimport DigitalInput from '../DigitalInput';\n\nimport ActionButtons from './ActionButtons';\nimport styles from './styles.scss';\n\nconst propTypes = {\n    className: PropTypes.string,\n    disabled: PropTypes.bool,\n    readOnly: PropTypes.bool,\n    error: PropTypes.string,\n    hint: PropTypes.string,\n    label: PropTypes.string,\n    onChange: PropTypes.func,\n    showLabel: PropTypes.bool,\n    showHintAndError: PropTypes.bool,\n    value: PropTypes.string,\n    title: PropTypes.string,\n    separator: PropTypes.string,\n};\n\nconst defaultProps = {\n    className: '',\n    disabled: false,\n    readOnly: false,\n    error: '',\n    hint: '',\n    label: '',\n    onChange: () => {},\n    showLabel: true,\n    separator: ':',\n    showHintAndError: true,\n    value: undefined,\n    title: undefined,\n};\n\nconst MIN_HOUR = 0;\nconst MAX_HOUR = 23;\nconst MIN_MINUTE = 0;\nconst MAX_MINUTE = 59;\nconst STEP = 1;\n\n// h, m is string\nconst encodeTime = ({ h = '', m = '' }, separator) => {\n    if (isFalsy(h, [0, '']) && isFalsy(m, [0, ''])) {\n        return undefined;\n    }\n    // NOTE: added default value '00' for second\n    return `${h}${separator}${m}${separator}00`;\n};\n\n// value is string\nconst decodeTime = (value, separator) => {\n    if (!value) {\n        return {};\n    }\n    const values = value.split(separator);\n    return {\n        h: values[0],\n        m: values[1],\n    };\n};\n\n// value is string\nconst isValidTimeString = (value, separator) => {\n    if (value === '' || value === undefined) {\n        return true;\n    }\n    const { h, m } = decodeTime(value, separator);\n\n    if (isFalsy(h, ['']) || isFalsy(m, [''])) {\n        return false;\n    }\n    return !(\n        (+h < MIN_HOUR || +h > MAX_HOUR)\n        || (+m < MIN_MINUTE || +m > MAX_MINUTE)\n    );\n};\n\nclass TimeInput extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            hourInputFocused: false,\n            minuteInputFocused: false,\n        };\n    }\n\n    getClassName = () => {\n        const {\n            disabled,\n            readOnly,\n            className,\n            value,\n            error,\n            separator,\n        } = this.props;\n\n        const {\n            hourInputFocused,\n            minuteInputFocused,\n        } = this.state;\n\n        const classNames = [\n            className,\n            'time-input',\n            styles.timeInput,\n        ];\n\n        if (hourInputFocused || minuteInputFocused) {\n            classNames.push(styles.focused);\n            classNames.push('input-focused');\n        }\n\n        if (disabled) {\n            classNames.push(styles.disabled);\n            classNames.push('disabled');\n        }\n\n        if (readOnly) {\n            classNames.push(styles.readOnly);\n            classNames.push('read-only');\n        }\n\n        const isInvalid = !isValidTimeString(value, separator);\n        if (isInvalid) {\n            classNames.push(styles.invalid);\n            classNames.push('invalid');\n        }\n\n        if (!isFalsy(error, [''])) {\n            classNames.push(styles.error);\n            classNames.push('error');\n        }\n\n        return classNames.join(' ');\n    }\n\n    handleHourInputFocus = () => {\n        this.setState({ hourInputFocused: true });\n    }\n\n    handleHourInputBlur = () => {\n        this.setState({ hourInputFocused: false });\n    }\n\n    handleMinuteInputFocus = () => {\n        this.setState({ minuteInputFocused: true });\n    }\n\n    handleMinuteInputBlur = () => {\n        this.setState({ minuteInputFocused: false });\n    }\n\n    handleHourInputChange = (h) => {\n        this.handleChange({ h });\n    }\n\n    handleMinuteInputChange = (m) => {\n        this.handleChange({ m });\n    }\n\n    handleClearButtonClick = () => {\n        this.handleChange({\n            h: undefined,\n            m: undefined,\n        });\n    }\n\n    handleTodayButtonClick = () => {\n        const date = new Date();\n        this.handleChange({\n            h: padStart(String(date.getHours()), 2).slice(-2),\n            m: padStart(String(date.getMinutes()), 2).slice(-2),\n        });\n    }\n\n    handleChange = (valueToOverride) => {\n        const {\n            onChange,\n            value: valueFromProps,\n            separator,\n        } = this.props;\n\n        const oldValue = decodeTime(valueFromProps, separator);\n\n        const { h, m } = {\n            ...oldValue,\n            ...valueToOverride,\n        };\n\n        const newValue = encodeTime({ h, m }, separator);\n\n        if (newValue !== valueFromProps) {\n            onChange(newValue);\n        }\n    }\n\n    render() {\n        const {\n            error,\n            hint,\n            label,\n            showLabel,\n            showHintAndError,\n            title,\n            disabled,\n            value,\n            separator,\n            readOnly,\n        } = this.props;\n\n        const className = this.getClassName();\n        const hourPlaceholder = 'hh';\n        const minutePlaceholder = 'mm';\n\n        const {\n            h: hourValue = '',\n            m: minuteValue = '',\n        } = decodeTime(value, separator);\n\n        return (\n            <div\n                title={title}\n                className={className}\n            >\n                <Label\n                    className={styles.label}\n                    show={showLabel}\n                    text={label}\n                />\n                <div className={styles.input}>\n                    <div className={styles.units}>\n                        <DigitalInput\n                            padLength={2}\n                            onFocus={this.handleHourInputFocus}\n                            onBlur={this.handleHourInputBlur}\n                            className={styles.unit}\n                            min={MIN_HOUR}\n                            max={MAX_HOUR}\n                            step={STEP}\n                            placeholder={hourPlaceholder}\n                            disabled={disabled || readOnly}\n                            value={hourValue}\n                            onChange={this.handleHourInputChange}\n                        />\n                        <div className={styles.separator}>\n                            {separator}\n                        </div>\n                        <DigitalInput\n                            padLength={2}\n                            onFocus={this.handleMinuteInputFocus}\n                            onBlur={this.handleMinuteInputBlur}\n                            className={styles.unit}\n                            min={MIN_MINUTE}\n                            max={MAX_MINUTE}\n                            step={STEP}\n                            placeholder={minutePlaceholder}\n                            disabled={disabled || readOnly}\n                            value={minuteValue}\n                            onChange={this.handleMinuteInputChange}\n                        />\n                    </div>\n                    <ActionButtons\n                        className={styles.actionButtons}\n                        disabled={disabled}\n                        readOnly={readOnly}\n                        onClearButtonClick={this.handleClearButtonClick}\n                        onTodayButtonClick={this.handleTodayButtonClick}\n                    />\n                </div>\n                <HintAndError\n                    show={showHintAndError}\n                    hint={hint}\n                    error={error}\n                />\n            </div>\n        );\n    }\n}\n\nexport default FaramInputElement(Delay(TimeInput));\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport memoize from 'memoize-one';\nimport { requiredCondition, FaramInputElement } from '@togglecorp/faram';\n\nimport ApplyModal from '../../View/ApplyModal';\n\nimport SelectInput from '../SelectInput';\nimport TimeInput from '../TimeInput';\n\nimport styles from './styles.scss';\n\nconst noOp = () => {};\n\nconst propTypes = {\n    className: PropTypes.string,\n    value: PropTypes.shape({\n        startTime: PropTypes.string,\n        endTime: PropTypes.string,\n    }),\n    onChange: PropTypes.func,\n};\n\nconst defaultProps = {\n    className: '',\n    value: {},\n    onChange: noOp,\n};\n\nclass TimeFilter extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    static defaultOptions = [\n        { key: 'customExact', label: 'Select an exact time' },\n        { key: 'customRange', label: 'Select a time range' },\n    ];\n\n    static exactModalSchema = {\n        fields: {\n            time: [requiredCondition],\n        },\n    };\n\n    // FIXME: add startDate smaller than endDate condition\n    static rangeModalSchema = {\n        fields: {\n            startTime: [requiredCondition],\n            endTime: [requiredCondition],\n        },\n    };\n\n    static calculateOptionsAndValue = memoize((value) => {\n        const options = TimeFilter.defaultOptions;\n        const { startTime, endTime } = value;\n\n        if (!startTime || !endTime) {\n            return { options, value: undefined };\n        }\n\n        if (startTime === endTime) {\n            return {\n                options: [\n                    ...options,\n                    { key: 'selectedExact', label: startTime },\n                ],\n                value: 'selectedExact',\n            };\n        }\n\n        return {\n            options: [\n                ...options,\n                { key: 'selectedRange', label: `${startTime} - ${endTime}` },\n            ],\n            value: 'selectedRange',\n        };\n    });\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showRangeModal: false,\n            showExactModal: false,\n        };\n    }\n\n    getClassName = () => {\n        const { className } = this.props;\n        const classNames = [\n            className,\n            'time-filter',\n        ];\n\n        return classNames.join(' ');\n    }\n\n    handleSelectInputChange = (value) => {\n        switch (value) {\n            case 'customExact':\n                this.setState({\n                    showExactModal: true,\n                });\n                break;\n            case 'customRange':\n                this.setState({\n                    showRangeModal: true,\n                });\n                break;\n            case undefined:\n                this.props.onChange(undefined);\n                break;\n            default:\n        }\n    }\n\n    closeRangeModal = () => {\n        this.setState({\n            showRangeModal: false,\n        });\n    }\n\n    applyRangeTime = ({ startTime, endTime }) => {\n        this.setState({\n            showRangeModal: false,\n        }, () => {\n            this.props.onChange({\n                startTime,\n                endTime,\n            });\n        });\n    }\n\n    closeExactModal = () => {\n        this.setState({\n            showExactModal: false,\n        });\n    }\n\n    applyExactTime = ({ time }) => {\n        this.setState({\n            showExactModal: false,\n        }, () => {\n            this.props.onChange({\n                startTime: time,\n                endTime: time,\n            });\n        });\n    }\n\n    renderExactModal = () => {\n        const { showExactModal } = this.state;\n\n        if (!showExactModal) {\n            return null;\n        }\n\n        return (\n            <ApplyModal\n                className={styles.timeFilterModal}\n                onClose={this.closeExactModal}\n                onApply={this.applyExactTime}\n                title=\"Select a time\"\n                schema={TimeFilter.exactModalSchema}\n            >\n                <TimeInput faramElementName=\"time\" />\n            </ApplyModal>\n        );\n    }\n\n    renderRangeModal = () => {\n        const { showRangeModal } = this.state;\n\n        if (!showRangeModal) {\n            return null;\n        }\n\n        return (\n            <ApplyModal\n                className={styles.timeFilterModal}\n                onClose={this.closeRangeModal}\n                onApply={this.applyRangeTime}\n                title=\"Select a time range\"\n                schema={TimeFilter.rangeModalSchema}\n            >\n                <TimeInput faramElementName=\"startTime\" />\n                <TimeInput faramElementName=\"endTime\" />\n            </ApplyModal>\n        );\n    }\n\n    render() {\n        const {\n            value,\n            onChange, // eslint-disable-line no-unused-vars, @typescript-eslint/no-unused-vars\n            ...otherProps\n        } = this.props;\n\n        const className = this.getClassName();\n\n        const {\n            options: selectInputOptions,\n            value: selectInputValue,\n        } = TimeFilter.calculateOptionsAndValue(value);\n\n        const CustomExactModal = this.renderExactModal;\n        const CustomRangeModal = this.renderRangeModal;\n\n        return (\n            <React.Fragment>\n                <SelectInput\n                    className={className}\n                    onChange={this.handleSelectInputChange}\n                    options={selectInputOptions}\n                    value={selectInputValue}\n                    {...otherProps}\n                />\n                <CustomExactModal />\n                <CustomRangeModal />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default FaramInputElement(TimeFilter);\n","import React from 'react';\nimport { FaramInputElement } from '@togglecorp/faram';\n\nimport NewRawSelectInput from '../../vendor/react-store/v2/Input/SelectInput';\nimport Checkbox from '#rsci/Checkbox';\nimport ColorInput from '#rsci/ColorInput';\nimport DateFilter from '#rsci/DateFilter';\nimport DateInput from '#rsci/DateInput';\nimport DatePicker from '#rsci/DatePicker';\nimport FormattedTextArea from '#rsci/FormattedTextArea';\nimport ListSelection from '#rsci/ListSelection';\nimport MultiSelectInput from '#rsci/MultiSelectInput';\nimport NumberInput from '#rsci/NumberInput';\nimport RadioInput from '#rsci/RadioInput';\nimport RangeFilter from '#rsci/RangeFilter';\nimport RawFileInput from '#rsci/RawFileInput';\nimport ScaleInput from '#rsci/ScaleInput';\nimport SearchInput from '#rsci/SearchInput';\nimport SearchMultiSelectInput from '#rsci/SearchMultiSelectInput';\nimport SearchSelectInput from '#rsci/SearchSelectInput';\nimport SegmentInput from '#rsci/SegmentInput';\nimport SelectInput from '#rsci/SelectInput';\nimport SelectInputWithList from '#rsci/SelectInputWithList';\nimport TextArea from '#rsci/TextArea';\nimport TextInput from '#rsci/TextInput';\nimport TimeFilter from '#rsci/TimeFilter';\nimport TimeInput from '#rsci/TimeInput';\n\nconst NewSelectInput = FaramInputElement(NewRawSelectInput);\n\nexport interface InputElement {\n    key: string;\n    title: React.ReactNode;\n    description: React.ReactNode;\n    component: React.ElementType;\n    usage?: React.ReactNode;\n    props: {\n        faramElementName: string;\n        [key: string]: unknown;\n    };\n    groupKey: string;\n}\n\ninterface Option {\n    key: string;\n    label: string;\n    color?: string;\n}\n\nconst options: Option[] = [\n    { key: '1', label: 'Option 1', color: '#ef9a9a' },\n    { key: '2', label: 'Option 2', color: '#ef5350' },\n    { key: '3', label: 'Option 3', color: '#e53935' },\n    { key: '4', label: 'Option 4', color: '#c62828' },\n    { key: '5', label: 'Option 5', color: '#7f0000' },\n];\n\nconst fruits: Option[] = [\n    { key: '1', label: 'Apricot' },\n    { key: '2', label: 'Apple' },\n    { key: '3', label: 'Mango' },\n    { key: '4', label: 'Banana' },\n    { key: '5', label: 'Pineapple' },\n    { key: '6', label: 'Orange' },\n    { key: '7', label: 'Coconut' },\n    { key: '8', label: 'Lime' },\n    { key: '9', label: 'Papaya' },\n    { key: '10', label: 'Grape' },\n    { key: '11', label: 'Watermelon' },\n    { key: '12', label: 'Plum' },\n    { key: '13', label: 'Pear' },\n    { key: '14', label: 'Peach' },\n    { key: '15', label: 'Lemon' },\n    { key: '16', label: 'Avocado' },\n];\n\nconst vegetables: Option[] = [\n    { key: '1', label: 'Asparagus' },\n    { key: '2', label: 'Black Beans' },\n    { key: '3', label: 'Chick Peas' },\n    { key: '4', label: 'Kidney Beans' },\n    { key: '5', label: 'Broccoli' },\n    { key: '6', label: 'Cabbage' },\n    { key: '7', label: 'Cauliflower' },\n    { key: '8', label: 'Spinach' },\n    { key: '9', label: 'Lettuce' },\n    { key: '10', label: 'Mushroom' },\n    { key: '11', label: 'Nettle' },\n    { key: '12', label: 'Okra' },\n    { key: '13', label: 'Carrot' },\n    { key: '14', label: 'Radish' },\n    { key: '15', label: 'Turnip' },\n    { key: '16', label: 'Cucumber' },\n    { key: '17', label: 'Squash' },\n    { key: '18', label: 'Pumpkin' },\n    { key: '19', label: 'Gourd' },\n    { key: '20', label: 'Tomato' },\n    { key: '21', label: 'Potato' },\n];\n\nconst inputList: InputElement[] = [\n    // Test\n    {\n        key: 'newSearchSelectInput',\n        title: 'New SearchSelect Input',\n        description: 'New Version of SearchSelect Input',\n        component: NewSelectInput,\n        props: {\n            label: 'Fruit',\n            faramElementName: 'selectInput',\n            options: fruits,\n            autoFocus: true,\n            maxDisplayOptions: 3,\n        },\n        groupKey: 'Alpha',\n    },\n    {\n        key: 'newSelectInput',\n        title: 'New Select Input',\n        description: 'New Version of Select Input',\n        component: NewSelectInput,\n        props: {\n            label: 'Fruit',\n            faramElementName: 'selectInput',\n            options: fruits,\n            autoFocus: true,\n        },\n        groupKey: 'Alpha',\n    },\n\n    // Text inputs\n    {\n        key: 'textInput',\n        title: 'Text Input',\n        description: 'Used to enter short length text',\n        component: TextInput,\n        props: {\n            label: 'Name',\n            faramElementName: 'textInput',\n        },\n        groupKey: 'Common',\n    },\n    {\n        key: 'searchInput',\n        title: 'Search Input',\n        description: 'Similar to Text Input but used for search.',\n        component: SearchInput,\n        props: {\n            label: 'Search User',\n            faramElementName: 'searchInput',\n            showHintAndError: false,\n        },\n        groupKey: 'Common',\n    },\n    {\n        key: 'textArea',\n        title: 'Text Area',\n        description: 'Used to enter long length text',\n        component: TextArea,\n        props: {\n            label: 'Remarks',\n            faramElementName: 'textArea',\n            rows: 7,\n        },\n        groupKey: 'Common',\n    },\n    {\n        key: 'formattedTextArea',\n        title: 'Formatted Text Area',\n        description: 'Similar to Text Area but with an additional format button',\n        component: FormattedTextArea,\n        props: {\n            label: 'Remarks',\n            faramElementName: 'formattedTextArea',\n            rows: 7,\n        },\n        groupKey: 'Common',\n    },\n    {\n        key: 'numberInput',\n        title: 'Number Input',\n        description: 'Useful to enter number',\n        component: NumberInput,\n        props: {\n            label: 'Age',\n            faramElementName: 'numberInput',\n        },\n        groupKey: 'Common',\n    },\n    {\n        key: 'checkbox',\n        title: 'Checkbox',\n        description: 'Used to select/deselect an item',\n        component: Checkbox,\n        props: {\n            label: 'I agree with the terms and condition.',\n            faramElementName: 'checkbox',\n        },\n        groupKey: 'Common',\n    },\n    {\n        key: 'colorInput',\n        title: 'Color Input',\n        description: 'Used to select a color with a helper popup with different color modes.',\n        component: ColorInput,\n        props: {\n            label: 'Color',\n            faramElementName: 'colorInput',\n        },\n        groupKey: 'Common',\n    },\n\n    // Date inputs\n    {\n        key: 'dateInput',\n        title: 'Date Input',\n        description: 'Used to select a date from either manual entry or through a popup.',\n        component: DateInput,\n        props: {\n            label: 'Published Date',\n            faramElementName: 'dateInput',\n        },\n        groupKey: 'Date',\n    },\n    {\n        key: 'dateFilter',\n        title: 'Date Filter',\n        description: 'Used to select a range of date along with some predefined ranges.',\n        component: DateFilter,\n        props: {\n            label: 'Date Range',\n            faramElementName: 'dateFilter',\n        },\n        groupKey: 'Date',\n    },\n    {\n        key: 'datePicker',\n        title: 'Date Picker',\n        description: 'Used to select date from calendar',\n        component: DatePicker,\n        props: {\n            label: 'Birthday',\n            faramElementName: 'datePicker',\n        },\n        groupKey: 'Date',\n    },\n\n    // Time inputs\n    {\n        key: 'timeInput',\n        title: 'Time Input',\n        description: 'Used to select time',\n        component: TimeInput,\n        props: {\n            label: 'Check-in time',\n            faramElementName: 'timeInput',\n        },\n        groupKey: 'Time',\n    },\n    {\n        key: 'timeFilter',\n        title: 'Time Filter',\n        description: 'Used to select exact time or a range of time',\n        component: TimeFilter,\n        props: {\n            label: 'Tea break',\n            faramElementName: 'timeFilter',\n        },\n        groupKey: 'Time',\n    },\n\n\n    // Single select\n    {\n        key: 'scaleInput',\n        title: 'Scale Input',\n        description: 'Used to select items depicted in color scale',\n        component: ScaleInput,\n        props: {\n            label: 'Severity',\n            faramElementName: 'scaleInput',\n            options,\n        },\n        groupKey: 'Selection',\n    },\n    {\n        key: 'radioInput',\n        title: 'Radio Input',\n        description: 'Used to select one and only one item from a set.',\n        component: RadioInput,\n        props: {\n            faramElementName: 'radioInput',\n            name: 'Fruit', // unique name\n            // label: 'Fruit',\n            options: fruits.slice(0, 5),\n        },\n        groupKey: 'Selection',\n    },\n    {\n        key: 'segmentInput',\n        title: 'Segment Input',\n        description: 'Similar to Radio Input but only visually different',\n        component: SegmentInput,\n        props: {\n            label: 'Fruit',\n            faramElementName: 'segmentInput',\n            options: fruits.slice(0, 5),\n        },\n        groupKey: 'Selection',\n    },\n    {\n        key: 'selectInput',\n        title: 'Select Input',\n        description: 'Used to select an item from list of items',\n        component: SelectInput,\n        props: {\n            label: 'Fruit',\n            faramElementName: 'selectInput',\n            options: fruits,\n        },\n        groupKey: 'Selection',\n    },\n    {\n        key: 'searchSelectInput',\n        title: 'Search Select Input',\n        description: 'Similar to Select Input but list is only populated after search',\n        component: SearchSelectInput,\n        props: {\n            label: 'Fruit',\n            faramElementName: 'searchSelectInput',\n            options: fruits,\n        },\n        groupKey: 'Selection',\n    },\n\n    // Multi select\n    {\n        key: 'listSelection',\n        title: 'List Selection',\n        description: 'Used to select one or more items from a set.',\n        component: ListSelection,\n        props: {\n            label: 'Vegetables',\n            faramElementName: 'listSelection',\n            options: vegetables.slice(0, 5),\n        },\n        groupKey: 'Multi Selection',\n    },\n    {\n        key: 'multiSelectInput',\n        title: 'Multi Select Input',\n        description: 'Used to select one or more item from list of items',\n        component: MultiSelectInput,\n        props: {\n            label: 'Vegetables',\n            faramElementName: 'multiSelectInput',\n            options: vegetables,\n        },\n        groupKey: 'Multi Selection',\n    },\n    {\n        key: 'searchMultiSelectInput',\n        title: 'Search multi select input',\n        description: 'Similar to Multi Select Input but list is only populated after search',\n        component: SearchMultiSelectInput,\n        props: {\n            label: 'Vegetables',\n            faramElementName: 'searchMultiSelectInput',\n            options: vegetables,\n        },\n        groupKey: 'Multi Selection',\n    },\n    {\n        key: 'selectInputWithList',\n        title: 'Select input with list',\n        description: 'Similar to Multi Select Input and additionally, selected items are listed separately',\n        component: SelectInputWithList,\n        props: {\n            label: 'Vegetables',\n            faramElementName: 'selectInputWithList',\n            options: vegetables,\n        },\n        groupKey: 'Multi Selection',\n    },\n\n    // Misc inputs\n    {\n        key: 'rangeFilter',\n        title: 'Range filter',\n        description: 'Used to select start and end of range',\n        component: RangeFilter,\n        props: {\n            label: 'Range',\n            faramElementName: 'rangeFilter',\n            options,\n        },\n        groupKey: 'Misc',\n    },\n\n    {\n        key: 'rawFileInput',\n        title: 'Raw File Input',\n        description: 'Used to upload file',\n        component: RawFileInput,\n        props: {\n            faramElementName: 'rawFileInput',\n            children: 'Select a file',\n        },\n        groupKey: 'Misc',\n    },\n\n];\n\nexport default inputList;\n","import React from 'react';\nimport { _cs } from '@togglecorp/fujs';\n\nimport styles from './styles.scss';\n\ninterface Props {\n    className?: string;\n    component: React.ElementType;\n    title: string | React.ReactNode;\n    description?: string | React.ReactNode;\n    usage?: string | React.ElementType;\n    componentProps: {};\n}\n\nexport default class InputDetails extends React.PureComponent<Props> {\n    public render() {\n        const {\n            className,\n            component: Component,\n            title,\n            description,\n            usage,\n            componentProps,\n        } = this.props;\n\n        return (\n            <div className={_cs(styles.inputDetails, className)}>\n                <div className={styles.left}>\n                    <header className={styles.header}>\n                        <h3 className={styles.heading}>\n                            { title }\n                        </h3>\n                        <div className={styles.description}>\n                            { description }\n                        </div>\n                    </header>\n                    <div className={styles.content}>\n                        <Component\n                            {...componentProps}\n                        />\n                        <div className={styles.usage}>\n                            { usage }\n                        </div>\n                    </div>\n                </div>\n                <div className={styles.right}>\n                    <header className={styles.header}>\n                        <h4 className={styles.heading}>\n                            Properties\n                        </h4>\n                    </header>\n                </div>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport {\n    _cs,\n    listToMap,\n} from '@togglecorp/fujs';\n\nimport Faram from '@togglecorp/faram';\n\n// import List from '../../vendor/react-store/v2/View/List';\nimport VerticalTabs from '#rscv/VerticalTabs';\nimport MultiViewContainer from '#rscv/MultiViewContainer';\n\nimport inputList from './inputList';\nimport InputDetails from './InputDetails';\nimport styles from './styles.scss';\n\n/*\ninterface Data {\n    key: number;\n    groupKey: string;\n    name: string;\n}\n\nconst data: Data[] = [\n    { key: 1, groupKey: 'Person', name: 'Hari' },\n    { key: 3, groupKey: 'Animal', name: 'Elephant' },\n    { key: 2, groupKey: 'Person', name: 'Shyam' },\n    { key: 4, groupKey: 'Animal', name: 'Jungle' },\n];\n\nconst ListItem = ({ type, name }: { type: string; name: string }) => (\n    <div>\n        {`${type} / ${name}`}\n    </div>\n);\n\nconst GroupListItem = ({ groupName }: { groupName: string }) => (\n    <div>\n        <b>{groupName}</b>\n    </div>\n);\n\nconst keySelector = (datum: Data) => datum.key;\nconst rendererParams = (key: number, { groupKey, name }: Data) => ({ type: groupKey, name });\n\nconst groupKeySelector = (datum: Data) => datum.groupKey;\nconst groupRendererParams = (groupName: string) => ({ groupName });\n*/\n\ninterface Props {\n    className?: string;\n}\n\ninterface State {\n    faramValues: unknown;\n}\n\ninterface FaramSchema {\n    fields: {\n        [key: string]: [];\n    };\n}\n\nexport default class Inputs extends React.PureComponent<Props, State> {\n    private static inputGroupKeySelector = (item: string) => {\n        const myInput = inputList.find(input => input.key === item);\n        if (!myInput) {\n            return undefined;\n        }\n        return myInput.groupKey;\n    };\n\n    private static inputGroupRendererParams = (groupKey: string) => ({\n        children: groupKey,\n    })\n\n    private static inputGroupComparator = () => 0;\n\n    public constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            faramValues: {\n                textInput: 'Hari Prasad',\n                searchInput: 'Hari',\n                textArea: 'The epic, traditionally ascribed to the Rishi Valmiki, narrates the life of Rama, the legendary prince of the Kosala Kingdom.\\n It follows his fourteen-year exile to the forest by his father King Dasharatha, on request of his step-mother Kaikeyi.',\n                formattedTextArea: 'The epic, traditionally ascribed\\n to the Rishi Valmiki, narrates the life of Rama, the legendary prince of the Kosala Kingdom.\\n\\n It follows his fourteen-year\\n exile to the forest by his father King Dasharatha, on request of his step-mother Kaikeyi.',\n                numberInput: 42,\n                listSelection: ['1', '3'],\n                radioInput: '3',\n                segmentInput: '3',\n                scaleInput: '3',\n                selectInput: '3',\n                searchSelectInput: '3',\n                multiSelectInput: ['1', '3'],\n                searchMultiSelectInput: ['1', '3'],\n                selectInputWithList: ['1', '3'],\n            },\n        };\n\n        this.faramSchema = {\n            fields: listToMap(inputList, d => d.key, () => []),\n        };\n\n        this.views = listToMap(\n            inputList,\n            d => d.key,\n            d => ({\n                component: InputDetails,\n                rendererParams: () => ({\n                    title: d.title,\n                    component: d.component,\n                    description: d.description,\n                    componentProps: d.props,\n                    className: styles.inputDetails,\n                }),\n            }),\n        );\n\n        this.tabs = listToMap(\n            inputList,\n            d => d.key,\n            d => d.title,\n        );\n    }\n\n    private faramSchema: any;\n\n    private views: {\n        [key: string]: {\n            component: React.ReactType;\n            rendererParams: () => {\n                title: React.ReactNode;\n                component: React.ReactType;\n                description: React.ReactNode;\n                componentProps: any;\n                className: string;\n            };\n        };\n    };\n\n    private tabs: {\n        [key: string]: React.ReactNode;\n    };\n\n    private handleFaramChange = (faramValues: unknown) => {\n        this.setState({ faramValues });\n    }\n\n    public render() {\n        const { className } = this.props;\n        const {\n            faramValues,\n        } = this.state;\n\n        return (\n            <div className={_cs(className, styles.inputs)}>\n                {/*\n                <List\n                    keySelector={keySelector}\n                    data={data}\n\n                    rendererParams={rendererParams}\n                    renderer={ListItem}\n\n                    grouped\n                    groupKeySelector={groupKeySelector}\n                    groupRenderer={GroupListItem}\n                    groupRendererParams={groupRendererParams}\n                />\n                */}\n                <header className={styles.header}>\n                    <h2 className={styles.heading}>\n                        Input components\n                    </h2>\n                </header>\n                <div className={styles.content}>\n                    <VerticalTabs\n                        className={styles.tabs}\n                        tabs={this.tabs}\n                        useHash\n                        groupKeySelector={Inputs.inputGroupKeySelector}\n                        groupRendererParams={Inputs.inputGroupRendererParams}\n                        groupComparator={Inputs.inputGroupComparator}\n                    />\n                    <Faram\n                        className={styles.faram}\n                        value={faramValues}\n                        schema={this.faramSchema}\n                        onChange={this.handleFaramChange}\n                    >\n                        <MultiViewContainer\n                            views={this.views}\n                            useHash\n                        />\n                    </Faram>\n                </div>\n            </div>\n        );\n    }\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"option\":\"styles_option_2Ch32rzAFzQQiGmwtqmFJT\",\"focused\":\"styles_focused_2nn9v_AkOsXvkQMC6Cdp9f\",\"active\":\"styles_active_2x6y6VUHq4hvlaDuM4dpxa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"time-input\":\"styles_time-input_2LsTAL9fnCSvnM6gVbnIiG\",\"timeInput\":\"styles_time-input_2LsTAL9fnCSvnM6gVbnIiG\",\"input\":\"styles_input_3-0ov8Eck7OGcNXPpcsoh1\",\"units\":\"styles_units_2kz0R2NJ1lhwnd2DwwW6Hk\",\"unit\":\"styles_unit_g0Tw8tE4TPR5o2wnt_Dpt\",\"separator\":\"styles_separator_VGrJeMQyCejGkFUMD2Hi3\",\"action-buttons\":\"styles_action-buttons_IzK1V6PA_wiRw8INZupsr\",\"actionButtons\":\"styles_action-buttons_IzK1V6PA_wiRw8INZupsr\",\"disabled\":\"styles_disabled_3JCd16_7Q-pgf6J0GZH1LI\",\"focused\":\"styles_focused_2kidoi_OgM8Ivb4vQdDNiL\",\"invalid\":\"styles_invalid_14jQEcDaXsFrGAmI4pls-i\",\"error\":\"styles_error_3cCLY5EE2air75fZZhl1AB\",\"readOnly\":\"styles_readOnly_3sgVKUmq_SVURFcH15KGwg\",\"label\":\"styles_label_1ym8T8HCj3nKSM-DPhkvE4\",\"spin\":\"styles_spin_2M42C7ZkDkCYwfGPfARaK1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formatted-text\":\"styles_formatted-text_3JarxqvLrJOH57ze6P3dvs\",\"formattedText\":\"styles_formatted-text_3JarxqvLrJOH57ze6P3dvs\",\"area\":\"styles_area_3BpCwg9UYmmJVG8FMzDbQe\",\"format-button\":\"styles_format-button_12L8Qlq7Jq74U5uU2v2G\",\"formatButton\":\"styles_format-button_12L8Qlq7Jq74U5uU2v2G\",\"spin\":\"styles_spin_2MlKkMfGFn3zJv_Qj_rl6z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"color-input\":\"styles_color-input_6Oo1Rvo-ghCAg7xz06lQ0\",\"colorInput\":\"styles_color-input_6Oo1Rvo-ghCAg7xz06lQ0\",\"label\":\"styles_label_25-ALCuu_VnyfqyxvBNRCc\",\"color-box\":\"styles_color-box_3UfHqWNRW8HYP0jxOSuwIL\",\"colorBox\":\"styles_color-box_3UfHqWNRW8HYP0jxOSuwIL\",\"color\":\"styles_color_1R4_kIvnXbXGPoM7KQGY07\",\"disabled\":\"styles_disabled_2GRrPSLzdl0EtGBwJsUYj7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"multi-select-input\":\"styles_multi-select-input_3t6wxSjgQnDZbUq8wXiKsG\",\"multiSelectInput\":\"styles_multi-select-input_3t6wxSjgQnDZbUq8wXiKsG\",\"input-and-actions\":\"styles_input-and-actions_GzFCNtQKdZTP_L-0EDytW\",\"inputAndActions\":\"styles_input-and-actions_GzFCNtQKdZTP_L-0EDytW\",\"input\":\"styles_input_1sVSchpjrkzUP6scP1btUJ\",\"actions\":\"styles_actions_3cNpIhGjcZq5wtS_7SLQ-6\",\"clear-button\":\"styles_clear-button_3Gc9JeBVPTmmP_eKlPXwAh\",\"clearButton\":\"styles_clear-button_3Gc9JeBVPTmmP_eKlPXwAh\",\"select-all-button\":\"styles_select-all-button_1mPb3jMsHxZMT2hzj3oIBe\",\"selectAllButton\":\"styles_select-all-button_1mPb3jMsHxZMT2hzj3oIBe\",\"disabled\":\"styles_disabled_1rcdyeLhyPLiMoTHIkLbNE\",\"filled\":\"styles_filled_1WiX25xrsSYpttVQv9f43S\",\"input-in-focus\":\"styles_input-in-focus_ntGgSWo9q29AM8Ljd9vKp\",\"inputInFocus\":\"styles_input-in-focus_ntGgSWo9q29AM8Ljd9vKp\",\"hide-clear-button\":\"styles_hide-clear-button_3EhnCq2aq80ro33C_5-qR-\",\"hideClearButton\":\"styles_hide-clear-button_3EhnCq2aq80ro33C_5-qR-\",\"completely-filled\":\"styles_completely-filled_2zI7hEpGTYd1FYsmpnhY4J\",\"completelyFilled\":\"styles_completely-filled_2zI7hEpGTYd1FYsmpnhY4J\",\"hide-select-all-button\":\"styles_hide-select-all-button_2IAeWYtI-mB_SqqQ78zJ1G\",\"hideSelectAllButton\":\"styles_hide-select-all-button_2IAeWYtI-mB_SqqQ78zJ1G\",\"show-options\":\"styles_show-options_1mREK3xDAmrLYgkV824u0J\",\"showOptions\":\"styles_show-options_1mREK3xDAmrLYgkV824u0J\",\"error\":\"styles_error_lP9hsAJ0wnImC-O6xvav\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"styles_footer_257aA5n6e3ECWnvdqkSd4I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search-input\":\"styles_search-input_2Ts76x_cjIfqtZAVe7Al8O\",\"searchInput\":\"styles_search-input_2Ts76x_cjIfqtZAVe7Al8O\",\"icon\":\"styles_icon_3sETzw5azRUassdrFVahXJ\",\"disabled\":\"styles_disabled_n8QicmPdbHIzNxu3IRpbZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dismissable-list-item\":\"styles_dismissable-list-item_HNRsPVbUVFMCQFbh1am5u\",\"dismissableListItem\":\"styles_dismissable-list-item_HNRsPVbUVFMCQFbh1am5u\",\"list-item\":\"styles_list-item_16B668zVsDM3pzasy1lbXu\",\"listItem\":\"styles_list-item_16B668zVsDM3pzasy1lbXu\",\"dismiss-button\":\"styles_dismiss-button_--b6YtoZlBfORAjnijlB4\",\"dismissButton\":\"styles_dismiss-button_--b6YtoZlBfORAjnijlB4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"option\":\"styles_option_2xLyL5SHbFmU1v5NvVI-gL\",\"focused\":\"styles_focused_25XaQ9I6utPhTSvJZQxqNq\",\"active\":\"styles_active_3m9Pd76FHxGQ01dQHBjuHc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"day-picker\":\"styles_day-picker_2kG2b5cc0z-K__Op9dkeRw\",\"dayPicker\":\"styles_day-picker_2kG2b5cc0z-K__Op9dkeRw\",\"header\":\"styles_header_jc_e7AU10-5NhFn0_j32l\",\"left\":\"styles_left_128zjmXtEe8RvRSTjC8Bu\",\"right\":\"styles_right_tEKoKDiMHyMXU6TCndfpu\",\"month\":\"styles_month_cuUOb34vCAel8M__OIXZU\",\"days\":\"styles_days_1X2opYCu6pxJWOIANJaiK-\",\"weeks\":\"styles_weeks_2uGXUaxYAyJjeIvQKiyHg9\",\"week\":\"styles_week_HcmoyMWQ4pj1TkR67X7EX\",\"day\":\"styles_day_3NnOq43EYxX0OyJ2OJ-1-v\",\"highlighted\":\"styles_highlighted_4rzgQF1yAtntQb6sOS8Mf\",\"selected\":\"styles_selected_10-MTSPYRFqtVtxdZ_2Igh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"options\":\"styles_options_3uw6GU7OBP_dXc4U-8rq-J\",\"empty\":\"styles_empty_3bTuzytlvNbeN3R-_oEHXI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"options\":\"styles_options_21oP9GY1z0LkYnfdbT-TEA\",\"list\":\"styles_list_8GGndUFRB7clpKv0TtE58\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"digital-input\":\"styles_digital-input_1n_rD0eB-3b4Fm9OzWjWFj\",\"digitalInput\":\"styles_digital-input_1n_rD0eB-3b4Fm9OzWjWFj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text-input\":\"styles_text-input_2RvdfqyL5-abAwsiCFXrx1\",\"textInput\":\"styles_text-input_2RvdfqyL5-abAwsiCFXrx1\",\"input\":\"styles_input_2YLApquGOuItTZkuuopeyz\",\"error\":\"styles_error_1OsrKHLuXOr9AE9FP5kFse\",\"disabled\":\"styles_disabled_2sgLgCd000ly37mQci3VUC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select-input\":\"styles_select-input_1PPwmc84GE4mTvNBqGuIAL\",\"selectInput\":\"styles_select-input_1PPwmc84GE4mTvNBqGuIAL\",\"input-and-actions\":\"styles_input-and-actions_29g5cVWp5ybSjdi4SxTWJM\",\"inputAndActions\":\"styles_input-and-actions_29g5cVWp5ybSjdi4SxTWJM\",\"input\":\"styles_input_2WXvmHHNr2t7DPMwODCvPu\",\"actions\":\"styles_actions_2Ch_s6a8Izo5KNSaPnTIeL\",\"clear-button\":\"styles_clear-button_1dwg2pDbX9TD_utkr34N0v\",\"clearButton\":\"styles_clear-button_1dwg2pDbX9TD_utkr34N0v\",\"dropdown-button\":\"styles_dropdown-button_1Cytvj7OX11XxISKLanC4G\",\"dropdownButton\":\"styles_dropdown-button_1Cytvj7OX11XxISKLanC4G\",\"disabled\":\"styles_disabled_m_63jAQtY2u9puFXZty3Z\",\"show-options\":\"styles_show-options_1ZWgTFoIvt0LTcaH0AL3Y4\",\"showOptions\":\"styles_show-options_1ZWgTFoIvt0LTcaH0AL3Y4\",\"input-in-focus\":\"styles_input-in-focus_1SwL-hSGF-Yrwdu-qvKBes\",\"inputInFocus\":\"styles_input-in-focus_1SwL-hSGF-Yrwdu-qvKBes\",\"error\":\"styles_error_2HLet-0kqDylepI1DxIGbp\",\"hide-clear-button\":\"styles_hide-clear-button_1R2JVb4CSo7oFLSuDGdCP0\",\"hideClearButton\":\"styles_hide-clear-button_1R2JVb4CSo7oFLSuDGdCP0\",\"filled\":\"styles_filled_1-LG85STKUiWy5oc5D36p2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"option\":\"styles_option_2LP97VMjqO543E-gNWWS06\",\"focused\":\"styles_focused_3jy-9asvMZnjhPKK9d43_H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"time-filter-modal\":\"styles_time-filter-modal_2QuPY0t6xu-BAb6bQO69Lu\",\"timeFilterModal\":\"styles_time-filter-modal_2QuPY0t6xu-BAb6bQO69Lu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"styles_checkbox_3QZqG2lHVb0YsfZHasmFCz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"segment-button-input\":\"styles_segment-button-input_2SZXb3vHXvPAYCqZVnayC\",\"segmentButtonInput\":\"styles_segment-button-input_2SZXb3vHXvPAYCqZVnayC\",\"segment-option\":\"styles_segment-option_ARDR8BzDlzL5qGoRFGhK0\",\"segmentOption\":\"styles_segment-option_ARDR8BzDlzL5qGoRFGhK0\",\"checked\":\"styles_checked_3B_IKvoyO-P3VlJktm-Xa4\",\"error\":\"styles_error_2EN0AKFNq66CeQJaTOh-j\",\"disabled\":\"styles_disabled_2EYdOBC3izMPXlnXl4Nypj\",\"read-only\":\"styles_read-only_1nwBBJaEaz_TijfjrtOwKL\",\"readOnly\":\"styles_read-only_1nwBBJaEaz_TijfjrtOwKL\",\"spin\":\"styles_spin_36K4cCJs4un1o0aQX89GMi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"year-picker\":\"styles_year-picker_1f47jvqmznUTQhZeWoknN9\",\"yearPicker\":\"styles_year-picker_1f47jvqmznUTQhZeWoknN9\",\"header\":\"styles_header_37SslQltFaZ2roQYaPQHoC\",\"left\":\"styles_left_4s9yPQJQa1Vv4a7cE0NDN\",\"right\":\"styles_right_3VRE4vdSuSOewFBkxd6pyj\",\"title\":\"styles_title_CPf2s4ufEjFXkz4XGsy_9\",\"years\":\"styles_years_1B0mFgF5ueYeV63X2EXcCR\",\"year\":\"styles_year_1zIDfv_UQLQN9AcnBAKlSK\",\"selected\":\"styles_selected_2BlczImzz8Eff9tOaEQZrt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputs\":\"styles_inputs_1y9Z0vMXzFKfL3v7mRSFhK\",\"header\":\"styles_header_31kN3DV0bMy_x9wUYK_HTw\",\"content\":\"styles_content_SiCcGanwQ5REf1abVjT_C\",\"tabs\":\"styles_tabs_3Lf1OnZH7NNuY9TOCWgRS8\",\"faram\":\"styles_faram_1QoL3sssfpIM3d7xZtYWr7\",\"input-details\":\"styles_input-details_2JoYa-1ZqLQqbMNMWg3gM6\",\"inputDetails\":\"styles_input-details_2JoYa-1ZqLQqbMNMWg3gM6\"};","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { _cs } from '@togglecorp/fujs';\n\nimport styles from './styles.scss';\n\nconst propTypes = {\n    className: PropTypes.string,\n    headingClassName: PropTypes.string,\n    rightComponent: PropTypes.element,\n    title: PropTypes.string.isRequired,\n};\n\nconst defaultProps = {\n    className: undefined,\n    headingClassName: undefined,\n    rightComponent: undefined,\n};\n\nexport default class Header extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    render() {\n        const {\n            className,\n            rightComponent,\n            title,\n            headingClassName,\n        } = this.props;\n\n        return (\n            <header className={_cs('modal-header', className, styles.header)}>\n                <h2 className={_cs('modal-header-heading', styles.heading, headingClassName)}>\n                    { title }\n                </h2>\n                { rightComponent }\n            </header>\n        );\n    }\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"option\":\"styles_option_1bGflrFaG8DKOyPwa1a2yl\",\"focused\":\"styles_focused_3aq3w0Ge53eniYDkbTd8FN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select-input\":\"styles_select-input_8Y4jhEADvoJE5GwGMRLfb\",\"selectInput\":\"styles_select-input_8Y4jhEADvoJE5GwGMRLfb\",\"input-and-actions\":\"styles_input-and-actions_h2IjxznY4zFtahbIJiA4R\",\"inputAndActions\":\"styles_input-and-actions_h2IjxznY4zFtahbIJiA4R\",\"input\":\"styles_input_3Tbp5EYT81GYXYdpFKO6v\",\"actions\":\"styles_actions_3Kk83Zx-AbK8U9yS1bQn41\",\"clear-button\":\"styles_clear-button_2VeehI_8IGIiNfDqDnCPPm\",\"clearButton\":\"styles_clear-button_2VeehI_8IGIiNfDqDnCPPm\",\"disabled\":\"styles_disabled_173VE2k85MTzpTvMqzpFEQ\",\"show-options\":\"styles_show-options_Wm3Cw4bG3WVAZfgXO_p62\",\"showOptions\":\"styles_show-options_Wm3Cw4bG3WVAZfgXO_p62\",\"input-in-focus\":\"styles_input-in-focus_2h2G00FWx_Izl-vgjGduvK\",\"inputInFocus\":\"styles_input-in-focus_2h2G00FWx_Izl-vgjGduvK\",\"error\":\"styles_error_ev35wVRE_gy-iOgQOyDpd\",\"hide-clear-button\":\"styles_hide-clear-button_16pAHo-i7loPxYxCL004H4\",\"hideClearButton\":\"styles_hide-clear-button_16pAHo-i7loPxYxCL004H4\",\"filled\":\"styles_filled_fppmvguOTG2DGSLzMehwa\"};","import FocusTrap from 'react-focus-trap';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { _cs } from '@togglecorp/fujs';\n\nimport Haze from '../Haze';\nimport Portal from '../Portal';\nimport styles from './styles.scss';\n\nconst ESCAPE_KEY = 27;\n\nconst noop = () => {};\n\nconst propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.element),\n        PropTypes.element,\n    ]).isRequired,\n    className: PropTypes.string,\n    closeOnEscape: PropTypes.bool,\n    closeOnOutsideClick: PropTypes.bool,\n    onClose: PropTypes.func,\n};\n\nconst defaultProps = {\n    className: '',\n    closeOnEscape: false,\n    closeOnOutsideClick: false,\n    onClose: noop,\n};\n\n// eslint-disable-next-line react/no-multi-comp\nexport default class Modal extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    constructor(props) {\n        super(props);\n        this.wrapperRef = React.createRef();\n    }\n\n    componentDidMount() {\n        document.addEventListener('keydown', this.handleKeyPressed);\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.handleKeyPressed);\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    handleClickOutside = (event) => {\n        const {\n            closeOnOutsideClick,\n            onClose,\n        } = this.props;\n\n        const { current: wrapper } = this.wrapperRef;\n\n        if (closeOnOutsideClick && !wrapper.contains(event.target)) {\n            onClose({ outsideClick: true });\n        }\n    }\n\n    handleKeyPressed = (event) => {\n        const {\n            closeOnEscape,\n            onClose,\n        } = this.props;\n\n        const { current: container } = this.wrapperRef;\n        const isLastModal = container && container.dataset.lastModal === 'true';\n\n\n        if (isLastModal && closeOnEscape && event.keyCode === ESCAPE_KEY) {\n            onClose({ escape: true });\n        }\n    }\n\n    render() {\n        const {\n            children,\n            className: classNameFromProps,\n        } = this.props;\n\n        const className = _cs(\n            classNameFromProps,\n            styles.modal,\n            'modal',\n        );\n\n        return (\n            <Portal>\n                <FocusTrap>\n                    <Haze>\n                        <div\n                            ref={this.wrapperRef}\n                            className={className}\n                        >\n                            { children }\n                        </div>\n                    </Haze>\n                </FocusTrap>\n            </Portal>\n        );\n    }\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"options\":\"styles_options_vY4uidVT2oiTPxthp132c\",\"empty\":\"styles_empty_N522hIB5M6TIFWb8ZbSdk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"styles_button_3qCqk1oxfcBP22JJRXVPOn\",\"clear\":\"styles_clear_VPvL6w38atObGi83XJvAB\"};","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport styles from './styles.scss';\n\nconst propTypes = {\n    /**\n     * child elements\n     */\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node,\n    ]),\n\n    className: PropTypes.string,\n};\n\nconst defaultProps = {\n    className: '',\n    children: null,\n};\n\n\nexport default class Body extends React.PureComponent {\n    static propTypes = propTypes;\n\n    static defaultProps = defaultProps;\n\n    render() {\n        const {\n            children,\n            className,\n        } = this.props;\n\n        const classNames = [\n            'modal-body',\n            styles.body,\n            className,\n        ];\n        return (\n            <div className={classNames.join(' ')}>\n                { children }\n            </div>\n        );\n    }\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select-input-base\":\"styles_select-input-base_11dm8PIf3AS_mYwfnksZif\",\"selectInputBase\":\"styles_select-input-base_11dm8PIf3AS_mYwfnksZif\",\"input-and-actions\":\"styles_input-and-actions_1z4Rj9gthVnGwBrsxtczZL\",\"inputAndActions\":\"styles_input-and-actions_1z4Rj9gthVnGwBrsxtczZL\",\"input\":\"styles_input_2au1A0NLtYxhw-UvexFZQc\",\"actions\":\"styles_actions_2uMEMqQsJljk3pXuSZKiR-\",\"clear-button\":\"styles_clear-button_2P9cBbE6lYLKdmTg7SQcwk\",\"clearButton\":\"styles_clear-button_2P9cBbE6lYLKdmTg7SQcwk\",\"dropdown-button\":\"styles_dropdown-button_3TKQu-06R1vMx7PrC74aSJ\",\"dropdownButton\":\"styles_dropdown-button_3TKQu-06R1vMx7PrC74aSJ\",\"spinner\":\"styles_spinner_2VgJhG7zPNdywukS6IU-OW\",\"disabled\":\"styles_disabled_2Q3iLrjMh7NUVjHEK7xILa\",\"show-options\":\"styles_show-options_1siZMKp7eujg6mwmuITztW\",\"showOptions\":\"styles_show-options_1siZMKp7eujg6mwmuITztW\",\"input-in-focus\":\"styles_input-in-focus_1byzMs6n3Z_ILRYvH0t-K8\",\"inputInFocus\":\"styles_input-in-focus_1byzMs6n3Z_ILRYvH0t-K8\",\"error\":\"styles_error_31P8lwnxRGoDN-Y2QUYwk-\",\"hide-clear-button\":\"styles_hide-clear-button_-Ba8IkdppbTFWPq24UBD_\",\"hideClearButton\":\"styles_hide-clear-button_-Ba8IkdppbTFWPq24UBD_\",\"filled\":\"styles_filled_16Mk2Eb-3V2VZ_sMp2koWj\"};"],"sourceRoot":""}